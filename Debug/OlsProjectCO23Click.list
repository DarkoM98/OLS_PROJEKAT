
OlsProjectCO23Click.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00015b00  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000021d8  08015cd0  08015cd0  00025cd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08017ea8  08017ea8  00030464  2**0
                  CONTENTS
  4 .ARM          00000008  08017ea8  08017ea8  00027ea8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08017eb0  08017eb0  00030464  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08017eb0  08017eb0  00027eb0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08017eb4  08017eb4  00027eb4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000464  20000000  08017eb8  00030000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0001b6d4  20000468  0801831c  00030468  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  2001bb3c  0801831c  0003bb3c  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  00030464  2**0
                  CONTENTS, READONLY
 12 .debug_info   00029aba  00000000  00000000  00030492  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000047b8  00000000  00000000  00059f4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0000d17e  00000000  00000000  0005e704  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges 00001188  00000000  00000000  0006b888  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000ff0  00000000  00000000  0006ca10  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_macro  0002d346  00000000  00000000  0006da00  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_line   000127f9  00000000  00000000  0009ad46  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_str    000fd97f  00000000  00000000  000ad53f  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .comment      000000fd  00000000  00000000  001aaebe  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000034b8  00000000  00000000  001aafbc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000468 	.word	0x20000468
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08015cb8 	.word	0x08015cb8

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	2000046c 	.word	0x2000046c
 800020c:	08015cb8 	.word	0x08015cb8

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003fe:	f1a4 0401 	sub.w	r4, r4, #1
 8000402:	d1e9      	bne.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_d2iz>:
 8000b6c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b70:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b74:	d215      	bcs.n	8000ba2 <__aeabi_d2iz+0x36>
 8000b76:	d511      	bpl.n	8000b9c <__aeabi_d2iz+0x30>
 8000b78:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b7c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b80:	d912      	bls.n	8000ba8 <__aeabi_d2iz+0x3c>
 8000b82:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b86:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b8a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b92:	fa23 f002 	lsr.w	r0, r3, r2
 8000b96:	bf18      	it	ne
 8000b98:	4240      	negne	r0, r0
 8000b9a:	4770      	bx	lr
 8000b9c:	f04f 0000 	mov.w	r0, #0
 8000ba0:	4770      	bx	lr
 8000ba2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba6:	d105      	bne.n	8000bb4 <__aeabi_d2iz+0x48>
 8000ba8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bac:	bf08      	it	eq
 8000bae:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bb2:	4770      	bx	lr
 8000bb4:	f04f 0000 	mov.w	r0, #0
 8000bb8:	4770      	bx	lr
 8000bba:	bf00      	nop

08000bbc <__aeabi_d2f>:
 8000bbc:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bc0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bc4:	bf24      	itt	cs
 8000bc6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bca:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bce:	d90d      	bls.n	8000bec <__aeabi_d2f+0x30>
 8000bd0:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000bd4:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bd8:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bdc:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000be0:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000be4:	bf08      	it	eq
 8000be6:	f020 0001 	biceq.w	r0, r0, #1
 8000bea:	4770      	bx	lr
 8000bec:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000bf0:	d121      	bne.n	8000c36 <__aeabi_d2f+0x7a>
 8000bf2:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000bf6:	bfbc      	itt	lt
 8000bf8:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000bfc:	4770      	bxlt	lr
 8000bfe:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c02:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c06:	f1c2 0218 	rsb	r2, r2, #24
 8000c0a:	f1c2 0c20 	rsb	ip, r2, #32
 8000c0e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c12:	fa20 f002 	lsr.w	r0, r0, r2
 8000c16:	bf18      	it	ne
 8000c18:	f040 0001 	orrne.w	r0, r0, #1
 8000c1c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c20:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c24:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c28:	ea40 000c 	orr.w	r0, r0, ip
 8000c2c:	fa23 f302 	lsr.w	r3, r3, r2
 8000c30:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c34:	e7cc      	b.n	8000bd0 <__aeabi_d2f+0x14>
 8000c36:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c3a:	d107      	bne.n	8000c4c <__aeabi_d2f+0x90>
 8000c3c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c40:	bf1e      	ittt	ne
 8000c42:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c46:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c4a:	4770      	bxne	lr
 8000c4c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c50:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c54:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c58:	4770      	bx	lr
 8000c5a:	bf00      	nop

08000c5c <__aeabi_uldivmod>:
 8000c5c:	b953      	cbnz	r3, 8000c74 <__aeabi_uldivmod+0x18>
 8000c5e:	b94a      	cbnz	r2, 8000c74 <__aeabi_uldivmod+0x18>
 8000c60:	2900      	cmp	r1, #0
 8000c62:	bf08      	it	eq
 8000c64:	2800      	cmpeq	r0, #0
 8000c66:	bf1c      	itt	ne
 8000c68:	f04f 31ff 	movne.w	r1, #4294967295
 8000c6c:	f04f 30ff 	movne.w	r0, #4294967295
 8000c70:	f000 b972 	b.w	8000f58 <__aeabi_idiv0>
 8000c74:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c78:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c7c:	f000 f806 	bl	8000c8c <__udivmoddi4>
 8000c80:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c84:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c88:	b004      	add	sp, #16
 8000c8a:	4770      	bx	lr

08000c8c <__udivmoddi4>:
 8000c8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c90:	9e08      	ldr	r6, [sp, #32]
 8000c92:	4604      	mov	r4, r0
 8000c94:	4688      	mov	r8, r1
 8000c96:	2b00      	cmp	r3, #0
 8000c98:	d14b      	bne.n	8000d32 <__udivmoddi4+0xa6>
 8000c9a:	428a      	cmp	r2, r1
 8000c9c:	4615      	mov	r5, r2
 8000c9e:	d967      	bls.n	8000d70 <__udivmoddi4+0xe4>
 8000ca0:	fab2 f282 	clz	r2, r2
 8000ca4:	b14a      	cbz	r2, 8000cba <__udivmoddi4+0x2e>
 8000ca6:	f1c2 0720 	rsb	r7, r2, #32
 8000caa:	fa01 f302 	lsl.w	r3, r1, r2
 8000cae:	fa20 f707 	lsr.w	r7, r0, r7
 8000cb2:	4095      	lsls	r5, r2
 8000cb4:	ea47 0803 	orr.w	r8, r7, r3
 8000cb8:	4094      	lsls	r4, r2
 8000cba:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000cbe:	0c23      	lsrs	r3, r4, #16
 8000cc0:	fbb8 f7fe 	udiv	r7, r8, lr
 8000cc4:	fa1f fc85 	uxth.w	ip, r5
 8000cc8:	fb0e 8817 	mls	r8, lr, r7, r8
 8000ccc:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000cd0:	fb07 f10c 	mul.w	r1, r7, ip
 8000cd4:	4299      	cmp	r1, r3
 8000cd6:	d909      	bls.n	8000cec <__udivmoddi4+0x60>
 8000cd8:	18eb      	adds	r3, r5, r3
 8000cda:	f107 30ff 	add.w	r0, r7, #4294967295
 8000cde:	f080 811b 	bcs.w	8000f18 <__udivmoddi4+0x28c>
 8000ce2:	4299      	cmp	r1, r3
 8000ce4:	f240 8118 	bls.w	8000f18 <__udivmoddi4+0x28c>
 8000ce8:	3f02      	subs	r7, #2
 8000cea:	442b      	add	r3, r5
 8000cec:	1a5b      	subs	r3, r3, r1
 8000cee:	b2a4      	uxth	r4, r4
 8000cf0:	fbb3 f0fe 	udiv	r0, r3, lr
 8000cf4:	fb0e 3310 	mls	r3, lr, r0, r3
 8000cf8:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000cfc:	fb00 fc0c 	mul.w	ip, r0, ip
 8000d00:	45a4      	cmp	ip, r4
 8000d02:	d909      	bls.n	8000d18 <__udivmoddi4+0x8c>
 8000d04:	192c      	adds	r4, r5, r4
 8000d06:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d0a:	f080 8107 	bcs.w	8000f1c <__udivmoddi4+0x290>
 8000d0e:	45a4      	cmp	ip, r4
 8000d10:	f240 8104 	bls.w	8000f1c <__udivmoddi4+0x290>
 8000d14:	3802      	subs	r0, #2
 8000d16:	442c      	add	r4, r5
 8000d18:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000d1c:	eba4 040c 	sub.w	r4, r4, ip
 8000d20:	2700      	movs	r7, #0
 8000d22:	b11e      	cbz	r6, 8000d2c <__udivmoddi4+0xa0>
 8000d24:	40d4      	lsrs	r4, r2
 8000d26:	2300      	movs	r3, #0
 8000d28:	e9c6 4300 	strd	r4, r3, [r6]
 8000d2c:	4639      	mov	r1, r7
 8000d2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d32:	428b      	cmp	r3, r1
 8000d34:	d909      	bls.n	8000d4a <__udivmoddi4+0xbe>
 8000d36:	2e00      	cmp	r6, #0
 8000d38:	f000 80eb 	beq.w	8000f12 <__udivmoddi4+0x286>
 8000d3c:	2700      	movs	r7, #0
 8000d3e:	e9c6 0100 	strd	r0, r1, [r6]
 8000d42:	4638      	mov	r0, r7
 8000d44:	4639      	mov	r1, r7
 8000d46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d4a:	fab3 f783 	clz	r7, r3
 8000d4e:	2f00      	cmp	r7, #0
 8000d50:	d147      	bne.n	8000de2 <__udivmoddi4+0x156>
 8000d52:	428b      	cmp	r3, r1
 8000d54:	d302      	bcc.n	8000d5c <__udivmoddi4+0xd0>
 8000d56:	4282      	cmp	r2, r0
 8000d58:	f200 80fa 	bhi.w	8000f50 <__udivmoddi4+0x2c4>
 8000d5c:	1a84      	subs	r4, r0, r2
 8000d5e:	eb61 0303 	sbc.w	r3, r1, r3
 8000d62:	2001      	movs	r0, #1
 8000d64:	4698      	mov	r8, r3
 8000d66:	2e00      	cmp	r6, #0
 8000d68:	d0e0      	beq.n	8000d2c <__udivmoddi4+0xa0>
 8000d6a:	e9c6 4800 	strd	r4, r8, [r6]
 8000d6e:	e7dd      	b.n	8000d2c <__udivmoddi4+0xa0>
 8000d70:	b902      	cbnz	r2, 8000d74 <__udivmoddi4+0xe8>
 8000d72:	deff      	udf	#255	; 0xff
 8000d74:	fab2 f282 	clz	r2, r2
 8000d78:	2a00      	cmp	r2, #0
 8000d7a:	f040 808f 	bne.w	8000e9c <__udivmoddi4+0x210>
 8000d7e:	1b49      	subs	r1, r1, r5
 8000d80:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000d84:	fa1f f885 	uxth.w	r8, r5
 8000d88:	2701      	movs	r7, #1
 8000d8a:	fbb1 fcfe 	udiv	ip, r1, lr
 8000d8e:	0c23      	lsrs	r3, r4, #16
 8000d90:	fb0e 111c 	mls	r1, lr, ip, r1
 8000d94:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000d98:	fb08 f10c 	mul.w	r1, r8, ip
 8000d9c:	4299      	cmp	r1, r3
 8000d9e:	d907      	bls.n	8000db0 <__udivmoddi4+0x124>
 8000da0:	18eb      	adds	r3, r5, r3
 8000da2:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000da6:	d202      	bcs.n	8000dae <__udivmoddi4+0x122>
 8000da8:	4299      	cmp	r1, r3
 8000daa:	f200 80cd 	bhi.w	8000f48 <__udivmoddi4+0x2bc>
 8000dae:	4684      	mov	ip, r0
 8000db0:	1a59      	subs	r1, r3, r1
 8000db2:	b2a3      	uxth	r3, r4
 8000db4:	fbb1 f0fe 	udiv	r0, r1, lr
 8000db8:	fb0e 1410 	mls	r4, lr, r0, r1
 8000dbc:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000dc0:	fb08 f800 	mul.w	r8, r8, r0
 8000dc4:	45a0      	cmp	r8, r4
 8000dc6:	d907      	bls.n	8000dd8 <__udivmoddi4+0x14c>
 8000dc8:	192c      	adds	r4, r5, r4
 8000dca:	f100 33ff 	add.w	r3, r0, #4294967295
 8000dce:	d202      	bcs.n	8000dd6 <__udivmoddi4+0x14a>
 8000dd0:	45a0      	cmp	r8, r4
 8000dd2:	f200 80b6 	bhi.w	8000f42 <__udivmoddi4+0x2b6>
 8000dd6:	4618      	mov	r0, r3
 8000dd8:	eba4 0408 	sub.w	r4, r4, r8
 8000ddc:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000de0:	e79f      	b.n	8000d22 <__udivmoddi4+0x96>
 8000de2:	f1c7 0c20 	rsb	ip, r7, #32
 8000de6:	40bb      	lsls	r3, r7
 8000de8:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000dec:	ea4e 0e03 	orr.w	lr, lr, r3
 8000df0:	fa01 f407 	lsl.w	r4, r1, r7
 8000df4:	fa20 f50c 	lsr.w	r5, r0, ip
 8000df8:	fa21 f30c 	lsr.w	r3, r1, ip
 8000dfc:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000e00:	4325      	orrs	r5, r4
 8000e02:	fbb3 f9f8 	udiv	r9, r3, r8
 8000e06:	0c2c      	lsrs	r4, r5, #16
 8000e08:	fb08 3319 	mls	r3, r8, r9, r3
 8000e0c:	fa1f fa8e 	uxth.w	sl, lr
 8000e10:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000e14:	fb09 f40a 	mul.w	r4, r9, sl
 8000e18:	429c      	cmp	r4, r3
 8000e1a:	fa02 f207 	lsl.w	r2, r2, r7
 8000e1e:	fa00 f107 	lsl.w	r1, r0, r7
 8000e22:	d90b      	bls.n	8000e3c <__udivmoddi4+0x1b0>
 8000e24:	eb1e 0303 	adds.w	r3, lr, r3
 8000e28:	f109 30ff 	add.w	r0, r9, #4294967295
 8000e2c:	f080 8087 	bcs.w	8000f3e <__udivmoddi4+0x2b2>
 8000e30:	429c      	cmp	r4, r3
 8000e32:	f240 8084 	bls.w	8000f3e <__udivmoddi4+0x2b2>
 8000e36:	f1a9 0902 	sub.w	r9, r9, #2
 8000e3a:	4473      	add	r3, lr
 8000e3c:	1b1b      	subs	r3, r3, r4
 8000e3e:	b2ad      	uxth	r5, r5
 8000e40:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e44:	fb08 3310 	mls	r3, r8, r0, r3
 8000e48:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000e4c:	fb00 fa0a 	mul.w	sl, r0, sl
 8000e50:	45a2      	cmp	sl, r4
 8000e52:	d908      	bls.n	8000e66 <__udivmoddi4+0x1da>
 8000e54:	eb1e 0404 	adds.w	r4, lr, r4
 8000e58:	f100 33ff 	add.w	r3, r0, #4294967295
 8000e5c:	d26b      	bcs.n	8000f36 <__udivmoddi4+0x2aa>
 8000e5e:	45a2      	cmp	sl, r4
 8000e60:	d969      	bls.n	8000f36 <__udivmoddi4+0x2aa>
 8000e62:	3802      	subs	r0, #2
 8000e64:	4474      	add	r4, lr
 8000e66:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000e6a:	fba0 8902 	umull	r8, r9, r0, r2
 8000e6e:	eba4 040a 	sub.w	r4, r4, sl
 8000e72:	454c      	cmp	r4, r9
 8000e74:	46c2      	mov	sl, r8
 8000e76:	464b      	mov	r3, r9
 8000e78:	d354      	bcc.n	8000f24 <__udivmoddi4+0x298>
 8000e7a:	d051      	beq.n	8000f20 <__udivmoddi4+0x294>
 8000e7c:	2e00      	cmp	r6, #0
 8000e7e:	d069      	beq.n	8000f54 <__udivmoddi4+0x2c8>
 8000e80:	ebb1 050a 	subs.w	r5, r1, sl
 8000e84:	eb64 0403 	sbc.w	r4, r4, r3
 8000e88:	fa04 fc0c 	lsl.w	ip, r4, ip
 8000e8c:	40fd      	lsrs	r5, r7
 8000e8e:	40fc      	lsrs	r4, r7
 8000e90:	ea4c 0505 	orr.w	r5, ip, r5
 8000e94:	e9c6 5400 	strd	r5, r4, [r6]
 8000e98:	2700      	movs	r7, #0
 8000e9a:	e747      	b.n	8000d2c <__udivmoddi4+0xa0>
 8000e9c:	f1c2 0320 	rsb	r3, r2, #32
 8000ea0:	fa20 f703 	lsr.w	r7, r0, r3
 8000ea4:	4095      	lsls	r5, r2
 8000ea6:	fa01 f002 	lsl.w	r0, r1, r2
 8000eaa:	fa21 f303 	lsr.w	r3, r1, r3
 8000eae:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000eb2:	4338      	orrs	r0, r7
 8000eb4:	0c01      	lsrs	r1, r0, #16
 8000eb6:	fbb3 f7fe 	udiv	r7, r3, lr
 8000eba:	fa1f f885 	uxth.w	r8, r5
 8000ebe:	fb0e 3317 	mls	r3, lr, r7, r3
 8000ec2:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000ec6:	fb07 f308 	mul.w	r3, r7, r8
 8000eca:	428b      	cmp	r3, r1
 8000ecc:	fa04 f402 	lsl.w	r4, r4, r2
 8000ed0:	d907      	bls.n	8000ee2 <__udivmoddi4+0x256>
 8000ed2:	1869      	adds	r1, r5, r1
 8000ed4:	f107 3cff 	add.w	ip, r7, #4294967295
 8000ed8:	d22f      	bcs.n	8000f3a <__udivmoddi4+0x2ae>
 8000eda:	428b      	cmp	r3, r1
 8000edc:	d92d      	bls.n	8000f3a <__udivmoddi4+0x2ae>
 8000ede:	3f02      	subs	r7, #2
 8000ee0:	4429      	add	r1, r5
 8000ee2:	1acb      	subs	r3, r1, r3
 8000ee4:	b281      	uxth	r1, r0
 8000ee6:	fbb3 f0fe 	udiv	r0, r3, lr
 8000eea:	fb0e 3310 	mls	r3, lr, r0, r3
 8000eee:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000ef2:	fb00 f308 	mul.w	r3, r0, r8
 8000ef6:	428b      	cmp	r3, r1
 8000ef8:	d907      	bls.n	8000f0a <__udivmoddi4+0x27e>
 8000efa:	1869      	adds	r1, r5, r1
 8000efc:	f100 3cff 	add.w	ip, r0, #4294967295
 8000f00:	d217      	bcs.n	8000f32 <__udivmoddi4+0x2a6>
 8000f02:	428b      	cmp	r3, r1
 8000f04:	d915      	bls.n	8000f32 <__udivmoddi4+0x2a6>
 8000f06:	3802      	subs	r0, #2
 8000f08:	4429      	add	r1, r5
 8000f0a:	1ac9      	subs	r1, r1, r3
 8000f0c:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000f10:	e73b      	b.n	8000d8a <__udivmoddi4+0xfe>
 8000f12:	4637      	mov	r7, r6
 8000f14:	4630      	mov	r0, r6
 8000f16:	e709      	b.n	8000d2c <__udivmoddi4+0xa0>
 8000f18:	4607      	mov	r7, r0
 8000f1a:	e6e7      	b.n	8000cec <__udivmoddi4+0x60>
 8000f1c:	4618      	mov	r0, r3
 8000f1e:	e6fb      	b.n	8000d18 <__udivmoddi4+0x8c>
 8000f20:	4541      	cmp	r1, r8
 8000f22:	d2ab      	bcs.n	8000e7c <__udivmoddi4+0x1f0>
 8000f24:	ebb8 0a02 	subs.w	sl, r8, r2
 8000f28:	eb69 020e 	sbc.w	r2, r9, lr
 8000f2c:	3801      	subs	r0, #1
 8000f2e:	4613      	mov	r3, r2
 8000f30:	e7a4      	b.n	8000e7c <__udivmoddi4+0x1f0>
 8000f32:	4660      	mov	r0, ip
 8000f34:	e7e9      	b.n	8000f0a <__udivmoddi4+0x27e>
 8000f36:	4618      	mov	r0, r3
 8000f38:	e795      	b.n	8000e66 <__udivmoddi4+0x1da>
 8000f3a:	4667      	mov	r7, ip
 8000f3c:	e7d1      	b.n	8000ee2 <__udivmoddi4+0x256>
 8000f3e:	4681      	mov	r9, r0
 8000f40:	e77c      	b.n	8000e3c <__udivmoddi4+0x1b0>
 8000f42:	3802      	subs	r0, #2
 8000f44:	442c      	add	r4, r5
 8000f46:	e747      	b.n	8000dd8 <__udivmoddi4+0x14c>
 8000f48:	f1ac 0c02 	sub.w	ip, ip, #2
 8000f4c:	442b      	add	r3, r5
 8000f4e:	e72f      	b.n	8000db0 <__udivmoddi4+0x124>
 8000f50:	4638      	mov	r0, r7
 8000f52:	e708      	b.n	8000d66 <__udivmoddi4+0xda>
 8000f54:	4637      	mov	r7, r6
 8000f56:	e6e9      	b.n	8000d2c <__udivmoddi4+0xa0>

08000f58 <__aeabi_idiv0>:
 8000f58:	4770      	bx	lr
 8000f5a:	bf00      	nop

08000f5c <Init_LCD_GPIO>:

//=============================================================================
// GPIO setup 
//=============================================================================
void Init_LCD_GPIO(void)
{
 8000f5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000f60:	b08b      	sub	sp, #44	; 0x2c
	  GPIO_InitTypeDef GPIO_InitStruct;

	  __HAL_RCC_CRC_CLK_ENABLE();
 8000f62:	4b36      	ldr	r3, [pc, #216]	; (800103c <Init_LCD_GPIO+0xe0>)
 8000f64:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000f66:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8000f6a:	631a      	str	r2, [r3, #48]	; 0x30
 8000f6c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000f6e:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
 8000f72:	9201      	str	r2, [sp, #4]
 8000f74:	9a01      	ldr	r2, [sp, #4]
	  /* GPIO Ports Clock Enable */
	  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000f76:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000f78:	f042 0210 	orr.w	r2, r2, #16
 8000f7c:	631a      	str	r2, [r3, #48]	; 0x30
 8000f7e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000f80:	f002 0210 	and.w	r2, r2, #16
 8000f84:	9202      	str	r2, [sp, #8]
 8000f86:	9a02      	ldr	r2, [sp, #8]
	  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000f88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000f8a:	f042 0220 	orr.w	r2, r2, #32
 8000f8e:	631a      	str	r2, [r3, #48]	; 0x30
 8000f90:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000f92:	f002 0220 	and.w	r2, r2, #32
 8000f96:	9203      	str	r2, [sp, #12]
 8000f98:	9a03      	ldr	r2, [sp, #12]
	  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000f9a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000f9c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8000fa0:	631a      	str	r2, [r3, #48]	; 0x30
 8000fa2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000fa4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000fa8:	9304      	str	r3, [sp, #16]
 8000faa:	9b04      	ldr	r3, [sp, #16]


	  HAL_GPIO_WritePin(GDISP_CMD_PORT, GCMD, GPIO_PIN_RESET);
 8000fac:	4c24      	ldr	r4, [pc, #144]	; (8001040 <Init_LCD_GPIO+0xe4>)
 8000fae:	2200      	movs	r2, #0
 8000fb0:	f44f 4178 	mov.w	r1, #63488	; 0xf800
 8000fb4:	4620      	mov	r0, r4
 8000fb6:	f000 fc7d 	bl	80018b4 <HAL_GPIO_WritePin>
	  HAL_GPIO_WritePin(GDISP_DATA_LO_PORT, GDATA_LO, GPIO_PIN_RESET);
 8000fba:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8001044 <Init_LCD_GPIO+0xe8>
 8000fbe:	2200      	movs	r2, #0
 8000fc0:	21ff      	movs	r1, #255	; 0xff
 8000fc2:	4648      	mov	r0, r9
 8000fc4:	f000 fc76 	bl	80018b4 <HAL_GPIO_WritePin>
	  HAL_GPIO_WritePin(GDISP_DATA_HI_PORT, GDATA_HI, GPIO_PIN_RESET);
 8000fc8:	f8df 807c 	ldr.w	r8, [pc, #124]	; 8001048 <Init_LCD_GPIO+0xec>
 8000fcc:	2200      	movs	r2, #0
 8000fce:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8000fd2:	4640      	mov	r0, r8
 8000fd4:	f000 fc6e 	bl	80018b4 <HAL_GPIO_WritePin>

	  GPIO_InitStruct.Pin = GCMD;
 8000fd8:	f44f 4378 	mov.w	r3, #63488	; 0xf800
 8000fdc:	9305      	str	r3, [sp, #20]
	  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000fde:	2701      	movs	r7, #1
 8000fe0:	9706      	str	r7, [sp, #24]
	  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000fe2:	2600      	movs	r6, #0
 8000fe4:	9607      	str	r6, [sp, #28]
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000fe6:	2503      	movs	r5, #3
 8000fe8:	9508      	str	r5, [sp, #32]
	  HAL_GPIO_Init(GDISP_CMD_PORT, &GPIO_InitStruct);
 8000fea:	a905      	add	r1, sp, #20
 8000fec:	4620      	mov	r0, r4
 8000fee:	f000 fb6d 	bl	80016cc <HAL_GPIO_Init>

	  GPIO_InitStruct.Pin = GDATA_LO;
 8000ff2:	23ff      	movs	r3, #255	; 0xff
 8000ff4:	9305      	str	r3, [sp, #20]
	  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ff6:	9706      	str	r7, [sp, #24]
	  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ff8:	9607      	str	r6, [sp, #28]
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000ffa:	9508      	str	r5, [sp, #32]
	  HAL_GPIO_Init(GDISP_DATA_LO_PORT, &GPIO_InitStruct);
 8000ffc:	a905      	add	r1, sp, #20
 8000ffe:	4648      	mov	r0, r9
 8001000:	f000 fb64 	bl	80016cc <HAL_GPIO_Init>

	  GPIO_InitStruct.Pin = GDATA_HI;
 8001004:	f44f 437f 	mov.w	r3, #65280	; 0xff00
 8001008:	9305      	str	r3, [sp, #20]
	  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800100a:	9706      	str	r7, [sp, #24]
	  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800100c:	9607      	str	r6, [sp, #28]
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800100e:	9508      	str	r5, [sp, #32]
	  HAL_GPIO_Init(GDISP_DATA_HI_PORT, &GPIO_InitStruct);
 8001010:	a905      	add	r1, sp, #20
 8001012:	4640      	mov	r0, r8
 8001014:	f000 fb5a 	bl	80016cc <HAL_GPIO_Init>

	  SET_CS; SET_WR; SET_RD; SET_DC; SET_RST;
 8001018:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800101c:	61a3      	str	r3, [r4, #24]
 800101e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8001022:	61a3      	str	r3, [r4, #24]
 8001024:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001028:	61a3      	str	r3, [r4, #24]
 800102a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800102e:	61a3      	str	r3, [r4, #24]
 8001030:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001034:	61a3      	str	r3, [r4, #24]
}
 8001036:	b00b      	add	sp, #44	; 0x2c
 8001038:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800103c:	40023800 	.word	0x40023800
 8001040:	40021400 	.word	0x40021400
 8001044:	40021800 	.word	0x40021800
 8001048:	40021000 	.word	0x40021000

0800104c <SSD1963_WriteCommand>:
//=============================================================================
// Write command to display
//=============================================================================
void SSD1963_WriteCommand(uint16_t Data)
{
 800104c:	b410      	push	{r4}
	uint16_t _Data=~Data;
 800104e:	43c3      	mvns	r3, r0

	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8001050:	4911      	ldr	r1, [pc, #68]	; (8001098 <SSD1963_WriteCommand+0x4c>)
 8001052:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8001056:	618a      	str	r2, [r1, #24]

	CLR_CS;
 8001058:	4a10      	ldr	r2, [pc, #64]	; (800109c <SSD1963_WriteCommand+0x50>)
 800105a:	f04f 5400 	mov.w	r4, #536870912	; 0x20000000
 800105e:	6194      	str	r4, [r2, #24]
	CLR_DC;
 8001060:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 8001064:	6194      	str	r4, [r2, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8001066:	041b      	lsls	r3, r3, #16
 8001068:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 800106c:	b2c4      	uxtb	r4, r0
 800106e:	4323      	orrs	r3, r4
 8001070:	4c0b      	ldr	r4, [pc, #44]	; (80010a0 <SSD1963_WriteCommand+0x54>)
 8001072:	61a3      	str	r3, [r4, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8001074:	694b      	ldr	r3, [r1, #20]
 8001076:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 800107a:	4318      	orrs	r0, r3
 800107c:	6148      	str	r0, [r1, #20]
	writeStrobe;
 800107e:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8001082:	6193      	str	r3, [r2, #24]
 8001084:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8001088:	6193      	str	r3, [r2, #24]
	SET_CS;
 800108a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800108e:	6193      	str	r3, [r2, #24]
}
 8001090:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001094:	4770      	bx	lr
 8001096:	bf00      	nop
 8001098:	40021000 	.word	0x40021000
 800109c:	40021400 	.word	0x40021400
 80010a0:	40021800 	.word	0x40021800

080010a4 <SSD1963_WriteData>:
//=============================================================================
// Write data to display
//=============================================================================

void SSD1963_WriteData(uint16_t Data)
{
 80010a4:	b410      	push	{r4}
	uint16_t _Data=~Data;
 80010a6:	43c3      	mvns	r3, r0

	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80010a8:	4911      	ldr	r1, [pc, #68]	; (80010f0 <SSD1963_WriteData+0x4c>)
 80010aa:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 80010ae:	618a      	str	r2, [r1, #24]

	CLR_CS;
 80010b0:	4a10      	ldr	r2, [pc, #64]	; (80010f4 <SSD1963_WriteData+0x50>)
 80010b2:	f04f 5400 	mov.w	r4, #536870912	; 0x20000000
 80010b6:	6194      	str	r4, [r2, #24]
	SET_DC;
 80010b8:	f44f 4400 	mov.w	r4, #32768	; 0x8000
 80010bc:	6194      	str	r4, [r2, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80010be:	041b      	lsls	r3, r3, #16
 80010c0:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 80010c4:	b2c4      	uxtb	r4, r0
 80010c6:	4323      	orrs	r3, r4
 80010c8:	4c0b      	ldr	r4, [pc, #44]	; (80010f8 <SSD1963_WriteData+0x54>)
 80010ca:	61a3      	str	r3, [r4, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80010cc:	694b      	ldr	r3, [r1, #20]
 80010ce:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80010d2:	4318      	orrs	r0, r3
 80010d4:	6148      	str	r0, [r1, #20]
	writeStrobe;
 80010d6:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80010da:	6193      	str	r3, [r2, #24]
 80010dc:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80010e0:	6193      	str	r3, [r2, #24]
	SET_CS;
 80010e2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80010e6:	6193      	str	r3, [r2, #24]

}
 80010e8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80010ec:	4770      	bx	lr
 80010ee:	bf00      	nop
 80010f0:	40021000 	.word	0x40021000
 80010f4:	40021400 	.word	0x40021400
 80010f8:	40021800 	.word	0x40021800

080010fc <SSD1963_WriteDataMultiple>:
//=============================================================================
// Write multiple data to display
//=============================================================================
void SSD1963_WriteDataMultiple(uint16_t * Data, int NumItems)
{
 80010fc:	b538      	push	{r3, r4, r5, lr}
 80010fe:	4605      	mov	r5, r0
 8001100:	460c      	mov	r4, r1
  while (NumItems)
 8001102:	e004      	b.n	800110e <SSD1963_WriteDataMultiple+0x12>
  {
	  SSD1963_WriteData(*Data);
 8001104:	f835 0b02 	ldrh.w	r0, [r5], #2
 8001108:	f7ff ffcc 	bl	80010a4 <SSD1963_WriteData>
	  Data++;
	  NumItems--;
 800110c:	3c01      	subs	r4, #1
  while (NumItems)
 800110e:	2c00      	cmp	r4, #0
 8001110:	d1f8      	bne.n	8001104 <SSD1963_WriteDataMultiple+0x8>
  }
}
 8001112:	bd38      	pop	{r3, r4, r5, pc}

08001114 <SSD1963_Init>:
//=============================================================================
// Display initialization
//=============================================================================

void SSD1963_Init (void)
{
 8001114:	b510      	push	{r4, lr}
	CLR_RST;  // reset
 8001116:	4c54      	ldr	r4, [pc, #336]	; (8001268 <SSD1963_Init+0x154>)
 8001118:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800111c:	61a3      	str	r3, [r4, #24]
	HAL_Delay(500);
 800111e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8001122:	f000 fa53 	bl	80015cc <HAL_Delay>
	SET_RST;
 8001126:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 800112a:	61a3      	str	r3, [r4, #24]
	HAL_Delay(100);
 800112c:	2064      	movs	r0, #100	; 0x64
 800112e:	f000 fa4d 	bl	80015cc <HAL_Delay>

	SSD1963_WriteCommand(SSD1963_SOFT_RESET);
 8001132:	2001      	movs	r0, #1
 8001134:	f7ff ff8a 	bl	800104c <SSD1963_WriteCommand>
	HAL_Delay(10);
 8001138:	200a      	movs	r0, #10
 800113a:	f000 fa47 	bl	80015cc <HAL_Delay>
	SSD1963_WriteCommand(SSD1963_SET_PLL_MN);
 800113e:	20e2      	movs	r0, #226	; 0xe2
 8001140:	f7ff ff84 	bl	800104c <SSD1963_WriteCommand>
	SSD1963_WriteData(29);	// PLLclk = REFclk * 30 (300MHz)
 8001144:	201d      	movs	r0, #29
 8001146:	f7ff ffad 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(2);	// SYSclk = PLLclk / 3  (100MHz)
 800114a:	2002      	movs	r0, #2
 800114c:	f7ff ffaa 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(4);  	// dummy
 8001150:	2004      	movs	r0, #4
 8001152:	f7ff ffa7 	bl	80010a4 <SSD1963_WriteData>

	SSD1963_WriteCommand(SSD1963_SET_PLL);
 8001156:	20e0      	movs	r0, #224	; 0xe0
 8001158:	f7ff ff78 	bl	800104c <SSD1963_WriteCommand>
	SSD1963_WriteData(0x0001);
 800115c:	2001      	movs	r0, #1
 800115e:	f7ff ffa1 	bl	80010a4 <SSD1963_WriteData>

	HAL_Delay(100);
 8001162:	2064      	movs	r0, #100	; 0x64
 8001164:	f000 fa32 	bl	80015cc <HAL_Delay>

	SSD1963_WriteCommand(SSD1963_SET_PLL);
 8001168:	20e0      	movs	r0, #224	; 0xe0
 800116a:	f7ff ff6f 	bl	800104c <SSD1963_WriteCommand>
	SSD1963_WriteData(0x0003);
 800116e:	2003      	movs	r0, #3
 8001170:	f7ff ff98 	bl	80010a4 <SSD1963_WriteData>

	SSD1963_WriteCommand(SSD1963_SET_LCD_MODE);
 8001174:	20b0      	movs	r0, #176	; 0xb0
 8001176:	f7ff ff69 	bl	800104c <SSD1963_WriteCommand>
	SSD1963_WriteData(0x0020);
 800117a:	2020      	movs	r0, #32
 800117c:	f7ff ff92 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(0x0000);
 8001180:	2000      	movs	r0, #0
 8001182:	f7ff ff8f 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(mHIGH((TFT_WIDTH-1)));
 8001186:	2003      	movs	r0, #3
 8001188:	f7ff ff8c 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(mLOW((TFT_WIDTH-1)));
 800118c:	201f      	movs	r0, #31
 800118e:	f7ff ff89 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(mHIGH((TFT_HEIGHT-1)));
 8001192:	2001      	movs	r0, #1
 8001194:	f7ff ff86 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(mLOW((TFT_HEIGHT-1)));
 8001198:	20df      	movs	r0, #223	; 0xdf
 800119a:	f7ff ff83 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(0x0000);
 800119e:	2000      	movs	r0, #0
 80011a0:	f7ff ff80 	bl	80010a4 <SSD1963_WriteData>

	SSD1963_WriteCommand(SSD1963_SET_PIXEL_DATA_INTERFACE);
 80011a4:	20f0      	movs	r0, #240	; 0xf0
 80011a6:	f7ff ff51 	bl	800104c <SSD1963_WriteCommand>
	SSD1963_WriteData(SSD1963_PDI_16BIT565);
 80011aa:	2003      	movs	r0, #3
 80011ac:	f7ff ff7a 	bl	80010a4 <SSD1963_WriteData>

	SSD1963_WriteCommand(SSD1963_SET_LSHIFT_FREQ);
 80011b0:	20e6      	movs	r0, #230	; 0xe6
 80011b2:	f7ff ff4b 	bl	800104c <SSD1963_WriteCommand>
	SSD1963_WriteData((LCD_FPR >> 16) & 0x00FF);
 80011b6:	2004      	movs	r0, #4
 80011b8:	f7ff ff74 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData((LCD_FPR >> 8) & 0x00FF);
 80011bc:	200a      	movs	r0, #10
 80011be:	f7ff ff71 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(LCD_FPR & 0x00FF);
 80011c2:	205f      	movs	r0, #95	; 0x5f
 80011c4:	f7ff ff6e 	bl	80010a4 <SSD1963_WriteData>

	SSD1963_WriteCommand(SSD1963_SET_HORI_PERIOD);
 80011c8:	20b4      	movs	r0, #180	; 0xb4
 80011ca:	f7ff ff3f 	bl	800104c <SSD1963_WriteCommand>
	SSD1963_WriteData(mHIGH(TFT_HSYNC_PERIOD));
 80011ce:	2003      	movs	r0, #3
 80011d0:	f7ff ff68 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(mLOW(TFT_HSYNC_PERIOD));
 80011d4:	2054      	movs	r0, #84	; 0x54
 80011d6:	f7ff ff65 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(mHIGH((TFT_HSYNC_PULSE + TFT_HSYNC_BACK_PORCH)));
 80011da:	2000      	movs	r0, #0
 80011dc:	f7ff ff62 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(mLOW((TFT_HSYNC_PULSE + TFT_HSYNC_BACK_PORCH)));
 80011e0:	202c      	movs	r0, #44	; 0x2c
 80011e2:	f7ff ff5f 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(TFT_HSYNC_PULSE);
 80011e6:	2002      	movs	r0, #2
 80011e8:	f7ff ff5c 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(0x0000);
 80011ec:	2000      	movs	r0, #0
 80011ee:	f7ff ff59 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(0x0000);
 80011f2:	2000      	movs	r0, #0
 80011f4:	f7ff ff56 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(0x0000);
 80011f8:	2000      	movs	r0, #0
 80011fa:	f7ff ff53 	bl	80010a4 <SSD1963_WriteData>

	SSD1963_WriteCommand(SSD1963_SET_VERT_PERIOD);
 80011fe:	20b6      	movs	r0, #182	; 0xb6
 8001200:	f7ff ff24 	bl	800104c <SSD1963_WriteCommand>
	SSD1963_WriteData(mHIGH(TFT_VSYNC_PERIOD));
 8001204:	2001      	movs	r0, #1
 8001206:	f7ff ff4d 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(mLOW(TFT_VSYNC_PERIOD));
 800120a:	20ee      	movs	r0, #238	; 0xee
 800120c:	f7ff ff4a 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(mHIGH((TFT_VSYNC_PULSE + TFT_VSYNC_BACK_PORCH)));
 8001210:	2000      	movs	r0, #0
 8001212:	f7ff ff47 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(mLOW((TFT_VSYNC_PULSE + TFT_VSYNC_BACK_PORCH)));
 8001216:	200c      	movs	r0, #12
 8001218:	f7ff ff44 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(TFT_VSYNC_PULSE);
 800121c:	2006      	movs	r0, #6
 800121e:	f7ff ff41 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(0x0000);
 8001222:	2000      	movs	r0, #0
 8001224:	f7ff ff3e 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(0x0000);
 8001228:	2000      	movs	r0, #0
 800122a:	f7ff ff3b 	bl	80010a4 <SSD1963_WriteData>

	SSD1963_WriteCommand(SSD1963_SET_DISPLAY_ON);//SET display on
 800122e:	2029      	movs	r0, #41	; 0x29
 8001230:	f7ff ff0c 	bl	800104c <SSD1963_WriteCommand>

	HAL_Delay(10);
 8001234:	200a      	movs	r0, #10
 8001236:	f000 f9c9 	bl	80015cc <HAL_Delay>
	SSD1963_WriteCommand(SSD1963_SET_PWM_CONF); //set PWM for Backlight. Manual p.53
 800123a:	20be      	movs	r0, #190	; 0xbe
 800123c:	f7ff ff06 	bl	800104c <SSD1963_WriteCommand>
	// 6 parameters to be set
	SSD1963_WriteData(0x0004); 					// PWM Freq =100MHz/(256*(PWMF[7:0]+1))/256  PWMF[7:0]=4 PWM Freq=305Hz
 8001240:	2004      	movs	r0, #4
 8001242:	f7ff ff2f 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(0x00C0); 					// PWM duty cycle(50%)
 8001246:	20c0      	movs	r0, #192	; 0xc0
 8001248:	f7ff ff2c 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(0x0001); 					// PWM controlled by host, PWM enabled
 800124c:	2001      	movs	r0, #1
 800124e:	f7ff ff29 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(0x0040); 					// brightness level 0x00 - 0xFF
 8001252:	2040      	movs	r0, #64	; 0x40
 8001254:	f7ff ff26 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(0x0000); 					// minimum brightness level =  0x00 - 0xFF
 8001258:	2000      	movs	r0, #0
 800125a:	f7ff ff23 	bl	80010a4 <SSD1963_WriteData>
	SSD1963_WriteData(0x0000);					// brightness prescalar 0x0 - 0xF
 800125e:	2000      	movs	r0, #0
 8001260:	f7ff ff20 	bl	80010a4 <SSD1963_WriteData>


}
 8001264:	bd10      	pop	{r4, pc}
 8001266:	bf00      	nop
 8001268:	40021400 	.word	0x40021400

0800126c <Init_TOUCH_GPIO>:

I2C_HandleTypeDef hi2c;


void Init_TOUCH_GPIO(I2C_HandleTypeDef i2c_handle)
{
 800126c:	b084      	sub	sp, #16
 800126e:	b508      	push	{r3, lr}
 8001270:	f10d 0c08 	add.w	ip, sp, #8
 8001274:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
	hi2c=i2c_handle;
 8001278:	224c      	movs	r2, #76	; 0x4c
 800127a:	4661      	mov	r1, ip
 800127c:	4803      	ldr	r0, [pc, #12]	; (800128c <Init_TOUCH_GPIO+0x20>)
 800127e:	f013 fffe 	bl	801527e <memcpy>
}
 8001282:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001286:	b004      	add	sp, #16
 8001288:	4770      	bx	lr
 800128a:	bf00      	nop
 800128c:	20019fbc 	.word	0x20019fbc

08001290 <STMPE610_Write>:
		return FALSE;
}


void STMPE610_Write(uint8_t reg, uint8_t val)
{
 8001290:	b500      	push	{lr}
 8001292:	b085      	sub	sp, #20
	uint8_t	txbuf[2];

	txbuf[0]=reg;
 8001294:	f88d 000c 	strb.w	r0, [sp, #12]
	txbuf[1]=val;
 8001298:	f88d 100d 	strb.w	r1, [sp, #13]

	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 800129c:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 80012a0:	9300      	str	r3, [sp, #0]
 80012a2:	2302      	movs	r3, #2
 80012a4:	aa03      	add	r2, sp, #12
 80012a6:	2188      	movs	r1, #136	; 0x88
 80012a8:	4803      	ldr	r0, [pc, #12]	; (80012b8 <STMPE610_Write+0x28>)
 80012aa:	f000 fcfd 	bl	8001ca8 <HAL_I2C_Master_Transmit>
 80012ae:	2800      	cmp	r0, #0
 80012b0:	d1f4      	bne.n	800129c <STMPE610_Write+0xc>
}
 80012b2:	b005      	add	sp, #20
 80012b4:	f85d fb04 	ldr.w	pc, [sp], #4
 80012b8:	20019fbc 	.word	0x20019fbc

080012bc <STMPE610_ReadByte>:

uint8_t STMPE610_ReadByte(uint8_t reg)
{
 80012bc:	b500      	push	{lr}
 80012be:	b087      	sub	sp, #28
 80012c0:	f88d 000f 	strb.w	r0, [sp, #15]
	uint8_t rxbuf[1];
	rxbuf[0] = 0;
 80012c4:	2300      	movs	r3, #0
 80012c6:	f88d 3014 	strb.w	r3, [sp, #20]

	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, STMPE610_TIMEOUT)!= HAL_OK);
 80012ca:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 80012ce:	9300      	str	r3, [sp, #0]
 80012d0:	2301      	movs	r3, #1
 80012d2:	f10d 020f 	add.w	r2, sp, #15
 80012d6:	2188      	movs	r1, #136	; 0x88
 80012d8:	480a      	ldr	r0, [pc, #40]	; (8001304 <STMPE610_ReadByte+0x48>)
 80012da:	f000 fce5 	bl	8001ca8 <HAL_I2C_Master_Transmit>
 80012de:	2800      	cmp	r0, #0
 80012e0:	d1f3      	bne.n	80012ca <STMPE610_ReadByte+0xe>
	while(HAL_I2C_Master_Receive(&hi2c, STMPE610_ADDR, (uint8_t *)rxbuf, 1, STMPE610_TIMEOUT) != HAL_OK);
 80012e2:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 80012e6:	9300      	str	r3, [sp, #0]
 80012e8:	2301      	movs	r3, #1
 80012ea:	aa05      	add	r2, sp, #20
 80012ec:	2188      	movs	r1, #136	; 0x88
 80012ee:	4805      	ldr	r0, [pc, #20]	; (8001304 <STMPE610_ReadByte+0x48>)
 80012f0:	f000 fd98 	bl	8001e24 <HAL_I2C_Master_Receive>
 80012f4:	2800      	cmp	r0, #0
 80012f6:	d1f4      	bne.n	80012e2 <STMPE610_ReadByte+0x26>

	return rxbuf[0];
}
 80012f8:	f89d 0014 	ldrb.w	r0, [sp, #20]
 80012fc:	b007      	add	sp, #28
 80012fe:	f85d fb04 	ldr.w	pc, [sp], #4
 8001302:	bf00      	nop
 8001304:	20019fbc 	.word	0x20019fbc

08001308 <STMPE610_ReadWord>:

uint16_t STMPE610_ReadWord(uint8_t reg)
{
 8001308:	b500      	push	{lr}
 800130a:	b087      	sub	sp, #28
 800130c:	f88d 000f 	strb.w	r0, [sp, #15]
	uint8_t	rxbuf[2];
	
	rxbuf[0] = 0;
 8001310:	2300      	movs	r3, #0
 8001312:	f88d 3014 	strb.w	r3, [sp, #20]
	rxbuf[1] = 0;
 8001316:	f88d 3015 	strb.w	r3, [sp, #21]

	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, 10000)!= HAL_OK);
 800131a:	f242 7310 	movw	r3, #10000	; 0x2710
 800131e:	9300      	str	r3, [sp, #0]
 8001320:	2301      	movs	r3, #1
 8001322:	f10d 020f 	add.w	r2, sp, #15
 8001326:	2188      	movs	r1, #136	; 0x88
 8001328:	480c      	ldr	r0, [pc, #48]	; (800135c <STMPE610_ReadWord+0x54>)
 800132a:	f000 fcbd 	bl	8001ca8 <HAL_I2C_Master_Transmit>
 800132e:	2800      	cmp	r0, #0
 8001330:	d1f3      	bne.n	800131a <STMPE610_ReadWord+0x12>
	while(HAL_I2C_Master_Receive(&hi2c, STMPE610_ADDR, (uint8_t *)rxbuf, 2, 10000) != HAL_OK);
 8001332:	f242 7310 	movw	r3, #10000	; 0x2710
 8001336:	9300      	str	r3, [sp, #0]
 8001338:	2302      	movs	r3, #2
 800133a:	aa05      	add	r2, sp, #20
 800133c:	2188      	movs	r1, #136	; 0x88
 800133e:	4807      	ldr	r0, [pc, #28]	; (800135c <STMPE610_ReadWord+0x54>)
 8001340:	f000 fd70 	bl	8001e24 <HAL_I2C_Master_Receive>
 8001344:	2800      	cmp	r0, #0
 8001346:	d1f4      	bne.n	8001332 <STMPE610_ReadWord+0x2a>

	return (((uint16_t)rxbuf[0]) << 8) | rxbuf[1];
 8001348:	f89d 0014 	ldrb.w	r0, [sp, #20]
 800134c:	f89d 3015 	ldrb.w	r3, [sp, #21]
}
 8001350:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
 8001354:	b007      	add	sp, #28
 8001356:	f85d fb04 	ldr.w	pc, [sp], #4
 800135a:	bf00      	nop
 800135c:	20019fbc 	.word	0x20019fbc

08001360 <STMPE610_Init>:

void STMPE610_Init(void)
{
 8001360:	b508      	push	{r3, lr}
	STMPE610_Write(STMPE610_REG_SYS_CTRL1, 0x02);		// Software chip reset
 8001362:	2102      	movs	r1, #2
 8001364:	2003      	movs	r0, #3
 8001366:	f7ff ff93 	bl	8001290 <STMPE610_Write>
	HAL_Delay(10);
 800136a:	200a      	movs	r0, #10
 800136c:	f000 f92e 	bl	80015cc <HAL_Delay>
	
	STMPE610_Write(STMPE610_REG_SYS_CTRL2, 0x04);		// Temperature sensor clock off, GPIO clock off, touch clock on, ADC clock on
 8001370:	2104      	movs	r1, #4
 8001372:	4608      	mov	r0, r1
 8001374:	f7ff ff8c 	bl	8001290 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_INT_EN, 0x03);			// Interrupt on INT pin when there is a sample or a touch transition.
 8001378:	2103      	movs	r1, #3
 800137a:	200a      	movs	r0, #10
 800137c:	f7ff ff88 	bl	8001290 <STMPE610_Write>
	//STMPE610_write_reg(STMPE610_REG_INT_EN, 0x00);						// Don't Interrupt on INT pin
	STMPE610_Write(STMPE610_REG_ADC_CTRL1, 0x48);		// ADC conversion time = 80 clock ticks, 12-bit ADC, internal voltage refernce
 8001380:	2148      	movs	r1, #72	; 0x48
 8001382:	2020      	movs	r0, #32
 8001384:	f7ff ff84 	bl	8001290 <STMPE610_Write>
	HAL_Delay(2);
 8001388:	2002      	movs	r0, #2
 800138a:	f000 f91f 	bl	80015cc <HAL_Delay>
	
	STMPE610_Write(STMPE610_REG_ADC_CTRL2, 0x01);		// ADC speed 3.25MHz
 800138e:	2101      	movs	r1, #1
 8001390:	2021      	movs	r0, #33	; 0x21
 8001392:	f7ff ff7d 	bl	8001290 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_GPIO_AF, 0x00);			// GPIO alternate function - OFF
 8001396:	2100      	movs	r1, #0
 8001398:	2017      	movs	r0, #23
 800139a:	f7ff ff79 	bl	8001290 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_TSC_CFG, 0xA3);			// Averaging 4, touch detect delay 1ms, panel driver settling time 1ms
 800139e:	21a3      	movs	r1, #163	; 0xa3
 80013a0:	2041      	movs	r0, #65	; 0x41
 80013a2:	f7ff ff75 	bl	8001290 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_FIFO_TH, 0x01);			// FIFO threshold = 1
 80013a6:	2101      	movs	r1, #1
 80013a8:	204a      	movs	r0, #74	; 0x4a
 80013aa:	f7ff ff71 	bl	8001290 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_FIFO_STA, 0x01);			// FIFO reset enable
 80013ae:	2101      	movs	r1, #1
 80013b0:	204b      	movs	r0, #75	; 0x4b
 80013b2:	f7ff ff6d 	bl	8001290 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_FIFO_STA, 0x00);			// FIFO reset disable
 80013b6:	2100      	movs	r1, #0
 80013b8:	204b      	movs	r0, #75	; 0x4b
 80013ba:	f7ff ff69 	bl	8001290 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_TSC_FRACT_XYZ, 0x07);	// Z axis data format
 80013be:	2107      	movs	r1, #7
 80013c0:	2056      	movs	r0, #86	; 0x56
 80013c2:	f7ff ff65 	bl	8001290 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_TSC_I_DRIVE, 0x01);		// max 50mA touchscreen line current
 80013c6:	2101      	movs	r1, #1
 80013c8:	2058      	movs	r0, #88	; 0x58
 80013ca:	f7ff ff61 	bl	8001290 <STMPE610_Write>

	STMPE610_Write(STMPE610_REG_TSC_CTRL, 0x30);			// X&Y&Z, 16 reading window
 80013ce:	2130      	movs	r1, #48	; 0x30
 80013d0:	2040      	movs	r0, #64	; 0x40
 80013d2:	f7ff ff5d 	bl	8001290 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_TSC_CTRL, 0x31);			// X&Y&Z, 16 reading window, TSC enable
 80013d6:	2131      	movs	r1, #49	; 0x31
 80013d8:	2040      	movs	r0, #64	; 0x40
 80013da:	f7ff ff59 	bl	8001290 <STMPE610_Write>
	//STMPE610_write_reg(STMPE610_REG_TSC_CTRL, 0x32);						// X&Y, 16 reading window
	//STMPE610_write_reg(TMPE610_REG_TSC_CTRL, 0x33);						// X&Y, 16 reading window, TSC enable

	STMPE610_Write(STMPE610_REG_INT_STA, 0xFF);		// Clear all interrupts
 80013de:	21ff      	movs	r1, #255	; 0xff
 80013e0:	200b      	movs	r0, #11
 80013e2:	f7ff ff55 	bl	8001290 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_INT_CTRL, 0x01);		// Level interrupt, enable interrupts
 80013e6:	2101      	movs	r1, #1
 80013e8:	2009      	movs	r0, #9
 80013ea:	f7ff ff51 	bl	8001290 <STMPE610_Write>
}
 80013ee:	bd08      	pop	{r3, pc}

080013f0 <STMPE610_read_xyz>:

uint8_t STMPE610_read_xyz(void)
{
 80013f0:	b508      	push	{r3, lr}
	uint8_t	status;

	// Is there something in the fifo
	status = STMPE610_ReadByte(STMPE610_REG_FIFO_STA);
 80013f2:	204b      	movs	r0, #75	; 0x4b
 80013f4:	f7ff ff62 	bl	80012bc <STMPE610_ReadByte>
	if ((status & 0x20))
 80013f8:	f010 0f20 	tst.w	r0, #32
 80013fc:	d012      	beq.n	8001424 <STMPE610_read_xyz+0x34>
	{
		STMPE610_Write(STMPE610_REG_INT_STA, 0xFF);
 80013fe:	21ff      	movs	r1, #255	; 0xff
 8001400:	200b      	movs	r0, #11
 8001402:	f7ff ff45 	bl	8001290 <STMPE610_Write>
		if (!(STMPE610_ReadByte(STMPE610_REG_TSC_CTRL) & 0x80))
 8001406:	2040      	movs	r0, #64	; 0x40
 8001408:	f7ff ff58 	bl	80012bc <STMPE610_ReadByte>
 800140c:	f010 0f80 	tst.w	r0, #128	; 0x80
 8001410:	d125      	bne.n	800145e <STMPE610_read_xyz+0x6e>
		{
			x=0;
 8001412:	2300      	movs	r3, #0
 8001414:	4a13      	ldr	r2, [pc, #76]	; (8001464 <STMPE610_read_xyz+0x74>)
 8001416:	8013      	strh	r3, [r2, #0]
			y=0;
 8001418:	4a13      	ldr	r2, [pc, #76]	; (8001468 <STMPE610_read_xyz+0x78>)
 800141a:	8013      	strh	r3, [r2, #0]
			z=0;
 800141c:	4a13      	ldr	r2, [pc, #76]	; (800146c <STMPE610_read_xyz+0x7c>)
 800141e:	8013      	strh	r3, [r2, #0]
	//		UART8_printf("true");
			return TRUE;
 8001420:	2001      	movs	r0, #1
 8001422:	e01b      	b.n	800145c <STMPE610_read_xyz+0x6c>
		return FALSE;

	}

	// Time to get some readings
	x = STMPE610_ReadWord(STMPE610_REG_TSC_DATA_X);
 8001424:	204d      	movs	r0, #77	; 0x4d
 8001426:	f7ff ff6f 	bl	8001308 <STMPE610_ReadWord>
 800142a:	4b0e      	ldr	r3, [pc, #56]	; (8001464 <STMPE610_read_xyz+0x74>)
 800142c:	8018      	strh	r0, [r3, #0]
	y = STMPE610_ReadWord(STMPE610_REG_TSC_DATA_Y);
 800142e:	204f      	movs	r0, #79	; 0x4f
 8001430:	f7ff ff6a 	bl	8001308 <STMPE610_ReadWord>
 8001434:	4b0c      	ldr	r3, [pc, #48]	; (8001468 <STMPE610_read_xyz+0x78>)
 8001436:	8018      	strh	r0, [r3, #0]
	z = STMPE610_ReadByte(STMPE610_REG_TSC_DATA_Z);
 8001438:	2051      	movs	r0, #81	; 0x51
 800143a:	f7ff ff3f 	bl	80012bc <STMPE610_ReadByte>
 800143e:	4b0b      	ldr	r3, [pc, #44]	; (800146c <STMPE610_read_xyz+0x7c>)
 8001440:	8018      	strh	r0, [r3, #0]

//	UART8_printf("%d, %d, %d\n\r", x,y,z );

	STMPE610_Write(STMPE610_REG_FIFO_STA, 0x01);		// FIFO reset enable
 8001442:	2101      	movs	r1, #1
 8001444:	204b      	movs	r0, #75	; 0x4b
 8001446:	f7ff ff23 	bl	8001290 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_FIFO_STA, 0x00);		// FIFO reset disable
 800144a:	2100      	movs	r1, #0
 800144c:	204b      	movs	r0, #75	; 0x4b
 800144e:	f7ff ff1f 	bl	8001290 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_INT_STA, 0xFF);
 8001452:	21ff      	movs	r1, #255	; 0xff
 8001454:	200b      	movs	r0, #11
 8001456:	f7ff ff1b 	bl	8001290 <STMPE610_Write>


	return TRUE;
 800145a:	2001      	movs	r0, #1
}
 800145c:	bd08      	pop	{r3, pc}
		return FALSE;
 800145e:	2000      	movs	r0, #0
 8001460:	e7fc      	b.n	800145c <STMPE610_read_xyz+0x6c>
 8001462:	bf00      	nop
 8001464:	20000484 	.word	0x20000484
 8001468:	20000486 	.word	0x20000486
 800146c:	20000488 	.word	0x20000488

08001470 <STMPE610_GetX_TOUCH>:

uint16_t STMPE610_GetX_TOUCH(void)
{
 8001470:	b508      	push	{r3, lr}
	float pom=0;

	pom=(float)x;
 8001472:	4b13      	ldr	r3, [pc, #76]	; (80014c0 <STMPE610_GetX_TOUCH+0x50>)
 8001474:	881b      	ldrh	r3, [r3, #0]
 8001476:	ee07 3a90 	vmov	s15, r3
 800147a:	eef8 7a67 	vcvt.f32.u32	s15, s15
	pom=800.0*(pom-GUI_TOUCH_AD_LEFT)/(GUI_TOUCH_AD_RIGHT-GUI_TOUCH_AD_LEFT);
 800147e:	ed9f 7a11 	vldr	s14, [pc, #68]	; 80014c4 <STMPE610_GetX_TOUCH+0x54>
 8001482:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001486:	ee17 0a90 	vmov	r0, s15
 800148a:	f7ff f87d 	bl	8000588 <__aeabi_f2d>
 800148e:	2200      	movs	r2, #0
 8001490:	4b0d      	ldr	r3, [pc, #52]	; (80014c8 <STMPE610_GetX_TOUCH+0x58>)
 8001492:	f7ff f8d1 	bl	8000638 <__aeabi_dmul>
 8001496:	a308      	add	r3, pc, #32	; (adr r3, 80014b8 <STMPE610_GetX_TOUCH+0x48>)
 8001498:	e9d3 2300 	ldrd	r2, r3, [r3]
 800149c:	f7ff f9f6 	bl	800088c <__aeabi_ddiv>
 80014a0:	f7ff fb8c 	bl	8000bbc <__aeabi_d2f>
	return (uint16_t)pom;
 80014a4:	ee07 0a90 	vmov	s15, r0
 80014a8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
}
 80014ac:	ee17 3a90 	vmov	r3, s15
 80014b0:	b298      	uxth	r0, r3
 80014b2:	bd08      	pop	{r3, pc}
 80014b4:	f3af 8000 	nop.w
 80014b8:	00000000 	.word	0x00000000
 80014bc:	40adc400 	.word	0x40adc400
 80014c0:	20000484 	.word	0x20000484
 80014c4:	42dc0000 	.word	0x42dc0000
 80014c8:	40890000 	.word	0x40890000
 80014cc:	00000000 	.word	0x00000000

080014d0 <STMPE610_GetY_TOUCH>:
uint16_t STMPE610_GetY_TOUCH(void)
{
 80014d0:	b508      	push	{r3, lr}
	float pom=0;

	pom=(float)y;
 80014d2:	4b13      	ldr	r3, [pc, #76]	; (8001520 <STMPE610_GetY_TOUCH+0x50>)
 80014d4:	881b      	ldrh	r3, [r3, #0]
 80014d6:	ee07 3a90 	vmov	s15, r3
 80014da:	eef8 7a67 	vcvt.f32.u32	s15, s15
	pom=480.0*(pom-GUI_TOUCH_AD_TOP)/(GUI_TOUCH_AD_BOTTOM-GUI_TOUCH_AD_TOP);
 80014de:	ed9f 7a11 	vldr	s14, [pc, #68]	; 8001524 <STMPE610_GetY_TOUCH+0x54>
 80014e2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80014e6:	ee17 0a90 	vmov	r0, s15
 80014ea:	f7ff f84d 	bl	8000588 <__aeabi_f2d>
 80014ee:	2200      	movs	r2, #0
 80014f0:	4b0d      	ldr	r3, [pc, #52]	; (8001528 <STMPE610_GetY_TOUCH+0x58>)
 80014f2:	f7ff f8a1 	bl	8000638 <__aeabi_dmul>
 80014f6:	a308      	add	r3, pc, #32	; (adr r3, 8001518 <STMPE610_GetY_TOUCH+0x48>)
 80014f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80014fc:	f7ff f9c6 	bl	800088c <__aeabi_ddiv>
 8001500:	f7ff fb5c 	bl	8000bbc <__aeabi_d2f>
	return (uint16_t)pom;
 8001504:	ee07 0a90 	vmov	s15, r0
 8001508:	eefc 7ae7 	vcvt.u32.f32	s15, s15
}
 800150c:	ee17 3a90 	vmov	r3, s15
 8001510:	b298      	uxth	r0, r3
 8001512:	bd08      	pop	{r3, pc}
 8001514:	f3af 8000 	nop.w
 8001518:	00000000 	.word	0x00000000
 800151c:	40abea00 	.word	0x40abea00
 8001520:	20000486 	.word	0x20000486
 8001524:	43c80000 	.word	0x43c80000
 8001528:	407e0000 	.word	0x407e0000

0800152c <STMPE610_GetX_TOUCH_RAW>:
}

uint16_t STMPE610_GetX_TOUCH_RAW(void)
{
	return x;
}
 800152c:	4b01      	ldr	r3, [pc, #4]	; (8001534 <STMPE610_GetX_TOUCH_RAW+0x8>)
 800152e:	8818      	ldrh	r0, [r3, #0]
 8001530:	4770      	bx	lr
 8001532:	bf00      	nop
 8001534:	20000484 	.word	0x20000484

08001538 <STMPE610_GetY_TOUCH_RAW>:
uint16_t STMPE610_GetY_TOUCH_RAW(void)
{
	return y;
}
 8001538:	4b01      	ldr	r3, [pc, #4]	; (8001540 <STMPE610_GetY_TOUCH_RAW+0x8>)
 800153a:	8818      	ldrh	r0, [r3, #0]
 800153c:	4770      	bx	lr
 800153e:	bf00      	nop
 8001540:	20000486 	.word	0x20000486

08001544 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001544:	b510      	push	{r4, lr}
 8001546:	4604      	mov	r4, r0
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8001548:	4b0e      	ldr	r3, [pc, #56]	; (8001584 <HAL_InitTick+0x40>)
 800154a:	7818      	ldrb	r0, [r3, #0]
 800154c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001550:	fbb3 f3f0 	udiv	r3, r3, r0
 8001554:	4a0c      	ldr	r2, [pc, #48]	; (8001588 <HAL_InitTick+0x44>)
 8001556:	6810      	ldr	r0, [r2, #0]
 8001558:	fbb0 f0f3 	udiv	r0, r0, r3
 800155c:	f000 f89c 	bl	8001698 <HAL_SYSTICK_Config>
 8001560:	b968      	cbnz	r0, 800157e <HAL_InitTick+0x3a>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001562:	2c0f      	cmp	r4, #15
 8001564:	d901      	bls.n	800156a <HAL_InitTick+0x26>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
    uwTickPrio = TickPriority;
  }
  else
  {
    return HAL_ERROR;
 8001566:	2001      	movs	r0, #1
 8001568:	e00a      	b.n	8001580 <HAL_InitTick+0x3c>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 800156a:	2200      	movs	r2, #0
 800156c:	4621      	mov	r1, r4
 800156e:	f04f 30ff 	mov.w	r0, #4294967295
 8001572:	f000 f851 	bl	8001618 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8001576:	4b05      	ldr	r3, [pc, #20]	; (800158c <HAL_InitTick+0x48>)
 8001578:	601c      	str	r4, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800157a:	2000      	movs	r0, #0
 800157c:	e000      	b.n	8001580 <HAL_InitTick+0x3c>
    return HAL_ERROR;
 800157e:	2001      	movs	r0, #1
}
 8001580:	bd10      	pop	{r4, pc}
 8001582:	bf00      	nop
 8001584:	20000000 	.word	0x20000000
 8001588:	20000130 	.word	0x20000130
 800158c:	20000004 	.word	0x20000004

08001590 <HAL_Init>:
{
 8001590:	b508      	push	{r3, lr}
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001592:	2003      	movs	r0, #3
 8001594:	f000 f82e 	bl	80015f4 <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 8001598:	2000      	movs	r0, #0
 800159a:	f7ff ffd3 	bl	8001544 <HAL_InitTick>
  HAL_MspInit();
 800159e:	f004 fb23 	bl	8005be8 <HAL_MspInit>
}
 80015a2:	2000      	movs	r0, #0
 80015a4:	bd08      	pop	{r3, pc}
	...

080015a8 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80015a8:	4a03      	ldr	r2, [pc, #12]	; (80015b8 <HAL_IncTick+0x10>)
 80015aa:	6811      	ldr	r1, [r2, #0]
 80015ac:	4b03      	ldr	r3, [pc, #12]	; (80015bc <HAL_IncTick+0x14>)
 80015ae:	781b      	ldrb	r3, [r3, #0]
 80015b0:	440b      	add	r3, r1
 80015b2:	6013      	str	r3, [r2, #0]
}
 80015b4:	4770      	bx	lr
 80015b6:	bf00      	nop
 80015b8:	2001a008 	.word	0x2001a008
 80015bc:	20000000 	.word	0x20000000

080015c0 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80015c0:	4b01      	ldr	r3, [pc, #4]	; (80015c8 <HAL_GetTick+0x8>)
 80015c2:	6818      	ldr	r0, [r3, #0]
}
 80015c4:	4770      	bx	lr
 80015c6:	bf00      	nop
 80015c8:	2001a008 	.word	0x2001a008

080015cc <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80015cc:	b538      	push	{r3, r4, r5, lr}
 80015ce:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80015d0:	f7ff fff6 	bl	80015c0 <HAL_GetTick>
 80015d4:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80015d6:	f1b4 3fff 	cmp.w	r4, #4294967295
 80015da:	d002      	beq.n	80015e2 <HAL_Delay+0x16>
  {
    wait += (uint32_t)(uwTickFreq);
 80015dc:	4b04      	ldr	r3, [pc, #16]	; (80015f0 <HAL_Delay+0x24>)
 80015de:	781b      	ldrb	r3, [r3, #0]
 80015e0:	441c      	add	r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 80015e2:	f7ff ffed 	bl	80015c0 <HAL_GetTick>
 80015e6:	1b40      	subs	r0, r0, r5
 80015e8:	42a0      	cmp	r0, r4
 80015ea:	d3fa      	bcc.n	80015e2 <HAL_Delay+0x16>
  {
  }
}
 80015ec:	bd38      	pop	{r3, r4, r5, pc}
 80015ee:	bf00      	nop
 80015f0:	20000000 	.word	0x20000000

080015f4 <HAL_NVIC_SetPriorityGrouping>:
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80015f4:	4906      	ldr	r1, [pc, #24]	; (8001610 <HAL_NVIC_SetPriorityGrouping+0x1c>)
 80015f6:	68cb      	ldr	r3, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80015f8:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 80015fc:	041b      	lsls	r3, r3, #16
 80015fe:	0c1b      	lsrs	r3, r3, #16
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8001600:	0200      	lsls	r0, r0, #8
 8001602:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001606:	4303      	orrs	r3, r0
  reg_value  =  (reg_value                                   |
 8001608:	4a02      	ldr	r2, [pc, #8]	; (8001614 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800160a:	431a      	orrs	r2, r3
  SCB->AIRCR =  reg_value;
 800160c:	60ca      	str	r2, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800160e:	4770      	bx	lr
 8001610:	e000ed00 	.word	0xe000ed00
 8001614:	05fa0000 	.word	0x05fa0000

08001618 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8001618:	b430      	push	{r4, r5}
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800161a:	4b15      	ldr	r3, [pc, #84]	; (8001670 <HAL_NVIC_SetPriority+0x58>)
 800161c:	68db      	ldr	r3, [r3, #12]
 800161e:	f3c3 2302 	ubfx	r3, r3, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001622:	f1c3 0407 	rsb	r4, r3, #7
 8001626:	2c04      	cmp	r4, #4
 8001628:	bf28      	it	cs
 800162a:	2404      	movcs	r4, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800162c:	1d1d      	adds	r5, r3, #4
 800162e:	2d06      	cmp	r5, #6
 8001630:	d914      	bls.n	800165c <HAL_NVIC_SetPriority+0x44>
 8001632:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001634:	f04f 35ff 	mov.w	r5, #4294967295
 8001638:	fa05 f404 	lsl.w	r4, r5, r4
 800163c:	ea21 0104 	bic.w	r1, r1, r4
 8001640:	4099      	lsls	r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001642:	fa05 f303 	lsl.w	r3, r5, r3
 8001646:	ea22 0303 	bic.w	r3, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800164a:	4319      	orrs	r1, r3
  if ((int32_t)(IRQn) >= 0)
 800164c:	2800      	cmp	r0, #0
 800164e:	db07      	blt.n	8001660 <HAL_NVIC_SetPriority+0x48>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001650:	0109      	lsls	r1, r1, #4
 8001652:	b2c9      	uxtb	r1, r1
 8001654:	4b07      	ldr	r3, [pc, #28]	; (8001674 <HAL_NVIC_SetPriority+0x5c>)
 8001656:	5419      	strb	r1, [r3, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8001658:	bc30      	pop	{r4, r5}
 800165a:	4770      	bx	lr
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800165c:	2300      	movs	r3, #0
 800165e:	e7e9      	b.n	8001634 <HAL_NVIC_SetPriority+0x1c>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001660:	f000 000f 	and.w	r0, r0, #15
 8001664:	0109      	lsls	r1, r1, #4
 8001666:	b2c9      	uxtb	r1, r1
 8001668:	4b03      	ldr	r3, [pc, #12]	; (8001678 <HAL_NVIC_SetPriority+0x60>)
 800166a:	5419      	strb	r1, [r3, r0]
 800166c:	e7f4      	b.n	8001658 <HAL_NVIC_SetPriority+0x40>
 800166e:	bf00      	nop
 8001670:	e000ed00 	.word	0xe000ed00
 8001674:	e000e400 	.word	0xe000e400
 8001678:	e000ed14 	.word	0xe000ed14

0800167c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800167c:	2800      	cmp	r0, #0
 800167e:	db07      	blt.n	8001690 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001680:	f000 021f 	and.w	r2, r0, #31
 8001684:	0940      	lsrs	r0, r0, #5
 8001686:	2301      	movs	r3, #1
 8001688:	4093      	lsls	r3, r2
 800168a:	4a02      	ldr	r2, [pc, #8]	; (8001694 <HAL_NVIC_EnableIRQ+0x18>)
 800168c:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8001690:	4770      	bx	lr
 8001692:	bf00      	nop
 8001694:	e000e100 	.word	0xe000e100

08001698 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001698:	3801      	subs	r0, #1
 800169a:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 800169e:	d20a      	bcs.n	80016b6 <HAL_SYSTICK_Config+0x1e>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80016a0:	4b06      	ldr	r3, [pc, #24]	; (80016bc <HAL_SYSTICK_Config+0x24>)
 80016a2:	6058      	str	r0, [r3, #4]
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80016a4:	4a06      	ldr	r2, [pc, #24]	; (80016c0 <HAL_SYSTICK_Config+0x28>)
 80016a6:	21f0      	movs	r1, #240	; 0xf0
 80016a8:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80016ac:	2000      	movs	r0, #0
 80016ae:	6098      	str	r0, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80016b0:	2207      	movs	r2, #7
 80016b2:	601a      	str	r2, [r3, #0]
 80016b4:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 80016b6:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 80016b8:	4770      	bx	lr
 80016ba:	bf00      	nop
 80016bc:	e000e010 	.word	0xe000e010
 80016c0:	e000ed00 	.word	0xe000ed00

080016c4 <HAL_SYSTICK_IRQHandler>:
/**
  * @brief  This function handles SYSTICK interrupt request.
  * @retval None
  */
void HAL_SYSTICK_IRQHandler(void)
{
 80016c4:	b508      	push	{r3, lr}
  HAL_SYSTICK_Callback();
 80016c6:	f004 f8c3 	bl	8005850 <HAL_SYSTICK_Callback>
}
 80016ca:	bd08      	pop	{r3, pc}

080016cc <HAL_GPIO_Init>:
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 80016cc:	2300      	movs	r3, #0
 80016ce:	2b0f      	cmp	r3, #15
 80016d0:	f200 80e7 	bhi.w	80018a2 <HAL_GPIO_Init+0x1d6>
{
 80016d4:	b4f0      	push	{r4, r5, r6, r7}
 80016d6:	b082      	sub	sp, #8
 80016d8:	e05e      	b.n	8001798 <HAL_GPIO_Init+0xcc>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 80016da:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 80016dc:	005f      	lsls	r7, r3, #1
 80016de:	2403      	movs	r4, #3
 80016e0:	40bc      	lsls	r4, r7
 80016e2:	ea26 0604 	bic.w	r6, r6, r4
        temp |= (GPIO_Init->Speed << (position * 2));
 80016e6:	68cc      	ldr	r4, [r1, #12]
 80016e8:	40bc      	lsls	r4, r7
 80016ea:	4334      	orrs	r4, r6
        GPIOx->OSPEEDR = temp;
 80016ec:	6084      	str	r4, [r0, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 80016ee:	6846      	ldr	r6, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80016f0:	ea26 0602 	bic.w	r6, r6, r2
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80016f4:	684c      	ldr	r4, [r1, #4]
 80016f6:	f3c4 1200 	ubfx	r2, r4, #4, #1
 80016fa:	409a      	lsls	r2, r3
 80016fc:	4332      	orrs	r2, r6
        GPIOx->OTYPER = temp;
 80016fe:	6042      	str	r2, [r0, #4]
 8001700:	e057      	b.n	80017b2 <HAL_GPIO_Init+0xe6>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3];
 8001702:	08dc      	lsrs	r4, r3, #3
 8001704:	3408      	adds	r4, #8
 8001706:	f850 7024 	ldr.w	r7, [r0, r4, lsl #2]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 800170a:	f003 0207 	and.w	r2, r3, #7
 800170e:	0096      	lsls	r6, r2, #2
 8001710:	220f      	movs	r2, #15
 8001712:	40b2      	lsls	r2, r6
 8001714:	ea27 0702 	bic.w	r7, r7, r2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 8001718:	690a      	ldr	r2, [r1, #16]
 800171a:	40b2      	lsls	r2, r6
 800171c:	433a      	orrs	r2, r7
        GPIOx->AFR[position >> 3] = temp;
 800171e:	f840 2024 	str.w	r2, [r0, r4, lsl #2]
 8001722:	e05a      	b.n	80017da <HAL_GPIO_Init+0x10e>
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();

        temp = SYSCFG->EXTICR[position >> 2];
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8001724:	2209      	movs	r2, #9
 8001726:	e000      	b.n	800172a <HAL_GPIO_Init+0x5e>
 8001728:	2200      	movs	r2, #0
 800172a:	40b2      	lsls	r2, r6
 800172c:	433a      	orrs	r2, r7
        SYSCFG->EXTICR[position >> 2] = temp;
 800172e:	3402      	adds	r4, #2
 8001730:	4e5c      	ldr	r6, [pc, #368]	; (80018a4 <HAL_GPIO_Init+0x1d8>)
 8001732:	f846 2024 	str.w	r2, [r6, r4, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8001736:	4a5c      	ldr	r2, [pc, #368]	; (80018a8 <HAL_GPIO_Init+0x1dc>)
 8001738:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 800173a:	43ea      	mvns	r2, r5
 800173c:	ea02 0604 	and.w	r6, r2, r4
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8001740:	684f      	ldr	r7, [r1, #4]
 8001742:	f417 1f80 	tst.w	r7, #1048576	; 0x100000
 8001746:	d001      	beq.n	800174c <HAL_GPIO_Init+0x80>
        {
          temp |= iocurrent;
 8001748:	ea45 0604 	orr.w	r6, r5, r4
        }
        EXTI->RTSR = temp;
 800174c:	4c56      	ldr	r4, [pc, #344]	; (80018a8 <HAL_GPIO_Init+0x1dc>)
 800174e:	60a6      	str	r6, [r4, #8]

        temp = EXTI->FTSR;
 8001750:	68e4      	ldr	r4, [r4, #12]
        temp &= ~((uint32_t)iocurrent);
 8001752:	ea02 0604 	and.w	r6, r2, r4
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8001756:	684f      	ldr	r7, [r1, #4]
 8001758:	f417 1f00 	tst.w	r7, #2097152	; 0x200000
 800175c:	d001      	beq.n	8001762 <HAL_GPIO_Init+0x96>
        {
          temp |= iocurrent;
 800175e:	ea45 0604 	orr.w	r6, r5, r4
        }
        EXTI->FTSR = temp;
 8001762:	4c51      	ldr	r4, [pc, #324]	; (80018a8 <HAL_GPIO_Init+0x1dc>)
 8001764:	60e6      	str	r6, [r4, #12]

        temp = EXTI->EMR;
 8001766:	6864      	ldr	r4, [r4, #4]
        temp &= ~((uint32_t)iocurrent);
 8001768:	ea02 0604 	and.w	r6, r2, r4
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 800176c:	684f      	ldr	r7, [r1, #4]
 800176e:	f417 3f00 	tst.w	r7, #131072	; 0x20000
 8001772:	d001      	beq.n	8001778 <HAL_GPIO_Init+0xac>
        {
          temp |= iocurrent;
 8001774:	ea45 0604 	orr.w	r6, r5, r4
        }
        EXTI->EMR = temp;
 8001778:	4c4b      	ldr	r4, [pc, #300]	; (80018a8 <HAL_GPIO_Init+0x1dc>)
 800177a:	6066      	str	r6, [r4, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800177c:	6824      	ldr	r4, [r4, #0]
        temp &= ~((uint32_t)iocurrent);
 800177e:	4022      	ands	r2, r4
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8001780:	684e      	ldr	r6, [r1, #4]
 8001782:	f416 3f80 	tst.w	r6, #65536	; 0x10000
 8001786:	d001      	beq.n	800178c <HAL_GPIO_Init+0xc0>
        {
          temp |= iocurrent;
 8001788:	ea45 0204 	orr.w	r2, r5, r4
        }
        EXTI->IMR = temp;
 800178c:	4c46      	ldr	r4, [pc, #280]	; (80018a8 <HAL_GPIO_Init+0x1dc>)
 800178e:	6022      	str	r2, [r4, #0]
  for(position = 0; position < GPIO_NUMBER; position++)
 8001790:	3301      	adds	r3, #1
 8001792:	2b0f      	cmp	r3, #15
 8001794:	f200 8082 	bhi.w	800189c <HAL_GPIO_Init+0x1d0>
    ioposition = ((uint32_t)0x01) << position;
 8001798:	2201      	movs	r2, #1
 800179a:	409a      	lsls	r2, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800179c:	680c      	ldr	r4, [r1, #0]
 800179e:	ea04 0502 	and.w	r5, r4, r2
    if(iocurrent == ioposition)
 80017a2:	42aa      	cmp	r2, r5
 80017a4:	d1f4      	bne.n	8001790 <HAL_GPIO_Init+0xc4>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80017a6:	684c      	ldr	r4, [r1, #4]
 80017a8:	f004 0403 	and.w	r4, r4, #3
 80017ac:	3c01      	subs	r4, #1
 80017ae:	2c01      	cmp	r4, #1
 80017b0:	d993      	bls.n	80016da <HAL_GPIO_Init+0xe>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80017b2:	684a      	ldr	r2, [r1, #4]
 80017b4:	f002 0203 	and.w	r2, r2, #3
 80017b8:	2a03      	cmp	r2, #3
 80017ba:	d009      	beq.n	80017d0 <HAL_GPIO_Init+0x104>
        temp = GPIOx->PUPDR;
 80017bc:	68c4      	ldr	r4, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 80017be:	005e      	lsls	r6, r3, #1
 80017c0:	2203      	movs	r2, #3
 80017c2:	40b2      	lsls	r2, r6
 80017c4:	ea24 0402 	bic.w	r4, r4, r2
        temp |= ((GPIO_Init->Pull) << (position * 2));
 80017c8:	688a      	ldr	r2, [r1, #8]
 80017ca:	40b2      	lsls	r2, r6
 80017cc:	4322      	orrs	r2, r4
        GPIOx->PUPDR = temp;
 80017ce:	60c2      	str	r2, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80017d0:	684a      	ldr	r2, [r1, #4]
 80017d2:	f002 0203 	and.w	r2, r2, #3
 80017d6:	2a02      	cmp	r2, #2
 80017d8:	d093      	beq.n	8001702 <HAL_GPIO_Init+0x36>
      temp = GPIOx->MODER;
 80017da:	6804      	ldr	r4, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 80017dc:	005e      	lsls	r6, r3, #1
 80017de:	2203      	movs	r2, #3
 80017e0:	40b2      	lsls	r2, r6
 80017e2:	ea24 0402 	bic.w	r4, r4, r2
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 80017e6:	684a      	ldr	r2, [r1, #4]
 80017e8:	f002 0203 	and.w	r2, r2, #3
 80017ec:	40b2      	lsls	r2, r6
 80017ee:	4322      	orrs	r2, r4
      GPIOx->MODER = temp;
 80017f0:	6002      	str	r2, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 80017f2:	684a      	ldr	r2, [r1, #4]
 80017f4:	f412 3f40 	tst.w	r2, #196608	; 0x30000
 80017f8:	d0ca      	beq.n	8001790 <HAL_GPIO_Init+0xc4>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80017fa:	4a2c      	ldr	r2, [pc, #176]	; (80018ac <HAL_GPIO_Init+0x1e0>)
 80017fc:	6c54      	ldr	r4, [r2, #68]	; 0x44
 80017fe:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8001802:	6454      	str	r4, [r2, #68]	; 0x44
 8001804:	6c52      	ldr	r2, [r2, #68]	; 0x44
 8001806:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 800180a:	9201      	str	r2, [sp, #4]
 800180c:	9a01      	ldr	r2, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2];
 800180e:	089c      	lsrs	r4, r3, #2
 8001810:	1ca6      	adds	r6, r4, #2
 8001812:	4a24      	ldr	r2, [pc, #144]	; (80018a4 <HAL_GPIO_Init+0x1d8>)
 8001814:	f852 7026 	ldr.w	r7, [r2, r6, lsl #2]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8001818:	f003 0203 	and.w	r2, r3, #3
 800181c:	0096      	lsls	r6, r2, #2
 800181e:	220f      	movs	r2, #15
 8001820:	40b2      	lsls	r2, r6
 8001822:	ea27 0702 	bic.w	r7, r7, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8001826:	4a22      	ldr	r2, [pc, #136]	; (80018b0 <HAL_GPIO_Init+0x1e4>)
 8001828:	4290      	cmp	r0, r2
 800182a:	f43f af7d 	beq.w	8001728 <HAL_GPIO_Init+0x5c>
 800182e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001832:	4290      	cmp	r0, r2
 8001834:	d022      	beq.n	800187c <HAL_GPIO_Init+0x1b0>
 8001836:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800183a:	4290      	cmp	r0, r2
 800183c:	d020      	beq.n	8001880 <HAL_GPIO_Init+0x1b4>
 800183e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001842:	4290      	cmp	r0, r2
 8001844:	d01e      	beq.n	8001884 <HAL_GPIO_Init+0x1b8>
 8001846:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800184a:	4290      	cmp	r0, r2
 800184c:	d01c      	beq.n	8001888 <HAL_GPIO_Init+0x1bc>
 800184e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001852:	4290      	cmp	r0, r2
 8001854:	d01a      	beq.n	800188c <HAL_GPIO_Init+0x1c0>
 8001856:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800185a:	4290      	cmp	r0, r2
 800185c:	d018      	beq.n	8001890 <HAL_GPIO_Init+0x1c4>
 800185e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001862:	4290      	cmp	r0, r2
 8001864:	d016      	beq.n	8001894 <HAL_GPIO_Init+0x1c8>
 8001866:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800186a:	4290      	cmp	r0, r2
 800186c:	d014      	beq.n	8001898 <HAL_GPIO_Init+0x1cc>
 800186e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001872:	4290      	cmp	r0, r2
 8001874:	f43f af56 	beq.w	8001724 <HAL_GPIO_Init+0x58>
 8001878:	220a      	movs	r2, #10
 800187a:	e756      	b.n	800172a <HAL_GPIO_Init+0x5e>
 800187c:	2201      	movs	r2, #1
 800187e:	e754      	b.n	800172a <HAL_GPIO_Init+0x5e>
 8001880:	2202      	movs	r2, #2
 8001882:	e752      	b.n	800172a <HAL_GPIO_Init+0x5e>
 8001884:	2203      	movs	r2, #3
 8001886:	e750      	b.n	800172a <HAL_GPIO_Init+0x5e>
 8001888:	2204      	movs	r2, #4
 800188a:	e74e      	b.n	800172a <HAL_GPIO_Init+0x5e>
 800188c:	2205      	movs	r2, #5
 800188e:	e74c      	b.n	800172a <HAL_GPIO_Init+0x5e>
 8001890:	2206      	movs	r2, #6
 8001892:	e74a      	b.n	800172a <HAL_GPIO_Init+0x5e>
 8001894:	2207      	movs	r2, #7
 8001896:	e748      	b.n	800172a <HAL_GPIO_Init+0x5e>
 8001898:	2208      	movs	r2, #8
 800189a:	e746      	b.n	800172a <HAL_GPIO_Init+0x5e>
      }
    }
  }
}
 800189c:	b002      	add	sp, #8
 800189e:	bcf0      	pop	{r4, r5, r6, r7}
 80018a0:	4770      	bx	lr
 80018a2:	4770      	bx	lr
 80018a4:	40013800 	.word	0x40013800
 80018a8:	40013c00 	.word	0x40013c00
 80018ac:	40023800 	.word	0x40023800
 80018b0:	40020000 	.word	0x40020000

080018b4 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80018b4:	b912      	cbnz	r2, 80018bc <HAL_GPIO_WritePin+0x8>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 80018b6:	0409      	lsls	r1, r1, #16
 80018b8:	6181      	str	r1, [r0, #24]
  }
}
 80018ba:	4770      	bx	lr
    GPIOx->BSRR = GPIO_Pin;
 80018bc:	6181      	str	r1, [r0, #24]
 80018be:	4770      	bx	lr

080018c0 <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 80018c0:	6803      	ldr	r3, [r0, #0]
 80018c2:	699a      	ldr	r2, [r3, #24]
 80018c4:	f012 0f02 	tst.w	r2, #2
 80018c8:	d001      	beq.n	80018ce <I2C_Flush_TXDR+0xe>
  {
    hi2c->Instance->TXDR = 0x00U;
 80018ca:	2200      	movs	r2, #0
 80018cc:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80018ce:	6803      	ldr	r3, [r0, #0]
 80018d0:	699a      	ldr	r2, [r3, #24]
 80018d2:	f012 0f01 	tst.w	r2, #1
 80018d6:	d103      	bne.n	80018e0 <I2C_Flush_TXDR+0x20>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 80018d8:	699a      	ldr	r2, [r3, #24]
 80018da:	f042 0201 	orr.w	r2, r2, #1
 80018de:	619a      	str	r2, [r3, #24]
  }
}
 80018e0:	4770      	bx	lr

080018e2 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 80018e2:	b410      	push	{r4}
 80018e4:	9c01      	ldr	r4, [sp, #4]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80018e6:	f3c1 0109 	ubfx	r1, r1, #0, #10
 80018ea:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
                            (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 80018ee:	4319      	orrs	r1, r3
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80018f0:	4321      	orrs	r1, r4
 80018f2:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
                              (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 80018f6:	6802      	ldr	r2, [r0, #0]
 80018f8:	6853      	ldr	r3, [r2, #4]
 80018fa:	0d64      	lsrs	r4, r4, #21
 80018fc:	f404 6480 	and.w	r4, r4, #1024	; 0x400
 8001900:	f044 747f 	orr.w	r4, r4, #66846720	; 0x3fc0000
 8001904:	f444 3458 	orr.w	r4, r4, #221184	; 0x36000
 8001908:	f444 747f 	orr.w	r4, r4, #1020	; 0x3fc
 800190c:	f044 0403 	orr.w	r4, r4, #3
 8001910:	ea23 0404 	bic.w	r4, r3, r4
 8001914:	4321      	orrs	r1, r4
 8001916:	6051      	str	r1, [r2, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
                I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 8001918:	f85d 4b04 	ldr.w	r4, [sp], #4
 800191c:	4770      	bx	lr

0800191e <I2C_IsErrorOccurred>:
{
 800191e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001920:	4604      	mov	r4, r0
 8001922:	4617      	mov	r7, r2
  uint32_t itflag   = hi2c->Instance->ISR;
 8001924:	6803      	ldr	r3, [r0, #0]
 8001926:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8001928:	f012 0f10 	tst.w	r2, #16
 800192c:	d04a      	beq.n	80019c4 <I2C_IsErrorOccurred+0xa6>
 800192e:	460e      	mov	r6, r1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8001930:	2210      	movs	r2, #16
 8001932:	61da      	str	r2, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
 8001934:	2500      	movs	r5, #0
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8001936:	6823      	ldr	r3, [r4, #0]
 8001938:	699a      	ldr	r2, [r3, #24]
 800193a:	f012 0f20 	tst.w	r2, #32
 800193e:	d13a      	bne.n	80019b6 <I2C_IsErrorOccurred+0x98>
 8001940:	2d00      	cmp	r5, #0
 8001942:	d138      	bne.n	80019b6 <I2C_IsErrorOccurred+0x98>
      if (Timeout != HAL_MAX_DELAY)
 8001944:	f1b6 3fff 	cmp.w	r6, #4294967295
 8001948:	d0f5      	beq.n	8001936 <I2C_IsErrorOccurred+0x18>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 800194a:	f7ff fe39 	bl	80015c0 <HAL_GetTick>
 800194e:	1bc0      	subs	r0, r0, r7
 8001950:	42b0      	cmp	r0, r6
 8001952:	d801      	bhi.n	8001958 <I2C_IsErrorOccurred+0x3a>
 8001954:	2e00      	cmp	r6, #0
 8001956:	d1ee      	bne.n	8001936 <I2C_IsErrorOccurred+0x18>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8001958:	6821      	ldr	r1, [r4, #0]
 800195a:	684a      	ldr	r2, [r1, #4]
 800195c:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
          tmp2 = hi2c->Mode;
 8001960:	f894 3042 	ldrb.w	r3, [r4, #66]	; 0x42
 8001964:	b2db      	uxtb	r3, r3
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8001966:	6988      	ldr	r0, [r1, #24]
 8001968:	f410 4f00 	tst.w	r0, #32768	; 0x8000
 800196c:	d00b      	beq.n	8001986 <I2C_IsErrorOccurred+0x68>
              (tmp2 != HAL_I2C_MODE_SLAVE))
 800196e:	3b20      	subs	r3, #32
 8001970:	bf18      	it	ne
 8001972:	2301      	movne	r3, #1
              (tmp1 != I2C_CR2_STOP) && \
 8001974:	b93a      	cbnz	r2, 8001986 <I2C_IsErrorOccurred+0x68>
 8001976:	b133      	cbz	r3, 8001986 <I2C_IsErrorOccurred+0x68>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8001978:	684b      	ldr	r3, [r1, #4]
 800197a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800197e:	604b      	str	r3, [r1, #4]
            tickstart = HAL_GetTick();
 8001980:	f7ff fe1e 	bl	80015c0 <HAL_GetTick>
 8001984:	4607      	mov	r7, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8001986:	6823      	ldr	r3, [r4, #0]
 8001988:	699b      	ldr	r3, [r3, #24]
 800198a:	f013 0f20 	tst.w	r3, #32
 800198e:	d1d2      	bne.n	8001936 <I2C_IsErrorOccurred+0x18>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 8001990:	f7ff fe16 	bl	80015c0 <HAL_GetTick>
 8001994:	1bc0      	subs	r0, r0, r7
 8001996:	2819      	cmp	r0, #25
 8001998:	d9f5      	bls.n	8001986 <I2C_IsErrorOccurred+0x68>
              hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800199a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800199c:	f043 0320 	orr.w	r3, r3, #32
 80019a0:	6463      	str	r3, [r4, #68]	; 0x44
              hi2c->State = HAL_I2C_STATE_READY;
 80019a2:	2320      	movs	r3, #32
 80019a4:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
              hi2c->Mode = HAL_I2C_MODE_NONE;
 80019a8:	2300      	movs	r3, #0
 80019aa:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
              __HAL_UNLOCK(hi2c);
 80019ae:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
              status = HAL_ERROR;
 80019b2:	2501      	movs	r5, #1
 80019b4:	e7e7      	b.n	8001986 <I2C_IsErrorOccurred+0x68>
    if (status == HAL_OK)
 80019b6:	2d00      	cmp	r5, #0
 80019b8:	d140      	bne.n	8001a3c <I2C_IsErrorOccurred+0x11e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80019ba:	2220      	movs	r2, #32
 80019bc:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
 80019be:	2604      	movs	r6, #4
    status = HAL_ERROR;
 80019c0:	2501      	movs	r5, #1
 80019c2:	e001      	b.n	80019c8 <I2C_IsErrorOccurred+0xaa>
  uint32_t error_code = 0;
 80019c4:	2600      	movs	r6, #0
  HAL_StatusTypeDef status = HAL_OK;
 80019c6:	4635      	mov	r5, r6
  itflag = hi2c->Instance->ISR;
 80019c8:	6822      	ldr	r2, [r4, #0]
 80019ca:	6993      	ldr	r3, [r2, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 80019cc:	f413 7f80 	tst.w	r3, #256	; 0x100
 80019d0:	d005      	beq.n	80019de <I2C_IsErrorOccurred+0xc0>
    error_code |= HAL_I2C_ERROR_BERR;
 80019d2:	f046 0601 	orr.w	r6, r6, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 80019d6:	f44f 7180 	mov.w	r1, #256	; 0x100
 80019da:	61d1      	str	r1, [r2, #28]
    status = HAL_ERROR;
 80019dc:	2501      	movs	r5, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 80019de:	f413 6f80 	tst.w	r3, #1024	; 0x400
 80019e2:	d006      	beq.n	80019f2 <I2C_IsErrorOccurred+0xd4>
    error_code |= HAL_I2C_ERROR_OVR;
 80019e4:	f046 0608 	orr.w	r6, r6, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 80019e8:	6822      	ldr	r2, [r4, #0]
 80019ea:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80019ee:	61d1      	str	r1, [r2, #28]
    status = HAL_ERROR;
 80019f0:	2501      	movs	r5, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 80019f2:	f413 7f00 	tst.w	r3, #512	; 0x200
 80019f6:	d023      	beq.n	8001a40 <I2C_IsErrorOccurred+0x122>
    error_code |= HAL_I2C_ERROR_ARLO;
 80019f8:	f046 0602 	orr.w	r6, r6, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 80019fc:	6823      	ldr	r3, [r4, #0]
 80019fe:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001a02:	61da      	str	r2, [r3, #28]
    status = HAL_ERROR;
 8001a04:	2501      	movs	r5, #1
    I2C_Flush_TXDR(hi2c);
 8001a06:	4620      	mov	r0, r4
 8001a08:	f7ff ff5a 	bl	80018c0 <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 8001a0c:	6822      	ldr	r2, [r4, #0]
 8001a0e:	6853      	ldr	r3, [r2, #4]
 8001a10:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
 8001a14:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
 8001a18:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
 8001a1c:	f023 0301 	bic.w	r3, r3, #1
 8001a20:	6053      	str	r3, [r2, #4]
    hi2c->ErrorCode |= error_code;
 8001a22:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8001a24:	431e      	orrs	r6, r3
 8001a26:	6466      	str	r6, [r4, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8001a28:	2320      	movs	r3, #32
 8001a2a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8001a2e:	2300      	movs	r3, #0
 8001a30:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    __HAL_UNLOCK(hi2c);
 8001a34:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8001a38:	4628      	mov	r0, r5
 8001a3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    error_code |= HAL_I2C_ERROR_AF;
 8001a3c:	2604      	movs	r6, #4
 8001a3e:	e7c3      	b.n	80019c8 <I2C_IsErrorOccurred+0xaa>
  if (status != HAL_OK)
 8001a40:	2d00      	cmp	r5, #0
 8001a42:	d1e0      	bne.n	8001a06 <I2C_IsErrorOccurred+0xe8>
 8001a44:	e7f8      	b.n	8001a38 <I2C_IsErrorOccurred+0x11a>

08001a46 <I2C_WaitOnTXISFlagUntilTimeout>:
{
 8001a46:	b570      	push	{r4, r5, r6, lr}
 8001a48:	4604      	mov	r4, r0
 8001a4a:	460d      	mov	r5, r1
 8001a4c:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8001a4e:	6823      	ldr	r3, [r4, #0]
 8001a50:	699b      	ldr	r3, [r3, #24]
 8001a52:	f013 0f02 	tst.w	r3, #2
 8001a56:	d11d      	bne.n	8001a94 <I2C_WaitOnTXISFlagUntilTimeout+0x4e>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8001a58:	4632      	mov	r2, r6
 8001a5a:	4629      	mov	r1, r5
 8001a5c:	4620      	mov	r0, r4
 8001a5e:	f7ff ff5e 	bl	800191e <I2C_IsErrorOccurred>
 8001a62:	b9c8      	cbnz	r0, 8001a98 <I2C_WaitOnTXISFlagUntilTimeout+0x52>
    if (Timeout != HAL_MAX_DELAY)
 8001a64:	f1b5 3fff 	cmp.w	r5, #4294967295
 8001a68:	d0f1      	beq.n	8001a4e <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001a6a:	f7ff fda9 	bl	80015c0 <HAL_GetTick>
 8001a6e:	1b80      	subs	r0, r0, r6
 8001a70:	42a8      	cmp	r0, r5
 8001a72:	d801      	bhi.n	8001a78 <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 8001a74:	2d00      	cmp	r5, #0
 8001a76:	d1ea      	bne.n	8001a4e <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001a78:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8001a7a:	f043 0320 	orr.w	r3, r3, #32
 8001a7e:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001a80:	2320      	movs	r3, #32
 8001a82:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001a86:	2300      	movs	r3, #0
 8001a88:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
        __HAL_UNLOCK(hi2c);
 8001a8c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 8001a90:	2001      	movs	r0, #1
 8001a92:	e000      	b.n	8001a96 <I2C_WaitOnTXISFlagUntilTimeout+0x50>
  return HAL_OK;
 8001a94:	2000      	movs	r0, #0
}
 8001a96:	bd70      	pop	{r4, r5, r6, pc}
      return HAL_ERROR;
 8001a98:	2001      	movs	r0, #1
 8001a9a:	e7fc      	b.n	8001a96 <I2C_WaitOnTXISFlagUntilTimeout+0x50>

08001a9c <I2C_WaitOnFlagUntilTimeout>:
{
 8001a9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001a9e:	4605      	mov	r5, r0
 8001aa0:	460f      	mov	r7, r1
 8001aa2:	4616      	mov	r6, r2
 8001aa4:	461c      	mov	r4, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8001aa6:	682b      	ldr	r3, [r5, #0]
 8001aa8:	699b      	ldr	r3, [r3, #24]
 8001aaa:	ea37 0303 	bics.w	r3, r7, r3
 8001aae:	bf0c      	ite	eq
 8001ab0:	2301      	moveq	r3, #1
 8001ab2:	2300      	movne	r3, #0
 8001ab4:	42b3      	cmp	r3, r6
 8001ab6:	d118      	bne.n	8001aea <I2C_WaitOnFlagUntilTimeout+0x4e>
    if (Timeout != HAL_MAX_DELAY)
 8001ab8:	f1b4 3fff 	cmp.w	r4, #4294967295
 8001abc:	d0f3      	beq.n	8001aa6 <I2C_WaitOnFlagUntilTimeout+0xa>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001abe:	f7ff fd7f 	bl	80015c0 <HAL_GetTick>
 8001ac2:	9b06      	ldr	r3, [sp, #24]
 8001ac4:	1ac0      	subs	r0, r0, r3
 8001ac6:	42a0      	cmp	r0, r4
 8001ac8:	d801      	bhi.n	8001ace <I2C_WaitOnFlagUntilTimeout+0x32>
 8001aca:	2c00      	cmp	r4, #0
 8001acc:	d1eb      	bne.n	8001aa6 <I2C_WaitOnFlagUntilTimeout+0xa>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001ace:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 8001ad0:	f043 0320 	orr.w	r3, r3, #32
 8001ad4:	646b      	str	r3, [r5, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001ad6:	2320      	movs	r3, #32
 8001ad8:	f885 3041 	strb.w	r3, [r5, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001adc:	2300      	movs	r3, #0
 8001ade:	f885 3042 	strb.w	r3, [r5, #66]	; 0x42
        __HAL_UNLOCK(hi2c);
 8001ae2:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        return HAL_ERROR;
 8001ae6:	2001      	movs	r0, #1
 8001ae8:	e000      	b.n	8001aec <I2C_WaitOnFlagUntilTimeout+0x50>
  return HAL_OK;
 8001aea:	2000      	movs	r0, #0
}
 8001aec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001aee <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 8001aee:	b570      	push	{r4, r5, r6, lr}
 8001af0:	4605      	mov	r5, r0
 8001af2:	460c      	mov	r4, r1
 8001af4:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8001af6:	682b      	ldr	r3, [r5, #0]
 8001af8:	699b      	ldr	r3, [r3, #24]
 8001afa:	f013 0f20 	tst.w	r3, #32
 8001afe:	d11a      	bne.n	8001b36 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8001b00:	4632      	mov	r2, r6
 8001b02:	4621      	mov	r1, r4
 8001b04:	4628      	mov	r0, r5
 8001b06:	f7ff ff0a 	bl	800191e <I2C_IsErrorOccurred>
 8001b0a:	b9b0      	cbnz	r0, 8001b3a <I2C_WaitOnSTOPFlagUntilTimeout+0x4c>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001b0c:	f7ff fd58 	bl	80015c0 <HAL_GetTick>
 8001b10:	1b80      	subs	r0, r0, r6
 8001b12:	42a0      	cmp	r0, r4
 8001b14:	d801      	bhi.n	8001b1a <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
 8001b16:	2c00      	cmp	r4, #0
 8001b18:	d1ed      	bne.n	8001af6 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001b1a:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 8001b1c:	f043 0320 	orr.w	r3, r3, #32
 8001b20:	646b      	str	r3, [r5, #68]	; 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 8001b22:	2320      	movs	r3, #32
 8001b24:	f885 3041 	strb.w	r3, [r5, #65]	; 0x41
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8001b28:	2300      	movs	r3, #0
 8001b2a:	f885 3042 	strb.w	r3, [r5, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
 8001b2e:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
      return HAL_ERROR;
 8001b32:	2001      	movs	r0, #1
}
 8001b34:	bd70      	pop	{r4, r5, r6, pc}
  return HAL_OK;
 8001b36:	2000      	movs	r0, #0
 8001b38:	e7fc      	b.n	8001b34 <I2C_WaitOnSTOPFlagUntilTimeout+0x46>
      return HAL_ERROR;
 8001b3a:	2001      	movs	r0, #1
 8001b3c:	e7fa      	b.n	8001b34 <I2C_WaitOnSTOPFlagUntilTimeout+0x46>

08001b3e <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8001b3e:	b570      	push	{r4, r5, r6, lr}
 8001b40:	4604      	mov	r4, r0
 8001b42:	460d      	mov	r5, r1
 8001b44:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8001b46:	6823      	ldr	r3, [r4, #0]
 8001b48:	699b      	ldr	r3, [r3, #24]
 8001b4a:	f013 0f04 	tst.w	r3, #4
 8001b4e:	d149      	bne.n	8001be4 <I2C_WaitOnRXNEFlagUntilTimeout+0xa6>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8001b50:	4632      	mov	r2, r6
 8001b52:	4629      	mov	r1, r5
 8001b54:	4620      	mov	r0, r4
 8001b56:	f7ff fee2 	bl	800191e <I2C_IsErrorOccurred>
 8001b5a:	4601      	mov	r1, r0
 8001b5c:	2800      	cmp	r0, #0
 8001b5e:	d143      	bne.n	8001be8 <I2C_WaitOnRXNEFlagUntilTimeout+0xaa>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8001b60:	6823      	ldr	r3, [r4, #0]
 8001b62:	699a      	ldr	r2, [r3, #24]
 8001b64:	f012 0f20 	tst.w	r2, #32
 8001b68:	d113      	bne.n	8001b92 <I2C_WaitOnRXNEFlagUntilTimeout+0x54>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001b6a:	f7ff fd29 	bl	80015c0 <HAL_GetTick>
 8001b6e:	1b80      	subs	r0, r0, r6
 8001b70:	42a8      	cmp	r0, r5
 8001b72:	d801      	bhi.n	8001b78 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
 8001b74:	2d00      	cmp	r5, #0
 8001b76:	d1e6      	bne.n	8001b46 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001b78:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8001b7a:	f043 0320 	orr.w	r3, r3, #32
 8001b7e:	6463      	str	r3, [r4, #68]	; 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 8001b80:	2320      	movs	r3, #32
 8001b82:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
      __HAL_UNLOCK(hi2c);
 8001b86:	2300      	movs	r3, #0
 8001b88:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
 8001b8c:	2101      	movs	r1, #1
}
 8001b8e:	4608      	mov	r0, r1
 8001b90:	bd70      	pop	{r4, r5, r6, pc}
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET) && (hi2c->XferSize > 0U))
 8001b92:	699a      	ldr	r2, [r3, #24]
 8001b94:	f012 0f04 	tst.w	r2, #4
 8001b98:	d002      	beq.n	8001ba0 <I2C_WaitOnRXNEFlagUntilTimeout+0x62>
 8001b9a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8001b9c:	2a00      	cmp	r2, #0
 8001b9e:	d1f6      	bne.n	8001b8e <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8001ba0:	699a      	ldr	r2, [r3, #24]
 8001ba2:	f012 0f10 	tst.w	r2, #16
 8001ba6:	d01a      	beq.n	8001bde <I2C_WaitOnRXNEFlagUntilTimeout+0xa0>
          __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8001ba8:	2210      	movs	r2, #16
 8001baa:	61da      	str	r2, [r3, #28]
          hi2c->ErrorCode = HAL_I2C_ERROR_AF;
 8001bac:	2304      	movs	r3, #4
 8001bae:	6463      	str	r3, [r4, #68]	; 0x44
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001bb0:	6823      	ldr	r3, [r4, #0]
 8001bb2:	2220      	movs	r2, #32
 8001bb4:	61da      	str	r2, [r3, #28]
        I2C_RESET_CR2(hi2c);
 8001bb6:	6821      	ldr	r1, [r4, #0]
 8001bb8:	684b      	ldr	r3, [r1, #4]
 8001bba:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
 8001bbe:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
 8001bc2:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
 8001bc6:	f023 0301 	bic.w	r3, r3, #1
 8001bca:	604b      	str	r3, [r1, #4]
        hi2c->State = HAL_I2C_STATE_READY;
 8001bcc:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001bd0:	2300      	movs	r3, #0
 8001bd2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
        __HAL_UNLOCK(hi2c);
 8001bd6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 8001bda:	2101      	movs	r1, #1
 8001bdc:	e7d7      	b.n	8001b8e <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
          hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001bde:	2300      	movs	r3, #0
 8001be0:	6463      	str	r3, [r4, #68]	; 0x44
 8001be2:	e7e5      	b.n	8001bb0 <I2C_WaitOnRXNEFlagUntilTimeout+0x72>
  return HAL_OK;
 8001be4:	2100      	movs	r1, #0
 8001be6:	e7d2      	b.n	8001b8e <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
      return HAL_ERROR;
 8001be8:	2101      	movs	r1, #1
 8001bea:	e7d0      	b.n	8001b8e <I2C_WaitOnRXNEFlagUntilTimeout+0x50>

08001bec <HAL_I2C_Init>:
  if (hi2c == NULL)
 8001bec:	2800      	cmp	r0, #0
 8001bee:	d057      	beq.n	8001ca0 <HAL_I2C_Init+0xb4>
{
 8001bf0:	b510      	push	{r4, lr}
 8001bf2:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8001bf4:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8001bf8:	2b00      	cmp	r3, #0
 8001bfa:	d041      	beq.n	8001c80 <HAL_I2C_Init+0x94>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8001bfc:	2324      	movs	r3, #36	; 0x24
 8001bfe:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
 8001c02:	6822      	ldr	r2, [r4, #0]
 8001c04:	6813      	ldr	r3, [r2, #0]
 8001c06:	f023 0301 	bic.w	r3, r3, #1
 8001c0a:	6013      	str	r3, [r2, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8001c0c:	6863      	ldr	r3, [r4, #4]
 8001c0e:	6822      	ldr	r2, [r4, #0]
 8001c10:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8001c14:	6113      	str	r3, [r2, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8001c16:	6822      	ldr	r2, [r4, #0]
 8001c18:	6893      	ldr	r3, [r2, #8]
 8001c1a:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8001c1e:	6093      	str	r3, [r2, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8001c20:	68e3      	ldr	r3, [r4, #12]
 8001c22:	2b01      	cmp	r3, #1
 8001c24:	d031      	beq.n	8001c8a <HAL_I2C_Init+0x9e>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8001c26:	68a3      	ldr	r3, [r4, #8]
 8001c28:	6822      	ldr	r2, [r4, #0]
 8001c2a:	f443 4304 	orr.w	r3, r3, #33792	; 0x8400
 8001c2e:	6093      	str	r3, [r2, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8001c30:	68e3      	ldr	r3, [r4, #12]
 8001c32:	2b02      	cmp	r3, #2
 8001c34:	d02f      	beq.n	8001c96 <HAL_I2C_Init+0xaa>
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8001c36:	6822      	ldr	r2, [r4, #0]
 8001c38:	6851      	ldr	r1, [r2, #4]
 8001c3a:	4b1a      	ldr	r3, [pc, #104]	; (8001ca4 <HAL_I2C_Init+0xb8>)
 8001c3c:	430b      	orrs	r3, r1
 8001c3e:	6053      	str	r3, [r2, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8001c40:	6822      	ldr	r2, [r4, #0]
 8001c42:	68d3      	ldr	r3, [r2, #12]
 8001c44:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8001c48:	60d3      	str	r3, [r2, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8001c4a:	6923      	ldr	r3, [r4, #16]
 8001c4c:	6962      	ldr	r2, [r4, #20]
 8001c4e:	4313      	orrs	r3, r2
                          (hi2c->Init.OwnAddress2Masks << 8));
 8001c50:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8001c52:	6822      	ldr	r2, [r4, #0]
 8001c54:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8001c58:	60d3      	str	r3, [r2, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8001c5a:	69e3      	ldr	r3, [r4, #28]
 8001c5c:	6a21      	ldr	r1, [r4, #32]
 8001c5e:	6822      	ldr	r2, [r4, #0]
 8001c60:	430b      	orrs	r3, r1
 8001c62:	6013      	str	r3, [r2, #0]
  __HAL_I2C_ENABLE(hi2c);
 8001c64:	6822      	ldr	r2, [r4, #0]
 8001c66:	6813      	ldr	r3, [r2, #0]
 8001c68:	f043 0301 	orr.w	r3, r3, #1
 8001c6c:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001c6e:	2000      	movs	r0, #0
 8001c70:	6460      	str	r0, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8001c72:	2320      	movs	r3, #32
 8001c74:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8001c78:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8001c7a:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
}
 8001c7e:	bd10      	pop	{r4, pc}
    hi2c->Lock = HAL_UNLOCKED;
 8001c80:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
 8001c84:	f003 ffc8 	bl	8005c18 <HAL_I2C_MspInit>
 8001c88:	e7b8      	b.n	8001bfc <HAL_I2C_Init+0x10>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8001c8a:	68a3      	ldr	r3, [r4, #8]
 8001c8c:	6822      	ldr	r2, [r4, #0]
 8001c8e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001c92:	6093      	str	r3, [r2, #8]
 8001c94:	e7cc      	b.n	8001c30 <HAL_I2C_Init+0x44>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 8001c96:	6823      	ldr	r3, [r4, #0]
 8001c98:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8001c9c:	605a      	str	r2, [r3, #4]
 8001c9e:	e7ca      	b.n	8001c36 <HAL_I2C_Init+0x4a>
    return HAL_ERROR;
 8001ca0:	2001      	movs	r0, #1
}
 8001ca2:	4770      	bx	lr
 8001ca4:	02008000 	.word	0x02008000

08001ca8 <HAL_I2C_Master_Transmit>:
{
 8001ca8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001cac:	b083      	sub	sp, #12
  if (hi2c->State == HAL_I2C_STATE_READY)
 8001cae:	f890 5041 	ldrb.w	r5, [r0, #65]	; 0x41
 8001cb2:	b2ed      	uxtb	r5, r5
 8001cb4:	2d20      	cmp	r5, #32
 8001cb6:	f040 80a4 	bne.w	8001e02 <HAL_I2C_Master_Transmit+0x15a>
    __HAL_LOCK(hi2c);
 8001cba:	f890 4040 	ldrb.w	r4, [r0, #64]	; 0x40
 8001cbe:	2c01      	cmp	r4, #1
 8001cc0:	f000 80a4 	beq.w	8001e0c <HAL_I2C_Master_Transmit+0x164>
 8001cc4:	4698      	mov	r8, r3
 8001cc6:	4617      	mov	r7, r2
 8001cc8:	460e      	mov	r6, r1
 8001cca:	4604      	mov	r4, r0
 8001ccc:	f04f 0901 	mov.w	r9, #1
 8001cd0:	f880 9040 	strb.w	r9, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 8001cd4:	f7ff fc74 	bl	80015c0 <HAL_GetTick>
 8001cd8:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8001cda:	9000      	str	r0, [sp, #0]
 8001cdc:	2319      	movs	r3, #25
 8001cde:	464a      	mov	r2, r9
 8001ce0:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001ce4:	4620      	mov	r0, r4
 8001ce6:	f7ff fed9 	bl	8001a9c <I2C_WaitOnFlagUntilTimeout>
 8001cea:	2800      	cmp	r0, #0
 8001cec:	f040 8090 	bne.w	8001e10 <HAL_I2C_Master_Transmit+0x168>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8001cf0:	2321      	movs	r3, #33	; 0x21
 8001cf2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 8001cf6:	2310      	movs	r3, #16
 8001cf8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001cfc:	2300      	movs	r3, #0
 8001cfe:	6463      	str	r3, [r4, #68]	; 0x44
    hi2c->pBuffPtr  = pData;
 8001d00:	6267      	str	r7, [r4, #36]	; 0x24
    hi2c->XferCount = Size;
 8001d02:	f8a4 802a 	strh.w	r8, [r4, #42]	; 0x2a
    hi2c->XferISR   = NULL;
 8001d06:	6363      	str	r3, [r4, #52]	; 0x34
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8001d08:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001d0a:	b29b      	uxth	r3, r3
 8001d0c:	2bff      	cmp	r3, #255	; 0xff
 8001d0e:	d90a      	bls.n	8001d26 <HAL_I2C_Master_Transmit+0x7e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8001d10:	22ff      	movs	r2, #255	; 0xff
 8001d12:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8001d14:	4b42      	ldr	r3, [pc, #264]	; (8001e20 <HAL_I2C_Master_Transmit+0x178>)
 8001d16:	9300      	str	r3, [sp, #0]
 8001d18:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001d1c:	4631      	mov	r1, r6
 8001d1e:	4620      	mov	r0, r4
 8001d20:	f7ff fddf 	bl	80018e2 <I2C_TransferConfig>
 8001d24:	e018      	b.n	8001d58 <HAL_I2C_Master_Transmit+0xb0>
      hi2c->XferSize = hi2c->XferCount;
 8001d26:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8001d28:	b292      	uxth	r2, r2
 8001d2a:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8001d2c:	4b3c      	ldr	r3, [pc, #240]	; (8001e20 <HAL_I2C_Master_Transmit+0x178>)
 8001d2e:	9300      	str	r3, [sp, #0]
 8001d30:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8001d34:	b2d2      	uxtb	r2, r2
 8001d36:	4631      	mov	r1, r6
 8001d38:	4620      	mov	r0, r4
 8001d3a:	f7ff fdd2 	bl	80018e2 <I2C_TransferConfig>
 8001d3e:	e00b      	b.n	8001d58 <HAL_I2C_Master_Transmit+0xb0>
          hi2c->XferSize = hi2c->XferCount;
 8001d40:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8001d42:	b292      	uxth	r2, r2
 8001d44:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8001d46:	2300      	movs	r3, #0
 8001d48:	9300      	str	r3, [sp, #0]
 8001d4a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8001d4e:	b2d2      	uxtb	r2, r2
 8001d50:	4631      	mov	r1, r6
 8001d52:	4620      	mov	r0, r4
 8001d54:	f7ff fdc5 	bl	80018e2 <I2C_TransferConfig>
    while (hi2c->XferCount > 0U)
 8001d58:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001d5a:	b29b      	uxth	r3, r3
 8001d5c:	2b00      	cmp	r3, #0
 8001d5e:	d033      	beq.n	8001dc8 <HAL_I2C_Master_Transmit+0x120>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8001d60:	462a      	mov	r2, r5
 8001d62:	990a      	ldr	r1, [sp, #40]	; 0x28
 8001d64:	4620      	mov	r0, r4
 8001d66:	f7ff fe6e 	bl	8001a46 <I2C_WaitOnTXISFlagUntilTimeout>
 8001d6a:	2800      	cmp	r0, #0
 8001d6c:	d152      	bne.n	8001e14 <HAL_I2C_Master_Transmit+0x16c>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8001d6e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8001d70:	6823      	ldr	r3, [r4, #0]
 8001d72:	7812      	ldrb	r2, [r2, #0]
 8001d74:	629a      	str	r2, [r3, #40]	; 0x28
      hi2c->pBuffPtr++;
 8001d76:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001d78:	3301      	adds	r3, #1
 8001d7a:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8001d7c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001d7e:	3b01      	subs	r3, #1
 8001d80:	b29b      	uxth	r3, r3
 8001d82:	8563      	strh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8001d84:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8001d86:	3b01      	subs	r3, #1
 8001d88:	b29b      	uxth	r3, r3
 8001d8a:	8523      	strh	r3, [r4, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8001d8c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8001d8e:	b292      	uxth	r2, r2
 8001d90:	2a00      	cmp	r2, #0
 8001d92:	d0e1      	beq.n	8001d58 <HAL_I2C_Master_Transmit+0xb0>
 8001d94:	2b00      	cmp	r3, #0
 8001d96:	d1df      	bne.n	8001d58 <HAL_I2C_Master_Transmit+0xb0>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8001d98:	9500      	str	r5, [sp, #0]
 8001d9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001d9c:	2200      	movs	r2, #0
 8001d9e:	2180      	movs	r1, #128	; 0x80
 8001da0:	4620      	mov	r0, r4
 8001da2:	f7ff fe7b 	bl	8001a9c <I2C_WaitOnFlagUntilTimeout>
 8001da6:	2800      	cmp	r0, #0
 8001da8:	d136      	bne.n	8001e18 <HAL_I2C_Master_Transmit+0x170>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8001daa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001dac:	b29b      	uxth	r3, r3
 8001dae:	2bff      	cmp	r3, #255	; 0xff
 8001db0:	d9c6      	bls.n	8001d40 <HAL_I2C_Master_Transmit+0x98>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8001db2:	22ff      	movs	r2, #255	; 0xff
 8001db4:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8001db6:	2300      	movs	r3, #0
 8001db8:	9300      	str	r3, [sp, #0]
 8001dba:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001dbe:	4631      	mov	r1, r6
 8001dc0:	4620      	mov	r0, r4
 8001dc2:	f7ff fd8e 	bl	80018e2 <I2C_TransferConfig>
 8001dc6:	e7c7      	b.n	8001d58 <HAL_I2C_Master_Transmit+0xb0>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8001dc8:	462a      	mov	r2, r5
 8001dca:	990a      	ldr	r1, [sp, #40]	; 0x28
 8001dcc:	4620      	mov	r0, r4
 8001dce:	f7ff fe8e 	bl	8001aee <I2C_WaitOnSTOPFlagUntilTimeout>
 8001dd2:	4603      	mov	r3, r0
 8001dd4:	bb10      	cbnz	r0, 8001e1c <HAL_I2C_Master_Transmit+0x174>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001dd6:	6822      	ldr	r2, [r4, #0]
 8001dd8:	2120      	movs	r1, #32
 8001dda:	61d1      	str	r1, [r2, #28]
    I2C_RESET_CR2(hi2c);
 8001ddc:	6820      	ldr	r0, [r4, #0]
 8001dde:	6842      	ldr	r2, [r0, #4]
 8001de0:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 8001de4:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 8001de8:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 8001dec:	f022 0201 	bic.w	r2, r2, #1
 8001df0:	6042      	str	r2, [r0, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8001df2:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8001df6:	2200      	movs	r2, #0
 8001df8:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
    __HAL_UNLOCK(hi2c);
 8001dfc:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    return HAL_OK;
 8001e00:	e000      	b.n	8001e04 <HAL_I2C_Master_Transmit+0x15c>
    return HAL_BUSY;
 8001e02:	2302      	movs	r3, #2
}
 8001e04:	4618      	mov	r0, r3
 8001e06:	b003      	add	sp, #12
 8001e08:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    __HAL_LOCK(hi2c);
 8001e0c:	2302      	movs	r3, #2
 8001e0e:	e7f9      	b.n	8001e04 <HAL_I2C_Master_Transmit+0x15c>
      return HAL_ERROR;
 8001e10:	2301      	movs	r3, #1
 8001e12:	e7f7      	b.n	8001e04 <HAL_I2C_Master_Transmit+0x15c>
        return HAL_ERROR;
 8001e14:	2301      	movs	r3, #1
 8001e16:	e7f5      	b.n	8001e04 <HAL_I2C_Master_Transmit+0x15c>
          return HAL_ERROR;
 8001e18:	2301      	movs	r3, #1
 8001e1a:	e7f3      	b.n	8001e04 <HAL_I2C_Master_Transmit+0x15c>
      return HAL_ERROR;
 8001e1c:	2301      	movs	r3, #1
 8001e1e:	e7f1      	b.n	8001e04 <HAL_I2C_Master_Transmit+0x15c>
 8001e20:	80002000 	.word	0x80002000

08001e24 <HAL_I2C_Master_Receive>:
{
 8001e24:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001e28:	b083      	sub	sp, #12
  if (hi2c->State == HAL_I2C_STATE_READY)
 8001e2a:	f890 5041 	ldrb.w	r5, [r0, #65]	; 0x41
 8001e2e:	b2ed      	uxtb	r5, r5
 8001e30:	2d20      	cmp	r5, #32
 8001e32:	f040 80a4 	bne.w	8001f7e <HAL_I2C_Master_Receive+0x15a>
    __HAL_LOCK(hi2c);
 8001e36:	f890 4040 	ldrb.w	r4, [r0, #64]	; 0x40
 8001e3a:	2c01      	cmp	r4, #1
 8001e3c:	f000 80a4 	beq.w	8001f88 <HAL_I2C_Master_Receive+0x164>
 8001e40:	4698      	mov	r8, r3
 8001e42:	4617      	mov	r7, r2
 8001e44:	460e      	mov	r6, r1
 8001e46:	4604      	mov	r4, r0
 8001e48:	f04f 0901 	mov.w	r9, #1
 8001e4c:	f880 9040 	strb.w	r9, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 8001e50:	f7ff fbb6 	bl	80015c0 <HAL_GetTick>
 8001e54:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8001e56:	9000      	str	r0, [sp, #0]
 8001e58:	2319      	movs	r3, #25
 8001e5a:	464a      	mov	r2, r9
 8001e5c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001e60:	4620      	mov	r0, r4
 8001e62:	f7ff fe1b 	bl	8001a9c <I2C_WaitOnFlagUntilTimeout>
 8001e66:	2800      	cmp	r0, #0
 8001e68:	f040 8090 	bne.w	8001f8c <HAL_I2C_Master_Receive+0x168>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8001e6c:	2322      	movs	r3, #34	; 0x22
 8001e6e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 8001e72:	2310      	movs	r3, #16
 8001e74:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001e78:	2300      	movs	r3, #0
 8001e7a:	6463      	str	r3, [r4, #68]	; 0x44
    hi2c->pBuffPtr  = pData;
 8001e7c:	6267      	str	r7, [r4, #36]	; 0x24
    hi2c->XferCount = Size;
 8001e7e:	f8a4 802a 	strh.w	r8, [r4, #42]	; 0x2a
    hi2c->XferISR   = NULL;
 8001e82:	6363      	str	r3, [r4, #52]	; 0x34
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8001e84:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001e86:	b29b      	uxth	r3, r3
 8001e88:	2bff      	cmp	r3, #255	; 0xff
 8001e8a:	d90a      	bls.n	8001ea2 <HAL_I2C_Master_Receive+0x7e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8001e8c:	22ff      	movs	r2, #255	; 0xff
 8001e8e:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8001e90:	4b42      	ldr	r3, [pc, #264]	; (8001f9c <HAL_I2C_Master_Receive+0x178>)
 8001e92:	9300      	str	r3, [sp, #0]
 8001e94:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001e98:	4631      	mov	r1, r6
 8001e9a:	4620      	mov	r0, r4
 8001e9c:	f7ff fd21 	bl	80018e2 <I2C_TransferConfig>
 8001ea0:	e018      	b.n	8001ed4 <HAL_I2C_Master_Receive+0xb0>
      hi2c->XferSize = hi2c->XferCount;
 8001ea2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8001ea4:	b292      	uxth	r2, r2
 8001ea6:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8001ea8:	4b3c      	ldr	r3, [pc, #240]	; (8001f9c <HAL_I2C_Master_Receive+0x178>)
 8001eaa:	9300      	str	r3, [sp, #0]
 8001eac:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8001eb0:	b2d2      	uxtb	r2, r2
 8001eb2:	4631      	mov	r1, r6
 8001eb4:	4620      	mov	r0, r4
 8001eb6:	f7ff fd14 	bl	80018e2 <I2C_TransferConfig>
 8001eba:	e00b      	b.n	8001ed4 <HAL_I2C_Master_Receive+0xb0>
          hi2c->XferSize = hi2c->XferCount;
 8001ebc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8001ebe:	b292      	uxth	r2, r2
 8001ec0:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8001ec2:	2300      	movs	r3, #0
 8001ec4:	9300      	str	r3, [sp, #0]
 8001ec6:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8001eca:	b2d2      	uxtb	r2, r2
 8001ecc:	4631      	mov	r1, r6
 8001ece:	4620      	mov	r0, r4
 8001ed0:	f7ff fd07 	bl	80018e2 <I2C_TransferConfig>
    while (hi2c->XferCount > 0U)
 8001ed4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001ed6:	b29b      	uxth	r3, r3
 8001ed8:	2b00      	cmp	r3, #0
 8001eda:	d033      	beq.n	8001f44 <HAL_I2C_Master_Receive+0x120>
      if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8001edc:	462a      	mov	r2, r5
 8001ede:	990a      	ldr	r1, [sp, #40]	; 0x28
 8001ee0:	4620      	mov	r0, r4
 8001ee2:	f7ff fe2c 	bl	8001b3e <I2C_WaitOnRXNEFlagUntilTimeout>
 8001ee6:	2800      	cmp	r0, #0
 8001ee8:	d152      	bne.n	8001f90 <HAL_I2C_Master_Receive+0x16c>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8001eea:	6823      	ldr	r3, [r4, #0]
 8001eec:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8001eee:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001ef0:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 8001ef2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001ef4:	3301      	adds	r3, #1
 8001ef6:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferSize--;
 8001ef8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8001efa:	3b01      	subs	r3, #1
 8001efc:	b29b      	uxth	r3, r3
 8001efe:	8523      	strh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8001f00:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8001f02:	3a01      	subs	r2, #1
 8001f04:	b292      	uxth	r2, r2
 8001f06:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8001f08:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8001f0a:	b292      	uxth	r2, r2
 8001f0c:	2a00      	cmp	r2, #0
 8001f0e:	d0e1      	beq.n	8001ed4 <HAL_I2C_Master_Receive+0xb0>
 8001f10:	2b00      	cmp	r3, #0
 8001f12:	d1df      	bne.n	8001ed4 <HAL_I2C_Master_Receive+0xb0>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8001f14:	9500      	str	r5, [sp, #0]
 8001f16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001f18:	2200      	movs	r2, #0
 8001f1a:	2180      	movs	r1, #128	; 0x80
 8001f1c:	4620      	mov	r0, r4
 8001f1e:	f7ff fdbd 	bl	8001a9c <I2C_WaitOnFlagUntilTimeout>
 8001f22:	2800      	cmp	r0, #0
 8001f24:	d136      	bne.n	8001f94 <HAL_I2C_Master_Receive+0x170>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8001f26:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001f28:	b29b      	uxth	r3, r3
 8001f2a:	2bff      	cmp	r3, #255	; 0xff
 8001f2c:	d9c6      	bls.n	8001ebc <HAL_I2C_Master_Receive+0x98>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8001f2e:	22ff      	movs	r2, #255	; 0xff
 8001f30:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8001f32:	2300      	movs	r3, #0
 8001f34:	9300      	str	r3, [sp, #0]
 8001f36:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001f3a:	4631      	mov	r1, r6
 8001f3c:	4620      	mov	r0, r4
 8001f3e:	f7ff fcd0 	bl	80018e2 <I2C_TransferConfig>
 8001f42:	e7c7      	b.n	8001ed4 <HAL_I2C_Master_Receive+0xb0>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8001f44:	462a      	mov	r2, r5
 8001f46:	990a      	ldr	r1, [sp, #40]	; 0x28
 8001f48:	4620      	mov	r0, r4
 8001f4a:	f7ff fdd0 	bl	8001aee <I2C_WaitOnSTOPFlagUntilTimeout>
 8001f4e:	4603      	mov	r3, r0
 8001f50:	bb10      	cbnz	r0, 8001f98 <HAL_I2C_Master_Receive+0x174>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001f52:	6822      	ldr	r2, [r4, #0]
 8001f54:	2120      	movs	r1, #32
 8001f56:	61d1      	str	r1, [r2, #28]
    I2C_RESET_CR2(hi2c);
 8001f58:	6820      	ldr	r0, [r4, #0]
 8001f5a:	6842      	ldr	r2, [r0, #4]
 8001f5c:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 8001f60:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 8001f64:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 8001f68:	f022 0201 	bic.w	r2, r2, #1
 8001f6c:	6042      	str	r2, [r0, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8001f6e:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8001f72:	2200      	movs	r2, #0
 8001f74:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
    __HAL_UNLOCK(hi2c);
 8001f78:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    return HAL_OK;
 8001f7c:	e000      	b.n	8001f80 <HAL_I2C_Master_Receive+0x15c>
    return HAL_BUSY;
 8001f7e:	2302      	movs	r3, #2
}
 8001f80:	4618      	mov	r0, r3
 8001f82:	b003      	add	sp, #12
 8001f84:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    __HAL_LOCK(hi2c);
 8001f88:	2302      	movs	r3, #2
 8001f8a:	e7f9      	b.n	8001f80 <HAL_I2C_Master_Receive+0x15c>
      return HAL_ERROR;
 8001f8c:	2301      	movs	r3, #1
 8001f8e:	e7f7      	b.n	8001f80 <HAL_I2C_Master_Receive+0x15c>
        return HAL_ERROR;
 8001f90:	2301      	movs	r3, #1
 8001f92:	e7f5      	b.n	8001f80 <HAL_I2C_Master_Receive+0x15c>
          return HAL_ERROR;
 8001f94:	2301      	movs	r3, #1
 8001f96:	e7f3      	b.n	8001f80 <HAL_I2C_Master_Receive+0x15c>
      return HAL_ERROR;
 8001f98:	2301      	movs	r3, #1
 8001f9a:	e7f1      	b.n	8001f80 <HAL_I2C_Master_Receive+0x15c>
 8001f9c:	80002400 	.word	0x80002400

08001fa0 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8001fa0:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8001fa4:	b2db      	uxtb	r3, r3
 8001fa6:	2b20      	cmp	r3, #32
 8001fa8:	d124      	bne.n	8001ff4 <HAL_I2CEx_ConfigAnalogFilter+0x54>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8001faa:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8001fae:	2b01      	cmp	r3, #1
 8001fb0:	d022      	beq.n	8001ff8 <HAL_I2CEx_ConfigAnalogFilter+0x58>
 8001fb2:	2301      	movs	r3, #1
 8001fb4:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 8001fb8:	2324      	movs	r3, #36	; 0x24
 8001fba:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8001fbe:	6802      	ldr	r2, [r0, #0]
 8001fc0:	6813      	ldr	r3, [r2, #0]
 8001fc2:	f023 0301 	bic.w	r3, r3, #1
 8001fc6:	6013      	str	r3, [r2, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8001fc8:	6802      	ldr	r2, [r0, #0]
 8001fca:	6813      	ldr	r3, [r2, #0]
 8001fcc:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001fd0:	6013      	str	r3, [r2, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 8001fd2:	6802      	ldr	r2, [r0, #0]
 8001fd4:	6813      	ldr	r3, [r2, #0]
 8001fd6:	4319      	orrs	r1, r3
 8001fd8:	6011      	str	r1, [r2, #0]

    __HAL_I2C_ENABLE(hi2c);
 8001fda:	6802      	ldr	r2, [r0, #0]
 8001fdc:	6813      	ldr	r3, [r2, #0]
 8001fde:	f043 0301 	orr.w	r3, r3, #1
 8001fe2:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8001fe4:	2320      	movs	r3, #32
 8001fe6:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8001fea:	2300      	movs	r3, #0
 8001fec:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
 8001ff0:	4618      	mov	r0, r3
 8001ff2:	4770      	bx	lr
  }
  else
  {
    return HAL_BUSY;
 8001ff4:	2002      	movs	r0, #2
 8001ff6:	4770      	bx	lr
    __HAL_LOCK(hi2c);
 8001ff8:	2002      	movs	r0, #2
  }
}
 8001ffa:	4770      	bx	lr

08001ffc <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8001ffc:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8002000:	b2db      	uxtb	r3, r3
 8002002:	2b20      	cmp	r3, #32
 8002004:	d122      	bne.n	800204c <HAL_I2CEx_ConfigDigitalFilter+0x50>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8002006:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 800200a:	2b01      	cmp	r3, #1
 800200c:	d020      	beq.n	8002050 <HAL_I2CEx_ConfigDigitalFilter+0x54>
 800200e:	2301      	movs	r3, #1
 8002010:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 8002014:	2324      	movs	r3, #36	; 0x24
 8002016:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800201a:	6802      	ldr	r2, [r0, #0]
 800201c:	6813      	ldr	r3, [r2, #0]
 800201e:	f023 0301 	bic.w	r3, r3, #1
 8002022:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 8002024:	6802      	ldr	r2, [r0, #0]
 8002026:	6813      	ldr	r3, [r2, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 8002028:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 800202c:	ea43 2101 	orr.w	r1, r3, r1, lsl #8

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 8002030:	6011      	str	r1, [r2, #0]

    __HAL_I2C_ENABLE(hi2c);
 8002032:	6802      	ldr	r2, [r0, #0]
 8002034:	6813      	ldr	r3, [r2, #0]
 8002036:	f043 0301 	orr.w	r3, r3, #1
 800203a:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800203c:	2320      	movs	r3, #32
 800203e:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8002042:	2300      	movs	r3, #0
 8002044:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
 8002048:	4618      	mov	r0, r3
 800204a:	4770      	bx	lr
  }
  else
  {
    return HAL_BUSY;
 800204c:	2002      	movs	r0, #2
 800204e:	4770      	bx	lr
    __HAL_LOCK(hi2c);
 8002050:	2002      	movs	r0, #2
  }
}
 8002052:	4770      	bx	lr

08002054 <PCD_WriteEmptyTxFifo>:
  * @param  hpcd PCD handle
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_WriteEmptyTxFifo(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
 8002054:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002058:	b082      	sub	sp, #8
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 800205a:	6807      	ldr	r7, [r0, #0]
  uint32_t len32b;
  uint32_t fifoemptymsk;

  ep = &hpcd->IN_ep[epnum];

  if (ep->xfer_count > ep->xfer_len)
 800205c:	00ca      	lsls	r2, r1, #3
 800205e:	1a52      	subs	r2, r2, r1
 8002060:	0093      	lsls	r3, r2, #2
 8002062:	4403      	add	r3, r0
 8002064:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 8002066:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002068:	429a      	cmp	r2, r3
 800206a:	d857      	bhi.n	800211c <PCD_WriteEmptyTxFifo+0xc8>
 800206c:	46b8      	mov	r8, r7
  {
    return HAL_ERROR;
  }

  len = ep->xfer_len - ep->xfer_count;
 800206e:	1a9b      	subs	r3, r3, r2

  if (len > ep->maxpacket)
 8002070:	ebc1 04c1 	rsb	r4, r1, r1, lsl #3
 8002074:	00a2      	lsls	r2, r4, #2
 8002076:	4402      	add	r2, r0
 8002078:	6c52      	ldr	r2, [r2, #68]	; 0x44
 800207a:	429a      	cmp	r2, r3
 800207c:	d300      	bcc.n	8002080 <PCD_WriteEmptyTxFifo+0x2c>
  len = ep->xfer_len - ep->xfer_count;
 800207e:	461a      	mov	r2, r3
 8002080:	460c      	mov	r4, r1
 8002082:	4606      	mov	r6, r0
  {
    len = ep->maxpacket;
  }

  len32b = (len + 3U) / 4U;
 8002084:	f102 0a03 	add.w	sl, r2, #3
 8002088:	ea4f 0a9a 	mov.w	sl, sl, lsr #2

  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 800208c:	e016      	b.n	80020bc <PCD_WriteEmptyTxFifo+0x68>

    if (len > ep->maxpacket)
    {
      len = ep->maxpacket;
    }
    len32b = (len + 3U) / 4U;
 800208e:	f109 0a03 	add.w	sl, r9, #3
 8002092:	ea4f 0a9a 	mov.w	sl, sl, lsr #2

    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 8002096:	00e3      	lsls	r3, r4, #3
 8002098:	1b1b      	subs	r3, r3, r4
 800209a:	009d      	lsls	r5, r3, #2
 800209c:	4435      	add	r5, r6
 800209e:	6ca9      	ldr	r1, [r5, #72]	; 0x48
 80020a0:	7c33      	ldrb	r3, [r6, #16]
 80020a2:	9300      	str	r3, [sp, #0]
 80020a4:	fa1f f389 	uxth.w	r3, r9
 80020a8:	b2e2      	uxtb	r2, r4
 80020aa:	4638      	mov	r0, r7
 80020ac:	f001 ff28 	bl	8003f00 <USB_WritePacket>
                          (uint8_t)hpcd->Init.dma_enable);

    ep->xfer_buff  += len;
 80020b0:	6cab      	ldr	r3, [r5, #72]	; 0x48
 80020b2:	444b      	add	r3, r9
 80020b4:	64ab      	str	r3, [r5, #72]	; 0x48
    ep->xfer_count += len;
 80020b6:	6d6b      	ldr	r3, [r5, #84]	; 0x54
 80020b8:	444b      	add	r3, r9
 80020ba:	656b      	str	r3, [r5, #84]	; 0x54
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80020bc:	eb08 1344 	add.w	r3, r8, r4, lsl #5
 80020c0:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80020c4:	699b      	ldr	r3, [r3, #24]
 80020c6:	b29b      	uxth	r3, r3
 80020c8:	4553      	cmp	r3, sl
 80020ca:	d313      	bcc.n	80020f4 <PCD_WriteEmptyTxFifo+0xa0>
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
 80020cc:	00e3      	lsls	r3, r4, #3
 80020ce:	1b1b      	subs	r3, r3, r4
 80020d0:	009a      	lsls	r2, r3, #2
 80020d2:	4432      	add	r2, r6
 80020d4:	6d51      	ldr	r1, [r2, #84]	; 0x54
 80020d6:	6d13      	ldr	r3, [r2, #80]	; 0x50
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80020d8:	4299      	cmp	r1, r3
 80020da:	d20b      	bcs.n	80020f4 <PCD_WriteEmptyTxFifo+0xa0>
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
 80020dc:	b153      	cbz	r3, 80020f4 <PCD_WriteEmptyTxFifo+0xa0>
    len = ep->xfer_len - ep->xfer_count;
 80020de:	1a5b      	subs	r3, r3, r1
    if (len > ep->maxpacket)
 80020e0:	ebc4 01c4 	rsb	r1, r4, r4, lsl #3
 80020e4:	008a      	lsls	r2, r1, #2
 80020e6:	4432      	add	r2, r6
 80020e8:	f8d2 9044 	ldr.w	r9, [r2, #68]	; 0x44
 80020ec:	4599      	cmp	r9, r3
 80020ee:	d3ce      	bcc.n	800208e <PCD_WriteEmptyTxFifo+0x3a>
    len = ep->xfer_len - ep->xfer_count;
 80020f0:	4699      	mov	r9, r3
 80020f2:	e7cc      	b.n	800208e <PCD_WriteEmptyTxFifo+0x3a>
  }

  if (ep->xfer_len <= ep->xfer_count)
 80020f4:	00e3      	lsls	r3, r4, #3
 80020f6:	1b1b      	subs	r3, r3, r4
 80020f8:	0098      	lsls	r0, r3, #2
 80020fa:	4406      	add	r6, r0
 80020fc:	6d32      	ldr	r2, [r6, #80]	; 0x50
 80020fe:	6d73      	ldr	r3, [r6, #84]	; 0x54
 8002100:	429a      	cmp	r2, r3
 8002102:	d80f      	bhi.n	8002124 <PCD_WriteEmptyTxFifo+0xd0>
  {
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8002104:	f004 040f 	and.w	r4, r4, #15
 8002108:	2101      	movs	r1, #1
 800210a:	40a1      	lsls	r1, r4
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 800210c:	f8d7 4834 	ldr.w	r4, [r7, #2100]	; 0x834
 8002110:	ea24 0401 	bic.w	r4, r4, r1
 8002114:	f8c7 4834 	str.w	r4, [r7, #2100]	; 0x834
  }

  return HAL_OK;
 8002118:	2000      	movs	r0, #0
 800211a:	e000      	b.n	800211e <PCD_WriteEmptyTxFifo+0xca>
    return HAL_ERROR;
 800211c:	2001      	movs	r0, #1
}
 800211e:	b002      	add	sp, #8
 8002120:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  return HAL_OK;
 8002124:	2000      	movs	r0, #0
 8002126:	e7fa      	b.n	800211e <PCD_WriteEmptyTxFifo+0xca>

08002128 <HAL_PCD_Init>:
{
 8002128:	b5f0      	push	{r4, r5, r6, r7, lr}
 800212a:	b08b      	sub	sp, #44	; 0x2c
  if (hpcd == NULL)
 800212c:	2800      	cmp	r0, #0
 800212e:	f000 8091 	beq.w	8002254 <HAL_PCD_Init+0x12c>
 8002132:	4604      	mov	r4, r0
  USBx = hpcd->Instance;
 8002134:	6805      	ldr	r5, [r0, #0]
  if (hpcd->State == HAL_PCD_STATE_RESET)
 8002136:	f890 33bd 	ldrb.w	r3, [r0, #957]	; 0x3bd
 800213a:	b323      	cbz	r3, 8002186 <HAL_PCD_Init+0x5e>
  hpcd->State = HAL_PCD_STATE_BUSY;
 800213c:	2303      	movs	r3, #3
 800213e:	f884 33bd 	strb.w	r3, [r4, #957]	; 0x3bd
  if ((USBx->CID & (0x1U << 8)) == 0U)
 8002142:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 8002144:	f413 7f80 	tst.w	r3, #256	; 0x100
 8002148:	d101      	bne.n	800214e <HAL_PCD_Init+0x26>
    hpcd->Init.dma_enable = 0U;
 800214a:	2300      	movs	r3, #0
 800214c:	6123      	str	r3, [r4, #16]
  __HAL_PCD_DISABLE(hpcd);
 800214e:	6820      	ldr	r0, [r4, #0]
 8002150:	f001 fc68 	bl	8003a24 <USB_DisableGlobalInt>
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 8002154:	4625      	mov	r5, r4
 8002156:	f855 7b10 	ldr.w	r7, [r5], #16
 800215a:	466e      	mov	r6, sp
 800215c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800215e:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8002160:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002162:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8002164:	e895 0003 	ldmia.w	r5, {r0, r1}
 8002168:	e886 0003 	stmia.w	r6, {r0, r1}
 800216c:	1d23      	adds	r3, r4, #4
 800216e:	cb0e      	ldmia	r3, {r1, r2, r3}
 8002170:	4638      	mov	r0, r7
 8002172:	f001 fb9d 	bl	80038b0 <USB_CoreInit>
 8002176:	b158      	cbz	r0, 8002190 <HAL_PCD_Init+0x68>
    hpcd->State = HAL_PCD_STATE_ERROR;
 8002178:	2302      	movs	r3, #2
 800217a:	f884 33bd 	strb.w	r3, [r4, #957]	; 0x3bd
    return HAL_ERROR;
 800217e:	2501      	movs	r5, #1
}
 8002180:	4628      	mov	r0, r5
 8002182:	b00b      	add	sp, #44	; 0x2c
 8002184:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hpcd->Lock = HAL_UNLOCKED;
 8002186:	f880 33bc 	strb.w	r3, [r0, #956]	; 0x3bc
    HAL_PCD_MspInit(hpcd);
 800218a:	f003 fe37 	bl	8005dfc <HAL_PCD_MspInit>
 800218e:	e7d5      	b.n	800213c <HAL_PCD_Init+0x14>
  (void)USB_SetCurrentMode(hpcd->Instance, USB_DEVICE_MODE);
 8002190:	2100      	movs	r1, #0
 8002192:	6820      	ldr	r0, [r4, #0]
 8002194:	f002 f8b7 	bl	8004306 <USB_SetCurrentMode>
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8002198:	2300      	movs	r3, #0
 800219a:	e015      	b.n	80021c8 <HAL_PCD_Init+0xa0>
    hpcd->IN_ep[i].is_in = 1U;
 800219c:	00d9      	lsls	r1, r3, #3
 800219e:	1ac8      	subs	r0, r1, r3
 80021a0:	0082      	lsls	r2, r0, #2
 80021a2:	4422      	add	r2, r4
 80021a4:	2001      	movs	r0, #1
 80021a6:	f882 003d 	strb.w	r0, [r2, #61]	; 0x3d
    hpcd->IN_ep[i].num = i;
 80021aa:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
    hpcd->IN_ep[i].tx_fifo_num = i;
 80021ae:	f8a2 3042 	strh.w	r3, [r2, #66]	; 0x42
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 80021b2:	2000      	movs	r0, #0
 80021b4:	f882 003f 	strb.w	r0, [r2, #63]	; 0x3f
    hpcd->IN_ep[i].maxpacket = 0U;
 80021b8:	6450      	str	r0, [r2, #68]	; 0x44
    hpcd->IN_ep[i].xfer_buff = 0U;
 80021ba:	6490      	str	r0, [r2, #72]	; 0x48
    hpcd->IN_ep[i].xfer_len = 0U;
 80021bc:	1aca      	subs	r2, r1, r3
 80021be:	0091      	lsls	r1, r2, #2
 80021c0:	4421      	add	r1, r4
 80021c2:	6508      	str	r0, [r1, #80]	; 0x50
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80021c4:	3301      	adds	r3, #1
 80021c6:	b2db      	uxtb	r3, r3
 80021c8:	6865      	ldr	r5, [r4, #4]
 80021ca:	42ab      	cmp	r3, r5
 80021cc:	d3e6      	bcc.n	800219c <HAL_PCD_Init+0x74>
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80021ce:	2300      	movs	r3, #0
 80021d0:	e015      	b.n	80021fe <HAL_PCD_Init+0xd6>
    hpcd->OUT_ep[i].is_in = 0U;
 80021d2:	00d8      	lsls	r0, r3, #3
 80021d4:	1ac1      	subs	r1, r0, r3
 80021d6:	008a      	lsls	r2, r1, #2
 80021d8:	4422      	add	r2, r4
 80021da:	2100      	movs	r1, #0
 80021dc:	f882 11fd 	strb.w	r1, [r2, #509]	; 0x1fd
    hpcd->OUT_ep[i].num = i;
 80021e0:	f882 31fc 	strb.w	r3, [r2, #508]	; 0x1fc
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
 80021e4:	f882 11ff 	strb.w	r1, [r2, #511]	; 0x1ff
    hpcd->OUT_ep[i].maxpacket = 0U;
 80021e8:	f8c2 1204 	str.w	r1, [r2, #516]	; 0x204
    hpcd->OUT_ep[i].xfer_buff = 0U;
 80021ec:	f8c2 1208 	str.w	r1, [r2, #520]	; 0x208
    hpcd->OUT_ep[i].xfer_len = 0U;
 80021f0:	1ac2      	subs	r2, r0, r3
 80021f2:	0090      	lsls	r0, r2, #2
 80021f4:	4420      	add	r0, r4
 80021f6:	f8c0 1210 	str.w	r1, [r0, #528]	; 0x210
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80021fa:	3301      	adds	r3, #1
 80021fc:	b2db      	uxtb	r3, r3
 80021fe:	429d      	cmp	r5, r3
 8002200:	d8e7      	bhi.n	80021d2 <HAL_PCD_Init+0xaa>
  if (USB_DevInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 8002202:	4625      	mov	r5, r4
 8002204:	f855 7b10 	ldr.w	r7, [r5], #16
 8002208:	466e      	mov	r6, sp
 800220a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800220c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 800220e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002210:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8002212:	e895 0003 	ldmia.w	r5, {r0, r1}
 8002216:	e886 0003 	stmia.w	r6, {r0, r1}
 800221a:	1d23      	adds	r3, r4, #4
 800221c:	cb0e      	ldmia	r3, {r1, r2, r3}
 800221e:	4638      	mov	r0, r7
 8002220:	f001 fc58 	bl	8003ad4 <USB_DevInit>
 8002224:	4605      	mov	r5, r0
 8002226:	b960      	cbnz	r0, 8002242 <HAL_PCD_Init+0x11a>
  hpcd->USB_Address = 0U;
 8002228:	2300      	movs	r3, #0
 800222a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
  hpcd->State = HAL_PCD_STATE_READY;
 800222e:	2301      	movs	r3, #1
 8002230:	f884 33bd 	strb.w	r3, [r4, #957]	; 0x3bd
  if (hpcd->Init.lpm_enable == 1U)
 8002234:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002236:	2b01      	cmp	r3, #1
 8002238:	d008      	beq.n	800224c <HAL_PCD_Init+0x124>
  (void)USB_DevDisconnect(hpcd->Instance);
 800223a:	6820      	ldr	r0, [r4, #0]
 800223c:	f002 f820 	bl	8004280 <USB_DevDisconnect>
  return HAL_OK;
 8002240:	e79e      	b.n	8002180 <HAL_PCD_Init+0x58>
    hpcd->State = HAL_PCD_STATE_ERROR;
 8002242:	2302      	movs	r3, #2
 8002244:	f884 33bd 	strb.w	r3, [r4, #957]	; 0x3bd
    return HAL_ERROR;
 8002248:	2501      	movs	r5, #1
 800224a:	e799      	b.n	8002180 <HAL_PCD_Init+0x58>
    (void)HAL_PCDEx_ActivateLPM(hpcd);
 800224c:	4620      	mov	r0, r4
 800224e:	f000 fcbd 	bl	8002bcc <HAL_PCDEx_ActivateLPM>
 8002252:	e7f2      	b.n	800223a <HAL_PCD_Init+0x112>
    return HAL_ERROR;
 8002254:	2501      	movs	r5, #1
 8002256:	e793      	b.n	8002180 <HAL_PCD_Init+0x58>

08002258 <HAL_PCD_Start>:
  __HAL_LOCK(hpcd);
 8002258:	f890 33bc 	ldrb.w	r3, [r0, #956]	; 0x3bc
 800225c:	2b01      	cmp	r3, #1
 800225e:	d00e      	beq.n	800227e <HAL_PCD_Start+0x26>
{
 8002260:	b510      	push	{r4, lr}
 8002262:	4604      	mov	r4, r0
  __HAL_LOCK(hpcd);
 8002264:	2301      	movs	r3, #1
 8002266:	f880 33bc 	strb.w	r3, [r0, #956]	; 0x3bc
  __HAL_PCD_ENABLE(hpcd);
 800226a:	6800      	ldr	r0, [r0, #0]
 800226c:	f001 fbd4 	bl	8003a18 <USB_EnableGlobalInt>
  (void)USB_DevConnect(hpcd->Instance);
 8002270:	6820      	ldr	r0, [r4, #0]
 8002272:	f001 fff7 	bl	8004264 <USB_DevConnect>
  __HAL_UNLOCK(hpcd);
 8002276:	2000      	movs	r0, #0
 8002278:	f884 03bc 	strb.w	r0, [r4, #956]	; 0x3bc
}
 800227c:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 800227e:	2002      	movs	r0, #2
}
 8002280:	4770      	bx	lr
	...

08002284 <PCD_EP_OutXfrComplete_int>:
  * @param  hpcd PCD handle
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutXfrComplete_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
 8002284:	b570      	push	{r4, r5, r6, lr}
 8002286:	4604      	mov	r4, r0
 8002288:	460d      	mov	r5, r1
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 800228a:	6800      	ldr	r0, [r0, #0]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO uint32_t *)(&USBx->CID + 0x1U);
 800228c:	6c06      	ldr	r6, [r0, #64]	; 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 800228e:	eb00 1341 	add.w	r3, r0, r1, lsl #5
 8002292:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8002296:	689a      	ldr	r2, [r3, #8]

  if (hpcd->Init.dma_enable == 1U)
 8002298:	6921      	ldr	r1, [r4, #16]
 800229a:	2901      	cmp	r1, #1
 800229c:	d011      	beq.n	80022c2 <PCD_EP_OutXfrComplete_int+0x3e>
      /* ... */
    }
  }
  else
  {
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
 800229e:	4937      	ldr	r1, [pc, #220]	; (800237c <PCD_EP_OutXfrComplete_int+0xf8>)
 80022a0:	428e      	cmp	r6, r1
 80022a2:	d054      	beq.n	800234e <PCD_EP_OutXfrComplete_int+0xca>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
      }
    }
    else
    {
      if ((epnum == 0U) && (hpcd->OUT_ep[epnum].xfer_len == 0U))
 80022a4:	b93d      	cbnz	r5, 80022b6 <PCD_EP_OutXfrComplete_int+0x32>
 80022a6:	ebc5 02c5 	rsb	r2, r5, r5, lsl #3
 80022aa:	0093      	lsls	r3, r2, #2
 80022ac:	4423      	add	r3, r4
 80022ae:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
 80022b2:	2b00      	cmp	r3, #0
 80022b4:	d05c      	beq.n	8002370 <PCD_EP_OutXfrComplete_int+0xec>
      }

#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
      hpcd->DataOutStageCallback(hpcd, (uint8_t)epnum);
#else
      HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 80022b6:	b2e9      	uxtb	r1, r5
 80022b8:	4620      	mov	r0, r4
 80022ba:	f003 fdeb 	bl	8005e94 <HAL_PCD_DataOutStageCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
    }
  }

  return HAL_OK;
}
 80022be:	2000      	movs	r0, #0
 80022c0:	bd70      	pop	{r4, r5, r6, pc}
    if ((DoepintReg & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP) /* Class C */
 80022c2:	f012 0f08 	tst.w	r2, #8
 80022c6:	d009      	beq.n	80022dc <PCD_EP_OutXfrComplete_int+0x58>
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 80022c8:	492d      	ldr	r1, [pc, #180]	; (8002380 <PCD_EP_OutXfrComplete_int+0xfc>)
 80022ca:	428e      	cmp	r6, r1
 80022cc:	d9f7      	bls.n	80022be <PCD_EP_OutXfrComplete_int+0x3a>
 80022ce:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 80022d2:	d0f4      	beq.n	80022be <PCD_EP_OutXfrComplete_int+0x3a>
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 80022d4:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80022d8:	609a      	str	r2, [r3, #8]
 80022da:	e7f0      	b.n	80022be <PCD_EP_OutXfrComplete_int+0x3a>
    else if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR) /* Class E */
 80022dc:	f012 0f20 	tst.w	r2, #32
 80022e0:	d128      	bne.n	8002334 <PCD_EP_OutXfrComplete_int+0xb0>
    else if ((DoepintReg & (USB_OTG_DOEPINT_STUP | USB_OTG_DOEPINT_OTEPSPR)) == 0U)
 80022e2:	f012 0f28 	tst.w	r2, #40	; 0x28
 80022e6:	d1ea      	bne.n	80022be <PCD_EP_OutXfrComplete_int+0x3a>
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 80022e8:	4925      	ldr	r1, [pc, #148]	; (8002380 <PCD_EP_OutXfrComplete_int+0xfc>)
 80022ea:	428e      	cmp	r6, r1
 80022ec:	d902      	bls.n	80022f4 <PCD_EP_OutXfrComplete_int+0x70>
 80022ee:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 80022f2:	d122      	bne.n	800233a <PCD_EP_OutXfrComplete_int+0xb6>
          hpcd->OUT_ep[epnum].maxpacket -
 80022f4:	00e9      	lsls	r1, r5, #3
 80022f6:	1b49      	subs	r1, r1, r5
 80022f8:	008a      	lsls	r2, r1, #2
 80022fa:	4422      	add	r2, r4
 80022fc:	f8d2 1204 	ldr.w	r1, [r2, #516]	; 0x204
          (USBx_OUTEP(epnum)->DOEPTSIZ & USB_OTG_DOEPTSIZ_XFRSIZ);
 8002300:	691b      	ldr	r3, [r3, #16]
 8002302:	f3c3 0312 	ubfx	r3, r3, #0, #19
          hpcd->OUT_ep[epnum].maxpacket -
 8002306:	1ac9      	subs	r1, r1, r3
        hpcd->OUT_ep[epnum].xfer_count =
 8002308:	f8c2 1214 	str.w	r1, [r2, #532]	; 0x214
        hpcd->OUT_ep[epnum].xfer_buff += hpcd->OUT_ep[epnum].maxpacket;
 800230c:	f8d2 1204 	ldr.w	r1, [r2, #516]	; 0x204
 8002310:	f8d2 3208 	ldr.w	r3, [r2, #520]	; 0x208
 8002314:	440b      	add	r3, r1
 8002316:	f8c2 3208 	str.w	r3, [r2, #520]	; 0x208
        if ((epnum == 0U) && (hpcd->OUT_ep[epnum].xfer_len == 0U))
 800231a:	b935      	cbnz	r5, 800232a <PCD_EP_OutXfrComplete_int+0xa6>
 800231c:	ebc5 02c5 	rsb	r2, r5, r5, lsl #3
 8002320:	0093      	lsls	r3, r2, #2
 8002322:	4423      	add	r3, r4
 8002324:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
 8002328:	b15b      	cbz	r3, 8002342 <PCD_EP_OutXfrComplete_int+0xbe>
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 800232a:	b2e9      	uxtb	r1, r5
 800232c:	4620      	mov	r0, r4
 800232e:	f003 fdb1 	bl	8005e94 <HAL_PCD_DataOutStageCallback>
 8002332:	e7c4      	b.n	80022be <PCD_EP_OutXfrComplete_int+0x3a>
      CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 8002334:	2220      	movs	r2, #32
 8002336:	609a      	str	r2, [r3, #8]
 8002338:	e7c1      	b.n	80022be <PCD_EP_OutXfrComplete_int+0x3a>
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 800233a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 800233e:	609a      	str	r2, [r3, #8]
 8002340:	e7bd      	b.n	80022be <PCD_EP_OutXfrComplete_int+0x3a>
          (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 8002342:	f504 7271 	add.w	r2, r4, #964	; 0x3c4
 8002346:	2101      	movs	r1, #1
 8002348:	f002 f81e 	bl	8004388 <USB_EP0_OutStart>
 800234c:	e7ed      	b.n	800232a <PCD_EP_OutXfrComplete_int+0xa6>
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
 800234e:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 8002352:	d109      	bne.n	8002368 <PCD_EP_OutXfrComplete_int+0xe4>
        if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 8002354:	f012 0f20 	tst.w	r2, #32
 8002358:	d001      	beq.n	800235e <PCD_EP_OutXfrComplete_int+0xda>
          CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 800235a:	2220      	movs	r2, #32
 800235c:	609a      	str	r2, [r3, #8]
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 800235e:	b2e9      	uxtb	r1, r5
 8002360:	4620      	mov	r0, r4
 8002362:	f003 fd97 	bl	8005e94 <HAL_PCD_DataOutStageCallback>
 8002366:	e7aa      	b.n	80022be <PCD_EP_OutXfrComplete_int+0x3a>
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8002368:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 800236c:	609a      	str	r2, [r3, #8]
 800236e:	e7a6      	b.n	80022be <PCD_EP_OutXfrComplete_int+0x3a>
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 8002370:	f504 7271 	add.w	r2, r4, #964	; 0x3c4
 8002374:	2100      	movs	r1, #0
 8002376:	f002 f807 	bl	8004388 <USB_EP0_OutStart>
 800237a:	e79c      	b.n	80022b6 <PCD_EP_OutXfrComplete_int+0x32>
 800237c:	4f54310a 	.word	0x4f54310a
 8002380:	4f54300a 	.word	0x4f54300a

08002384 <PCD_EP_OutSetupPacket_int>:
  * @param  hpcd PCD handle
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutSetupPacket_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
 8002384:	b538      	push	{r3, r4, r5, lr}
 8002386:	4604      	mov	r4, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8002388:	6803      	ldr	r3, [r0, #0]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO uint32_t *)(&USBx->CID + 0x1U);
 800238a:	6c1d      	ldr	r5, [r3, #64]	; 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 800238c:	eb03 1141 	add.w	r1, r3, r1, lsl #5
 8002390:	f8d1 2b08 	ldr.w	r2, [r1, #2824]	; 0xb08

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8002394:	4b0e      	ldr	r3, [pc, #56]	; (80023d0 <PCD_EP_OutSetupPacket_int+0x4c>)
 8002396:	429d      	cmp	r5, r3
 8002398:	d907      	bls.n	80023aa <PCD_EP_OutSetupPacket_int+0x26>
 800239a:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 800239e:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 80023a2:	d002      	beq.n	80023aa <PCD_EP_OutSetupPacket_int+0x26>
      ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX))
  {
    CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 80023a4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80023a8:	608b      	str	r3, [r1, #8]

  /* Inform the upper layer that a setup packet is available */
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
  hpcd->SetupStageCallback(hpcd);
#else
  HAL_PCD_SetupStageCallback(hpcd);
 80023aa:	4620      	mov	r0, r4
 80023ac:	f003 fd6a 	bl	8005e84 <HAL_PCD_SetupStageCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) && (hpcd->Init.dma_enable == 1U))
 80023b0:	4b07      	ldr	r3, [pc, #28]	; (80023d0 <PCD_EP_OutSetupPacket_int+0x4c>)
 80023b2:	429d      	cmp	r5, r3
 80023b4:	d902      	bls.n	80023bc <PCD_EP_OutSetupPacket_int+0x38>
 80023b6:	6923      	ldr	r3, [r4, #16]
 80023b8:	2b01      	cmp	r3, #1
 80023ba:	d001      	beq.n	80023c0 <PCD_EP_OutSetupPacket_int+0x3c>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
  }

  return HAL_OK;
}
 80023bc:	2000      	movs	r0, #0
 80023be:	bd38      	pop	{r3, r4, r5, pc}
    (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 80023c0:	f504 7271 	add.w	r2, r4, #964	; 0x3c4
 80023c4:	2101      	movs	r1, #1
 80023c6:	6820      	ldr	r0, [r4, #0]
 80023c8:	f001 ffde 	bl	8004388 <USB_EP0_OutStart>
 80023cc:	e7f6      	b.n	80023bc <PCD_EP_OutSetupPacket_int+0x38>
 80023ce:	bf00      	nop
 80023d0:	4f54300a 	.word	0x4f54300a

080023d4 <HAL_PCD_IRQHandler>:
{
 80023d4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80023d8:	4604      	mov	r4, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 80023da:	6805      	ldr	r5, [r0, #0]
  if (USB_GetMode(hpcd->Instance) == USB_OTG_MODE_DEVICE)
 80023dc:	4628      	mov	r0, r5
 80023de:	f001 ff8e 	bl	80042fe <USB_GetMode>
 80023e2:	b108      	cbz	r0, 80023e8 <HAL_PCD_IRQHandler+0x14>
}
 80023e4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80023e8:	462f      	mov	r7, r5
 80023ea:	4606      	mov	r6, r0
    if (__HAL_PCD_IS_INVALID_INTERRUPT(hpcd))
 80023ec:	6820      	ldr	r0, [r4, #0]
 80023ee:	f001 ff55 	bl	800429c <USB_ReadInterrupts>
 80023f2:	2800      	cmp	r0, #0
 80023f4:	d0f6      	beq.n	80023e4 <HAL_PCD_IRQHandler+0x10>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 80023f6:	6820      	ldr	r0, [r4, #0]
 80023f8:	f001 ff50 	bl	800429c <USB_ReadInterrupts>
 80023fc:	f010 0f02 	tst.w	r0, #2
 8002400:	d004      	beq.n	800240c <HAL_PCD_IRQHandler+0x38>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 8002402:	6822      	ldr	r2, [r4, #0]
 8002404:	6953      	ldr	r3, [r2, #20]
 8002406:	f003 0302 	and.w	r3, r3, #2
 800240a:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 800240c:	6820      	ldr	r0, [r4, #0]
 800240e:	f001 ff45 	bl	800429c <USB_ReadInterrupts>
 8002412:	f010 0f10 	tst.w	r0, #16
 8002416:	d015      	beq.n	8002444 <HAL_PCD_IRQHandler+0x70>
      USB_MASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 8002418:	6822      	ldr	r2, [r4, #0]
 800241a:	6993      	ldr	r3, [r2, #24]
 800241c:	f023 0310 	bic.w	r3, r3, #16
 8002420:	6193      	str	r3, [r2, #24]
      temp = USBx->GRXSTSP;
 8002422:	f8d5 8020 	ldr.w	r8, [r5, #32]
      ep = &hpcd->OUT_ep[temp & USB_OTG_GRXSTSP_EPNUM];
 8002426:	f008 090f 	and.w	r9, r8, #15
      if (((temp & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 800242a:	f3c8 4343 	ubfx	r3, r8, #17, #4
 800242e:	2b02      	cmp	r3, #2
 8002430:	f000 8085 	beq.w	800253e <HAL_PCD_IRQHandler+0x16a>
      else if (((temp & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_SETUP_UPDT)
 8002434:	2b06      	cmp	r3, #6
 8002436:	f000 80a5 	beq.w	8002584 <HAL_PCD_IRQHandler+0x1b0>
      USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 800243a:	6822      	ldr	r2, [r4, #0]
 800243c:	6993      	ldr	r3, [r2, #24]
 800243e:	f043 0310 	orr.w	r3, r3, #16
 8002442:	6193      	str	r3, [r2, #24]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OEPINT))
 8002444:	6820      	ldr	r0, [r4, #0]
 8002446:	f001 ff29 	bl	800429c <USB_ReadInterrupts>
 800244a:	f410 2f00 	tst.w	r0, #524288	; 0x80000
 800244e:	f040 80ad 	bne.w	80025ac <HAL_PCD_IRQHandler+0x1d8>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IEPINT))
 8002452:	6820      	ldr	r0, [r4, #0]
 8002454:	f001 ff22 	bl	800429c <USB_ReadInterrupts>
 8002458:	f410 2f80 	tst.w	r0, #262144	; 0x40000
 800245c:	f040 80f1 	bne.w	8002642 <HAL_PCD_IRQHandler+0x26e>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
 8002460:	6820      	ldr	r0, [r4, #0]
 8002462:	f001 ff1b 	bl	800429c <USB_ReadInterrupts>
 8002466:	2800      	cmp	r0, #0
 8002468:	f2c0 815f 	blt.w	800272a <HAL_PCD_IRQHandler+0x356>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP))
 800246c:	6820      	ldr	r0, [r4, #0]
 800246e:	f001 ff15 	bl	800429c <USB_ReadInterrupts>
 8002472:	f410 6f00 	tst.w	r0, #2048	; 0x800
 8002476:	d00a      	beq.n	800248e <HAL_PCD_IRQHandler+0xba>
      if ((USBx_DEVICE->DSTS & USB_OTG_DSTS_SUSPSTS) == USB_OTG_DSTS_SUSPSTS)
 8002478:	f8d5 3808 	ldr.w	r3, [r5, #2056]	; 0x808
 800247c:	f013 0f01 	tst.w	r3, #1
 8002480:	f040 816d 	bne.w	800275e <HAL_PCD_IRQHandler+0x38a>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP);
 8002484:	6822      	ldr	r2, [r4, #0]
 8002486:	6953      	ldr	r3, [r2, #20]
 8002488:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800248c:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_LPMINT))
 800248e:	6820      	ldr	r0, [r4, #0]
 8002490:	f001 ff04 	bl	800429c <USB_ReadInterrupts>
 8002494:	f010 6f00 	tst.w	r0, #134217728	; 0x8000000
 8002498:	d015      	beq.n	80024c6 <HAL_PCD_IRQHandler+0xf2>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_LPMINT);
 800249a:	6822      	ldr	r2, [r4, #0]
 800249c:	6953      	ldr	r3, [r2, #20]
 800249e:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80024a2:	6153      	str	r3, [r2, #20]
      if (hpcd->LPM_State == LPM_L0)
 80024a4:	f894 33f4 	ldrb.w	r3, [r4, #1012]	; 0x3f4
 80024a8:	2b00      	cmp	r3, #0
 80024aa:	f040 815c 	bne.w	8002766 <HAL_PCD_IRQHandler+0x392>
        hpcd->LPM_State = LPM_L1;
 80024ae:	2101      	movs	r1, #1
 80024b0:	f884 13f4 	strb.w	r1, [r4, #1012]	; 0x3f4
        hpcd->BESL = (hpcd->Instance->GLPMCFG & USB_OTG_GLPMCFG_BESL) >> 2U;
 80024b4:	6823      	ldr	r3, [r4, #0]
 80024b6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80024b8:	f3c3 0383 	ubfx	r3, r3, #2, #4
 80024bc:	f8c4 33f8 	str.w	r3, [r4, #1016]	; 0x3f8
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L1_ACTIVE);
 80024c0:	4620      	mov	r0, r4
 80024c2:	f003 fda3 	bl	800600c <HAL_PCDEx_LPM_Callback>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBRST))
 80024c6:	6820      	ldr	r0, [r4, #0]
 80024c8:	f001 fee8 	bl	800429c <USB_ReadInterrupts>
 80024cc:	f410 5f80 	tst.w	r0, #4096	; 0x1000
 80024d0:	f040 814d 	bne.w	800276e <HAL_PCD_IRQHandler+0x39a>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE))
 80024d4:	6820      	ldr	r0, [r4, #0]
 80024d6:	f001 fee1 	bl	800429c <USB_ReadInterrupts>
 80024da:	f410 5f00 	tst.w	r0, #8192	; 0x2000
 80024de:	f040 81a5 	bne.w	800282c <HAL_PCD_IRQHandler+0x458>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SOF))
 80024e2:	6820      	ldr	r0, [r4, #0]
 80024e4:	f001 feda 	bl	800429c <USB_ReadInterrupts>
 80024e8:	f010 0f08 	tst.w	r0, #8
 80024ec:	f040 81b6 	bne.w	800285c <HAL_PCD_IRQHandler+0x488>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR))
 80024f0:	6820      	ldr	r0, [r4, #0]
 80024f2:	f001 fed3 	bl	800429c <USB_ReadInterrupts>
 80024f6:	f410 1f80 	tst.w	r0, #1048576	; 0x100000
 80024fa:	f040 81b8 	bne.w	800286e <HAL_PCD_IRQHandler+0x49a>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT))
 80024fe:	6820      	ldr	r0, [r4, #0]
 8002500:	f001 fecc 	bl	800429c <USB_ReadInterrupts>
 8002504:	f410 1f00 	tst.w	r0, #2097152	; 0x200000
 8002508:	f040 81bb 	bne.w	8002882 <HAL_PCD_IRQHandler+0x4ae>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT))
 800250c:	6820      	ldr	r0, [r4, #0]
 800250e:	f001 fec5 	bl	800429c <USB_ReadInterrupts>
 8002512:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8002516:	f040 81be 	bne.w	8002896 <HAL_PCD_IRQHandler+0x4c2>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OTGINT))
 800251a:	6820      	ldr	r0, [r4, #0]
 800251c:	f001 febe 	bl	800429c <USB_ReadInterrupts>
 8002520:	f010 0f04 	tst.w	r0, #4
 8002524:	f43f af5e 	beq.w	80023e4 <HAL_PCD_IRQHandler+0x10>
      temp = hpcd->Instance->GOTGINT;
 8002528:	6823      	ldr	r3, [r4, #0]
 800252a:	685d      	ldr	r5, [r3, #4]
      if ((temp & USB_OTG_GOTGINT_SEDET) == USB_OTG_GOTGINT_SEDET)
 800252c:	f015 0f04 	tst.w	r5, #4
 8002530:	f040 81ba 	bne.w	80028a8 <HAL_PCD_IRQHandler+0x4d4>
      hpcd->Instance->GOTGINT |= temp;
 8002534:	6822      	ldr	r2, [r4, #0]
 8002536:	6853      	ldr	r3, [r2, #4]
 8002538:	432b      	orrs	r3, r5
 800253a:	6053      	str	r3, [r2, #4]
 800253c:	e752      	b.n	80023e4 <HAL_PCD_IRQHandler+0x10>
        if ((temp & USB_OTG_GRXSTSP_BCNT) != 0U)
 800253e:	f647 73f0 	movw	r3, #32752	; 0x7ff0
 8002542:	ea18 0f03 	tst.w	r8, r3
 8002546:	f43f af78 	beq.w	800243a <HAL_PCD_IRQHandler+0x66>
          (void)USB_ReadPacket(USBx, ep->xfer_buff,
 800254a:	ea4f 0bc9 	mov.w	fp, r9, lsl #3
 800254e:	ebab 0309 	sub.w	r3, fp, r9
 8002552:	ea4f 0a83 	mov.w	sl, r3, lsl #2
 8002556:	44a2      	add	sl, r4
                               (uint16_t)((temp & USB_OTG_GRXSTSP_BCNT) >> 4));
 8002558:	ea4f 1818 	mov.w	r8, r8, lsr #4
          (void)USB_ReadPacket(USBx, ep->xfer_buff,
 800255c:	f3c8 020a 	ubfx	r2, r8, #0, #11
 8002560:	f8da 1208 	ldr.w	r1, [sl, #520]	; 0x208
 8002564:	4628      	mov	r0, r5
 8002566:	f001 fdeb 	bl	8004140 <USB_ReadPacket>
          ep->xfer_buff += (temp & USB_OTG_GRXSTSP_BCNT) >> 4;
 800256a:	f3c8 080a 	ubfx	r8, r8, #0, #11
 800256e:	f8da 3208 	ldr.w	r3, [sl, #520]	; 0x208
 8002572:	4443      	add	r3, r8
 8002574:	f8ca 3208 	str.w	r3, [sl, #520]	; 0x208
          ep->xfer_count += (temp & USB_OTG_GRXSTSP_BCNT) >> 4;
 8002578:	f8da 3214 	ldr.w	r3, [sl, #532]	; 0x214
 800257c:	4443      	add	r3, r8
 800257e:	f8ca 3214 	str.w	r3, [sl, #532]	; 0x214
 8002582:	e75a      	b.n	800243a <HAL_PCD_IRQHandler+0x66>
        (void)USB_ReadPacket(USBx, (uint8_t *)hpcd->Setup, 8U);
 8002584:	2208      	movs	r2, #8
 8002586:	f504 7171 	add.w	r1, r4, #964	; 0x3c4
 800258a:	4628      	mov	r0, r5
 800258c:	f001 fdd8 	bl	8004140 <USB_ReadPacket>
        ep->xfer_count += (temp & USB_OTG_GRXSTSP_BCNT) >> 4;
 8002590:	f3c8 180a 	ubfx	r8, r8, #4, #11
 8002594:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002598:	eba3 0109 	sub.w	r1, r3, r9
 800259c:	008a      	lsls	r2, r1, #2
 800259e:	4422      	add	r2, r4
 80025a0:	f8d2 3214 	ldr.w	r3, [r2, #532]	; 0x214
 80025a4:	4443      	add	r3, r8
 80025a6:	f8c2 3214 	str.w	r3, [r2, #532]	; 0x214
 80025aa:	e746      	b.n	800243a <HAL_PCD_IRQHandler+0x66>
      ep_intr = USB_ReadDevAllOutEpInterrupt(hpcd->Instance);
 80025ac:	6820      	ldr	r0, [r4, #0]
 80025ae:	f001 fe79 	bl	80042a4 <USB_ReadDevAllOutEpInterrupt>
 80025b2:	4680      	mov	r8, r0
      epnum = 0U;
 80025b4:	46b1      	mov	r9, r6
      while (ep_intr != 0U)
 80025b6:	e017      	b.n	80025e8 <HAL_PCD_IRQHandler+0x214>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_XFRC);
 80025b8:	eb07 1349 	add.w	r3, r7, r9, lsl #5
 80025bc:	2201      	movs	r2, #1
 80025be:	f8c3 2b08 	str.w	r2, [r3, #2824]	; 0xb08
            (void)PCD_EP_OutXfrComplete_int(hpcd, epnum);
 80025c2:	4649      	mov	r1, r9
 80025c4:	4620      	mov	r0, r4
 80025c6:	f7ff fe5d 	bl	8002284 <PCD_EP_OutXfrComplete_int>
 80025ca:	e01d      	b.n	8002608 <HAL_PCD_IRQHandler+0x234>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STUP);
 80025cc:	eb07 1349 	add.w	r3, r7, r9, lsl #5
 80025d0:	2208      	movs	r2, #8
 80025d2:	f8c3 2b08 	str.w	r2, [r3, #2824]	; 0xb08
            (void)PCD_EP_OutSetupPacket_int(hpcd, epnum);
 80025d6:	4649      	mov	r1, r9
 80025d8:	4620      	mov	r0, r4
 80025da:	f7ff fed3 	bl	8002384 <PCD_EP_OutSetupPacket_int>
 80025de:	e016      	b.n	800260e <HAL_PCD_IRQHandler+0x23a>
        epnum++;
 80025e0:	f109 0901 	add.w	r9, r9, #1
        ep_intr >>= 1U;
 80025e4:	ea4f 0858 	mov.w	r8, r8, lsr #1
      while (ep_intr != 0U)
 80025e8:	f1b8 0f00 	cmp.w	r8, #0
 80025ec:	f43f af31 	beq.w	8002452 <HAL_PCD_IRQHandler+0x7e>
        if ((ep_intr & 0x1U) != 0U)
 80025f0:	f018 0f01 	tst.w	r8, #1
 80025f4:	d0f4      	beq.n	80025e0 <HAL_PCD_IRQHandler+0x20c>
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 80025f6:	fa5f f189 	uxtb.w	r1, r9
 80025fa:	6820      	ldr	r0, [r4, #0]
 80025fc:	f001 fe62 	bl	80042c4 <USB_ReadDevOutEPInterrupt>
 8002600:	4682      	mov	sl, r0
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 8002602:	f010 0f01 	tst.w	r0, #1
 8002606:	d1d7      	bne.n	80025b8 <HAL_PCD_IRQHandler+0x1e4>
          if ((epint & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP)
 8002608:	f01a 0f08 	tst.w	sl, #8
 800260c:	d1de      	bne.n	80025cc <HAL_PCD_IRQHandler+0x1f8>
          if ((epint & USB_OTG_DOEPINT_OTEPDIS) == USB_OTG_DOEPINT_OTEPDIS)
 800260e:	f01a 0f10 	tst.w	sl, #16
 8002612:	d004      	beq.n	800261e <HAL_PCD_IRQHandler+0x24a>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPDIS);
 8002614:	eb07 1349 	add.w	r3, r7, r9, lsl #5
 8002618:	2210      	movs	r2, #16
 800261a:	f8c3 2b08 	str.w	r2, [r3, #2824]	; 0xb08
          if ((epint & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 800261e:	f01a 0f20 	tst.w	sl, #32
 8002622:	d004      	beq.n	800262e <HAL_PCD_IRQHandler+0x25a>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 8002624:	eb07 1349 	add.w	r3, r7, r9, lsl #5
 8002628:	2220      	movs	r2, #32
 800262a:	f8c3 2b08 	str.w	r2, [r3, #2824]	; 0xb08
          if ((epint & USB_OTG_DOEPINT_NAK) == USB_OTG_DOEPINT_NAK)
 800262e:	f41a 5f00 	tst.w	sl, #8192	; 0x2000
 8002632:	d0d5      	beq.n	80025e0 <HAL_PCD_IRQHandler+0x20c>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_NAK);
 8002634:	eb07 1349 	add.w	r3, r7, r9, lsl #5
 8002638:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800263c:	f8c3 2b08 	str.w	r2, [r3, #2824]	; 0xb08
 8002640:	e7ce      	b.n	80025e0 <HAL_PCD_IRQHandler+0x20c>
      ep_intr = USB_ReadDevAllInEpInterrupt(hpcd->Instance);
 8002642:	6820      	ldr	r0, [r4, #0]
 8002644:	f001 fe36 	bl	80042b4 <USB_ReadDevAllInEpInterrupt>
 8002648:	4680      	mov	r8, r0
      epnum = 0U;
 800264a:	46b1      	mov	r9, r6
      while (ep_intr != 0U)
 800264c:	e02a      	b.n	80026a4 <HAL_PCD_IRQHandler+0x2d0>
            HAL_PCD_DataInStageCallback(hpcd, (uint8_t)epnum);
 800264e:	4659      	mov	r1, fp
 8002650:	4620      	mov	r0, r4
 8002652:	f003 fc2b 	bl	8005eac <HAL_PCD_DataInStageCallback>
          if ((epint & USB_OTG_DIEPINT_TOC) == USB_OTG_DIEPINT_TOC)
 8002656:	f01a 0f08 	tst.w	sl, #8
 800265a:	d004      	beq.n	8002666 <HAL_PCD_IRQHandler+0x292>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_TOC);
 800265c:	eb07 1349 	add.w	r3, r7, r9, lsl #5
 8002660:	2208      	movs	r2, #8
 8002662:	f8c3 2908 	str.w	r2, [r3, #2312]	; 0x908
          if ((epint & USB_OTG_DIEPINT_ITTXFE) == USB_OTG_DIEPINT_ITTXFE)
 8002666:	f01a 0f10 	tst.w	sl, #16
 800266a:	d004      	beq.n	8002676 <HAL_PCD_IRQHandler+0x2a2>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_ITTXFE);
 800266c:	eb07 1349 	add.w	r3, r7, r9, lsl #5
 8002670:	2210      	movs	r2, #16
 8002672:	f8c3 2908 	str.w	r2, [r3, #2312]	; 0x908
          if ((epint & USB_OTG_DIEPINT_INEPNE) == USB_OTG_DIEPINT_INEPNE)
 8002676:	f01a 0f40 	tst.w	sl, #64	; 0x40
 800267a:	d004      	beq.n	8002686 <HAL_PCD_IRQHandler+0x2b2>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_INEPNE);
 800267c:	eb07 1349 	add.w	r3, r7, r9, lsl #5
 8002680:	2240      	movs	r2, #64	; 0x40
 8002682:	f8c3 2908 	str.w	r2, [r3, #2312]	; 0x908
          if ((epint & USB_OTG_DIEPINT_EPDISD) == USB_OTG_DIEPINT_EPDISD)
 8002686:	f01a 0f02 	tst.w	sl, #2
 800268a:	d004      	beq.n	8002696 <HAL_PCD_IRQHandler+0x2c2>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_EPDISD);
 800268c:	eb07 1349 	add.w	r3, r7, r9, lsl #5
 8002690:	2202      	movs	r2, #2
 8002692:	f8c3 2908 	str.w	r2, [r3, #2312]	; 0x908
          if ((epint & USB_OTG_DIEPINT_TXFE) == USB_OTG_DIEPINT_TXFE)
 8002696:	f01a 0f80 	tst.w	sl, #128	; 0x80
 800269a:	d141      	bne.n	8002720 <HAL_PCD_IRQHandler+0x34c>
        epnum++;
 800269c:	f109 0901 	add.w	r9, r9, #1
        ep_intr >>= 1U;
 80026a0:	ea4f 0858 	mov.w	r8, r8, lsr #1
      while (ep_intr != 0U)
 80026a4:	f1b8 0f00 	cmp.w	r8, #0
 80026a8:	f43f aeda 	beq.w	8002460 <HAL_PCD_IRQHandler+0x8c>
        if ((ep_intr & 0x1U) != 0U) /* In ITR */
 80026ac:	f018 0f01 	tst.w	r8, #1
 80026b0:	d0f4      	beq.n	800269c <HAL_PCD_IRQHandler+0x2c8>
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 80026b2:	fa5f fb89 	uxtb.w	fp, r9
 80026b6:	4659      	mov	r1, fp
 80026b8:	6820      	ldr	r0, [r4, #0]
 80026ba:	f001 fe0c 	bl	80042d6 <USB_ReadDevInEPInterrupt>
 80026be:	4682      	mov	sl, r0
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 80026c0:	f010 0f01 	tst.w	r0, #1
 80026c4:	d0c7      	beq.n	8002656 <HAL_PCD_IRQHandler+0x282>
            fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 80026c6:	f009 030f 	and.w	r3, r9, #15
 80026ca:	2101      	movs	r1, #1
 80026cc:	fa01 f203 	lsl.w	r2, r1, r3
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 80026d0:	f8d7 3834 	ldr.w	r3, [r7, #2100]	; 0x834
 80026d4:	ea23 0302 	bic.w	r3, r3, r2
 80026d8:	f8c7 3834 	str.w	r3, [r7, #2100]	; 0x834
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_XFRC);
 80026dc:	eb07 1349 	add.w	r3, r7, r9, lsl #5
 80026e0:	f8c3 1908 	str.w	r1, [r3, #2312]	; 0x908
            if (hpcd->Init.dma_enable == 1U)
 80026e4:	6923      	ldr	r3, [r4, #16]
 80026e6:	428b      	cmp	r3, r1
 80026e8:	d1b1      	bne.n	800264e <HAL_PCD_IRQHandler+0x27a>
              hpcd->IN_ep[epnum].xfer_buff += hpcd->IN_ep[epnum].maxpacket;
 80026ea:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 80026ee:	eba2 0209 	sub.w	r2, r2, r9
 80026f2:	0093      	lsls	r3, r2, #2
 80026f4:	4423      	add	r3, r4
 80026f6:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80026f8:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 80026fa:	440a      	add	r2, r1
 80026fc:	649a      	str	r2, [r3, #72]	; 0x48
              if ((epnum == 0U) && (hpcd->IN_ep[epnum].xfer_len == 0U))
 80026fe:	f1b9 0f00 	cmp.w	r9, #0
 8002702:	d1a4      	bne.n	800264e <HAL_PCD_IRQHandler+0x27a>
 8002704:	ebc9 02c9 	rsb	r2, r9, r9, lsl #3
 8002708:	0093      	lsls	r3, r2, #2
 800270a:	4423      	add	r3, r4
 800270c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800270e:	2b00      	cmp	r3, #0
 8002710:	d19d      	bne.n	800264e <HAL_PCD_IRQHandler+0x27a>
                (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 8002712:	f504 7271 	add.w	r2, r4, #964	; 0x3c4
 8002716:	2101      	movs	r1, #1
 8002718:	6820      	ldr	r0, [r4, #0]
 800271a:	f001 fe35 	bl	8004388 <USB_EP0_OutStart>
 800271e:	e796      	b.n	800264e <HAL_PCD_IRQHandler+0x27a>
            (void)PCD_WriteEmptyTxFifo(hpcd, epnum);
 8002720:	4649      	mov	r1, r9
 8002722:	4620      	mov	r0, r4
 8002724:	f7ff fc96 	bl	8002054 <PCD_WriteEmptyTxFifo>
 8002728:	e7b8      	b.n	800269c <HAL_PCD_IRQHandler+0x2c8>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 800272a:	f8d5 3804 	ldr.w	r3, [r5, #2052]	; 0x804
 800272e:	f023 0301 	bic.w	r3, r3, #1
 8002732:	f8c5 3804 	str.w	r3, [r5, #2052]	; 0x804
      if (hpcd->LPM_State == LPM_L1)
 8002736:	f894 33f4 	ldrb.w	r3, [r4, #1012]	; 0x3f4
 800273a:	2b01      	cmp	r3, #1
 800273c:	d008      	beq.n	8002750 <HAL_PCD_IRQHandler+0x37c>
        HAL_PCD_ResumeCallback(hpcd);
 800273e:	4620      	mov	r0, r4
 8002740:	f003 fbf4 	bl	8005f2c <HAL_PCD_ResumeCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT);
 8002744:	6822      	ldr	r2, [r4, #0]
 8002746:	6953      	ldr	r3, [r2, #20]
 8002748:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 800274c:	6153      	str	r3, [r2, #20]
 800274e:	e68d      	b.n	800246c <HAL_PCD_IRQHandler+0x98>
        hpcd->LPM_State = LPM_L0;
 8002750:	2100      	movs	r1, #0
 8002752:	f884 13f4 	strb.w	r1, [r4, #1012]	; 0x3f4
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L0_ACTIVE);
 8002756:	4620      	mov	r0, r4
 8002758:	f003 fc58 	bl	800600c <HAL_PCDEx_LPM_Callback>
 800275c:	e7f2      	b.n	8002744 <HAL_PCD_IRQHandler+0x370>
        HAL_PCD_SuspendCallback(hpcd);
 800275e:	4620      	mov	r0, r4
 8002760:	f003 fbcc 	bl	8005efc <HAL_PCD_SuspendCallback>
 8002764:	e68e      	b.n	8002484 <HAL_PCD_IRQHandler+0xb0>
        HAL_PCD_SuspendCallback(hpcd);
 8002766:	4620      	mov	r0, r4
 8002768:	f003 fbc8 	bl	8005efc <HAL_PCD_SuspendCallback>
 800276c:	e6ab      	b.n	80024c6 <HAL_PCD_IRQHandler+0xf2>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 800276e:	f505 6800 	add.w	r8, r5, #2048	; 0x800
 8002772:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8002776:	f023 0301 	bic.w	r3, r3, #1
 800277a:	f8c8 3004 	str.w	r3, [r8, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 800277e:	2110      	movs	r1, #16
 8002780:	6820      	ldr	r0, [r4, #0]
 8002782:	f001 f955 	bl	8003a30 <USB_FlushTxFifo>
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8002786:	e01a      	b.n	80027be <HAL_PCD_IRQHandler+0x3ea>
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 8002788:	eb07 1346 	add.w	r3, r7, r6, lsl #5
 800278c:	f64f 317f 	movw	r1, #64383	; 0xfb7f
 8002790:	f8c3 1908 	str.w	r1, [r3, #2312]	; 0x908
        USBx_INEP(i)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8002794:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 8002798:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 800279c:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
        USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
 80027a0:	f8c3 1b08 	str.w	r1, [r3, #2824]	; 0xb08
        USBx_OUTEP(i)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 80027a4:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 80027a8:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 80027ac:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
        USBx_OUTEP(i)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 80027b0:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 80027b4:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 80027b8:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80027bc:	3601      	adds	r6, #1
 80027be:	6863      	ldr	r3, [r4, #4]
 80027c0:	42b3      	cmp	r3, r6
 80027c2:	d8e1      	bhi.n	8002788 <HAL_PCD_IRQHandler+0x3b4>
      USBx_DEVICE->DAINTMSK |= 0x10001U;
 80027c4:	f8d8 301c 	ldr.w	r3, [r8, #28]
 80027c8:	f043 1301 	orr.w	r3, r3, #65537	; 0x10001
 80027cc:	f8c8 301c 	str.w	r3, [r8, #28]
      if (hpcd->Init.use_dedicated_ep1 != 0U)
 80027d0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80027d2:	b1eb      	cbz	r3, 8002810 <HAL_PCD_IRQHandler+0x43c>
        USBx_DEVICE->DOUTEP1MSK |= USB_OTG_DOEPMSK_STUPM |
 80027d4:	f8d8 3084 	ldr.w	r3, [r8, #132]	; 0x84
 80027d8:	f043 030b 	orr.w	r3, r3, #11
 80027dc:	f8c8 3084 	str.w	r3, [r8, #132]	; 0x84
        USBx_DEVICE->DINEP1MSK |= USB_OTG_DIEPMSK_TOM |
 80027e0:	f8d8 3044 	ldr.w	r3, [r8, #68]	; 0x44
 80027e4:	f043 030b 	orr.w	r3, r3, #11
 80027e8:	f8c8 3044 	str.w	r3, [r8, #68]	; 0x44
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 80027ec:	f8d5 3800 	ldr.w	r3, [r5, #2048]	; 0x800
 80027f0:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 80027f4:	f8c5 3800 	str.w	r3, [r5, #2048]	; 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 80027f8:	f504 7271 	add.w	r2, r4, #964	; 0x3c4
 80027fc:	7c21      	ldrb	r1, [r4, #16]
 80027fe:	6820      	ldr	r0, [r4, #0]
 8002800:	f001 fdc2 	bl	8004388 <USB_EP0_OutStart>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBRST);
 8002804:	6822      	ldr	r2, [r4, #0]
 8002806:	6953      	ldr	r3, [r2, #20]
 8002808:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800280c:	6153      	str	r3, [r2, #20]
 800280e:	e661      	b.n	80024d4 <HAL_PCD_IRQHandler+0x100>
        USBx_DEVICE->DOEPMSK |= USB_OTG_DOEPMSK_STUPM |
 8002810:	f8d8 2014 	ldr.w	r2, [r8, #20]
 8002814:	f242 032b 	movw	r3, #8235	; 0x202b
 8002818:	4313      	orrs	r3, r2
 800281a:	f8c8 3014 	str.w	r3, [r8, #20]
        USBx_DEVICE->DIEPMSK |= USB_OTG_DIEPMSK_TOM |
 800281e:	f8d8 3010 	ldr.w	r3, [r8, #16]
 8002822:	f043 030b 	orr.w	r3, r3, #11
 8002826:	f8c8 3010 	str.w	r3, [r8, #16]
 800282a:	e7df      	b.n	80027ec <HAL_PCD_IRQHandler+0x418>
      (void)USB_ActivateSetup(hpcd->Instance);
 800282c:	6820      	ldr	r0, [r4, #0]
 800282e:	f001 fd9b 	bl	8004368 <USB_ActivateSetup>
      hpcd->Init.speed = USB_GetDevSpeed(hpcd->Instance);
 8002832:	6820      	ldr	r0, [r4, #0]
 8002834:	f001 fa12 	bl	8003c5c <USB_GetDevSpeed>
 8002838:	60e0      	str	r0, [r4, #12]
      (void)USB_SetTurnaroundTime(hpcd->Instance,
 800283a:	6825      	ldr	r5, [r4, #0]
 800283c:	f000 fd3a 	bl	80032b4 <HAL_RCC_GetHCLKFreq>
 8002840:	7b22      	ldrb	r2, [r4, #12]
 8002842:	4601      	mov	r1, r0
 8002844:	4628      	mov	r0, r5
 8002846:	f001 f871 	bl	800392c <USB_SetTurnaroundTime>
      HAL_PCD_ResetCallback(hpcd);
 800284a:	4620      	mov	r0, r4
 800284c:	f003 fb3f 	bl	8005ece <HAL_PCD_ResetCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE);
 8002850:	6822      	ldr	r2, [r4, #0]
 8002852:	6953      	ldr	r3, [r2, #20]
 8002854:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8002858:	6153      	str	r3, [r2, #20]
 800285a:	e642      	b.n	80024e2 <HAL_PCD_IRQHandler+0x10e>
      HAL_PCD_SOFCallback(hpcd);
 800285c:	4620      	mov	r0, r4
 800285e:	f003 fb30 	bl	8005ec2 <HAL_PCD_SOFCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SOF);
 8002862:	6822      	ldr	r2, [r4, #0]
 8002864:	6953      	ldr	r3, [r2, #20]
 8002866:	f003 0308 	and.w	r3, r3, #8
 800286a:	6153      	str	r3, [r2, #20]
 800286c:	e640      	b.n	80024f0 <HAL_PCD_IRQHandler+0x11c>
      HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 800286e:	2100      	movs	r1, #0
 8002870:	4620      	mov	r0, r4
 8002872:	f003 fb67 	bl	8005f44 <HAL_PCD_ISOINIncompleteCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR);
 8002876:	6822      	ldr	r2, [r4, #0]
 8002878:	6953      	ldr	r3, [r2, #20]
 800287a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800287e:	6153      	str	r3, [r2, #20]
 8002880:	e63d      	b.n	80024fe <HAL_PCD_IRQHandler+0x12a>
      HAL_PCD_ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
 8002882:	2100      	movs	r1, #0
 8002884:	4620      	mov	r0, r4
 8002886:	f003 fb57 	bl	8005f38 <HAL_PCD_ISOOUTIncompleteCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT);
 800288a:	6822      	ldr	r2, [r4, #0]
 800288c:	6953      	ldr	r3, [r2, #20]
 800288e:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002892:	6153      	str	r3, [r2, #20]
 8002894:	e63a      	b.n	800250c <HAL_PCD_IRQHandler+0x138>
      HAL_PCD_ConnectCallback(hpcd);
 8002896:	4620      	mov	r0, r4
 8002898:	f003 fb5a 	bl	8005f50 <HAL_PCD_ConnectCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT);
 800289c:	6822      	ldr	r2, [r4, #0]
 800289e:	6953      	ldr	r3, [r2, #20]
 80028a0:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 80028a4:	6153      	str	r3, [r2, #20]
 80028a6:	e638      	b.n	800251a <HAL_PCD_IRQHandler+0x146>
        HAL_PCD_DisconnectCallback(hpcd);
 80028a8:	4620      	mov	r0, r4
 80028aa:	f003 fb57 	bl	8005f5c <HAL_PCD_DisconnectCallback>
 80028ae:	e641      	b.n	8002534 <HAL_PCD_IRQHandler+0x160>

080028b0 <HAL_PCD_SetAddress>:
  __HAL_LOCK(hpcd);
 80028b0:	f890 33bc 	ldrb.w	r3, [r0, #956]	; 0x3bc
 80028b4:	2b01      	cmp	r3, #1
 80028b6:	d00d      	beq.n	80028d4 <HAL_PCD_SetAddress+0x24>
{
 80028b8:	b510      	push	{r4, lr}
 80028ba:	4604      	mov	r4, r0
  __HAL_LOCK(hpcd);
 80028bc:	2301      	movs	r3, #1
 80028be:	f880 33bc 	strb.w	r3, [r0, #956]	; 0x3bc
  hpcd->USB_Address = address;
 80028c2:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
  (void)USB_SetDevAddress(hpcd->Instance, address);
 80028c6:	6800      	ldr	r0, [r0, #0]
 80028c8:	f001 fcbc 	bl	8004244 <USB_SetDevAddress>
  __HAL_UNLOCK(hpcd);
 80028cc:	2000      	movs	r0, #0
 80028ce:	f884 03bc 	strb.w	r0, [r4, #956]	; 0x3bc
}
 80028d2:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 80028d4:	2002      	movs	r0, #2
}
 80028d6:	4770      	bx	lr

080028d8 <HAL_PCD_EP_Open>:
{
 80028d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if ((ep_addr & 0x80U) == 0x80U)
 80028da:	f011 0f80 	tst.w	r1, #128	; 0x80
 80028de:	d128      	bne.n	8002932 <HAL_PCD_EP_Open+0x5a>
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 80028e0:	f001 060f 	and.w	r6, r1, #15
 80028e4:	00f5      	lsls	r5, r6, #3
 80028e6:	1baf      	subs	r7, r5, r6
 80028e8:	00bc      	lsls	r4, r7, #2
 80028ea:	4627      	mov	r7, r4
 80028ec:	f504 74fc 	add.w	r4, r4, #504	; 0x1f8
 80028f0:	4404      	add	r4, r0
 80028f2:	3404      	adds	r4, #4
    ep->is_in = 0U;
 80028f4:	463e      	mov	r6, r7
 80028f6:	4406      	add	r6, r0
 80028f8:	2500      	movs	r5, #0
 80028fa:	f886 51fd 	strb.w	r5, [r6, #509]	; 0x1fd
  ep->num = ep_addr & EP_ADDR_MSK;
 80028fe:	f001 010f 	and.w	r1, r1, #15
 8002902:	7021      	strb	r1, [r4, #0]
  ep->maxpacket = ep_mps;
 8002904:	60a2      	str	r2, [r4, #8]
  ep->type = ep_type;
 8002906:	70e3      	strb	r3, [r4, #3]
  if (ep->is_in != 0U)
 8002908:	7862      	ldrb	r2, [r4, #1]
 800290a:	b102      	cbz	r2, 800290e <HAL_PCD_EP_Open+0x36>
    ep->tx_fifo_num = ep->num;
 800290c:	80e1      	strh	r1, [r4, #6]
  if (ep_type == EP_TYPE_BULK)
 800290e:	2b02      	cmp	r3, #2
 8002910:	d01e      	beq.n	8002950 <HAL_PCD_EP_Open+0x78>
  __HAL_LOCK(hpcd);
 8002912:	f890 33bc 	ldrb.w	r3, [r0, #956]	; 0x3bc
 8002916:	2b01      	cmp	r3, #1
 8002918:	d01d      	beq.n	8002956 <HAL_PCD_EP_Open+0x7e>
 800291a:	4605      	mov	r5, r0
 800291c:	2301      	movs	r3, #1
 800291e:	f880 33bc 	strb.w	r3, [r0, #956]	; 0x3bc
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 8002922:	4621      	mov	r1, r4
 8002924:	6800      	ldr	r0, [r0, #0]
 8002926:	f001 f9a9 	bl	8003c7c <USB_ActivateEndpoint>
  __HAL_UNLOCK(hpcd);
 800292a:	2000      	movs	r0, #0
 800292c:	f885 03bc 	strb.w	r0, [r5, #956]	; 0x3bc
}
 8002930:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8002932:	f001 060f 	and.w	r6, r1, #15
 8002936:	00f5      	lsls	r5, r6, #3
 8002938:	1baf      	subs	r7, r5, r6
 800293a:	00bc      	lsls	r4, r7, #2
 800293c:	4627      	mov	r7, r4
 800293e:	3438      	adds	r4, #56	; 0x38
 8002940:	4404      	add	r4, r0
 8002942:	3404      	adds	r4, #4
    ep->is_in = 1U;
 8002944:	463e      	mov	r6, r7
 8002946:	4406      	add	r6, r0
 8002948:	2501      	movs	r5, #1
 800294a:	f886 503d 	strb.w	r5, [r6, #61]	; 0x3d
 800294e:	e7d6      	b.n	80028fe <HAL_PCD_EP_Open+0x26>
    ep->data_pid_start = 0U;
 8002950:	2300      	movs	r3, #0
 8002952:	7123      	strb	r3, [r4, #4]
 8002954:	e7dd      	b.n	8002912 <HAL_PCD_EP_Open+0x3a>
  __HAL_LOCK(hpcd);
 8002956:	2002      	movs	r0, #2
 8002958:	e7ea      	b.n	8002930 <HAL_PCD_EP_Open+0x58>

0800295a <HAL_PCD_EP_Close>:
{
 800295a:	b538      	push	{r3, r4, r5, lr}
  if ((ep_addr & 0x80U) == 0x80U)
 800295c:	f011 0f80 	tst.w	r1, #128	; 0x80
 8002960:	d121      	bne.n	80029a6 <HAL_PCD_EP_Close+0x4c>
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8002962:	f001 050f 	and.w	r5, r1, #15
 8002966:	00ea      	lsls	r2, r5, #3
 8002968:	1b54      	subs	r4, r2, r5
 800296a:	00a3      	lsls	r3, r4, #2
 800296c:	461c      	mov	r4, r3
 800296e:	f503 73fc 	add.w	r3, r3, #504	; 0x1f8
 8002972:	4403      	add	r3, r0
 8002974:	3304      	adds	r3, #4
    ep->is_in = 0U;
 8002976:	4625      	mov	r5, r4
 8002978:	4405      	add	r5, r0
 800297a:	2200      	movs	r2, #0
 800297c:	f885 21fd 	strb.w	r2, [r5, #509]	; 0x1fd
  ep->num   = ep_addr & EP_ADDR_MSK;
 8002980:	f001 010f 	and.w	r1, r1, #15
 8002984:	7019      	strb	r1, [r3, #0]
  __HAL_LOCK(hpcd);
 8002986:	f890 23bc 	ldrb.w	r2, [r0, #956]	; 0x3bc
 800298a:	2a01      	cmp	r2, #1
 800298c:	d01a      	beq.n	80029c4 <HAL_PCD_EP_Close+0x6a>
 800298e:	4604      	mov	r4, r0
 8002990:	2201      	movs	r2, #1
 8002992:	f880 23bc 	strb.w	r2, [r0, #956]	; 0x3bc
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 8002996:	4619      	mov	r1, r3
 8002998:	6800      	ldr	r0, [r0, #0]
 800299a:	f001 f9b7 	bl	8003d0c <USB_DeactivateEndpoint>
  __HAL_UNLOCK(hpcd);
 800299e:	2000      	movs	r0, #0
 80029a0:	f884 03bc 	strb.w	r0, [r4, #956]	; 0x3bc
}
 80029a4:	bd38      	pop	{r3, r4, r5, pc}
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80029a6:	f001 040f 	and.w	r4, r1, #15
 80029aa:	00e2      	lsls	r2, r4, #3
 80029ac:	1b15      	subs	r5, r2, r4
 80029ae:	00ab      	lsls	r3, r5, #2
 80029b0:	461d      	mov	r5, r3
 80029b2:	3338      	adds	r3, #56	; 0x38
 80029b4:	4403      	add	r3, r0
 80029b6:	3304      	adds	r3, #4
    ep->is_in = 1U;
 80029b8:	462c      	mov	r4, r5
 80029ba:	4404      	add	r4, r0
 80029bc:	2201      	movs	r2, #1
 80029be:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 80029c2:	e7dd      	b.n	8002980 <HAL_PCD_EP_Close+0x26>
  __HAL_LOCK(hpcd);
 80029c4:	2002      	movs	r0, #2
 80029c6:	e7ed      	b.n	80029a4 <HAL_PCD_EP_Close+0x4a>

080029c8 <HAL_PCD_EP_Receive>:
{
 80029c8:	b570      	push	{r4, r5, r6, lr}
 80029ca:	f001 050f 	and.w	r5, r1, #15
  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 80029ce:	00ee      	lsls	r6, r5, #3
 80029d0:	1b71      	subs	r1, r6, r5
 80029d2:	008c      	lsls	r4, r1, #2
 80029d4:	f504 74fc 	add.w	r4, r4, #504	; 0x1f8
 80029d8:	4404      	add	r4, r0
 80029da:	1d21      	adds	r1, r4, #4
  ep->xfer_buff = pBuf;
 80029dc:	1b76      	subs	r6, r6, r5
 80029de:	00b4      	lsls	r4, r6, #2
 80029e0:	4404      	add	r4, r0
 80029e2:	f8c4 2208 	str.w	r2, [r4, #520]	; 0x208
  ep->xfer_len = len;
 80029e6:	f8c4 3210 	str.w	r3, [r4, #528]	; 0x210
  ep->xfer_count = 0U;
 80029ea:	2300      	movs	r3, #0
 80029ec:	f8c4 3214 	str.w	r3, [r4, #532]	; 0x214
  ep->is_in = 0U;
 80029f0:	f884 31fd 	strb.w	r3, [r4, #509]	; 0x1fd
  ep->num = ep_addr & EP_ADDR_MSK;
 80029f4:	f884 51fc 	strb.w	r5, [r4, #508]	; 0x1fc
  if (hpcd->Init.dma_enable == 1U)
 80029f8:	6903      	ldr	r3, [r0, #16]
 80029fa:	2b01      	cmp	r3, #1
 80029fc:	d006      	beq.n	8002a0c <HAL_PCD_EP_Receive+0x44>
  if ((ep_addr & EP_ADDR_MSK) == 0U)
 80029fe:	b165      	cbz	r5, 8002a1a <HAL_PCD_EP_Receive+0x52>
    (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8002a00:	b2da      	uxtb	r2, r3
 8002a02:	6800      	ldr	r0, [r0, #0]
 8002a04:	f001 fa90 	bl	8003f28 <USB_EPStartXfer>
}
 8002a08:	2000      	movs	r0, #0
 8002a0a:	bd70      	pop	{r4, r5, r6, pc}
    ep->dma_addr = (uint32_t)pBuf;
 8002a0c:	ebc5 06c5 	rsb	r6, r5, r5, lsl #3
 8002a10:	00b4      	lsls	r4, r6, #2
 8002a12:	4404      	add	r4, r0
 8002a14:	f8c4 220c 	str.w	r2, [r4, #524]	; 0x20c
 8002a18:	e7f1      	b.n	80029fe <HAL_PCD_EP_Receive+0x36>
    (void)USB_EP0StartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8002a1a:	b2da      	uxtb	r2, r3
 8002a1c:	6800      	ldr	r0, [r0, #0]
 8002a1e:	f001 f9e3 	bl	8003de8 <USB_EP0StartXfer>
 8002a22:	e7f1      	b.n	8002a08 <HAL_PCD_EP_Receive+0x40>

08002a24 <HAL_PCD_EP_GetRxCount>:
  return hpcd->OUT_ep[ep_addr & EP_ADDR_MSK].xfer_count;
 8002a24:	f001 010f 	and.w	r1, r1, #15
 8002a28:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 8002a2c:	008b      	lsls	r3, r1, #2
 8002a2e:	4418      	add	r0, r3
}
 8002a30:	f8d0 0214 	ldr.w	r0, [r0, #532]	; 0x214
 8002a34:	4770      	bx	lr

08002a36 <HAL_PCD_EP_Transmit>:
{
 8002a36:	b570      	push	{r4, r5, r6, lr}
 8002a38:	f001 050f 	and.w	r5, r1, #15
  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8002a3c:	00ee      	lsls	r6, r5, #3
 8002a3e:	1b71      	subs	r1, r6, r5
 8002a40:	008c      	lsls	r4, r1, #2
 8002a42:	3438      	adds	r4, #56	; 0x38
 8002a44:	4404      	add	r4, r0
 8002a46:	1d21      	adds	r1, r4, #4
  ep->xfer_buff = pBuf;
 8002a48:	1b76      	subs	r6, r6, r5
 8002a4a:	00b4      	lsls	r4, r6, #2
 8002a4c:	4404      	add	r4, r0
 8002a4e:	64a2      	str	r2, [r4, #72]	; 0x48
  ep->xfer_len = len;
 8002a50:	6523      	str	r3, [r4, #80]	; 0x50
  ep->xfer_count = 0U;
 8002a52:	2300      	movs	r3, #0
 8002a54:	6563      	str	r3, [r4, #84]	; 0x54
  ep->is_in = 1U;
 8002a56:	2301      	movs	r3, #1
 8002a58:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  ep->num = ep_addr & EP_ADDR_MSK;
 8002a5c:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  if (hpcd->Init.dma_enable == 1U)
 8002a60:	6903      	ldr	r3, [r0, #16]
 8002a62:	2b01      	cmp	r3, #1
 8002a64:	d006      	beq.n	8002a74 <HAL_PCD_EP_Transmit+0x3e>
  if ((ep_addr & EP_ADDR_MSK) == 0U)
 8002a66:	b15d      	cbz	r5, 8002a80 <HAL_PCD_EP_Transmit+0x4a>
    (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8002a68:	b2da      	uxtb	r2, r3
 8002a6a:	6800      	ldr	r0, [r0, #0]
 8002a6c:	f001 fa5c 	bl	8003f28 <USB_EPStartXfer>
}
 8002a70:	2000      	movs	r0, #0
 8002a72:	bd70      	pop	{r4, r5, r6, pc}
    ep->dma_addr = (uint32_t)pBuf;
 8002a74:	ebc5 06c5 	rsb	r6, r5, r5, lsl #3
 8002a78:	00b4      	lsls	r4, r6, #2
 8002a7a:	4404      	add	r4, r0
 8002a7c:	64e2      	str	r2, [r4, #76]	; 0x4c
 8002a7e:	e7f2      	b.n	8002a66 <HAL_PCD_EP_Transmit+0x30>
    (void)USB_EP0StartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8002a80:	b2da      	uxtb	r2, r3
 8002a82:	6800      	ldr	r0, [r0, #0]
 8002a84:	f001 f9b0 	bl	8003de8 <USB_EP0StartXfer>
 8002a88:	e7f2      	b.n	8002a70 <HAL_PCD_EP_Transmit+0x3a>

08002a8a <HAL_PCD_EP_SetStall>:
{
 8002a8a:	b538      	push	{r3, r4, r5, lr}
 8002a8c:	f001 050f 	and.w	r5, r1, #15
  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 8002a90:	6843      	ldr	r3, [r0, #4]
 8002a92:	429d      	cmp	r5, r3
 8002a94:	d836      	bhi.n	8002b04 <HAL_PCD_EP_SetStall+0x7a>
  if ((0x80U & ep_addr) == 0x80U)
 8002a96:	f011 0f80 	tst.w	r1, #128	; 0x80
 8002a9a:	d120      	bne.n	8002ade <HAL_PCD_EP_SetStall+0x54>
    ep = &hpcd->OUT_ep[ep_addr];
 8002a9c:	00ca      	lsls	r2, r1, #3
 8002a9e:	1a54      	subs	r4, r2, r1
 8002aa0:	00a3      	lsls	r3, r4, #2
 8002aa2:	461c      	mov	r4, r3
 8002aa4:	f503 73fc 	add.w	r3, r3, #504	; 0x1f8
 8002aa8:	4403      	add	r3, r0
 8002aaa:	3304      	adds	r3, #4
    ep->is_in = 0U;
 8002aac:	4622      	mov	r2, r4
 8002aae:	4402      	add	r2, r0
 8002ab0:	2100      	movs	r1, #0
 8002ab2:	f882 11fd 	strb.w	r1, [r2, #509]	; 0x1fd
  ep->is_stall = 1U;
 8002ab6:	2201      	movs	r2, #1
 8002ab8:	709a      	strb	r2, [r3, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 8002aba:	701d      	strb	r5, [r3, #0]
  __HAL_LOCK(hpcd);
 8002abc:	f890 23bc 	ldrb.w	r2, [r0, #956]	; 0x3bc
 8002ac0:	2a01      	cmp	r2, #1
 8002ac2:	d021      	beq.n	8002b08 <HAL_PCD_EP_SetStall+0x7e>
 8002ac4:	4604      	mov	r4, r0
 8002ac6:	2201      	movs	r2, #1
 8002ac8:	f880 23bc 	strb.w	r2, [r0, #956]	; 0x3bc
  (void)USB_EPSetStall(hpcd->Instance, ep);
 8002acc:	4619      	mov	r1, r3
 8002ace:	6800      	ldr	r0, [r0, #0]
 8002ad0:	f001 fb5d 	bl	800418e <USB_EPSetStall>
  if ((ep_addr & EP_ADDR_MSK) == 0U)
 8002ad4:	b17d      	cbz	r5, 8002af6 <HAL_PCD_EP_SetStall+0x6c>
  __HAL_UNLOCK(hpcd);
 8002ad6:	2000      	movs	r0, #0
 8002ad8:	f884 03bc 	strb.w	r0, [r4, #956]	; 0x3bc
  return HAL_OK;
 8002adc:	e013      	b.n	8002b06 <HAL_PCD_EP_SetStall+0x7c>
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8002ade:	00ea      	lsls	r2, r5, #3
 8002ae0:	1b51      	subs	r1, r2, r5
 8002ae2:	008b      	lsls	r3, r1, #2
 8002ae4:	4619      	mov	r1, r3
 8002ae6:	3338      	adds	r3, #56	; 0x38
 8002ae8:	4403      	add	r3, r0
 8002aea:	3304      	adds	r3, #4
    ep->is_in = 1U;
 8002aec:	4401      	add	r1, r0
 8002aee:	2201      	movs	r2, #1
 8002af0:	f881 203d 	strb.w	r2, [r1, #61]	; 0x3d
 8002af4:	e7df      	b.n	8002ab6 <HAL_PCD_EP_SetStall+0x2c>
    (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable, (uint8_t *)hpcd->Setup);
 8002af6:	f504 7271 	add.w	r2, r4, #964	; 0x3c4
 8002afa:	7c21      	ldrb	r1, [r4, #16]
 8002afc:	6820      	ldr	r0, [r4, #0]
 8002afe:	f001 fc43 	bl	8004388 <USB_EP0_OutStart>
 8002b02:	e7e8      	b.n	8002ad6 <HAL_PCD_EP_SetStall+0x4c>
    return HAL_ERROR;
 8002b04:	2001      	movs	r0, #1
}
 8002b06:	bd38      	pop	{r3, r4, r5, pc}
  __HAL_LOCK(hpcd);
 8002b08:	2002      	movs	r0, #2
 8002b0a:	e7fc      	b.n	8002b06 <HAL_PCD_EP_SetStall+0x7c>

08002b0c <HAL_PCD_EP_ClrStall>:
{
 8002b0c:	b510      	push	{r4, lr}
 8002b0e:	f001 040f 	and.w	r4, r1, #15
  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 8002b12:	6843      	ldr	r3, [r0, #4]
 8002b14:	429c      	cmp	r4, r3
 8002b16:	d82c      	bhi.n	8002b72 <HAL_PCD_EP_ClrStall+0x66>
  if ((0x80U & ep_addr) == 0x80U)
 8002b18:	f011 0f80 	tst.w	r1, #128	; 0x80
 8002b1c:	d11d      	bne.n	8002b5a <HAL_PCD_EP_ClrStall+0x4e>
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8002b1e:	00e3      	lsls	r3, r4, #3
 8002b20:	1b1a      	subs	r2, r3, r4
 8002b22:	0091      	lsls	r1, r2, #2
 8002b24:	460a      	mov	r2, r1
 8002b26:	f501 71fc 	add.w	r1, r1, #504	; 0x1f8
 8002b2a:	4401      	add	r1, r0
 8002b2c:	3104      	adds	r1, #4
    ep->is_in = 0U;
 8002b2e:	4402      	add	r2, r0
 8002b30:	2300      	movs	r3, #0
 8002b32:	f882 31fd 	strb.w	r3, [r2, #509]	; 0x1fd
  ep->is_stall = 0U;
 8002b36:	2300      	movs	r3, #0
 8002b38:	708b      	strb	r3, [r1, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 8002b3a:	700c      	strb	r4, [r1, #0]
  __HAL_LOCK(hpcd);
 8002b3c:	f890 33bc 	ldrb.w	r3, [r0, #956]	; 0x3bc
 8002b40:	2b01      	cmp	r3, #1
 8002b42:	d018      	beq.n	8002b76 <HAL_PCD_EP_ClrStall+0x6a>
 8002b44:	4604      	mov	r4, r0
 8002b46:	2301      	movs	r3, #1
 8002b48:	f880 33bc 	strb.w	r3, [r0, #956]	; 0x3bc
  (void)USB_EPClearStall(hpcd->Instance, ep);
 8002b4c:	6800      	ldr	r0, [r0, #0]
 8002b4e:	f001 fb4b 	bl	80041e8 <USB_EPClearStall>
  __HAL_UNLOCK(hpcd);
 8002b52:	2000      	movs	r0, #0
 8002b54:	f884 03bc 	strb.w	r0, [r4, #956]	; 0x3bc
  return HAL_OK;
 8002b58:	e00c      	b.n	8002b74 <HAL_PCD_EP_ClrStall+0x68>
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8002b5a:	00e3      	lsls	r3, r4, #3
 8002b5c:	1b1a      	subs	r2, r3, r4
 8002b5e:	0091      	lsls	r1, r2, #2
 8002b60:	460a      	mov	r2, r1
 8002b62:	3138      	adds	r1, #56	; 0x38
 8002b64:	4401      	add	r1, r0
 8002b66:	3104      	adds	r1, #4
    ep->is_in = 1U;
 8002b68:	4402      	add	r2, r0
 8002b6a:	2301      	movs	r3, #1
 8002b6c:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
 8002b70:	e7e1      	b.n	8002b36 <HAL_PCD_EP_ClrStall+0x2a>
    return HAL_ERROR;
 8002b72:	2001      	movs	r0, #1
}
 8002b74:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 8002b76:	2002      	movs	r0, #2
 8002b78:	e7fc      	b.n	8002b74 <HAL_PCD_EP_ClrStall+0x68>

08002b7a <HAL_PCDEx_SetTxFiFo>:
  * @param  fifo The number of Tx fifo
  * @param  size Fifo size
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetTxFiFo(PCD_HandleTypeDef *hpcd, uint8_t fifo, uint16_t size)
{
 8002b7a:	b430      	push	{r4, r5}
         --> Txn should be configured with the minimum space of 16 words
     The FIFO is used optimally when used TxFIFOs are allocated in the top
         of the FIFO.Ex: use EP1 and EP2 as IN instead of EP1 and EP3 as IN ones.
     When DMA is used 3n * FIFO locations should be reserved for internal DMA registers */

  Tx_Offset = hpcd->Instance->GRXFSIZ;
 8002b7c:	6804      	ldr	r4, [r0, #0]
 8002b7e:	6a60      	ldr	r0, [r4, #36]	; 0x24

  if (fifo == 0U)
 8002b80:	b129      	cbz	r1, 8002b8e <HAL_PCDEx_SetTxFiFo+0x14>
 8002b82:	460d      	mov	r5, r1
  {
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
  }
  else
  {
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 8002b84:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8002b86:	eb00 4013 	add.w	r0, r0, r3, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 8002b8a:	2300      	movs	r3, #0
 8002b8c:	e00c      	b.n	8002ba8 <HAL_PCDEx_SetTxFiFo+0x2e>
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 8002b8e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8002b92:	62a0      	str	r0, [r4, #40]	; 0x28
 8002b94:	e012      	b.n	8002bbc <HAL_PCDEx_SetTxFiFo+0x42>
    {
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
 8002b96:	f103 0140 	add.w	r1, r3, #64	; 0x40
 8002b9a:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8002b9e:	6849      	ldr	r1, [r1, #4]
 8002ba0:	eb00 4011 	add.w	r0, r0, r1, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 8002ba4:	3301      	adds	r3, #1
 8002ba6:	b2db      	uxtb	r3, r3
 8002ba8:	1e69      	subs	r1, r5, #1
 8002baa:	428b      	cmp	r3, r1
 8002bac:	d3f3      	bcc.n	8002b96 <HAL_PCDEx_SetTxFiFo+0x1c>
    }

    /* Multiply Tx_Size by 2 to get higher performance */
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
 8002bae:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8002bb2:	f105 013f 	add.w	r1, r5, #63	; 0x3f
 8002bb6:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8002bba:	6048      	str	r0, [r1, #4]
  }

  return HAL_OK;
}
 8002bbc:	2000      	movs	r0, #0
 8002bbe:	bc30      	pop	{r4, r5}
 8002bc0:	4770      	bx	lr

08002bc2 <HAL_PCDEx_SetRxFiFo>:
  * @param  size Size of Rx fifo
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetRxFiFo(PCD_HandleTypeDef *hpcd, uint16_t size)
{
  hpcd->Instance->GRXFSIZ = size;
 8002bc2:	6803      	ldr	r3, [r0, #0]
 8002bc4:	6259      	str	r1, [r3, #36]	; 0x24

  return HAL_OK;
}
 8002bc6:	2000      	movs	r0, #0
 8002bc8:	4770      	bx	lr
	...

08002bcc <HAL_PCDEx_ActivateLPM>:
  * @brief  Activate LPM feature.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_ActivateLPM(PCD_HandleTypeDef *hpcd)
{
 8002bcc:	4602      	mov	r2, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8002bce:	6803      	ldr	r3, [r0, #0]

  hpcd->lpm_active = 1U;
 8002bd0:	2101      	movs	r1, #1
 8002bd2:	f8c0 13fc 	str.w	r1, [r0, #1020]	; 0x3fc
  hpcd->LPM_State = LPM_L0;
 8002bd6:	2000      	movs	r0, #0
 8002bd8:	f882 03f4 	strb.w	r0, [r2, #1012]	; 0x3f4
  USBx->GINTMSK |= USB_OTG_GINTMSK_LPMINTM;
 8002bdc:	699a      	ldr	r2, [r3, #24]
 8002bde:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8002be2:	619a      	str	r2, [r3, #24]
  USBx->GLPMCFG |= (USB_OTG_GLPMCFG_LPMEN | USB_OTG_GLPMCFG_LPMACK | USB_OTG_GLPMCFG_ENBESL);
 8002be4:	6d59      	ldr	r1, [r3, #84]	; 0x54
 8002be6:	4a02      	ldr	r2, [pc, #8]	; (8002bf0 <HAL_PCDEx_ActivateLPM+0x24>)
 8002be8:	430a      	orrs	r2, r1
 8002bea:	655a      	str	r2, [r3, #84]	; 0x54

  return HAL_OK;
}
 8002bec:	4770      	bx	lr
 8002bee:	bf00      	nop
 8002bf0:	10000003 	.word	0x10000003

08002bf4 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8002bf4:	b510      	push	{r4, lr}
 8002bf6:	b082      	sub	sp, #8
  uint32_t tickstart = 0;

  __HAL_RCC_PWR_CLK_ENABLE();
 8002bf8:	4b1b      	ldr	r3, [pc, #108]	; (8002c68 <HAL_PWREx_EnableOverDrive+0x74>)
 8002bfa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002bfc:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8002c00:	641a      	str	r2, [r3, #64]	; 0x40
 8002c02:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c04:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002c08:	9301      	str	r3, [sp, #4]
 8002c0a:	9b01      	ldr	r3, [sp, #4]
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 8002c0c:	4a17      	ldr	r2, [pc, #92]	; (8002c6c <HAL_PWREx_EnableOverDrive+0x78>)
 8002c0e:	6813      	ldr	r3, [r2, #0]
 8002c10:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002c14:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8002c16:	f7fe fcd3 	bl	80015c0 <HAL_GetTick>
 8002c1a:	4604      	mov	r4, r0

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8002c1c:	4b13      	ldr	r3, [pc, #76]	; (8002c6c <HAL_PWREx_EnableOverDrive+0x78>)
 8002c1e:	685b      	ldr	r3, [r3, #4]
 8002c20:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8002c24:	d108      	bne.n	8002c38 <HAL_PWREx_EnableOverDrive+0x44>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8002c26:	f7fe fccb 	bl	80015c0 <HAL_GetTick>
 8002c2a:	1b00      	subs	r0, r0, r4
 8002c2c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8002c30:	d9f4      	bls.n	8002c1c <HAL_PWREx_EnableOverDrive+0x28>
    {
      return HAL_TIMEOUT;
 8002c32:	2003      	movs	r0, #3
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
}
 8002c34:	b002      	add	sp, #8
 8002c36:	bd10      	pop	{r4, pc}
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8002c38:	4a0c      	ldr	r2, [pc, #48]	; (8002c6c <HAL_PWREx_EnableOverDrive+0x78>)
 8002c3a:	6813      	ldr	r3, [r2, #0]
 8002c3c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002c40:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
 8002c42:	f7fe fcbd 	bl	80015c0 <HAL_GetTick>
 8002c46:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8002c48:	4b08      	ldr	r3, [pc, #32]	; (8002c6c <HAL_PWREx_EnableOverDrive+0x78>)
 8002c4a:	685b      	ldr	r3, [r3, #4]
 8002c4c:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8002c50:	d107      	bne.n	8002c62 <HAL_PWREx_EnableOverDrive+0x6e>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8002c52:	f7fe fcb5 	bl	80015c0 <HAL_GetTick>
 8002c56:	1b00      	subs	r0, r0, r4
 8002c58:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8002c5c:	d9f4      	bls.n	8002c48 <HAL_PWREx_EnableOverDrive+0x54>
      return HAL_TIMEOUT;
 8002c5e:	2003      	movs	r0, #3
 8002c60:	e7e8      	b.n	8002c34 <HAL_PWREx_EnableOverDrive+0x40>
  return HAL_OK;
 8002c62:	2000      	movs	r0, #0
 8002c64:	e7e6      	b.n	8002c34 <HAL_PWREx_EnableOverDrive+0x40>
 8002c66:	bf00      	nop
 8002c68:	40023800 	.word	0x40023800
 8002c6c:	40007000 	.word	0x40007000

08002c70 <HAL_RCC_OscConfig>:
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8002c70:	2800      	cmp	r0, #0
 8002c72:	f000 8209 	beq.w	8003088 <HAL_RCC_OscConfig+0x418>
{
 8002c76:	b570      	push	{r4, r5, r6, lr}
 8002c78:	b082      	sub	sp, #8
 8002c7a:	4604      	mov	r4, r0

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8002c7c:	6803      	ldr	r3, [r0, #0]
 8002c7e:	f013 0f01 	tst.w	r3, #1
 8002c82:	d029      	beq.n	8002cd8 <HAL_RCC_OscConfig+0x68>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL, It can not be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8002c84:	4ba2      	ldr	r3, [pc, #648]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002c86:	689b      	ldr	r3, [r3, #8]
 8002c88:	f003 030c 	and.w	r3, r3, #12
 8002c8c:	2b04      	cmp	r3, #4
 8002c8e:	d01a      	beq.n	8002cc6 <HAL_RCC_OscConfig+0x56>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8002c90:	4b9f      	ldr	r3, [pc, #636]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002c92:	689b      	ldr	r3, [r3, #8]
 8002c94:	f003 030c 	and.w	r3, r3, #12
 8002c98:	2b08      	cmp	r3, #8
 8002c9a:	d00f      	beq.n	8002cbc <HAL_RCC_OscConfig+0x4c>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002c9c:	6863      	ldr	r3, [r4, #4]
 8002c9e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002ca2:	d040      	beq.n	8002d26 <HAL_RCC_OscConfig+0xb6>
 8002ca4:	2b00      	cmp	r3, #0
 8002ca6:	d154      	bne.n	8002d52 <HAL_RCC_OscConfig+0xe2>
 8002ca8:	4b99      	ldr	r3, [pc, #612]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002caa:	681a      	ldr	r2, [r3, #0]
 8002cac:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8002cb0:	601a      	str	r2, [r3, #0]
 8002cb2:	681a      	ldr	r2, [r3, #0]
 8002cb4:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8002cb8:	601a      	str	r2, [r3, #0]
 8002cba:	e039      	b.n	8002d30 <HAL_RCC_OscConfig+0xc0>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8002cbc:	4b94      	ldr	r3, [pc, #592]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002cbe:	685b      	ldr	r3, [r3, #4]
 8002cc0:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 8002cc4:	d0ea      	beq.n	8002c9c <HAL_RCC_OscConfig+0x2c>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002cc6:	4b92      	ldr	r3, [pc, #584]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002cc8:	681b      	ldr	r3, [r3, #0]
 8002cca:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8002cce:	d003      	beq.n	8002cd8 <HAL_RCC_OscConfig+0x68>
 8002cd0:	6863      	ldr	r3, [r4, #4]
 8002cd2:	2b00      	cmp	r3, #0
 8002cd4:	f000 81da 	beq.w	800308c <HAL_RCC_OscConfig+0x41c>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8002cd8:	6823      	ldr	r3, [r4, #0]
 8002cda:	f013 0f02 	tst.w	r3, #2
 8002cde:	d075      	beq.n	8002dcc <HAL_RCC_OscConfig+0x15c>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8002ce0:	4b8b      	ldr	r3, [pc, #556]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002ce2:	689b      	ldr	r3, [r3, #8]
 8002ce4:	f013 0f0c 	tst.w	r3, #12
 8002ce8:	d05e      	beq.n	8002da8 <HAL_RCC_OscConfig+0x138>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8002cea:	4b89      	ldr	r3, [pc, #548]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002cec:	689b      	ldr	r3, [r3, #8]
 8002cee:	f003 030c 	and.w	r3, r3, #12
 8002cf2:	2b08      	cmp	r3, #8
 8002cf4:	d053      	beq.n	8002d9e <HAL_RCC_OscConfig+0x12e>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8002cf6:	68e3      	ldr	r3, [r4, #12]
 8002cf8:	2b00      	cmp	r3, #0
 8002cfa:	f000 808a 	beq.w	8002e12 <HAL_RCC_OscConfig+0x1a2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8002cfe:	4a84      	ldr	r2, [pc, #528]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002d00:	6813      	ldr	r3, [r2, #0]
 8002d02:	f043 0301 	orr.w	r3, r3, #1
 8002d06:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002d08:	f7fe fc5a 	bl	80015c0 <HAL_GetTick>
 8002d0c:	4605      	mov	r5, r0

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002d0e:	4b80      	ldr	r3, [pc, #512]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002d10:	681b      	ldr	r3, [r3, #0]
 8002d12:	f013 0f02 	tst.w	r3, #2
 8002d16:	d173      	bne.n	8002e00 <HAL_RCC_OscConfig+0x190>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8002d18:	f7fe fc52 	bl	80015c0 <HAL_GetTick>
 8002d1c:	1b40      	subs	r0, r0, r5
 8002d1e:	2802      	cmp	r0, #2
 8002d20:	d9f5      	bls.n	8002d0e <HAL_RCC_OscConfig+0x9e>
          {
            return HAL_TIMEOUT;
 8002d22:	2003      	movs	r0, #3
 8002d24:	e1b5      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002d26:	4a7a      	ldr	r2, [pc, #488]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002d28:	6813      	ldr	r3, [r2, #0]
 8002d2a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002d2e:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8002d30:	6863      	ldr	r3, [r4, #4]
 8002d32:	b32b      	cbz	r3, 8002d80 <HAL_RCC_OscConfig+0x110>
        tickstart = HAL_GetTick();
 8002d34:	f7fe fc44 	bl	80015c0 <HAL_GetTick>
 8002d38:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002d3a:	4b75      	ldr	r3, [pc, #468]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002d3c:	681b      	ldr	r3, [r3, #0]
 8002d3e:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8002d42:	d1c9      	bne.n	8002cd8 <HAL_RCC_OscConfig+0x68>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8002d44:	f7fe fc3c 	bl	80015c0 <HAL_GetTick>
 8002d48:	1b40      	subs	r0, r0, r5
 8002d4a:	2864      	cmp	r0, #100	; 0x64
 8002d4c:	d9f5      	bls.n	8002d3a <HAL_RCC_OscConfig+0xca>
            return HAL_TIMEOUT;
 8002d4e:	2003      	movs	r0, #3
 8002d50:	e19f      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002d52:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8002d56:	d009      	beq.n	8002d6c <HAL_RCC_OscConfig+0xfc>
 8002d58:	4b6d      	ldr	r3, [pc, #436]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002d5a:	681a      	ldr	r2, [r3, #0]
 8002d5c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8002d60:	601a      	str	r2, [r3, #0]
 8002d62:	681a      	ldr	r2, [r3, #0]
 8002d64:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8002d68:	601a      	str	r2, [r3, #0]
 8002d6a:	e7e1      	b.n	8002d30 <HAL_RCC_OscConfig+0xc0>
 8002d6c:	4b68      	ldr	r3, [pc, #416]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002d6e:	681a      	ldr	r2, [r3, #0]
 8002d70:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8002d74:	601a      	str	r2, [r3, #0]
 8002d76:	681a      	ldr	r2, [r3, #0]
 8002d78:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8002d7c:	601a      	str	r2, [r3, #0]
 8002d7e:	e7d7      	b.n	8002d30 <HAL_RCC_OscConfig+0xc0>
        tickstart = HAL_GetTick();
 8002d80:	f7fe fc1e 	bl	80015c0 <HAL_GetTick>
 8002d84:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8002d86:	4b62      	ldr	r3, [pc, #392]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002d88:	681b      	ldr	r3, [r3, #0]
 8002d8a:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8002d8e:	d0a3      	beq.n	8002cd8 <HAL_RCC_OscConfig+0x68>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8002d90:	f7fe fc16 	bl	80015c0 <HAL_GetTick>
 8002d94:	1b40      	subs	r0, r0, r5
 8002d96:	2864      	cmp	r0, #100	; 0x64
 8002d98:	d9f5      	bls.n	8002d86 <HAL_RCC_OscConfig+0x116>
            return HAL_TIMEOUT;
 8002d9a:	2003      	movs	r0, #3
 8002d9c:	e179      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8002d9e:	4b5c      	ldr	r3, [pc, #368]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002da0:	685b      	ldr	r3, [r3, #4]
 8002da2:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 8002da6:	d1a6      	bne.n	8002cf6 <HAL_RCC_OscConfig+0x86>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8002da8:	4b59      	ldr	r3, [pc, #356]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002daa:	681b      	ldr	r3, [r3, #0]
 8002dac:	f013 0f02 	tst.w	r3, #2
 8002db0:	d004      	beq.n	8002dbc <HAL_RCC_OscConfig+0x14c>
 8002db2:	68e3      	ldr	r3, [r4, #12]
 8002db4:	2b01      	cmp	r3, #1
 8002db6:	d001      	beq.n	8002dbc <HAL_RCC_OscConfig+0x14c>
        return HAL_ERROR;
 8002db8:	2001      	movs	r0, #1
 8002dba:	e16a      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002dbc:	4a54      	ldr	r2, [pc, #336]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002dbe:	6813      	ldr	r3, [r2, #0]
 8002dc0:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8002dc4:	6921      	ldr	r1, [r4, #16]
 8002dc6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8002dca:	6013      	str	r3, [r2, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8002dcc:	6823      	ldr	r3, [r4, #0]
 8002dce:	f013 0f08 	tst.w	r3, #8
 8002dd2:	d046      	beq.n	8002e62 <HAL_RCC_OscConfig+0x1f2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8002dd4:	6963      	ldr	r3, [r4, #20]
 8002dd6:	b383      	cbz	r3, 8002e3a <HAL_RCC_OscConfig+0x1ca>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8002dd8:	4a4d      	ldr	r2, [pc, #308]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002dda:	6f53      	ldr	r3, [r2, #116]	; 0x74
 8002ddc:	f043 0301 	orr.w	r3, r3, #1
 8002de0:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002de2:	f7fe fbed 	bl	80015c0 <HAL_GetTick>
 8002de6:	4605      	mov	r5, r0

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8002de8:	4b49      	ldr	r3, [pc, #292]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002dea:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002dec:	f013 0f02 	tst.w	r3, #2
 8002df0:	d137      	bne.n	8002e62 <HAL_RCC_OscConfig+0x1f2>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8002df2:	f7fe fbe5 	bl	80015c0 <HAL_GetTick>
 8002df6:	1b40      	subs	r0, r0, r5
 8002df8:	2802      	cmp	r0, #2
 8002dfa:	d9f5      	bls.n	8002de8 <HAL_RCC_OscConfig+0x178>
        {
          return HAL_TIMEOUT;
 8002dfc:	2003      	movs	r0, #3
 8002dfe:	e148      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002e00:	4a43      	ldr	r2, [pc, #268]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002e02:	6813      	ldr	r3, [r2, #0]
 8002e04:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8002e08:	6921      	ldr	r1, [r4, #16]
 8002e0a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8002e0e:	6013      	str	r3, [r2, #0]
 8002e10:	e7dc      	b.n	8002dcc <HAL_RCC_OscConfig+0x15c>
        __HAL_RCC_HSI_DISABLE();
 8002e12:	4a3f      	ldr	r2, [pc, #252]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002e14:	6813      	ldr	r3, [r2, #0]
 8002e16:	f023 0301 	bic.w	r3, r3, #1
 8002e1a:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 8002e1c:	f7fe fbd0 	bl	80015c0 <HAL_GetTick>
 8002e20:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002e22:	4b3b      	ldr	r3, [pc, #236]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002e24:	681b      	ldr	r3, [r3, #0]
 8002e26:	f013 0f02 	tst.w	r3, #2
 8002e2a:	d0cf      	beq.n	8002dcc <HAL_RCC_OscConfig+0x15c>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8002e2c:	f7fe fbc8 	bl	80015c0 <HAL_GetTick>
 8002e30:	1b40      	subs	r0, r0, r5
 8002e32:	2802      	cmp	r0, #2
 8002e34:	d9f5      	bls.n	8002e22 <HAL_RCC_OscConfig+0x1b2>
            return HAL_TIMEOUT;
 8002e36:	2003      	movs	r0, #3
 8002e38:	e12b      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8002e3a:	4a35      	ldr	r2, [pc, #212]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002e3c:	6f53      	ldr	r3, [r2, #116]	; 0x74
 8002e3e:	f023 0301 	bic.w	r3, r3, #1
 8002e42:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002e44:	f7fe fbbc 	bl	80015c0 <HAL_GetTick>
 8002e48:	4605      	mov	r5, r0

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002e4a:	4b31      	ldr	r3, [pc, #196]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002e4c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002e4e:	f013 0f02 	tst.w	r3, #2
 8002e52:	d006      	beq.n	8002e62 <HAL_RCC_OscConfig+0x1f2>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8002e54:	f7fe fbb4 	bl	80015c0 <HAL_GetTick>
 8002e58:	1b40      	subs	r0, r0, r5
 8002e5a:	2802      	cmp	r0, #2
 8002e5c:	d9f5      	bls.n	8002e4a <HAL_RCC_OscConfig+0x1da>
        {
          return HAL_TIMEOUT;
 8002e5e:	2003      	movs	r0, #3
 8002e60:	e117      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8002e62:	6823      	ldr	r3, [r4, #0]
 8002e64:	f013 0f04 	tst.w	r3, #4
 8002e68:	d07e      	beq.n	8002f68 <HAL_RCC_OscConfig+0x2f8>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002e6a:	4b29      	ldr	r3, [pc, #164]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002e6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e6e:	f013 5f80 	tst.w	r3, #268435456	; 0x10000000
 8002e72:	d11e      	bne.n	8002eb2 <HAL_RCC_OscConfig+0x242>
    {
      /* Enable Power Clock*/
      __HAL_RCC_PWR_CLK_ENABLE();
 8002e74:	4b26      	ldr	r3, [pc, #152]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002e76:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002e78:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8002e7c:	641a      	str	r2, [r3, #64]	; 0x40
 8002e7e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e80:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002e84:	9301      	str	r3, [sp, #4]
 8002e86:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8002e88:	2501      	movs	r5, #1
    }

    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8002e8a:	4b22      	ldr	r3, [pc, #136]	; (8002f14 <HAL_RCC_OscConfig+0x2a4>)
 8002e8c:	681b      	ldr	r3, [r3, #0]
 8002e8e:	f413 7f80 	tst.w	r3, #256	; 0x100
 8002e92:	d010      	beq.n	8002eb6 <HAL_RCC_OscConfig+0x246>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002e94:	68a3      	ldr	r3, [r4, #8]
 8002e96:	2b01      	cmp	r3, #1
 8002e98:	d021      	beq.n	8002ede <HAL_RCC_OscConfig+0x26e>
 8002e9a:	2b00      	cmp	r3, #0
 8002e9c:	d13c      	bne.n	8002f18 <HAL_RCC_OscConfig+0x2a8>
 8002e9e:	4b1c      	ldr	r3, [pc, #112]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002ea0:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8002ea2:	f022 0201 	bic.w	r2, r2, #1
 8002ea6:	671a      	str	r2, [r3, #112]	; 0x70
 8002ea8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8002eaa:	f022 0204 	bic.w	r2, r2, #4
 8002eae:	671a      	str	r2, [r3, #112]	; 0x70
 8002eb0:	e01a      	b.n	8002ee8 <HAL_RCC_OscConfig+0x278>
  FlagStatus pwrclkchanged = RESET;
 8002eb2:	2500      	movs	r5, #0
 8002eb4:	e7e9      	b.n	8002e8a <HAL_RCC_OscConfig+0x21a>
      PWR->CR1 |= PWR_CR1_DBP;
 8002eb6:	4a17      	ldr	r2, [pc, #92]	; (8002f14 <HAL_RCC_OscConfig+0x2a4>)
 8002eb8:	6813      	ldr	r3, [r2, #0]
 8002eba:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002ebe:	6013      	str	r3, [r2, #0]
      tickstart = HAL_GetTick();
 8002ec0:	f7fe fb7e 	bl	80015c0 <HAL_GetTick>
 8002ec4:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8002ec6:	4b13      	ldr	r3, [pc, #76]	; (8002f14 <HAL_RCC_OscConfig+0x2a4>)
 8002ec8:	681b      	ldr	r3, [r3, #0]
 8002eca:	f413 7f80 	tst.w	r3, #256	; 0x100
 8002ece:	d1e1      	bne.n	8002e94 <HAL_RCC_OscConfig+0x224>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8002ed0:	f7fe fb76 	bl	80015c0 <HAL_GetTick>
 8002ed4:	1b80      	subs	r0, r0, r6
 8002ed6:	2864      	cmp	r0, #100	; 0x64
 8002ed8:	d9f5      	bls.n	8002ec6 <HAL_RCC_OscConfig+0x256>
          return HAL_TIMEOUT;
 8002eda:	2003      	movs	r0, #3
 8002edc:	e0d9      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002ede:	4a0c      	ldr	r2, [pc, #48]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002ee0:	6f13      	ldr	r3, [r2, #112]	; 0x70
 8002ee2:	f043 0301 	orr.w	r3, r3, #1
 8002ee6:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8002ee8:	68a3      	ldr	r3, [r4, #8]
 8002eea:	b35b      	cbz	r3, 8002f44 <HAL_RCC_OscConfig+0x2d4>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002eec:	f7fe fb68 	bl	80015c0 <HAL_GetTick>
 8002ef0:	4606      	mov	r6, r0

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002ef2:	4b07      	ldr	r3, [pc, #28]	; (8002f10 <HAL_RCC_OscConfig+0x2a0>)
 8002ef4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002ef6:	f013 0f02 	tst.w	r3, #2
 8002efa:	d134      	bne.n	8002f66 <HAL_RCC_OscConfig+0x2f6>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8002efc:	f7fe fb60 	bl	80015c0 <HAL_GetTick>
 8002f00:	1b80      	subs	r0, r0, r6
 8002f02:	f241 3388 	movw	r3, #5000	; 0x1388
 8002f06:	4298      	cmp	r0, r3
 8002f08:	d9f3      	bls.n	8002ef2 <HAL_RCC_OscConfig+0x282>
        {
          return HAL_TIMEOUT;
 8002f0a:	2003      	movs	r0, #3
 8002f0c:	e0c1      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
 8002f0e:	bf00      	nop
 8002f10:	40023800 	.word	0x40023800
 8002f14:	40007000 	.word	0x40007000
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002f18:	2b05      	cmp	r3, #5
 8002f1a:	d009      	beq.n	8002f30 <HAL_RCC_OscConfig+0x2c0>
 8002f1c:	4b60      	ldr	r3, [pc, #384]	; (80030a0 <HAL_RCC_OscConfig+0x430>)
 8002f1e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8002f20:	f022 0201 	bic.w	r2, r2, #1
 8002f24:	671a      	str	r2, [r3, #112]	; 0x70
 8002f26:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8002f28:	f022 0204 	bic.w	r2, r2, #4
 8002f2c:	671a      	str	r2, [r3, #112]	; 0x70
 8002f2e:	e7db      	b.n	8002ee8 <HAL_RCC_OscConfig+0x278>
 8002f30:	4b5b      	ldr	r3, [pc, #364]	; (80030a0 <HAL_RCC_OscConfig+0x430>)
 8002f32:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8002f34:	f042 0204 	orr.w	r2, r2, #4
 8002f38:	671a      	str	r2, [r3, #112]	; 0x70
 8002f3a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8002f3c:	f042 0201 	orr.w	r2, r2, #1
 8002f40:	671a      	str	r2, [r3, #112]	; 0x70
 8002f42:	e7d1      	b.n	8002ee8 <HAL_RCC_OscConfig+0x278>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002f44:	f7fe fb3c 	bl	80015c0 <HAL_GetTick>
 8002f48:	4606      	mov	r6, r0

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8002f4a:	4b55      	ldr	r3, [pc, #340]	; (80030a0 <HAL_RCC_OscConfig+0x430>)
 8002f4c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002f4e:	f013 0f02 	tst.w	r3, #2
 8002f52:	d008      	beq.n	8002f66 <HAL_RCC_OscConfig+0x2f6>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8002f54:	f7fe fb34 	bl	80015c0 <HAL_GetTick>
 8002f58:	1b80      	subs	r0, r0, r6
 8002f5a:	f241 3388 	movw	r3, #5000	; 0x1388
 8002f5e:	4298      	cmp	r0, r3
 8002f60:	d9f3      	bls.n	8002f4a <HAL_RCC_OscConfig+0x2da>
        {
          return HAL_TIMEOUT;
 8002f62:	2003      	movs	r0, #3
 8002f64:	e095      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 8002f66:	b9fd      	cbnz	r5, 8002fa8 <HAL_RCC_OscConfig+0x338>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8002f68:	69a3      	ldr	r3, [r4, #24]
 8002f6a:	2b00      	cmp	r3, #0
 8002f6c:	f000 8090 	beq.w	8003090 <HAL_RCC_OscConfig+0x420>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8002f70:	4a4b      	ldr	r2, [pc, #300]	; (80030a0 <HAL_RCC_OscConfig+0x430>)
 8002f72:	6892      	ldr	r2, [r2, #8]
 8002f74:	f002 020c 	and.w	r2, r2, #12
 8002f78:	2a08      	cmp	r2, #8
 8002f7a:	d058      	beq.n	800302e <HAL_RCC_OscConfig+0x3be>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8002f7c:	2b02      	cmp	r3, #2
 8002f7e:	d019      	beq.n	8002fb4 <HAL_RCC_OscConfig+0x344>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8002f80:	4a47      	ldr	r2, [pc, #284]	; (80030a0 <HAL_RCC_OscConfig+0x430>)
 8002f82:	6813      	ldr	r3, [r2, #0]
 8002f84:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8002f88:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002f8a:	f7fe fb19 	bl	80015c0 <HAL_GetTick>
 8002f8e:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8002f90:	4b43      	ldr	r3, [pc, #268]	; (80030a0 <HAL_RCC_OscConfig+0x430>)
 8002f92:	681b      	ldr	r3, [r3, #0]
 8002f94:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8002f98:	d047      	beq.n	800302a <HAL_RCC_OscConfig+0x3ba>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8002f9a:	f7fe fb11 	bl	80015c0 <HAL_GetTick>
 8002f9e:	1b00      	subs	r0, r0, r4
 8002fa0:	2802      	cmp	r0, #2
 8002fa2:	d9f5      	bls.n	8002f90 <HAL_RCC_OscConfig+0x320>
          {
            return HAL_TIMEOUT;
 8002fa4:	2003      	movs	r0, #3
 8002fa6:	e074      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
      __HAL_RCC_PWR_CLK_DISABLE();
 8002fa8:	4a3d      	ldr	r2, [pc, #244]	; (80030a0 <HAL_RCC_OscConfig+0x430>)
 8002faa:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8002fac:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002fb0:	6413      	str	r3, [r2, #64]	; 0x40
 8002fb2:	e7d9      	b.n	8002f68 <HAL_RCC_OscConfig+0x2f8>
        __HAL_RCC_PLL_DISABLE();
 8002fb4:	4a3a      	ldr	r2, [pc, #232]	; (80030a0 <HAL_RCC_OscConfig+0x430>)
 8002fb6:	6813      	ldr	r3, [r2, #0]
 8002fb8:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8002fbc:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 8002fbe:	f7fe faff 	bl	80015c0 <HAL_GetTick>
 8002fc2:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8002fc4:	4b36      	ldr	r3, [pc, #216]	; (80030a0 <HAL_RCC_OscConfig+0x430>)
 8002fc6:	681b      	ldr	r3, [r3, #0]
 8002fc8:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8002fcc:	d006      	beq.n	8002fdc <HAL_RCC_OscConfig+0x36c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8002fce:	f7fe faf7 	bl	80015c0 <HAL_GetTick>
 8002fd2:	1b40      	subs	r0, r0, r5
 8002fd4:	2802      	cmp	r0, #2
 8002fd6:	d9f5      	bls.n	8002fc4 <HAL_RCC_OscConfig+0x354>
            return HAL_TIMEOUT;
 8002fd8:	2003      	movs	r0, #3
 8002fda:	e05a      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8002fdc:	69e3      	ldr	r3, [r4, #28]
 8002fde:	6a22      	ldr	r2, [r4, #32]
 8002fe0:	4313      	orrs	r3, r2
 8002fe2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8002fe4:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8002fe8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8002fea:	0852      	lsrs	r2, r2, #1
 8002fec:	3a01      	subs	r2, #1
 8002fee:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002ff2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8002ff4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8002ff8:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8002ffc:	4a28      	ldr	r2, [pc, #160]	; (80030a0 <HAL_RCC_OscConfig+0x430>)
 8002ffe:	6053      	str	r3, [r2, #4]
        __HAL_RCC_PLL_ENABLE();
 8003000:	6813      	ldr	r3, [r2, #0]
 8003002:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8003006:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 8003008:	f7fe fada 	bl	80015c0 <HAL_GetTick>
 800300c:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800300e:	4b24      	ldr	r3, [pc, #144]	; (80030a0 <HAL_RCC_OscConfig+0x430>)
 8003010:	681b      	ldr	r3, [r3, #0]
 8003012:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8003016:	d106      	bne.n	8003026 <HAL_RCC_OscConfig+0x3b6>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8003018:	f7fe fad2 	bl	80015c0 <HAL_GetTick>
 800301c:	1b00      	subs	r0, r0, r4
 800301e:	2802      	cmp	r0, #2
 8003020:	d9f5      	bls.n	800300e <HAL_RCC_OscConfig+0x39e>
            return HAL_TIMEOUT;
 8003022:	2003      	movs	r0, #3
 8003024:	e035      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
      {
        return HAL_ERROR;
      }
    }
  }
  return HAL_OK;
 8003026:	2000      	movs	r0, #0
 8003028:	e033      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
 800302a:	2000      	movs	r0, #0
 800302c:	e031      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
      pll_config = RCC->PLLCFGR;
 800302e:	4a1c      	ldr	r2, [pc, #112]	; (80030a0 <HAL_RCC_OscConfig+0x430>)
 8003030:	6852      	ldr	r2, [r2, #4]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8003032:	2b01      	cmp	r3, #1
 8003034:	d02f      	beq.n	8003096 <HAL_RCC_OscConfig+0x426>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8003036:	f402 0380 	and.w	r3, r2, #4194304	; 0x400000
 800303a:	69e1      	ldr	r1, [r4, #28]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800303c:	428b      	cmp	r3, r1
 800303e:	d001      	beq.n	8003044 <HAL_RCC_OscConfig+0x3d4>
        return HAL_ERROR;
 8003040:	2001      	movs	r0, #1
 8003042:	e026      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8003044:	f002 033f 	and.w	r3, r2, #63	; 0x3f
 8003048:	6a21      	ldr	r1, [r4, #32]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800304a:	428b      	cmp	r3, r1
 800304c:	d001      	beq.n	8003052 <HAL_RCC_OscConfig+0x3e2>
        return HAL_ERROR;
 800304e:	2001      	movs	r0, #1
 8003050:	e01f      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8003052:	6a61      	ldr	r1, [r4, #36]	; 0x24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8003054:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8003058:	4013      	ands	r3, r2
 800305a:	ebb3 1f81 	cmp.w	r3, r1, lsl #6
 800305e:	d001      	beq.n	8003064 <HAL_RCC_OscConfig+0x3f4>
        return HAL_ERROR;
 8003060:	2001      	movs	r0, #1
 8003062:	e016      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 8003064:	f402 3140 	and.w	r1, r2, #196608	; 0x30000
 8003068:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800306a:	085b      	lsrs	r3, r3, #1
 800306c:	3b01      	subs	r3, #1
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 800306e:	ebb1 4f03 	cmp.w	r1, r3, lsl #16
 8003072:	d001      	beq.n	8003078 <HAL_RCC_OscConfig+0x408>
        return HAL_ERROR;
 8003074:	2001      	movs	r0, #1
 8003076:	e00c      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8003078:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
 800307c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 800307e:	ebb2 6f03 	cmp.w	r2, r3, lsl #24
 8003082:	d00a      	beq.n	800309a <HAL_RCC_OscConfig+0x42a>
        return HAL_ERROR;
 8003084:	2001      	movs	r0, #1
 8003086:	e004      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
    return HAL_ERROR;
 8003088:	2001      	movs	r0, #1
}
 800308a:	4770      	bx	lr
        return HAL_ERROR;
 800308c:	2001      	movs	r0, #1
 800308e:	e000      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
  return HAL_OK;
 8003090:	2000      	movs	r0, #0
}
 8003092:	b002      	add	sp, #8
 8003094:	bd70      	pop	{r4, r5, r6, pc}
        return HAL_ERROR;
 8003096:	2001      	movs	r0, #1
 8003098:	e7fb      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
  return HAL_OK;
 800309a:	2000      	movs	r0, #0
 800309c:	e7f9      	b.n	8003092 <HAL_RCC_OscConfig+0x422>
 800309e:	bf00      	nop
 80030a0:	40023800 	.word	0x40023800

080030a4 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
  uint32_t sysclockfreq = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80030a4:	4b26      	ldr	r3, [pc, #152]	; (8003140 <HAL_RCC_GetSysClockFreq+0x9c>)
 80030a6:	689b      	ldr	r3, [r3, #8]
 80030a8:	f003 030c 	and.w	r3, r3, #12
 80030ac:	2b04      	cmp	r3, #4
 80030ae:	d044      	beq.n	800313a <HAL_RCC_GetSysClockFreq+0x96>
 80030b0:	2b08      	cmp	r3, #8
 80030b2:	d001      	beq.n	80030b8 <HAL_RCC_GetSysClockFreq+0x14>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 80030b4:	4823      	ldr	r0, [pc, #140]	; (8003144 <HAL_RCC_GetSysClockFreq+0xa0>)
 80030b6:	4770      	bx	lr
{
 80030b8:	e92d 4bf0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, fp, lr}
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80030bc:	4b20      	ldr	r3, [pc, #128]	; (8003140 <HAL_RCC_GetSysClockFreq+0x9c>)
 80030be:	685a      	ldr	r2, [r3, #4]
 80030c0:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 80030c4:	685b      	ldr	r3, [r3, #4]
 80030c6:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 80030ca:	d013      	beq.n	80030f4 <HAL_RCC_GetSysClockFreq+0x50>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80030cc:	4b1c      	ldr	r3, [pc, #112]	; (8003140 <HAL_RCC_GetSysClockFreq+0x9c>)
 80030ce:	6859      	ldr	r1, [r3, #4]
 80030d0:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80030d4:	2300      	movs	r3, #0
 80030d6:	481c      	ldr	r0, [pc, #112]	; (8003148 <HAL_RCC_GetSysClockFreq+0xa4>)
 80030d8:	fba1 0100 	umull	r0, r1, r1, r0
 80030dc:	f7fd fdbe 	bl	8000c5c <__aeabi_uldivmod>
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 80030e0:	4b17      	ldr	r3, [pc, #92]	; (8003140 <HAL_RCC_GetSysClockFreq+0x9c>)
 80030e2:	685b      	ldr	r3, [r3, #4]
 80030e4:	f3c3 4301 	ubfx	r3, r3, #16, #2
 80030e8:	3301      	adds	r3, #1
 80030ea:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 80030ec:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80030f0:	e8bd 8bf0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, fp, pc}
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80030f4:	4b12      	ldr	r3, [pc, #72]	; (8003140 <HAL_RCC_GetSysClockFreq+0x9c>)
 80030f6:	685b      	ldr	r3, [r3, #4]
 80030f8:	f3c3 1388 	ubfx	r3, r3, #6, #9
 80030fc:	461e      	mov	r6, r3
 80030fe:	2700      	movs	r7, #0
 8003100:	015c      	lsls	r4, r3, #5
 8003102:	2500      	movs	r5, #0
 8003104:	1ae4      	subs	r4, r4, r3
 8003106:	eb65 0507 	sbc.w	r5, r5, r7
 800310a:	01a9      	lsls	r1, r5, #6
 800310c:	ea41 6194 	orr.w	r1, r1, r4, lsr #26
 8003110:	01a0      	lsls	r0, r4, #6
 8003112:	1b00      	subs	r0, r0, r4
 8003114:	eb61 0105 	sbc.w	r1, r1, r5
 8003118:	00cb      	lsls	r3, r1, #3
 800311a:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
 800311e:	00c4      	lsls	r4, r0, #3
 8003120:	19a0      	adds	r0, r4, r6
 8003122:	eb43 0107 	adc.w	r1, r3, r7
 8003126:	028b      	lsls	r3, r1, #10
 8003128:	ea43 5390 	orr.w	r3, r3, r0, lsr #22
 800312c:	0284      	lsls	r4, r0, #10
 800312e:	4620      	mov	r0, r4
 8003130:	4619      	mov	r1, r3
 8003132:	2300      	movs	r3, #0
 8003134:	f7fd fd92 	bl	8000c5c <__aeabi_uldivmod>
 8003138:	e7d2      	b.n	80030e0 <HAL_RCC_GetSysClockFreq+0x3c>
      sysclockfreq = HSE_VALUE;
 800313a:	4803      	ldr	r0, [pc, #12]	; (8003148 <HAL_RCC_GetSysClockFreq+0xa4>)
}
 800313c:	4770      	bx	lr
 800313e:	bf00      	nop
 8003140:	40023800 	.word	0x40023800
 8003144:	00f42400 	.word	0x00f42400
 8003148:	017d7840 	.word	0x017d7840

0800314c <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
 800314c:	2800      	cmp	r0, #0
 800314e:	f000 80a3 	beq.w	8003298 <HAL_RCC_ClockConfig+0x14c>
{
 8003152:	b570      	push	{r4, r5, r6, lr}
 8003154:	4604      	mov	r4, r0
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8003156:	4b52      	ldr	r3, [pc, #328]	; (80032a0 <HAL_RCC_ClockConfig+0x154>)
 8003158:	681b      	ldr	r3, [r3, #0]
 800315a:	f003 030f 	and.w	r3, r3, #15
 800315e:	428b      	cmp	r3, r1
 8003160:	d20c      	bcs.n	800317c <HAL_RCC_ClockConfig+0x30>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003162:	4a4f      	ldr	r2, [pc, #316]	; (80032a0 <HAL_RCC_ClockConfig+0x154>)
 8003164:	6813      	ldr	r3, [r2, #0]
 8003166:	f023 030f 	bic.w	r3, r3, #15
 800316a:	430b      	orrs	r3, r1
 800316c:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800316e:	6813      	ldr	r3, [r2, #0]
 8003170:	f003 030f 	and.w	r3, r3, #15
 8003174:	428b      	cmp	r3, r1
 8003176:	d001      	beq.n	800317c <HAL_RCC_ClockConfig+0x30>
      return HAL_ERROR;
 8003178:	2001      	movs	r0, #1
}
 800317a:	bd70      	pop	{r4, r5, r6, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800317c:	6823      	ldr	r3, [r4, #0]
 800317e:	f013 0f02 	tst.w	r3, #2
 8003182:	d017      	beq.n	80031b4 <HAL_RCC_ClockConfig+0x68>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003184:	f013 0f04 	tst.w	r3, #4
 8003188:	d004      	beq.n	8003194 <HAL_RCC_ClockConfig+0x48>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800318a:	4a46      	ldr	r2, [pc, #280]	; (80032a4 <HAL_RCC_ClockConfig+0x158>)
 800318c:	6893      	ldr	r3, [r2, #8]
 800318e:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8003192:	6093      	str	r3, [r2, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8003194:	6823      	ldr	r3, [r4, #0]
 8003196:	f013 0f08 	tst.w	r3, #8
 800319a:	d004      	beq.n	80031a6 <HAL_RCC_ClockConfig+0x5a>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800319c:	4a41      	ldr	r2, [pc, #260]	; (80032a4 <HAL_RCC_ClockConfig+0x158>)
 800319e:	6893      	ldr	r3, [r2, #8]
 80031a0:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80031a4:	6093      	str	r3, [r2, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80031a6:	4a3f      	ldr	r2, [pc, #252]	; (80032a4 <HAL_RCC_ClockConfig+0x158>)
 80031a8:	6893      	ldr	r3, [r2, #8]
 80031aa:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80031ae:	68a0      	ldr	r0, [r4, #8]
 80031b0:	4303      	orrs	r3, r0
 80031b2:	6093      	str	r3, [r2, #8]
 80031b4:	460d      	mov	r5, r1
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80031b6:	6823      	ldr	r3, [r4, #0]
 80031b8:	f013 0f01 	tst.w	r3, #1
 80031bc:	d031      	beq.n	8003222 <HAL_RCC_ClockConfig+0xd6>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80031be:	6863      	ldr	r3, [r4, #4]
 80031c0:	2b01      	cmp	r3, #1
 80031c2:	d020      	beq.n	8003206 <HAL_RCC_ClockConfig+0xba>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80031c4:	2b02      	cmp	r3, #2
 80031c6:	d025      	beq.n	8003214 <HAL_RCC_ClockConfig+0xc8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80031c8:	4a36      	ldr	r2, [pc, #216]	; (80032a4 <HAL_RCC_ClockConfig+0x158>)
 80031ca:	6812      	ldr	r2, [r2, #0]
 80031cc:	f012 0f02 	tst.w	r2, #2
 80031d0:	d064      	beq.n	800329c <HAL_RCC_ClockConfig+0x150>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80031d2:	4934      	ldr	r1, [pc, #208]	; (80032a4 <HAL_RCC_ClockConfig+0x158>)
 80031d4:	688a      	ldr	r2, [r1, #8]
 80031d6:	f022 0203 	bic.w	r2, r2, #3
 80031da:	4313      	orrs	r3, r2
 80031dc:	608b      	str	r3, [r1, #8]
    tickstart = HAL_GetTick();
 80031de:	f7fe f9ef 	bl	80015c0 <HAL_GetTick>
 80031e2:	4606      	mov	r6, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80031e4:	4b2f      	ldr	r3, [pc, #188]	; (80032a4 <HAL_RCC_ClockConfig+0x158>)
 80031e6:	689b      	ldr	r3, [r3, #8]
 80031e8:	f003 030c 	and.w	r3, r3, #12
 80031ec:	6862      	ldr	r2, [r4, #4]
 80031ee:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80031f2:	d016      	beq.n	8003222 <HAL_RCC_ClockConfig+0xd6>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80031f4:	f7fe f9e4 	bl	80015c0 <HAL_GetTick>
 80031f8:	1b80      	subs	r0, r0, r6
 80031fa:	f241 3388 	movw	r3, #5000	; 0x1388
 80031fe:	4298      	cmp	r0, r3
 8003200:	d9f0      	bls.n	80031e4 <HAL_RCC_ClockConfig+0x98>
        return HAL_TIMEOUT;
 8003202:	2003      	movs	r0, #3
 8003204:	e7b9      	b.n	800317a <HAL_RCC_ClockConfig+0x2e>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003206:	4a27      	ldr	r2, [pc, #156]	; (80032a4 <HAL_RCC_ClockConfig+0x158>)
 8003208:	6812      	ldr	r2, [r2, #0]
 800320a:	f412 3f00 	tst.w	r2, #131072	; 0x20000
 800320e:	d1e0      	bne.n	80031d2 <HAL_RCC_ClockConfig+0x86>
        return HAL_ERROR;
 8003210:	2001      	movs	r0, #1
 8003212:	e7b2      	b.n	800317a <HAL_RCC_ClockConfig+0x2e>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8003214:	4a23      	ldr	r2, [pc, #140]	; (80032a4 <HAL_RCC_ClockConfig+0x158>)
 8003216:	6812      	ldr	r2, [r2, #0]
 8003218:	f012 7f00 	tst.w	r2, #33554432	; 0x2000000
 800321c:	d1d9      	bne.n	80031d2 <HAL_RCC_ClockConfig+0x86>
        return HAL_ERROR;
 800321e:	2001      	movs	r0, #1
 8003220:	e7ab      	b.n	800317a <HAL_RCC_ClockConfig+0x2e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8003222:	4b1f      	ldr	r3, [pc, #124]	; (80032a0 <HAL_RCC_ClockConfig+0x154>)
 8003224:	681b      	ldr	r3, [r3, #0]
 8003226:	f003 030f 	and.w	r3, r3, #15
 800322a:	42ab      	cmp	r3, r5
 800322c:	d90c      	bls.n	8003248 <HAL_RCC_ClockConfig+0xfc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800322e:	4a1c      	ldr	r2, [pc, #112]	; (80032a0 <HAL_RCC_ClockConfig+0x154>)
 8003230:	6813      	ldr	r3, [r2, #0]
 8003232:	f023 030f 	bic.w	r3, r3, #15
 8003236:	432b      	orrs	r3, r5
 8003238:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800323a:	6813      	ldr	r3, [r2, #0]
 800323c:	f003 030f 	and.w	r3, r3, #15
 8003240:	42ab      	cmp	r3, r5
 8003242:	d001      	beq.n	8003248 <HAL_RCC_ClockConfig+0xfc>
      return HAL_ERROR;
 8003244:	2001      	movs	r0, #1
 8003246:	e798      	b.n	800317a <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003248:	6823      	ldr	r3, [r4, #0]
 800324a:	f013 0f04 	tst.w	r3, #4
 800324e:	d006      	beq.n	800325e <HAL_RCC_ClockConfig+0x112>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8003250:	4a14      	ldr	r2, [pc, #80]	; (80032a4 <HAL_RCC_ClockConfig+0x158>)
 8003252:	6893      	ldr	r3, [r2, #8]
 8003254:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8003258:	68e1      	ldr	r1, [r4, #12]
 800325a:	430b      	orrs	r3, r1
 800325c:	6093      	str	r3, [r2, #8]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800325e:	6823      	ldr	r3, [r4, #0]
 8003260:	f013 0f08 	tst.w	r3, #8
 8003264:	d007      	beq.n	8003276 <HAL_RCC_ClockConfig+0x12a>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8003266:	4a0f      	ldr	r2, [pc, #60]	; (80032a4 <HAL_RCC_ClockConfig+0x158>)
 8003268:	6893      	ldr	r3, [r2, #8]
 800326a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800326e:	6921      	ldr	r1, [r4, #16]
 8003270:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8003274:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8003276:	f7ff ff15 	bl	80030a4 <HAL_RCC_GetSysClockFreq>
 800327a:	4b0a      	ldr	r3, [pc, #40]	; (80032a4 <HAL_RCC_ClockConfig+0x158>)
 800327c:	689b      	ldr	r3, [r3, #8]
 800327e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8003282:	4a09      	ldr	r2, [pc, #36]	; (80032a8 <HAL_RCC_ClockConfig+0x15c>)
 8003284:	5cd3      	ldrb	r3, [r2, r3]
 8003286:	40d8      	lsrs	r0, r3
 8003288:	4b08      	ldr	r3, [pc, #32]	; (80032ac <HAL_RCC_ClockConfig+0x160>)
 800328a:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 800328c:	4b08      	ldr	r3, [pc, #32]	; (80032b0 <HAL_RCC_ClockConfig+0x164>)
 800328e:	6818      	ldr	r0, [r3, #0]
 8003290:	f7fe f958 	bl	8001544 <HAL_InitTick>
  return HAL_OK;
 8003294:	2000      	movs	r0, #0
 8003296:	e770      	b.n	800317a <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 8003298:	2001      	movs	r0, #1
}
 800329a:	4770      	bx	lr
        return HAL_ERROR;
 800329c:	2001      	movs	r0, #1
 800329e:	e76c      	b.n	800317a <HAL_RCC_ClockConfig+0x2e>
 80032a0:	40023c00 	.word	0x40023c00
 80032a4:	40023800 	.word	0x40023800
 80032a8:	08015e18 	.word	0x08015e18
 80032ac:	20000130 	.word	0x20000130
 80032b0:	20000004 	.word	0x20000004

080032b4 <HAL_RCC_GetHCLKFreq>:
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
}
 80032b4:	4b01      	ldr	r3, [pc, #4]	; (80032bc <HAL_RCC_GetHCLKFreq+0x8>)
 80032b6:	6818      	ldr	r0, [r3, #0]
 80032b8:	4770      	bx	lr
 80032ba:	bf00      	nop
 80032bc:	20000130 	.word	0x20000130

080032c0 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80032c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80032c2:	b083      	sub	sp, #12
 80032c4:	4604      	mov	r4, r0

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80032c6:	6803      	ldr	r3, [r0, #0]
 80032c8:	f013 0f01 	tst.w	r3, #1
 80032cc:	d00c      	beq.n	80032e8 <HAL_RCCEx_PeriphCLKConfig+0x28>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 80032ce:	4bb6      	ldr	r3, [pc, #728]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 80032d0:	689a      	ldr	r2, [r3, #8]
 80032d2:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80032d6:	609a      	str	r2, [r3, #8]
 80032d8:	689a      	ldr	r2, [r3, #8]
 80032da:	6b41      	ldr	r1, [r0, #52]	; 0x34
 80032dc:	430a      	orrs	r2, r1
 80032de:	609a      	str	r2, [r3, #8]

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 80032e0:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80032e2:	b1c3      	cbz	r3, 8003316 <HAL_RCCEx_PeriphCLKConfig+0x56>
  uint32_t plli2sused = 0;
 80032e4:	2600      	movs	r6, #0
 80032e6:	e000      	b.n	80032ea <HAL_RCCEx_PeriphCLKConfig+0x2a>
 80032e8:	2600      	movs	r6, #0
      plli2sused = 1;
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 80032ea:	6823      	ldr	r3, [r4, #0]
 80032ec:	f413 2f00 	tst.w	r3, #524288	; 0x80000
 80032f0:	d015      	beq.n	800331e <HAL_RCCEx_PeriphCLKConfig+0x5e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 80032f2:	4aad      	ldr	r2, [pc, #692]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 80032f4:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 80032f8:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 80032fc:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80032fe:	430b      	orrs	r3, r1
 8003300:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 8003304:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003306:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800330a:	d006      	beq.n	800331a <HAL_RCCEx_PeriphCLKConfig+0x5a>
    {
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 800330c:	2b00      	cmp	r3, #0
 800330e:	f000 8129 	beq.w	8003564 <HAL_RCCEx_PeriphCLKConfig+0x2a4>
  uint32_t pllsaiused = 0;
 8003312:	2500      	movs	r5, #0
 8003314:	e004      	b.n	8003320 <HAL_RCCEx_PeriphCLKConfig+0x60>
      plli2sused = 1;
 8003316:	2601      	movs	r6, #1
 8003318:	e7e7      	b.n	80032ea <HAL_RCCEx_PeriphCLKConfig+0x2a>
      plli2sused = 1;
 800331a:	2601      	movs	r6, #1
 800331c:	e7f6      	b.n	800330c <HAL_RCCEx_PeriphCLKConfig+0x4c>
  uint32_t pllsaiused = 0;
 800331e:	2500      	movs	r5, #0
      pllsaiused = 1;
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 8003320:	6823      	ldr	r3, [r4, #0]
 8003322:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8003326:	d00f      	beq.n	8003348 <HAL_RCCEx_PeriphCLKConfig+0x88>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8003328:	4a9f      	ldr	r2, [pc, #636]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 800332a:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800332e:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8003332:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8003334:	430b      	orrs	r3, r1
 8003336:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 800333a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800333c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8003340:	f000 8112 	beq.w	8003568 <HAL_RCCEx_PeriphCLKConfig+0x2a8>
    {
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
 8003344:	b903      	cbnz	r3, 8003348 <HAL_RCCEx_PeriphCLKConfig+0x88>
    {
      pllsaiused = 1;
 8003346:	2501      	movs	r5, #1
    }
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8003348:	6823      	ldr	r3, [r4, #0]
 800334a:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
 800334e:	d000      	beq.n	8003352 <HAL_RCCEx_PeriphCLKConfig+0x92>
  {
      plli2sused = 1;
 8003350:	2601      	movs	r6, #1
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8003352:	f013 0f20 	tst.w	r3, #32
 8003356:	f040 8109 	bne.w	800356c <HAL_RCCEx_PeriphCLKConfig+0x2ac>
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800335a:	6823      	ldr	r3, [r4, #0]
 800335c:	f013 0f10 	tst.w	r3, #16
 8003360:	d00c      	beq.n	800337c <HAL_RCCEx_PeriphCLKConfig+0xbc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8003362:	4b91      	ldr	r3, [pc, #580]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003364:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8003368:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 800336c:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8003370:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8003374:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8003376:	430a      	orrs	r2, r1
 8003378:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 800337c:	6823      	ldr	r3, [r4, #0]
 800337e:	f413 4f80 	tst.w	r3, #16384	; 0x4000
 8003382:	d008      	beq.n	8003396 <HAL_RCCEx_PeriphCLKConfig+0xd6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8003384:	4a88      	ldr	r2, [pc, #544]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003386:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 800338a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800338e:	6e61      	ldr	r1, [r4, #100]	; 0x64
 8003390:	430b      	orrs	r3, r1
 8003392:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8003396:	6823      	ldr	r3, [r4, #0]
 8003398:	f413 4f00 	tst.w	r3, #32768	; 0x8000
 800339c:	d008      	beq.n	80033b0 <HAL_RCCEx_PeriphCLKConfig+0xf0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 800339e:	4a82      	ldr	r2, [pc, #520]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 80033a0:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 80033a4:	f423 2340 	bic.w	r3, r3, #786432	; 0xc0000
 80033a8:	6ea1      	ldr	r1, [r4, #104]	; 0x68
 80033aa:	430b      	orrs	r3, r1
 80033ac:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 80033b0:	6823      	ldr	r3, [r4, #0]
 80033b2:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 80033b6:	d008      	beq.n	80033ca <HAL_RCCEx_PeriphCLKConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 80033b8:	4a7b      	ldr	r2, [pc, #492]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 80033ba:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 80033be:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 80033c2:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 80033c4:	430b      	orrs	r3, r1
 80033c6:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 80033ca:	6823      	ldr	r3, [r4, #0]
 80033cc:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 80033d0:	d008      	beq.n	80033e4 <HAL_RCCEx_PeriphCLKConfig+0x124>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 80033d2:	4a75      	ldr	r2, [pc, #468]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 80033d4:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 80033d8:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 80033dc:	6f21      	ldr	r1, [r4, #112]	; 0x70
 80033de:	430b      	orrs	r3, r1
 80033e0:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 80033e4:	6823      	ldr	r3, [r4, #0]
 80033e6:	f013 0f40 	tst.w	r3, #64	; 0x40
 80033ea:	d008      	beq.n	80033fe <HAL_RCCEx_PeriphCLKConfig+0x13e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 80033ec:	4a6e      	ldr	r2, [pc, #440]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 80033ee:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 80033f2:	f023 0303 	bic.w	r3, r3, #3
 80033f6:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80033f8:	430b      	orrs	r3, r1
 80033fa:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 80033fe:	6823      	ldr	r3, [r4, #0]
 8003400:	f013 0f80 	tst.w	r3, #128	; 0x80
 8003404:	d008      	beq.n	8003418 <HAL_RCCEx_PeriphCLKConfig+0x158>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8003406:	4a68      	ldr	r2, [pc, #416]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003408:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 800340c:	f023 030c 	bic.w	r3, r3, #12
 8003410:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8003412:	430b      	orrs	r3, r1
 8003414:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8003418:	6823      	ldr	r3, [r4, #0]
 800341a:	f413 7f80 	tst.w	r3, #256	; 0x100
 800341e:	d008      	beq.n	8003432 <HAL_RCCEx_PeriphCLKConfig+0x172>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 8003420:	4a61      	ldr	r2, [pc, #388]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003422:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8003426:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 800342a:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 800342c:	430b      	orrs	r3, r1
 800342e:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8003432:	6823      	ldr	r3, [r4, #0]
 8003434:	f413 7f00 	tst.w	r3, #512	; 0x200
 8003438:	d008      	beq.n	800344c <HAL_RCCEx_PeriphCLKConfig+0x18c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 800343a:	4a5b      	ldr	r2, [pc, #364]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 800343c:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8003440:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8003444:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8003446:	430b      	orrs	r3, r1
 8003448:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 800344c:	6823      	ldr	r3, [r4, #0]
 800344e:	f413 6f80 	tst.w	r3, #1024	; 0x400
 8003452:	d008      	beq.n	8003466 <HAL_RCCEx_PeriphCLKConfig+0x1a6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 8003454:	4a54      	ldr	r2, [pc, #336]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003456:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 800345a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800345e:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8003460:	430b      	orrs	r3, r1
 8003462:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 8003466:	6823      	ldr	r3, [r4, #0]
 8003468:	f413 6f00 	tst.w	r3, #2048	; 0x800
 800346c:	d008      	beq.n	8003480 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 800346e:	4a4e      	ldr	r2, [pc, #312]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003470:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8003474:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8003478:	6da1      	ldr	r1, [r4, #88]	; 0x58
 800347a:	430b      	orrs	r3, r1
 800347c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 8003480:	6823      	ldr	r3, [r4, #0]
 8003482:	f413 5f80 	tst.w	r3, #4096	; 0x1000
 8003486:	d008      	beq.n	800349a <HAL_RCCEx_PeriphCLKConfig+0x1da>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 8003488:	4a47      	ldr	r2, [pc, #284]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 800348a:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 800348e:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8003492:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8003494:	430b      	orrs	r3, r1
 8003496:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 800349a:	6823      	ldr	r3, [r4, #0]
 800349c:	f413 5f00 	tst.w	r3, #8192	; 0x2000
 80034a0:	d008      	beq.n	80034b4 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 80034a2:	4a41      	ldr	r2, [pc, #260]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 80034a4:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 80034a8:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80034ac:	6e21      	ldr	r1, [r4, #96]	; 0x60
 80034ae:	430b      	orrs	r3, r1
 80034b0:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 80034b4:	6823      	ldr	r3, [r4, #0]
 80034b6:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 80034ba:	d008      	beq.n	80034ce <HAL_RCCEx_PeriphCLKConfig+0x20e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 80034bc:	4a3a      	ldr	r2, [pc, #232]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 80034be:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 80034c2:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80034c6:	6fa1      	ldr	r1, [r4, #120]	; 0x78
 80034c8:	430b      	orrs	r3, r1
 80034ca:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 80034ce:	6823      	ldr	r3, [r4, #0]
 80034d0:	f413 1f00 	tst.w	r3, #2097152	; 0x200000
 80034d4:	d00d      	beq.n	80034f2 <HAL_RCCEx_PeriphCLKConfig+0x232>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 80034d6:	4a34      	ldr	r2, [pc, #208]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 80034d8:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 80034dc:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 80034e0:	6fe1      	ldr	r1, [r4, #124]	; 0x7c
 80034e2:	430b      	orrs	r3, r1
 80034e4:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
 80034e8:	6fe3      	ldr	r3, [r4, #124]	; 0x7c
 80034ea:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80034ee:	f000 80a7 	beq.w	8003640 <HAL_RCCEx_PeriphCLKConfig+0x380>
    }
  }

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 80034f2:	6823      	ldr	r3, [r4, #0]
 80034f4:	f013 0f08 	tst.w	r3, #8
 80034f8:	d000      	beq.n	80034fc <HAL_RCCEx_PeriphCLKConfig+0x23c>
  {
    pllsaiused = 1;
 80034fa:	2501      	movs	r5, #1
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 80034fc:	f413 2f80 	tst.w	r3, #262144	; 0x40000
 8003500:	d008      	beq.n	8003514 <HAL_RCCEx_PeriphCLKConfig+0x254>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8003502:	4a29      	ldr	r2, [pc, #164]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003504:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8003508:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 800350c:	6f61      	ldr	r1, [r4, #116]	; 0x74
 800350e:	430b      	orrs	r3, r1
 8003510:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 8003514:	6823      	ldr	r3, [r4, #0]
 8003516:	f413 0f00 	tst.w	r3, #8388608	; 0x800000
 800351a:	d009      	beq.n	8003530 <HAL_RCCEx_PeriphCLKConfig+0x270>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));

    /* Configure the SDMMC1 clock source */
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 800351c:	4a22      	ldr	r2, [pc, #136]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 800351e:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8003522:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003526:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
 800352a:	430b      	orrs	r3, r1
 800352c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8003530:	b926      	cbnz	r6, 800353c <HAL_RCCEx_PeriphCLKConfig+0x27c>
 8003532:	6823      	ldr	r3, [r4, #0]
 8003534:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8003538:	f000 8102 	beq.w	8003740 <HAL_RCCEx_PeriphCLKConfig+0x480>
  {
    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 800353c:	4a1a      	ldr	r2, [pc, #104]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 800353e:	6813      	ldr	r3, [r2, #0]
 8003540:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8003544:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8003546:	f7fe f83b 	bl	80015c0 <HAL_GetTick>
 800354a:	4606      	mov	r6, r0

    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800354c:	4b16      	ldr	r3, [pc, #88]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 800354e:	681b      	ldr	r3, [r3, #0]
 8003550:	f013 6f00 	tst.w	r3, #134217728	; 0x8000000
 8003554:	d076      	beq.n	8003644 <HAL_RCCEx_PeriphCLKConfig+0x384>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8003556:	f7fe f833 	bl	80015c0 <HAL_GetTick>
 800355a:	1b80      	subs	r0, r0, r6
 800355c:	2864      	cmp	r0, #100	; 0x64
 800355e:	d9f5      	bls.n	800354c <HAL_RCCEx_PeriphCLKConfig+0x28c>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8003560:	2003      	movs	r0, #3
 8003562:	e0ef      	b.n	8003744 <HAL_RCCEx_PeriphCLKConfig+0x484>
      pllsaiused = 1;
 8003564:	2501      	movs	r5, #1
 8003566:	e6db      	b.n	8003320 <HAL_RCCEx_PeriphCLKConfig+0x60>
      plli2sused = 1;
 8003568:	2601      	movs	r6, #1
 800356a:	e6eb      	b.n	8003344 <HAL_RCCEx_PeriphCLKConfig+0x84>
    __HAL_RCC_PWR_CLK_ENABLE();
 800356c:	4b0e      	ldr	r3, [pc, #56]	; (80035a8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 800356e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003570:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003574:	641a      	str	r2, [r3, #64]	; 0x40
 8003576:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003578:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800357c:	9301      	str	r3, [sp, #4]
 800357e:	9b01      	ldr	r3, [sp, #4]
    PWR->CR1 |= PWR_CR1_DBP;
 8003580:	4a0a      	ldr	r2, [pc, #40]	; (80035ac <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8003582:	6813      	ldr	r3, [r2, #0]
 8003584:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003588:	6013      	str	r3, [r2, #0]
    tickstart = HAL_GetTick();
 800358a:	f7fe f819 	bl	80015c0 <HAL_GetTick>
 800358e:	4607      	mov	r7, r0
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8003590:	4b06      	ldr	r3, [pc, #24]	; (80035ac <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8003592:	681b      	ldr	r3, [r3, #0]
 8003594:	f413 7f80 	tst.w	r3, #256	; 0x100
 8003598:	d10a      	bne.n	80035b0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800359a:	f7fe f811 	bl	80015c0 <HAL_GetTick>
 800359e:	1bc0      	subs	r0, r0, r7
 80035a0:	2864      	cmp	r0, #100	; 0x64
 80035a2:	d9f5      	bls.n	8003590 <HAL_RCCEx_PeriphCLKConfig+0x2d0>
        return HAL_TIMEOUT;
 80035a4:	2003      	movs	r0, #3
 80035a6:	e0cd      	b.n	8003744 <HAL_RCCEx_PeriphCLKConfig+0x484>
 80035a8:	40023800 	.word	0x40023800
 80035ac:	40007000 	.word	0x40007000
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80035b0:	4baa      	ldr	r3, [pc, #680]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 80035b2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80035b4:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 80035b8:	d015      	beq.n	80035e6 <HAL_RCCEx_PeriphCLKConfig+0x326>
 80035ba:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80035bc:	f402 7240 	and.w	r2, r2, #768	; 0x300
 80035c0:	429a      	cmp	r2, r3
 80035c2:	d010      	beq.n	80035e6 <HAL_RCCEx_PeriphCLKConfig+0x326>
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80035c4:	4ba5      	ldr	r3, [pc, #660]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 80035c6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80035c8:	f422 7240 	bic.w	r2, r2, #768	; 0x300
      __HAL_RCC_BACKUPRESET_FORCE();
 80035cc:	6f19      	ldr	r1, [r3, #112]	; 0x70
 80035ce:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
 80035d2:	6719      	str	r1, [r3, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 80035d4:	6f19      	ldr	r1, [r3, #112]	; 0x70
 80035d6:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
 80035da:	6719      	str	r1, [r3, #112]	; 0x70
      RCC->BDCR = tmpreg0;
 80035dc:	671a      	str	r2, [r3, #112]	; 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80035de:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80035e0:	f013 0f01 	tst.w	r3, #1
 80035e4:	d112      	bne.n	800360c <HAL_RCCEx_PeriphCLKConfig+0x34c>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80035e6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80035e8:	f403 7240 	and.w	r2, r3, #768	; 0x300
 80035ec:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 80035f0:	d01d      	beq.n	800362e <HAL_RCCEx_PeriphCLKConfig+0x36e>
 80035f2:	4a9a      	ldr	r2, [pc, #616]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 80035f4:	6893      	ldr	r3, [r2, #8]
 80035f6:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 80035fa:	6093      	str	r3, [r2, #8]
 80035fc:	4997      	ldr	r1, [pc, #604]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 80035fe:	6f0b      	ldr	r3, [r1, #112]	; 0x70
 8003600:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8003602:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8003606:	4313      	orrs	r3, r2
 8003608:	670b      	str	r3, [r1, #112]	; 0x70
 800360a:	e6a6      	b.n	800335a <HAL_RCCEx_PeriphCLKConfig+0x9a>
        tickstart = HAL_GetTick();
 800360c:	f7fd ffd8 	bl	80015c0 <HAL_GetTick>
 8003610:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003612:	4b92      	ldr	r3, [pc, #584]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8003614:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003616:	f013 0f02 	tst.w	r3, #2
 800361a:	d1e4      	bne.n	80035e6 <HAL_RCCEx_PeriphCLKConfig+0x326>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800361c:	f7fd ffd0 	bl	80015c0 <HAL_GetTick>
 8003620:	1bc0      	subs	r0, r0, r7
 8003622:	f241 3388 	movw	r3, #5000	; 0x1388
 8003626:	4298      	cmp	r0, r3
 8003628:	d9f3      	bls.n	8003612 <HAL_RCCEx_PeriphCLKConfig+0x352>
            return HAL_TIMEOUT;
 800362a:	2003      	movs	r0, #3
 800362c:	e08a      	b.n	8003744 <HAL_RCCEx_PeriphCLKConfig+0x484>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800362e:	488b      	ldr	r0, [pc, #556]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8003630:	6882      	ldr	r2, [r0, #8]
 8003632:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 8003636:	498a      	ldr	r1, [pc, #552]	; (8003860 <HAL_RCCEx_PeriphCLKConfig+0x5a0>)
 8003638:	4019      	ands	r1, r3
 800363a:	430a      	orrs	r2, r1
 800363c:	6082      	str	r2, [r0, #8]
 800363e:	e7dd      	b.n	80035fc <HAL_RCCEx_PeriphCLKConfig+0x33c>
      pllsaiused = 1;
 8003640:	2501      	movs	r5, #1
 8003642:	e756      	b.n	80034f2 <HAL_RCCEx_PeriphCLKConfig+0x232>

    /* check for common PLLI2S Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /*----------------- In Case of PLLI2S is selected as source clock for I2S -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 8003644:	6823      	ldr	r3, [r4, #0]
 8003646:	f013 0f01 	tst.w	r3, #1
 800364a:	d013      	beq.n	8003674 <HAL_RCCEx_PeriphCLKConfig+0x3b4>
 800364c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800364e:	b98b      	cbnz	r3, 8003674 <HAL_RCCEx_PeriphCLKConfig+0x3b4>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register (this value is not needed for I2S configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8003650:	4a82      	ldr	r2, [pc, #520]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8003652:	f8d2 3084 	ldr.w	r3, [r2, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8003656:	f8d2 1084 	ldr.w	r1, [r2, #132]	; 0x84
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 800365a:	6860      	ldr	r0, [r4, #4]
 800365c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003660:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8003664:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8003668:	430b      	orrs	r3, r1
 800366a:	68a1      	ldr	r1, [r4, #8]
 800366c:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 8003670:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8003674:	6823      	ldr	r3, [r4, #0]
 8003676:	f413 2f00 	tst.w	r3, #524288	; 0x80000
 800367a:	d003      	beq.n	8003684 <HAL_RCCEx_PeriphCLKConfig+0x3c4>
 800367c:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800367e:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
 8003682:	d006      	beq.n	8003692 <HAL_RCCEx_PeriphCLKConfig+0x3d2>
 8003684:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8003688:	d01e      	beq.n	80036c8 <HAL_RCCEx_PeriphCLKConfig+0x408>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 800368a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800368c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8003690:	d11a      	bne.n	80036c8 <HAL_RCCEx_PeriphCLKConfig+0x408>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      /* Check for PLLI2S/DIVQ parameters */
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SP and PLLI2SR values from PLLI2SCFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8003692:	4a72      	ldr	r2, [pc, #456]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8003694:	f8d2 3084 	ldr.w	r3, [r2, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8003698:	f8d2 1084 	ldr.w	r1, [r2, #132]	; 0x84
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800369c:	6860      	ldr	r0, [r4, #4]
 800369e:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80036a2:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80036a6:	68e0      	ldr	r0, [r4, #12]
 80036a8:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 80036ac:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 80036b0:	430b      	orrs	r3, r1
 80036b2:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84

      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80036b6:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 80036ba:	f023 031f 	bic.w	r3, r3, #31
 80036be:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80036c0:	3901      	subs	r1, #1
 80036c2:	430b      	orrs	r3, r1
 80036c4:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SPDIF-RX -------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 80036c8:	6823      	ldr	r3, [r4, #0]
 80036ca:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
 80036ce:	d011      	beq.n	80036f4 <HAL_RCCEx_PeriphCLKConfig+0x434>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SP_VALUE(PeriphClkInit->PLLI2S.PLLI2SP));

     /* Read PLLI2SR value from PLLI2SCFGR register (this value is not needed for SPDIF-RX configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 80036d0:	4a62      	ldr	r2, [pc, #392]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 80036d2:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80036d6:	f8d2 1084 	ldr.w	r1, [r2, #132]	; 0x84
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* SPDIFCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 80036da:	6866      	ldr	r6, [r4, #4]
 80036dc:	6923      	ldr	r3, [r4, #16]
 80036de:	041b      	lsls	r3, r3, #16
 80036e0:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 80036e4:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 80036e8:	4303      	orrs	r3, r0
 80036ea:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 80036ee:	430b      	orrs	r3, r1
 80036f0:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80036f4:	6823      	ldr	r3, [r4, #0]
 80036f6:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80036fa:	d00d      	beq.n	8003718 <HAL_RCCEx_PeriphCLKConfig+0x458>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));

      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLI2SM) */
      /* SPDIFRXCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80036fc:	6862      	ldr	r2, [r4, #4]
 80036fe:	6923      	ldr	r3, [r4, #16]
 8003700:	041b      	lsls	r3, r3, #16
 8003702:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8003706:	68e2      	ldr	r2, [r4, #12]
 8003708:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800370c:	68a2      	ldr	r2, [r4, #8]
 800370e:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8003712:	4a52      	ldr	r2, [pc, #328]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8003714:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 8003718:	4a50      	ldr	r2, [pc, #320]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 800371a:	6813      	ldr	r3, [r2, #0]
 800371c:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8003720:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8003722:	f7fd ff4d 	bl	80015c0 <HAL_GetTick>
 8003726:	4606      	mov	r6, r0

    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8003728:	4b4c      	ldr	r3, [pc, #304]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 800372a:	681b      	ldr	r3, [r3, #0]
 800372c:	f013 6f00 	tst.w	r3, #134217728	; 0x8000000
 8003730:	d106      	bne.n	8003740 <HAL_RCCEx_PeriphCLKConfig+0x480>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8003732:	f7fd ff45 	bl	80015c0 <HAL_GetTick>
 8003736:	1b80      	subs	r0, r0, r6
 8003738:	2864      	cmp	r0, #100	; 0x64
 800373a:	d9f5      	bls.n	8003728 <HAL_RCCEx_PeriphCLKConfig+0x468>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 800373c:	2003      	movs	r0, #3
 800373e:	e001      	b.n	8003744 <HAL_RCCEx_PeriphCLKConfig+0x484>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 8003740:	b915      	cbnz	r5, 8003748 <HAL_RCCEx_PeriphCLKConfig+0x488>
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 8003742:	2000      	movs	r0, #0
}
 8003744:	b003      	add	sp, #12
 8003746:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 8003748:	4a44      	ldr	r2, [pc, #272]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 800374a:	6813      	ldr	r3, [r2, #0]
 800374c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003750:	6013      	str	r3, [r2, #0]
    tickstart = HAL_GetTick();
 8003752:	f7fd ff35 	bl	80015c0 <HAL_GetTick>
 8003756:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8003758:	4b40      	ldr	r3, [pc, #256]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 800375a:	681b      	ldr	r3, [r3, #0]
 800375c:	f013 5f00 	tst.w	r3, #536870912	; 0x20000000
 8003760:	d006      	beq.n	8003770 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8003762:	f7fd ff2d 	bl	80015c0 <HAL_GetTick>
 8003766:	1b40      	subs	r0, r0, r5
 8003768:	2864      	cmp	r0, #100	; 0x64
 800376a:	d9f5      	bls.n	8003758 <HAL_RCCEx_PeriphCLKConfig+0x498>
        return HAL_TIMEOUT;
 800376c:	2003      	movs	r0, #3
 800376e:	e7e9      	b.n	8003744 <HAL_RCCEx_PeriphCLKConfig+0x484>
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8003770:	6823      	ldr	r3, [r4, #0]
 8003772:	f413 2f00 	tst.w	r3, #524288	; 0x80000
 8003776:	d001      	beq.n	800377c <HAL_RCCEx_PeriphCLKConfig+0x4bc>
 8003778:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800377a:	b122      	cbz	r2, 8003786 <HAL_RCCEx_PeriphCLKConfig+0x4c6>
 800377c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8003780:	d01d      	beq.n	80037be <HAL_RCCEx_PeriphCLKConfig+0x4fe>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 8003782:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003784:	b9db      	cbnz	r3, 80037be <HAL_RCCEx_PeriphCLKConfig+0x4fe>
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8003786:	4a35      	ldr	r2, [pc, #212]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8003788:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800378c:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8003790:	6960      	ldr	r0, [r4, #20]
 8003792:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003796:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800379a:	69a0      	ldr	r0, [r4, #24]
 800379c:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 80037a0:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 80037a4:	430b      	orrs	r3, r1
 80037a6:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80037aa:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 80037ae:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 80037b2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80037b4:	3901      	subs	r1, #1
 80037b6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80037ba:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 80037be:	6823      	ldr	r3, [r4, #0]
 80037c0:	f413 1f00 	tst.w	r3, #2097152	; 0x200000
 80037c4:	d003      	beq.n	80037ce <HAL_RCCEx_PeriphCLKConfig+0x50e>
 80037c6:	6fe3      	ldr	r3, [r4, #124]	; 0x7c
 80037c8:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80037cc:	d031      	beq.n	8003832 <HAL_RCCEx_PeriphCLKConfig+0x572>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80037ce:	6823      	ldr	r3, [r4, #0]
 80037d0:	f013 0f08 	tst.w	r3, #8
 80037d4:	d019      	beq.n	800380a <HAL_RCCEx_PeriphCLKConfig+0x54a>
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80037d6:	4a21      	ldr	r2, [pc, #132]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 80037d8:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 80037dc:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 80037e0:	6960      	ldr	r0, [r4, #20]
 80037e2:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80037e6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80037ea:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 80037ee:	430b      	orrs	r3, r1
 80037f0:	69e1      	ldr	r1, [r4, #28]
 80037f2:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 80037f6:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80037fa:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 80037fe:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8003802:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8003804:	430b      	orrs	r3, r1
 8003806:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800380a:	4a14      	ldr	r2, [pc, #80]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 800380c:	6813      	ldr	r3, [r2, #0]
 800380e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003812:	6013      	str	r3, [r2, #0]
    tickstart = HAL_GetTick();
 8003814:	f7fd fed4 	bl	80015c0 <HAL_GetTick>
 8003818:	4604      	mov	r4, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800381a:	4b10      	ldr	r3, [pc, #64]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 800381c:	681b      	ldr	r3, [r3, #0]
 800381e:	f013 5f00 	tst.w	r3, #536870912	; 0x20000000
 8003822:	d119      	bne.n	8003858 <HAL_RCCEx_PeriphCLKConfig+0x598>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8003824:	f7fd fecc 	bl	80015c0 <HAL_GetTick>
 8003828:	1b00      	subs	r0, r0, r4
 800382a:	2864      	cmp	r0, #100	; 0x64
 800382c:	d9f5      	bls.n	800381a <HAL_RCCEx_PeriphCLKConfig+0x55a>
        return HAL_TIMEOUT;
 800382e:	2003      	movs	r0, #3
 8003830:	e788      	b.n	8003744 <HAL_RCCEx_PeriphCLKConfig+0x484>
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8003832:	4a0a      	ldr	r2, [pc, #40]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8003834:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8003838:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 800383c:	6965      	ldr	r5, [r4, #20]
 800383e:	6a23      	ldr	r3, [r4, #32]
 8003840:	041b      	lsls	r3, r3, #16
 8003842:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8003846:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 800384a:	4303      	orrs	r3, r0
 800384c:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 8003850:	430b      	orrs	r3, r1
 8003852:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8003856:	e7ba      	b.n	80037ce <HAL_RCCEx_PeriphCLKConfig+0x50e>
  return HAL_OK;
 8003858:	2000      	movs	r0, #0
 800385a:	e773      	b.n	8003744 <HAL_RCCEx_PeriphCLKConfig+0x484>
 800385c:	40023800 	.word	0x40023800
 8003860:	0ffffcff 	.word	0x0ffffcff

08003864 <USB_CoreReset>:
  * @brief  Reset the USB Core (needed after USB clock settings change)
  * @param  USBx  Selected device
  * @retval HAL status
  */
static HAL_StatusTypeDef USB_CoreReset(USB_OTG_GlobalTypeDef *USBx)
{
 8003864:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8003866:	2300      	movs	r3, #0
 8003868:	9301      	str	r3, [sp, #4]

  /* Wait for AHB master IDLE state. */
  do
  {
    if (++count > 200000U)
 800386a:	9b01      	ldr	r3, [sp, #4]
 800386c:	3301      	adds	r3, #1
 800386e:	9301      	str	r3, [sp, #4]
 8003870:	4a0e      	ldr	r2, [pc, #56]	; (80038ac <USB_CoreReset+0x48>)
 8003872:	4293      	cmp	r3, r2
 8003874:	d814      	bhi.n	80038a0 <USB_CoreReset+0x3c>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8003876:	6903      	ldr	r3, [r0, #16]
 8003878:	2b00      	cmp	r3, #0
 800387a:	daf6      	bge.n	800386a <USB_CoreReset+0x6>

  /* Core Soft Reset */
  count = 0U;
 800387c:	2300      	movs	r3, #0
 800387e:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
 8003880:	6903      	ldr	r3, [r0, #16]
 8003882:	f043 0301 	orr.w	r3, r3, #1
 8003886:	6103      	str	r3, [r0, #16]

  do
  {
    if (++count > 200000U)
 8003888:	9b01      	ldr	r3, [sp, #4]
 800388a:	3301      	adds	r3, #1
 800388c:	9301      	str	r3, [sp, #4]
 800388e:	4a07      	ldr	r2, [pc, #28]	; (80038ac <USB_CoreReset+0x48>)
 8003890:	4293      	cmp	r3, r2
 8003892:	d808      	bhi.n	80038a6 <USB_CoreReset+0x42>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);
 8003894:	6903      	ldr	r3, [r0, #16]
 8003896:	f013 0f01 	tst.w	r3, #1
 800389a:	d1f5      	bne.n	8003888 <USB_CoreReset+0x24>

  return HAL_OK;
 800389c:	2000      	movs	r0, #0
 800389e:	e000      	b.n	80038a2 <USB_CoreReset+0x3e>
      return HAL_TIMEOUT;
 80038a0:	2003      	movs	r0, #3
}
 80038a2:	b002      	add	sp, #8
 80038a4:	4770      	bx	lr
      return HAL_TIMEOUT;
 80038a6:	2003      	movs	r0, #3
 80038a8:	e7fb      	b.n	80038a2 <USB_CoreReset+0x3e>
 80038aa:	bf00      	nop
 80038ac:	00030d40 	.word	0x00030d40

080038b0 <USB_CoreInit>:
{
 80038b0:	b084      	sub	sp, #16
 80038b2:	b510      	push	{r4, lr}
 80038b4:	4604      	mov	r4, r0
 80038b6:	a803      	add	r0, sp, #12
 80038b8:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 80038bc:	9b08      	ldr	r3, [sp, #32]
 80038be:	2b01      	cmp	r3, #1
 80038c0:	d11d      	bne.n	80038fe <USB_CoreInit+0x4e>
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 80038c2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80038c4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80038c8:	63a3      	str	r3, [r4, #56]	; 0x38
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_TSDPS | USB_OTG_GUSBCFG_ULPIFSLS | USB_OTG_GUSBCFG_PHYSEL);
 80038ca:	68e2      	ldr	r2, [r4, #12]
 80038cc:	4b16      	ldr	r3, [pc, #88]	; (8003928 <USB_CoreInit+0x78>)
 80038ce:	4013      	ands	r3, r2
 80038d0:	60e3      	str	r3, [r4, #12]
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_ULPIEVBUSD | USB_OTG_GUSBCFG_ULPIEVBUSI);
 80038d2:	68e3      	ldr	r3, [r4, #12]
 80038d4:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 80038d8:	60e3      	str	r3, [r4, #12]
    if (cfg.use_external_vbus == 1U)
 80038da:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80038dc:	2b01      	cmp	r3, #1
 80038de:	d009      	beq.n	80038f4 <USB_CoreInit+0x44>
    ret = USB_CoreReset(USBx);
 80038e0:	4620      	mov	r0, r4
 80038e2:	f7ff ffbf 	bl	8003864 <USB_CoreReset>
  if (cfg.dma_enable == 1U)
 80038e6:	9b06      	ldr	r3, [sp, #24]
 80038e8:	2b01      	cmp	r3, #1
 80038ea:	d014      	beq.n	8003916 <USB_CoreInit+0x66>
}
 80038ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80038f0:	b004      	add	sp, #16
 80038f2:	4770      	bx	lr
      USBx->GUSBCFG |= USB_OTG_GUSBCFG_ULPIEVBUSD;
 80038f4:	68e3      	ldr	r3, [r4, #12]
 80038f6:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80038fa:	60e3      	str	r3, [r4, #12]
 80038fc:	e7f0      	b.n	80038e0 <USB_CoreInit+0x30>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_PHYSEL;
 80038fe:	68e3      	ldr	r3, [r4, #12]
 8003900:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003904:	60e3      	str	r3, [r4, #12]
    ret = USB_CoreReset(USBx);
 8003906:	4620      	mov	r0, r4
 8003908:	f7ff ffac 	bl	8003864 <USB_CoreReset>
    USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 800390c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800390e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003912:	63a3      	str	r3, [r4, #56]	; 0x38
 8003914:	e7e7      	b.n	80038e6 <USB_CoreInit+0x36>
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_HBSTLEN_2;
 8003916:	68a3      	ldr	r3, [r4, #8]
 8003918:	f043 0306 	orr.w	r3, r3, #6
 800391c:	60a3      	str	r3, [r4, #8]
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_DMAEN;
 800391e:	68a3      	ldr	r3, [r4, #8]
 8003920:	f043 0320 	orr.w	r3, r3, #32
 8003924:	60a3      	str	r3, [r4, #8]
 8003926:	e7e1      	b.n	80038ec <USB_CoreInit+0x3c>
 8003928:	ffbdffbf 	.word	0xffbdffbf

0800392c <USB_SetTurnaroundTime>:
  if (speed == USBD_FS_SPEED)
 800392c:	2a02      	cmp	r2, #2
 800392e:	d00a      	beq.n	8003946 <USB_SetTurnaroundTime+0x1a>
    UsbTrd = USBD_HS_TRDT_VALUE;
 8003930:	2109      	movs	r1, #9
  USBx->GUSBCFG &= ~USB_OTG_GUSBCFG_TRDT;
 8003932:	68c2      	ldr	r2, [r0, #12]
 8003934:	f422 5270 	bic.w	r2, r2, #15360	; 0x3c00
 8003938:	60c2      	str	r2, [r0, #12]
  USBx->GUSBCFG |= (uint32_t)((UsbTrd << 10) & USB_OTG_GUSBCFG_TRDT);
 800393a:	68c3      	ldr	r3, [r0, #12]
 800393c:	ea43 2381 	orr.w	r3, r3, r1, lsl #10
 8003940:	60c3      	str	r3, [r0, #12]
}
 8003942:	2000      	movs	r0, #0
 8003944:	4770      	bx	lr
    if ((hclk >= 14200000U) && (hclk < 15000000U))
 8003946:	4b27      	ldr	r3, [pc, #156]	; (80039e4 <USB_SetTurnaroundTime+0xb8>)
 8003948:	440b      	add	r3, r1
 800394a:	4a27      	ldr	r2, [pc, #156]	; (80039e8 <USB_SetTurnaroundTime+0xbc>)
 800394c:	4293      	cmp	r3, r2
 800394e:	d939      	bls.n	80039c4 <USB_SetTurnaroundTime+0x98>
    else if ((hclk >= 15000000U) && (hclk < 16000000U))
 8003950:	4b26      	ldr	r3, [pc, #152]	; (80039ec <USB_SetTurnaroundTime+0xc0>)
 8003952:	440b      	add	r3, r1
 8003954:	4a26      	ldr	r2, [pc, #152]	; (80039f0 <USB_SetTurnaroundTime+0xc4>)
 8003956:	4293      	cmp	r3, r2
 8003958:	d936      	bls.n	80039c8 <USB_SetTurnaroundTime+0x9c>
    else if ((hclk >= 16000000U) && (hclk < 17200000U))
 800395a:	4b26      	ldr	r3, [pc, #152]	; (80039f4 <USB_SetTurnaroundTime+0xc8>)
 800395c:	440b      	add	r3, r1
 800395e:	4a26      	ldr	r2, [pc, #152]	; (80039f8 <USB_SetTurnaroundTime+0xcc>)
 8003960:	4293      	cmp	r3, r2
 8003962:	d933      	bls.n	80039cc <USB_SetTurnaroundTime+0xa0>
    else if ((hclk >= 17200000U) && (hclk < 18500000U))
 8003964:	4b25      	ldr	r3, [pc, #148]	; (80039fc <USB_SetTurnaroundTime+0xd0>)
 8003966:	440b      	add	r3, r1
 8003968:	f502 32c3 	add.w	r2, r2, #99840	; 0x18600
 800396c:	32a0      	adds	r2, #160	; 0xa0
 800396e:	4293      	cmp	r3, r2
 8003970:	d92e      	bls.n	80039d0 <USB_SetTurnaroundTime+0xa4>
    else if ((hclk >= 18500000U) && (hclk < 20000000U))
 8003972:	4b23      	ldr	r3, [pc, #140]	; (8003a00 <USB_SetTurnaroundTime+0xd4>)
 8003974:	440b      	add	r3, r1
 8003976:	4a23      	ldr	r2, [pc, #140]	; (8003a04 <USB_SetTurnaroundTime+0xd8>)
 8003978:	4293      	cmp	r3, r2
 800397a:	d92b      	bls.n	80039d4 <USB_SetTurnaroundTime+0xa8>
    else if ((hclk >= 20000000U) && (hclk < 21800000U))
 800397c:	4b22      	ldr	r3, [pc, #136]	; (8003a08 <USB_SetTurnaroundTime+0xdc>)
 800397e:	440b      	add	r3, r1
 8003980:	f502 2292 	add.w	r2, r2, #299008	; 0x49000
 8003984:	f502 7278 	add.w	r2, r2, #992	; 0x3e0
 8003988:	4293      	cmp	r3, r2
 800398a:	d925      	bls.n	80039d8 <USB_SetTurnaroundTime+0xac>
    else if ((hclk >= 21800000U) && (hclk < 24000000U))
 800398c:	4b1f      	ldr	r3, [pc, #124]	; (8003a0c <USB_SetTurnaroundTime+0xe0>)
 800398e:	440b      	add	r3, r1
 8003990:	f502 22c3 	add.w	r2, r2, #399360	; 0x61800
 8003994:	f502 7220 	add.w	r2, r2, #640	; 0x280
 8003998:	4293      	cmp	r3, r2
 800399a:	d91f      	bls.n	80039dc <USB_SetTurnaroundTime+0xb0>
    else if ((hclk >= 24000000U) && (hclk < 27700000U))
 800399c:	4b1c      	ldr	r3, [pc, #112]	; (8003a10 <USB_SetTurnaroundTime+0xe4>)
 800399e:	440b      	add	r3, r1
 80039a0:	f502 12b7 	add.w	r2, r2, #1499136	; 0x16e000
 80039a4:	f502 7258 	add.w	r2, r2, #864	; 0x360
 80039a8:	4293      	cmp	r3, r2
 80039aa:	d919      	bls.n	80039e0 <USB_SetTurnaroundTime+0xb4>
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 80039ac:	4b19      	ldr	r3, [pc, #100]	; (8003a14 <USB_SetTurnaroundTime+0xe8>)
 80039ae:	440b      	add	r3, r1
 80039b0:	f502 2212 	add.w	r2, r2, #598016	; 0x92000
 80039b4:	f502 62f8 	add.w	r2, r2, #1984	; 0x7c0
 80039b8:	4293      	cmp	r3, r2
 80039ba:	d901      	bls.n	80039c0 <USB_SetTurnaroundTime+0x94>
      UsbTrd = 0x6U;
 80039bc:	2106      	movs	r1, #6
 80039be:	e7b8      	b.n	8003932 <USB_SetTurnaroundTime+0x6>
      UsbTrd = 0x7U;
 80039c0:	2107      	movs	r1, #7
 80039c2:	e7b6      	b.n	8003932 <USB_SetTurnaroundTime+0x6>
      UsbTrd = 0xFU;
 80039c4:	210f      	movs	r1, #15
 80039c6:	e7b4      	b.n	8003932 <USB_SetTurnaroundTime+0x6>
      UsbTrd = 0xEU;
 80039c8:	210e      	movs	r1, #14
 80039ca:	e7b2      	b.n	8003932 <USB_SetTurnaroundTime+0x6>
      UsbTrd = 0xDU;
 80039cc:	210d      	movs	r1, #13
 80039ce:	e7b0      	b.n	8003932 <USB_SetTurnaroundTime+0x6>
      UsbTrd = 0xCU;
 80039d0:	210c      	movs	r1, #12
 80039d2:	e7ae      	b.n	8003932 <USB_SetTurnaroundTime+0x6>
      UsbTrd = 0xBU;
 80039d4:	210b      	movs	r1, #11
 80039d6:	e7ac      	b.n	8003932 <USB_SetTurnaroundTime+0x6>
      UsbTrd = 0xAU;
 80039d8:	210a      	movs	r1, #10
 80039da:	e7aa      	b.n	8003932 <USB_SetTurnaroundTime+0x6>
      UsbTrd = 0x9U;
 80039dc:	2109      	movs	r1, #9
 80039de:	e7a8      	b.n	8003932 <USB_SetTurnaroundTime+0x6>
      UsbTrd = 0x8U;
 80039e0:	2108      	movs	r1, #8
 80039e2:	e7a6      	b.n	8003932 <USB_SetTurnaroundTime+0x6>
 80039e4:	ff275340 	.word	0xff275340
 80039e8:	000c34ff 	.word	0x000c34ff
 80039ec:	ff1b1e40 	.word	0xff1b1e40
 80039f0:	000f423f 	.word	0x000f423f
 80039f4:	ff0bdc00 	.word	0xff0bdc00
 80039f8:	00124f7f 	.word	0x00124f7f
 80039fc:	fef98c80 	.word	0xfef98c80
 8003a00:	fee5b660 	.word	0xfee5b660
 8003a04:	0016e35f 	.word	0x0016e35f
 8003a08:	feced300 	.word	0xfeced300
 8003a0c:	feb35bc0 	.word	0xfeb35bc0
 8003a10:	fe91ca00 	.word	0xfe91ca00
 8003a14:	fe5954e0 	.word	0xfe5954e0

08003a18 <USB_EnableGlobalInt>:
  USBx->GAHBCFG |= USB_OTG_GAHBCFG_GINT;
 8003a18:	6883      	ldr	r3, [r0, #8]
 8003a1a:	f043 0301 	orr.w	r3, r3, #1
 8003a1e:	6083      	str	r3, [r0, #8]
}
 8003a20:	2000      	movs	r0, #0
 8003a22:	4770      	bx	lr

08003a24 <USB_DisableGlobalInt>:
  USBx->GAHBCFG &= ~USB_OTG_GAHBCFG_GINT;
 8003a24:	6883      	ldr	r3, [r0, #8]
 8003a26:	f023 0301 	bic.w	r3, r3, #1
 8003a2a:	6083      	str	r3, [r0, #8]
}
 8003a2c:	2000      	movs	r0, #0
 8003a2e:	4770      	bx	lr

08003a30 <USB_FlushTxFifo>:
{
 8003a30:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8003a32:	2300      	movs	r3, #0
 8003a34:	9301      	str	r3, [sp, #4]
    if (++count > 200000U)
 8003a36:	9b01      	ldr	r3, [sp, #4]
 8003a38:	3301      	adds	r3, #1
 8003a3a:	9301      	str	r3, [sp, #4]
 8003a3c:	4a0e      	ldr	r2, [pc, #56]	; (8003a78 <USB_FlushTxFifo+0x48>)
 8003a3e:	4293      	cmp	r3, r2
 8003a40:	d814      	bhi.n	8003a6c <USB_FlushTxFifo+0x3c>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8003a42:	6903      	ldr	r3, [r0, #16]
 8003a44:	2b00      	cmp	r3, #0
 8003a46:	daf6      	bge.n	8003a36 <USB_FlushTxFifo+0x6>
  count = 0U;
 8003a48:	2300      	movs	r3, #0
 8003a4a:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 8003a4c:	0189      	lsls	r1, r1, #6
 8003a4e:	f041 0120 	orr.w	r1, r1, #32
 8003a52:	6101      	str	r1, [r0, #16]
    if (++count > 200000U)
 8003a54:	9b01      	ldr	r3, [sp, #4]
 8003a56:	3301      	adds	r3, #1
 8003a58:	9301      	str	r3, [sp, #4]
 8003a5a:	4a07      	ldr	r2, [pc, #28]	; (8003a78 <USB_FlushTxFifo+0x48>)
 8003a5c:	4293      	cmp	r3, r2
 8003a5e:	d808      	bhi.n	8003a72 <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
 8003a60:	6903      	ldr	r3, [r0, #16]
 8003a62:	f013 0f20 	tst.w	r3, #32
 8003a66:	d1f5      	bne.n	8003a54 <USB_FlushTxFifo+0x24>
  return HAL_OK;
 8003a68:	2000      	movs	r0, #0
 8003a6a:	e000      	b.n	8003a6e <USB_FlushTxFifo+0x3e>
      return HAL_TIMEOUT;
 8003a6c:	2003      	movs	r0, #3
}
 8003a6e:	b002      	add	sp, #8
 8003a70:	4770      	bx	lr
      return HAL_TIMEOUT;
 8003a72:	2003      	movs	r0, #3
 8003a74:	e7fb      	b.n	8003a6e <USB_FlushTxFifo+0x3e>
 8003a76:	bf00      	nop
 8003a78:	00030d40 	.word	0x00030d40

08003a7c <USB_FlushRxFifo>:
{
 8003a7c:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8003a7e:	2300      	movs	r3, #0
 8003a80:	9301      	str	r3, [sp, #4]
    if (++count > 200000U)
 8003a82:	9b01      	ldr	r3, [sp, #4]
 8003a84:	3301      	adds	r3, #1
 8003a86:	9301      	str	r3, [sp, #4]
 8003a88:	4a0d      	ldr	r2, [pc, #52]	; (8003ac0 <USB_FlushRxFifo+0x44>)
 8003a8a:	4293      	cmp	r3, r2
 8003a8c:	d812      	bhi.n	8003ab4 <USB_FlushRxFifo+0x38>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8003a8e:	6903      	ldr	r3, [r0, #16]
 8003a90:	2b00      	cmp	r3, #0
 8003a92:	daf6      	bge.n	8003a82 <USB_FlushRxFifo+0x6>
  count = 0U;
 8003a94:	2300      	movs	r3, #0
 8003a96:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
 8003a98:	2310      	movs	r3, #16
 8003a9a:	6103      	str	r3, [r0, #16]
    if (++count > 200000U)
 8003a9c:	9b01      	ldr	r3, [sp, #4]
 8003a9e:	3301      	adds	r3, #1
 8003aa0:	9301      	str	r3, [sp, #4]
 8003aa2:	4a07      	ldr	r2, [pc, #28]	; (8003ac0 <USB_FlushRxFifo+0x44>)
 8003aa4:	4293      	cmp	r3, r2
 8003aa6:	d808      	bhi.n	8003aba <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_RXFFLSH) == USB_OTG_GRSTCTL_RXFFLSH);
 8003aa8:	6903      	ldr	r3, [r0, #16]
 8003aaa:	f013 0f10 	tst.w	r3, #16
 8003aae:	d1f5      	bne.n	8003a9c <USB_FlushRxFifo+0x20>
  return HAL_OK;
 8003ab0:	2000      	movs	r0, #0
 8003ab2:	e000      	b.n	8003ab6 <USB_FlushRxFifo+0x3a>
      return HAL_TIMEOUT;
 8003ab4:	2003      	movs	r0, #3
}
 8003ab6:	b002      	add	sp, #8
 8003ab8:	4770      	bx	lr
      return HAL_TIMEOUT;
 8003aba:	2003      	movs	r0, #3
 8003abc:	e7fb      	b.n	8003ab6 <USB_FlushRxFifo+0x3a>
 8003abe:	bf00      	nop
 8003ac0:	00030d40 	.word	0x00030d40

08003ac4 <USB_SetDevSpeed>:
  USBx_DEVICE->DCFG |= speed;
 8003ac4:	f8d0 3800 	ldr.w	r3, [r0, #2048]	; 0x800
 8003ac8:	4319      	orrs	r1, r3
 8003aca:	f8c0 1800 	str.w	r1, [r0, #2048]	; 0x800
}
 8003ace:	2000      	movs	r0, #0
 8003ad0:	4770      	bx	lr
	...

08003ad4 <USB_DevInit>:
{
 8003ad4:	b084      	sub	sp, #16
 8003ad6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003ada:	4604      	mov	r4, r0
 8003adc:	a807      	add	r0, sp, #28
 8003ade:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  uint32_t USBx_BASE = (uint32_t)USBx;
 8003ae2:	4625      	mov	r5, r4
  for (i = 0U; i < 15U; i++)
 8003ae4:	2300      	movs	r3, #0
 8003ae6:	e006      	b.n	8003af6 <USB_DevInit+0x22>
    USBx->DIEPTXF[i] = 0U;
 8003ae8:	f103 0240 	add.w	r2, r3, #64	; 0x40
 8003aec:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8003af0:	2100      	movs	r1, #0
 8003af2:	6051      	str	r1, [r2, #4]
  for (i = 0U; i < 15U; i++)
 8003af4:	3301      	adds	r3, #1
 8003af6:	2b0e      	cmp	r3, #14
 8003af8:	d9f6      	bls.n	8003ae8 <USB_DevInit+0x14>
  if (cfg.vbus_sensing_enable == 0U)
 8003afa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003afc:	bb23      	cbnz	r3, 8003b48 <USB_DevInit+0x74>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8003afe:	f8d4 3804 	ldr.w	r3, [r4, #2052]	; 0x804
 8003b02:	f043 0302 	orr.w	r3, r3, #2
 8003b06:	f8c4 3804 	str.w	r3, [r4, #2052]	; 0x804
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBDEN;
 8003b0a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003b0c:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8003b10:	63a3      	str	r3, [r4, #56]	; 0x38
    USBx->GOTGCTL |= USB_OTG_GOTGCTL_BVALOEN;
 8003b12:	6823      	ldr	r3, [r4, #0]
 8003b14:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003b18:	6023      	str	r3, [r4, #0]
    USBx->GOTGCTL |= USB_OTG_GOTGCTL_BVALOVAL;
 8003b1a:	6823      	ldr	r3, [r4, #0]
 8003b1c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003b20:	6023      	str	r3, [r4, #0]
  USBx_PCGCCTL = 0U;
 8003b22:	2300      	movs	r3, #0
 8003b24:	f8c4 3e00 	str.w	r3, [r4, #3584]	; 0xe00
  USBx_DEVICE->DCFG |= DCFG_FRAME_INTERVAL_80;
 8003b28:	f504 6600 	add.w	r6, r4, #2048	; 0x800
 8003b2c:	f8d4 3800 	ldr.w	r3, [r4, #2048]	; 0x800
 8003b30:	f8c4 3800 	str.w	r3, [r4, #2048]	; 0x800
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 8003b34:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003b36:	2b01      	cmp	r3, #1
 8003b38:	d110      	bne.n	8003b5c <USB_DevInit+0x88>
    if (cfg.speed == USBD_HS_SPEED)
 8003b3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003b3c:	b94b      	cbnz	r3, 8003b52 <USB_DevInit+0x7e>
      (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_HIGH);
 8003b3e:	2100      	movs	r1, #0
 8003b40:	4620      	mov	r0, r4
 8003b42:	f7ff ffbf 	bl	8003ac4 <USB_SetDevSpeed>
 8003b46:	e00d      	b.n	8003b64 <USB_DevInit+0x90>
    USBx->GCCFG |= USB_OTG_GCCFG_VBDEN;
 8003b48:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003b4a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003b4e:	63a3      	str	r3, [r4, #56]	; 0x38
 8003b50:	e7e7      	b.n	8003b22 <USB_DevInit+0x4e>
      (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_HIGH_IN_FULL);
 8003b52:	2101      	movs	r1, #1
 8003b54:	4620      	mov	r0, r4
 8003b56:	f7ff ffb5 	bl	8003ac4 <USB_SetDevSpeed>
 8003b5a:	e003      	b.n	8003b64 <USB_DevInit+0x90>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 8003b5c:	2103      	movs	r1, #3
 8003b5e:	4620      	mov	r0, r4
 8003b60:	f7ff ffb0 	bl	8003ac4 <USB_SetDevSpeed>
  if (USB_FlushTxFifo(USBx, 0x10U) != HAL_OK) /* all Tx FIFOs */
 8003b64:	2110      	movs	r1, #16
 8003b66:	4620      	mov	r0, r4
 8003b68:	f7ff ff62 	bl	8003a30 <USB_FlushTxFifo>
 8003b6c:	4680      	mov	r8, r0
 8003b6e:	b108      	cbz	r0, 8003b74 <USB_DevInit+0xa0>
    ret = HAL_ERROR;
 8003b70:	f04f 0801 	mov.w	r8, #1
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 8003b74:	4620      	mov	r0, r4
 8003b76:	f7ff ff81 	bl	8003a7c <USB_FlushRxFifo>
 8003b7a:	b108      	cbz	r0, 8003b80 <USB_DevInit+0xac>
    ret = HAL_ERROR;
 8003b7c:	f04f 0801 	mov.w	r8, #1
  USBx_DEVICE->DIEPMSK = 0U;
 8003b80:	2300      	movs	r3, #0
 8003b82:	6133      	str	r3, [r6, #16]
  USBx_DEVICE->DOEPMSK = 0U;
 8003b84:	6173      	str	r3, [r6, #20]
  USBx_DEVICE->DAINTMSK = 0U;
 8003b86:	61f3      	str	r3, [r6, #28]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8003b88:	e00a      	b.n	8003ba0 <USB_DevInit+0xcc>
      if (i == 0U)
 8003b8a:	b9c3      	cbnz	r3, 8003bbe <USB_DevInit+0xea>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 8003b8c:	f04f 6000 	mov.w	r0, #134217728	; 0x8000000
 8003b90:	f8c2 0900 	str.w	r0, [r2, #2304]	; 0x900
    USBx_INEP(i)->DIEPTSIZ = 0U;
 8003b94:	2200      	movs	r2, #0
 8003b96:	610a      	str	r2, [r1, #16]
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 8003b98:	f64f 327f 	movw	r2, #64383	; 0xfb7f
 8003b9c:	608a      	str	r2, [r1, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8003b9e:	3301      	adds	r3, #1
 8003ba0:	9907      	ldr	r1, [sp, #28]
 8003ba2:	4299      	cmp	r1, r3
 8003ba4:	d910      	bls.n	8003bc8 <USB_DevInit+0xf4>
    if ((USBx_INEP(i)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8003ba6:	eb05 1243 	add.w	r2, r5, r3, lsl #5
 8003baa:	f502 6110 	add.w	r1, r2, #2304	; 0x900
 8003bae:	f8d2 0900 	ldr.w	r0, [r2, #2304]	; 0x900
 8003bb2:	2800      	cmp	r0, #0
 8003bb4:	dbe9      	blt.n	8003b8a <USB_DevInit+0xb6>
      USBx_INEP(i)->DIEPCTL = 0U;
 8003bb6:	2000      	movs	r0, #0
 8003bb8:	f8c2 0900 	str.w	r0, [r2, #2304]	; 0x900
 8003bbc:	e7ea      	b.n	8003b94 <USB_DevInit+0xc0>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 8003bbe:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8003bc2:	f8c2 0900 	str.w	r0, [r2, #2304]	; 0x900
 8003bc6:	e7e5      	b.n	8003b94 <USB_DevInit+0xc0>
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8003bc8:	2300      	movs	r3, #0
 8003bca:	e00a      	b.n	8003be2 <USB_DevInit+0x10e>
      if (i == 0U)
 8003bcc:	b1bb      	cbz	r3, 8003bfe <USB_DevInit+0x12a>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 8003bce:	f04f 4790 	mov.w	r7, #1207959552	; 0x48000000
 8003bd2:	f8c2 7b00 	str.w	r7, [r2, #2816]	; 0xb00
    USBx_OUTEP(i)->DOEPTSIZ = 0U;
 8003bd6:	2200      	movs	r2, #0
 8003bd8:	6102      	str	r2, [r0, #16]
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 8003bda:	f64f 327f 	movw	r2, #64383	; 0xfb7f
 8003bde:	6082      	str	r2, [r0, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8003be0:	3301      	adds	r3, #1
 8003be2:	4299      	cmp	r1, r3
 8003be4:	d910      	bls.n	8003c08 <USB_DevInit+0x134>
    if ((USBx_OUTEP(i)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8003be6:	eb05 1243 	add.w	r2, r5, r3, lsl #5
 8003bea:	f502 6030 	add.w	r0, r2, #2816	; 0xb00
 8003bee:	f8d2 7b00 	ldr.w	r7, [r2, #2816]	; 0xb00
 8003bf2:	2f00      	cmp	r7, #0
 8003bf4:	dbea      	blt.n	8003bcc <USB_DevInit+0xf8>
      USBx_OUTEP(i)->DOEPCTL = 0U;
 8003bf6:	2700      	movs	r7, #0
 8003bf8:	f8c2 7b00 	str.w	r7, [r2, #2816]	; 0xb00
 8003bfc:	e7eb      	b.n	8003bd6 <USB_DevInit+0x102>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 8003bfe:	f04f 6700 	mov.w	r7, #134217728	; 0x8000000
 8003c02:	f8c2 7b00 	str.w	r7, [r2, #2816]	; 0xb00
 8003c06:	e7e6      	b.n	8003bd6 <USB_DevInit+0x102>
  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
 8003c08:	6933      	ldr	r3, [r6, #16]
 8003c0a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003c0e:	6133      	str	r3, [r6, #16]
  USBx->GINTMSK = 0U;
 8003c10:	2300      	movs	r3, #0
 8003c12:	61a3      	str	r3, [r4, #24]
  USBx->GINTSTS = 0xBFFFFFFFU;
 8003c14:	f06f 4380 	mvn.w	r3, #1073741824	; 0x40000000
 8003c18:	6163      	str	r3, [r4, #20]
  if (cfg.dma_enable == 0U)
 8003c1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003c1c:	b91b      	cbnz	r3, 8003c26 <USB_DevInit+0x152>
    USBx->GINTMSK |= USB_OTG_GINTMSK_RXFLVLM;
 8003c1e:	69a3      	ldr	r3, [r4, #24]
 8003c20:	f043 0310 	orr.w	r3, r3, #16
 8003c24:	61a3      	str	r3, [r4, #24]
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
 8003c26:	69a2      	ldr	r2, [r4, #24]
 8003c28:	4b0a      	ldr	r3, [pc, #40]	; (8003c54 <USB_DevInit+0x180>)
 8003c2a:	4313      	orrs	r3, r2
 8003c2c:	61a3      	str	r3, [r4, #24]
  if (cfg.Sof_enable != 0U)
 8003c2e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003c30:	b11b      	cbz	r3, 8003c3a <USB_DevInit+0x166>
    USBx->GINTMSK |= USB_OTG_GINTMSK_SOFM;
 8003c32:	69a3      	ldr	r3, [r4, #24]
 8003c34:	f043 0308 	orr.w	r3, r3, #8
 8003c38:	61a3      	str	r3, [r4, #24]
  if (cfg.vbus_sensing_enable == 1U)
 8003c3a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003c3c:	2b01      	cmp	r3, #1
 8003c3e:	d004      	beq.n	8003c4a <USB_DevInit+0x176>
}
 8003c40:	4640      	mov	r0, r8
 8003c42:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003c46:	b004      	add	sp, #16
 8003c48:	4770      	bx	lr
    USBx->GINTMSK |= (USB_OTG_GINTMSK_SRQIM | USB_OTG_GINTMSK_OTGINT);
 8003c4a:	69a2      	ldr	r2, [r4, #24]
 8003c4c:	4b02      	ldr	r3, [pc, #8]	; (8003c58 <USB_DevInit+0x184>)
 8003c4e:	4313      	orrs	r3, r2
 8003c50:	61a3      	str	r3, [r4, #24]
 8003c52:	e7f5      	b.n	8003c40 <USB_DevInit+0x16c>
 8003c54:	803c3800 	.word	0x803c3800
 8003c58:	40000004 	.word	0x40000004

08003c5c <USB_GetDevSpeed>:
  uint32_t DevEnumSpeed = USBx_DEVICE->DSTS & USB_OTG_DSTS_ENUMSPD;
 8003c5c:	f8d0 3808 	ldr.w	r3, [r0, #2056]	; 0x808
  if (DevEnumSpeed == DSTS_ENUMSPD_HS_PHY_30MHZ_OR_60MHZ)
 8003c60:	f013 0306 	ands.w	r3, r3, #6
 8003c64:	d005      	beq.n	8003c72 <USB_GetDevSpeed+0x16>
  else if ((DevEnumSpeed == DSTS_ENUMSPD_FS_PHY_30MHZ_OR_60MHZ) ||
 8003c66:	2b06      	cmp	r3, #6
 8003c68:	bf18      	it	ne
 8003c6a:	2b02      	cmpne	r3, #2
 8003c6c:	d103      	bne.n	8003c76 <USB_GetDevSpeed+0x1a>
    speed = USBD_FS_SPEED;
 8003c6e:	2002      	movs	r0, #2
 8003c70:	4770      	bx	lr
    speed = USBD_HS_SPEED;
 8003c72:	2000      	movs	r0, #0
 8003c74:	4770      	bx	lr
    speed = 0xFU;
 8003c76:	200f      	movs	r0, #15
}
 8003c78:	4770      	bx	lr
	...

08003c7c <USB_ActivateEndpoint>:
{
 8003c7c:	b470      	push	{r4, r5, r6}
  uint32_t epnum = (uint32_t)ep->num;
 8003c7e:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8003c80:	784a      	ldrb	r2, [r1, #1]
 8003c82:	2a01      	cmp	r2, #1
 8003c84:	d020      	beq.n	8003cc8 <USB_ActivateEndpoint+0x4c>
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16);
 8003c86:	f8d0 281c 	ldr.w	r2, [r0, #2076]	; 0x81c
 8003c8a:	f003 060f 	and.w	r6, r3, #15
 8003c8e:	2401      	movs	r4, #1
 8003c90:	40b4      	lsls	r4, r6
 8003c92:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8003c96:	f8c0 281c 	str.w	r2, [r0, #2076]	; 0x81c
    if (((USBx_OUTEP(epnum)->DOEPCTL) & USB_OTG_DOEPCTL_USBAEP) == 0U)
 8003c9a:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8003c9e:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 8003ca2:	f413 4f00 	tst.w	r3, #32768	; 0x8000
 8003ca6:	d10c      	bne.n	8003cc2 <USB_ActivateEndpoint+0x46>
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 8003ca8:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	; 0xb00
 8003cac:	688b      	ldr	r3, [r1, #8]
 8003cae:	f3c3 030a 	ubfx	r3, r3, #0, #11
                                    ((uint32_t)ep->type << 18) |
 8003cb2:	78c9      	ldrb	r1, [r1, #3]
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 8003cb4:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
 8003cb8:	4313      	orrs	r3, r2
 8003cba:	4a13      	ldr	r2, [pc, #76]	; (8003d08 <USB_ActivateEndpoint+0x8c>)
 8003cbc:	431a      	orrs	r2, r3
 8003cbe:	f8c0 2b00 	str.w	r2, [r0, #2816]	; 0xb00
}
 8003cc2:	2000      	movs	r0, #0
 8003cc4:	bc70      	pop	{r4, r5, r6}
 8003cc6:	4770      	bx	lr
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 8003cc8:	f8d0 481c 	ldr.w	r4, [r0, #2076]	; 0x81c
 8003ccc:	f003 060f 	and.w	r6, r3, #15
 8003cd0:	40b2      	lsls	r2, r6
 8003cd2:	b292      	uxth	r2, r2
 8003cd4:	4322      	orrs	r2, r4
 8003cd6:	f8c0 281c 	str.w	r2, [r0, #2076]	; 0x81c
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 8003cda:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8003cde:	f8d0 2900 	ldr.w	r2, [r0, #2304]	; 0x900
 8003ce2:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 8003ce6:	d1ec      	bne.n	8003cc2 <USB_ActivateEndpoint+0x46>
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 8003ce8:	f8d0 4900 	ldr.w	r4, [r0, #2304]	; 0x900
 8003cec:	688a      	ldr	r2, [r1, #8]
 8003cee:	f3c2 020a 	ubfx	r2, r2, #0, #11
                                   ((uint32_t)ep->type << 18) | (epnum << 22) |
 8003cf2:	78c9      	ldrb	r1, [r1, #3]
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 8003cf4:	ea42 4281 	orr.w	r2, r2, r1, lsl #18
                                   ((uint32_t)ep->type << 18) | (epnum << 22) |
 8003cf8:	ea42 5383 	orr.w	r3, r2, r3, lsl #22
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 8003cfc:	4323      	orrs	r3, r4
 8003cfe:	4a02      	ldr	r2, [pc, #8]	; (8003d08 <USB_ActivateEndpoint+0x8c>)
 8003d00:	431a      	orrs	r2, r3
 8003d02:	f8c0 2900 	str.w	r2, [r0, #2304]	; 0x900
 8003d06:	e7dc      	b.n	8003cc2 <USB_ActivateEndpoint+0x46>
 8003d08:	10008000 	.word	0x10008000

08003d0c <USB_DeactivateEndpoint>:
{
 8003d0c:	b430      	push	{r4, r5}
  uint32_t epnum = (uint32_t)ep->num;
 8003d0e:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8003d10:	784a      	ldrb	r2, [r1, #1]
 8003d12:	2a01      	cmp	r2, #1
 8003d14:	d024      	beq.n	8003d60 <USB_DeactivateEndpoint+0x54>
    if ((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8003d16:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 8003d1a:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 8003d1e:	2a00      	cmp	r2, #0
 8003d20:	db50      	blt.n	8003dc4 <USB_DeactivateEndpoint+0xb8>
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 8003d22:	f8d0 583c 	ldr.w	r5, [r0, #2108]	; 0x83c
 8003d26:	780a      	ldrb	r2, [r1, #0]
 8003d28:	f002 020f 	and.w	r2, r2, #15
 8003d2c:	2401      	movs	r4, #1
 8003d2e:	fa04 f202 	lsl.w	r2, r4, r2
 8003d32:	ea25 4202 	bic.w	r2, r5, r2, lsl #16
 8003d36:	f8c0 283c 	str.w	r2, [r0, #2108]	; 0x83c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 8003d3a:	f8d0 281c 	ldr.w	r2, [r0, #2076]	; 0x81c
 8003d3e:	7809      	ldrb	r1, [r1, #0]
 8003d40:	f001 010f 	and.w	r1, r1, #15
 8003d44:	408c      	lsls	r4, r1
 8003d46:	ea22 4404 	bic.w	r4, r2, r4, lsl #16
 8003d4a:	f8c0 481c 	str.w	r4, [r0, #2076]	; 0x81c
    USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_USBAEP |
 8003d4e:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	; 0xb00
 8003d52:	4a23      	ldr	r2, [pc, #140]	; (8003de0 <USB_DeactivateEndpoint+0xd4>)
 8003d54:	400a      	ands	r2, r1
 8003d56:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
}
 8003d5a:	2000      	movs	r0, #0
 8003d5c:	bc30      	pop	{r4, r5}
 8003d5e:	4770      	bx	lr
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8003d60:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 8003d64:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 8003d68:	2a00      	cmp	r2, #0
 8003d6a:	db1e      	blt.n	8003daa <USB_DeactivateEndpoint+0x9e>
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 8003d6c:	f8d0 583c 	ldr.w	r5, [r0, #2108]	; 0x83c
 8003d70:	780a      	ldrb	r2, [r1, #0]
 8003d72:	f002 020f 	and.w	r2, r2, #15
 8003d76:	2401      	movs	r4, #1
 8003d78:	fa04 f202 	lsl.w	r2, r4, r2
 8003d7c:	b292      	uxth	r2, r2
 8003d7e:	ea25 0202 	bic.w	r2, r5, r2
 8003d82:	f8c0 283c 	str.w	r2, [r0, #2108]	; 0x83c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 8003d86:	f8d0 281c 	ldr.w	r2, [r0, #2076]	; 0x81c
 8003d8a:	7809      	ldrb	r1, [r1, #0]
 8003d8c:	f001 010f 	and.w	r1, r1, #15
 8003d90:	408c      	lsls	r4, r1
 8003d92:	b2a4      	uxth	r4, r4
 8003d94:	ea22 0404 	bic.w	r4, r2, r4
 8003d98:	f8c0 481c 	str.w	r4, [r0, #2076]	; 0x81c
    USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_USBAEP |
 8003d9c:	f8d3 1900 	ldr.w	r1, [r3, #2304]	; 0x900
 8003da0:	4a10      	ldr	r2, [pc, #64]	; (8003de4 <USB_DeactivateEndpoint+0xd8>)
 8003da2:	400a      	ands	r2, r1
 8003da4:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
 8003da8:	e7d7      	b.n	8003d5a <USB_DeactivateEndpoint+0x4e>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SNAK;
 8003daa:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 8003dae:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8003db2:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_EPDIS;
 8003db6:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 8003dba:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003dbe:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
 8003dc2:	e7d3      	b.n	8003d6c <USB_DeactivateEndpoint+0x60>
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 8003dc4:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 8003dc8:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8003dcc:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_EPDIS;
 8003dd0:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 8003dd4:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003dd8:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
 8003ddc:	e7a1      	b.n	8003d22 <USB_DeactivateEndpoint+0x16>
 8003dde:	bf00      	nop
 8003de0:	eff37800 	.word	0xeff37800
 8003de4:	ec337800 	.word	0xec337800

08003de8 <USB_EP0StartXfer>:
{
 8003de8:	b470      	push	{r4, r5, r6}
  uint32_t epnum = (uint32_t)ep->num;
 8003dea:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8003dec:	784c      	ldrb	r4, [r1, #1]
 8003dee:	2c01      	cmp	r4, #1
 8003df0:	d024      	beq.n	8003e3c <USB_EP0StartXfer+0x54>
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 8003df2:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8003df6:	f500 6330 	add.w	r3, r0, #2816	; 0xb00
 8003dfa:	691d      	ldr	r5, [r3, #16]
 8003dfc:	4c3e      	ldr	r4, [pc, #248]	; (8003ef8 <USB_EP0StartXfer+0x110>)
 8003dfe:	402c      	ands	r4, r5
 8003e00:	611c      	str	r4, [r3, #16]
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 8003e02:	691d      	ldr	r5, [r3, #16]
 8003e04:	4c3d      	ldr	r4, [pc, #244]	; (8003efc <USB_EP0StartXfer+0x114>)
 8003e06:	402c      	ands	r4, r5
 8003e08:	611c      	str	r4, [r3, #16]
    if (ep->xfer_len > 0U)
 8003e0a:	694c      	ldr	r4, [r1, #20]
 8003e0c:	b10c      	cbz	r4, 8003e12 <USB_EP0StartXfer+0x2a>
      ep->xfer_len = ep->maxpacket;
 8003e0e:	688c      	ldr	r4, [r1, #8]
 8003e10:	614c      	str	r4, [r1, #20]
    USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 8003e12:	691c      	ldr	r4, [r3, #16]
 8003e14:	f444 2400 	orr.w	r4, r4, #524288	; 0x80000
 8003e18:	611c      	str	r4, [r3, #16]
    USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & (ep->maxpacket));
 8003e1a:	691c      	ldr	r4, [r3, #16]
 8003e1c:	688d      	ldr	r5, [r1, #8]
 8003e1e:	f3c5 0512 	ubfx	r5, r5, #0, #19
 8003e22:	432c      	orrs	r4, r5
 8003e24:	611c      	str	r4, [r3, #16]
    if (dma == 1U)
 8003e26:	2a01      	cmp	r2, #1
 8003e28:	d061      	beq.n	8003eee <USB_EP0StartXfer+0x106>
    USBx_OUTEP(epnum)->DOEPCTL |= (USB_OTG_DOEPCTL_CNAK | USB_OTG_DOEPCTL_EPENA);
 8003e2a:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 8003e2e:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 8003e32:	f8c0 3b00 	str.w	r3, [r0, #2816]	; 0xb00
}
 8003e36:	2000      	movs	r0, #0
 8003e38:	bc70      	pop	{r4, r5, r6}
 8003e3a:	4770      	bx	lr
    if (ep->xfer_len == 0U)
 8003e3c:	694c      	ldr	r4, [r1, #20]
 8003e3e:	bb5c      	cbnz	r4, 8003e98 <USB_EP0StartXfer+0xb0>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8003e40:	eb00 1443 	add.w	r4, r0, r3, lsl #5
 8003e44:	f8d4 6910 	ldr.w	r6, [r4, #2320]	; 0x910
 8003e48:	4d2c      	ldr	r5, [pc, #176]	; (8003efc <USB_EP0StartXfer+0x114>)
 8003e4a:	4035      	ands	r5, r6
 8003e4c:	f8c4 5910 	str.w	r5, [r4, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 8003e50:	f8d4 5910 	ldr.w	r5, [r4, #2320]	; 0x910
 8003e54:	f445 2500 	orr.w	r5, r5, #524288	; 0x80000
 8003e58:	f8c4 5910 	str.w	r5, [r4, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 8003e5c:	f8d4 6910 	ldr.w	r6, [r4, #2320]	; 0x910
 8003e60:	4d25      	ldr	r5, [pc, #148]	; (8003ef8 <USB_EP0StartXfer+0x110>)
 8003e62:	4035      	ands	r5, r6
 8003e64:	f8c4 5910 	str.w	r5, [r4, #2320]	; 0x910
    if (dma == 1U)
 8003e68:	2a01      	cmp	r2, #1
 8003e6a:	d031      	beq.n	8003ed0 <USB_EP0StartXfer+0xe8>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8003e6c:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 8003e70:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 8003e74:	f042 4204 	orr.w	r2, r2, #2214592512	; 0x84000000
 8003e78:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
      if (ep->xfer_len > 0U)
 8003e7c:	694b      	ldr	r3, [r1, #20]
 8003e7e:	2b00      	cmp	r3, #0
 8003e80:	d0d9      	beq.n	8003e36 <USB_EP0StartXfer+0x4e>
        USBx_DEVICE->DIEPEMPMSK |= 1UL << (ep->num & EP_ADDR_MSK);
 8003e82:	f8d0 2834 	ldr.w	r2, [r0, #2100]	; 0x834
 8003e86:	7809      	ldrb	r1, [r1, #0]
 8003e88:	f001 040f 	and.w	r4, r1, #15
 8003e8c:	2101      	movs	r1, #1
 8003e8e:	40a1      	lsls	r1, r4
 8003e90:	430a      	orrs	r2, r1
 8003e92:	f8c0 2834 	str.w	r2, [r0, #2100]	; 0x834
 8003e96:	e7ce      	b.n	8003e36 <USB_EP0StartXfer+0x4e>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 8003e98:	eb00 1443 	add.w	r4, r0, r3, lsl #5
 8003e9c:	f504 6410 	add.w	r4, r4, #2304	; 0x900
 8003ea0:	6926      	ldr	r6, [r4, #16]
 8003ea2:	4d15      	ldr	r5, [pc, #84]	; (8003ef8 <USB_EP0StartXfer+0x110>)
 8003ea4:	4035      	ands	r5, r6
 8003ea6:	6125      	str	r5, [r4, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8003ea8:	6926      	ldr	r6, [r4, #16]
 8003eaa:	4d14      	ldr	r5, [pc, #80]	; (8003efc <USB_EP0StartXfer+0x114>)
 8003eac:	4035      	ands	r5, r6
 8003eae:	6125      	str	r5, [r4, #16]
      if (ep->xfer_len > ep->maxpacket)
 8003eb0:	694e      	ldr	r6, [r1, #20]
 8003eb2:	688d      	ldr	r5, [r1, #8]
 8003eb4:	42ae      	cmp	r6, r5
 8003eb6:	d900      	bls.n	8003eba <USB_EP0StartXfer+0xd2>
        ep->xfer_len = ep->maxpacket;
 8003eb8:	614d      	str	r5, [r1, #20]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 8003eba:	6925      	ldr	r5, [r4, #16]
 8003ebc:	f445 2500 	orr.w	r5, r5, #524288	; 0x80000
 8003ec0:	6125      	str	r5, [r4, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 8003ec2:	6925      	ldr	r5, [r4, #16]
 8003ec4:	694e      	ldr	r6, [r1, #20]
 8003ec6:	f3c6 0612 	ubfx	r6, r6, #0, #19
 8003eca:	4335      	orrs	r5, r6
 8003ecc:	6125      	str	r5, [r4, #16]
 8003ece:	e7cb      	b.n	8003e68 <USB_EP0StartXfer+0x80>
      if ((uint32_t)ep->dma_addr != 0U)
 8003ed0:	690a      	ldr	r2, [r1, #16]
 8003ed2:	b11a      	cbz	r2, 8003edc <USB_EP0StartXfer+0xf4>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
 8003ed4:	eb00 1143 	add.w	r1, r0, r3, lsl #5
 8003ed8:	f8c1 2914 	str.w	r2, [r1, #2324]	; 0x914
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8003edc:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8003ee0:	f8d0 2900 	ldr.w	r2, [r0, #2304]	; 0x900
 8003ee4:	f042 4204 	orr.w	r2, r2, #2214592512	; 0x84000000
 8003ee8:	f8c0 2900 	str.w	r2, [r0, #2304]	; 0x900
 8003eec:	e7a3      	b.n	8003e36 <USB_EP0StartXfer+0x4e>
      if ((uint32_t)ep->xfer_buff != 0U)
 8003eee:	68ca      	ldr	r2, [r1, #12]
 8003ef0:	2a00      	cmp	r2, #0
 8003ef2:	d09a      	beq.n	8003e2a <USB_EP0StartXfer+0x42>
        USBx_OUTEP(epnum)->DOEPDMA = (uint32_t)(ep->xfer_buff);
 8003ef4:	615a      	str	r2, [r3, #20]
 8003ef6:	e798      	b.n	8003e2a <USB_EP0StartXfer+0x42>
 8003ef8:	fff80000 	.word	0xfff80000
 8003efc:	e007ffff 	.word	0xe007ffff

08003f00 <USB_WritePacket>:
{
 8003f00:	b470      	push	{r4, r5, r6}
 8003f02:	f89d 400c 	ldrb.w	r4, [sp, #12]
  if (dma == 0U)
 8003f06:	b964      	cbnz	r4, 8003f22 <USB_WritePacket+0x22>
    count32b = ((uint32_t)len + 3U) / 4U;
 8003f08:	3303      	adds	r3, #3
 8003f0a:	089d      	lsrs	r5, r3, #2
    for (i = 0U; i < count32b; i++)
 8003f0c:	e007      	b.n	8003f1e <USB_WritePacket+0x1e>
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 8003f0e:	eb00 3302 	add.w	r3, r0, r2, lsl #12
 8003f12:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8003f16:	f851 6b04 	ldr.w	r6, [r1], #4
 8003f1a:	601e      	str	r6, [r3, #0]
    for (i = 0U; i < count32b; i++)
 8003f1c:	3401      	adds	r4, #1
 8003f1e:	42ac      	cmp	r4, r5
 8003f20:	d3f5      	bcc.n	8003f0e <USB_WritePacket+0xe>
}
 8003f22:	2000      	movs	r0, #0
 8003f24:	bc70      	pop	{r4, r5, r6}
 8003f26:	4770      	bx	lr

08003f28 <USB_EPStartXfer>:
{
 8003f28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003f2a:	b083      	sub	sp, #12
  uint32_t epnum = (uint32_t)ep->num;
 8003f2c:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8003f2e:	784c      	ldrb	r4, [r1, #1]
 8003f30:	2c01      	cmp	r4, #1
 8003f32:	d029      	beq.n	8003f88 <USB_EPStartXfer+0x60>
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 8003f34:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 8003f38:	f503 6430 	add.w	r4, r3, #2816	; 0xb00
 8003f3c:	6926      	ldr	r6, [r4, #16]
 8003f3e:	4d7d      	ldr	r5, [pc, #500]	; (8004134 <USB_EPStartXfer+0x20c>)
 8003f40:	4035      	ands	r5, r6
 8003f42:	6125      	str	r5, [r4, #16]
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 8003f44:	6926      	ldr	r6, [r4, #16]
 8003f46:	4d7c      	ldr	r5, [pc, #496]	; (8004138 <USB_EPStartXfer+0x210>)
 8003f48:	4035      	ands	r5, r6
 8003f4a:	6125      	str	r5, [r4, #16]
    if (ep->xfer_len == 0U)
 8003f4c:	694d      	ldr	r5, [r1, #20]
 8003f4e:	2d00      	cmp	r5, #0
 8003f50:	f040 80c1 	bne.w	80040d6 <USB_EPStartXfer+0x1ae>
      USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->maxpacket);
 8003f54:	6925      	ldr	r5, [r4, #16]
 8003f56:	688e      	ldr	r6, [r1, #8]
 8003f58:	f3c6 0612 	ubfx	r6, r6, #0, #19
 8003f5c:	4335      	orrs	r5, r6
 8003f5e:	6125      	str	r5, [r4, #16]
      USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 8003f60:	6925      	ldr	r5, [r4, #16]
 8003f62:	f445 2500 	orr.w	r5, r5, #524288	; 0x80000
 8003f66:	6125      	str	r5, [r4, #16]
    if (dma == 1U)
 8003f68:	2a01      	cmp	r2, #1
 8003f6a:	f000 80c9 	beq.w	8004100 <USB_EPStartXfer+0x1d8>
    if (ep->type == EP_TYPE_ISOC)
 8003f6e:	78ca      	ldrb	r2, [r1, #3]
 8003f70:	2a01      	cmp	r2, #1
 8003f72:	f000 80cb 	beq.w	800410c <USB_EPStartXfer+0x1e4>
    USBx_OUTEP(epnum)->DOEPCTL |= (USB_OTG_DOEPCTL_CNAK | USB_OTG_DOEPCTL_EPENA);
 8003f76:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 8003f7a:	f042 4204 	orr.w	r2, r2, #2214592512	; 0x84000000
 8003f7e:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
}
 8003f82:	2000      	movs	r0, #0
 8003f84:	b003      	add	sp, #12
 8003f86:	bdf0      	pop	{r4, r5, r6, r7, pc}
    if (ep->xfer_len == 0U)
 8003f88:	694c      	ldr	r4, [r1, #20]
 8003f8a:	bb74      	cbnz	r4, 8003fea <USB_EPStartXfer+0xc2>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8003f8c:	eb00 1443 	add.w	r4, r0, r3, lsl #5
 8003f90:	f8d4 6910 	ldr.w	r6, [r4, #2320]	; 0x910
 8003f94:	4d68      	ldr	r5, [pc, #416]	; (8004138 <USB_EPStartXfer+0x210>)
 8003f96:	4035      	ands	r5, r6
 8003f98:	f8c4 5910 	str.w	r5, [r4, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 8003f9c:	f8d4 5910 	ldr.w	r5, [r4, #2320]	; 0x910
 8003fa0:	f445 2500 	orr.w	r5, r5, #524288	; 0x80000
 8003fa4:	f8c4 5910 	str.w	r5, [r4, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 8003fa8:	f8d4 6910 	ldr.w	r6, [r4, #2320]	; 0x910
 8003fac:	4d61      	ldr	r5, [pc, #388]	; (8004134 <USB_EPStartXfer+0x20c>)
 8003fae:	4035      	ands	r5, r6
 8003fb0:	f8c4 5910 	str.w	r5, [r4, #2320]	; 0x910
    if (dma == 1U)
 8003fb4:	2a01      	cmp	r2, #1
 8003fb6:	d04a      	beq.n	800404e <USB_EPStartXfer+0x126>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8003fb8:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 8003fbc:	f8d3 4900 	ldr.w	r4, [r3, #2304]	; 0x900
 8003fc0:	f044 4404 	orr.w	r4, r4, #2214592512	; 0x84000000
 8003fc4:	f8c3 4900 	str.w	r4, [r3, #2304]	; 0x900
      if (ep->type != EP_TYPE_ISOC)
 8003fc8:	78cc      	ldrb	r4, [r1, #3]
 8003fca:	2c01      	cmp	r4, #1
 8003fcc:	d068      	beq.n	80040a0 <USB_EPStartXfer+0x178>
        if (ep->xfer_len > 0U)
 8003fce:	694b      	ldr	r3, [r1, #20]
 8003fd0:	2b00      	cmp	r3, #0
 8003fd2:	d0d6      	beq.n	8003f82 <USB_EPStartXfer+0x5a>
          USBx_DEVICE->DIEPEMPMSK |= 1UL << (ep->num & EP_ADDR_MSK);
 8003fd4:	f8d0 2834 	ldr.w	r2, [r0, #2100]	; 0x834
 8003fd8:	7809      	ldrb	r1, [r1, #0]
 8003fda:	f001 040f 	and.w	r4, r1, #15
 8003fde:	2101      	movs	r1, #1
 8003fe0:	40a1      	lsls	r1, r4
 8003fe2:	430a      	orrs	r2, r1
 8003fe4:	f8c0 2834 	str.w	r2, [r0, #2100]	; 0x834
 8003fe8:	e7cb      	b.n	8003f82 <USB_EPStartXfer+0x5a>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 8003fea:	eb00 1443 	add.w	r4, r0, r3, lsl #5
 8003fee:	f8d4 6910 	ldr.w	r6, [r4, #2320]	; 0x910
 8003ff2:	4d50      	ldr	r5, [pc, #320]	; (8004134 <USB_EPStartXfer+0x20c>)
 8003ff4:	4035      	ands	r5, r6
 8003ff6:	f8c4 5910 	str.w	r5, [r4, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8003ffa:	f8d4 6910 	ldr.w	r6, [r4, #2320]	; 0x910
 8003ffe:	4d4e      	ldr	r5, [pc, #312]	; (8004138 <USB_EPStartXfer+0x210>)
 8004000:	4035      	ands	r5, r6
 8004002:	f8c4 5910 	str.w	r5, [r4, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT &
 8004006:	f8d4 6910 	ldr.w	r6, [r4, #2320]	; 0x910
                                     (((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket) << 19));
 800400a:	694d      	ldr	r5, [r1, #20]
 800400c:	688f      	ldr	r7, [r1, #8]
 800400e:	443d      	add	r5, r7
 8004010:	3d01      	subs	r5, #1
 8004012:	fbb5 f5f7 	udiv	r5, r5, r7
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT &
 8004016:	4f49      	ldr	r7, [pc, #292]	; (800413c <USB_EPStartXfer+0x214>)
 8004018:	ea07 45c5 	and.w	r5, r7, r5, lsl #19
 800401c:	4335      	orrs	r5, r6
 800401e:	f8c4 5910 	str.w	r5, [r4, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 8004022:	f8d4 5910 	ldr.w	r5, [r4, #2320]	; 0x910
 8004026:	694e      	ldr	r6, [r1, #20]
 8004028:	f3c6 0612 	ubfx	r6, r6, #0, #19
 800402c:	4335      	orrs	r5, r6
 800402e:	f8c4 5910 	str.w	r5, [r4, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 8004032:	f504 6410 	add.w	r4, r4, #2304	; 0x900
      if (ep->type == EP_TYPE_ISOC)
 8004036:	78cd      	ldrb	r5, [r1, #3]
 8004038:	2d01      	cmp	r5, #1
 800403a:	d1bb      	bne.n	8003fb4 <USB_EPStartXfer+0x8c>
        USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_MULCNT);
 800403c:	6925      	ldr	r5, [r4, #16]
 800403e:	f025 45c0 	bic.w	r5, r5, #1610612736	; 0x60000000
 8004042:	6125      	str	r5, [r4, #16]
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & (1U << 29));
 8004044:	6925      	ldr	r5, [r4, #16]
 8004046:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 800404a:	6125      	str	r5, [r4, #16]
 800404c:	e7b2      	b.n	8003fb4 <USB_EPStartXfer+0x8c>
      if ((uint32_t)ep->dma_addr != 0U)
 800404e:	690a      	ldr	r2, [r1, #16]
 8004050:	b11a      	cbz	r2, 800405a <USB_EPStartXfer+0x132>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
 8004052:	eb00 1443 	add.w	r4, r0, r3, lsl #5
 8004056:	f8c4 2914 	str.w	r2, [r4, #2324]	; 0x914
      if (ep->type == EP_TYPE_ISOC)
 800405a:	78ca      	ldrb	r2, [r1, #3]
 800405c:	2a01      	cmp	r2, #1
 800405e:	d008      	beq.n	8004072 <USB_EPStartXfer+0x14a>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8004060:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 8004064:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 8004068:	f042 4204 	orr.w	r2, r2, #2214592512	; 0x84000000
 800406c:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
 8004070:	e787      	b.n	8003f82 <USB_EPStartXfer+0x5a>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 8004072:	f8d0 2808 	ldr.w	r2, [r0, #2056]	; 0x808
 8004076:	f412 7f80 	tst.w	r2, #256	; 0x100
 800407a:	d108      	bne.n	800408e <USB_EPStartXfer+0x166>
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 800407c:	eb00 1143 	add.w	r1, r0, r3, lsl #5
 8004080:	f8d1 2900 	ldr.w	r2, [r1, #2304]	; 0x900
 8004084:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8004088:	f8c1 2900 	str.w	r2, [r1, #2304]	; 0x900
 800408c:	e7e8      	b.n	8004060 <USB_EPStartXfer+0x138>
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 800408e:	eb00 1143 	add.w	r1, r0, r3, lsl #5
 8004092:	f8d1 2900 	ldr.w	r2, [r1, #2304]	; 0x900
 8004096:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800409a:	f8c1 2900 	str.w	r2, [r1, #2304]	; 0x900
 800409e:	e7df      	b.n	8004060 <USB_EPStartXfer+0x138>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 80040a0:	f8d0 4808 	ldr.w	r4, [r0, #2056]	; 0x808
 80040a4:	f414 7f80 	tst.w	r4, #256	; 0x100
 80040a8:	d10e      	bne.n	80040c8 <USB_EPStartXfer+0x1a0>
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 80040aa:	f8d3 4900 	ldr.w	r4, [r3, #2304]	; 0x900
 80040ae:	f044 5400 	orr.w	r4, r4, #536870912	; 0x20000000
 80040b2:	f8c3 4900 	str.w	r4, [r3, #2304]	; 0x900
 80040b6:	4614      	mov	r4, r2
 80040b8:	460b      	mov	r3, r1
        (void)USB_WritePacket(USBx, ep->xfer_buff, ep->num, (uint16_t)ep->xfer_len, dma);
 80040ba:	68c9      	ldr	r1, [r1, #12]
 80040bc:	781a      	ldrb	r2, [r3, #0]
 80040be:	8a9b      	ldrh	r3, [r3, #20]
 80040c0:	9400      	str	r4, [sp, #0]
 80040c2:	f7ff ff1d 	bl	8003f00 <USB_WritePacket>
 80040c6:	e75c      	b.n	8003f82 <USB_EPStartXfer+0x5a>
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 80040c8:	f8d3 4900 	ldr.w	r4, [r3, #2304]	; 0x900
 80040cc:	f044 5480 	orr.w	r4, r4, #268435456	; 0x10000000
 80040d0:	f8c3 4900 	str.w	r4, [r3, #2304]	; 0x900
 80040d4:	e7ef      	b.n	80040b6 <USB_EPStartXfer+0x18e>
      pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 80040d6:	688e      	ldr	r6, [r1, #8]
 80040d8:	4435      	add	r5, r6
 80040da:	3d01      	subs	r5, #1
 80040dc:	fbb5 f5f6 	udiv	r5, r5, r6
      USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 80040e0:	6926      	ldr	r6, [r4, #16]
 80040e2:	4f16      	ldr	r7, [pc, #88]	; (800413c <USB_EPStartXfer+0x214>)
 80040e4:	ea07 47c5 	and.w	r7, r7, r5, lsl #19
 80040e8:	433e      	orrs	r6, r7
 80040ea:	6126      	str	r6, [r4, #16]
      USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & (ep->maxpacket * pktcnt);
 80040ec:	6927      	ldr	r7, [r4, #16]
 80040ee:	688e      	ldr	r6, [r1, #8]
 80040f0:	b2ad      	uxth	r5, r5
 80040f2:	fb06 f505 	mul.w	r5, r6, r5
 80040f6:	f3c5 0512 	ubfx	r5, r5, #0, #19
 80040fa:	433d      	orrs	r5, r7
 80040fc:	6125      	str	r5, [r4, #16]
 80040fe:	e733      	b.n	8003f68 <USB_EPStartXfer+0x40>
      if ((uint32_t)ep->xfer_buff != 0U)
 8004100:	68ca      	ldr	r2, [r1, #12]
 8004102:	2a00      	cmp	r2, #0
 8004104:	f43f af33 	beq.w	8003f6e <USB_EPStartXfer+0x46>
        USBx_OUTEP(epnum)->DOEPDMA = (uint32_t)(ep->xfer_buff);
 8004108:	6162      	str	r2, [r4, #20]
 800410a:	e730      	b.n	8003f6e <USB_EPStartXfer+0x46>
      if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 800410c:	f8d0 2808 	ldr.w	r2, [r0, #2056]	; 0x808
 8004110:	f412 7f80 	tst.w	r2, #256	; 0x100
 8004114:	d106      	bne.n	8004124 <USB_EPStartXfer+0x1fc>
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SODDFRM;
 8004116:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 800411a:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 800411e:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
 8004122:	e728      	b.n	8003f76 <USB_EPStartXfer+0x4e>
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM;
 8004124:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 8004128:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800412c:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
 8004130:	e721      	b.n	8003f76 <USB_EPStartXfer+0x4e>
 8004132:	bf00      	nop
 8004134:	fff80000 	.word	0xfff80000
 8004138:	e007ffff 	.word	0xe007ffff
 800413c:	1ff80000 	.word	0x1ff80000

08004140 <USB_ReadPacket>:
{
 8004140:	b470      	push	{r4, r5, r6}
 8004142:	b083      	sub	sp, #12
  uint32_t USBx_BASE = (uint32_t)USBx;
 8004144:	4606      	mov	r6, r0
  uint32_t count32b = (uint32_t)len >> 2U;
 8004146:	0895      	lsrs	r5, r2, #2
  uint16_t remaining_bytes = len % 4U;
 8004148:	f002 0203 	and.w	r2, r2, #3
  for (i = 0U; i < count32b; i++)
 800414c:	2300      	movs	r3, #0
 800414e:	e005      	b.n	800415c <USB_ReadPacket+0x1c>
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 8004150:	f506 5480 	add.w	r4, r6, #4096	; 0x1000
 8004154:	6824      	ldr	r4, [r4, #0]
 8004156:	f841 4b04 	str.w	r4, [r1], #4
  for (i = 0U; i < count32b; i++)
 800415a:	3301      	adds	r3, #1
 800415c:	42ab      	cmp	r3, r5
 800415e:	d3f7      	bcc.n	8004150 <USB_ReadPacket+0x10>
  if (remaining_bytes != 0U)
 8004160:	b19a      	cbz	r2, 800418a <USB_ReadPacket+0x4a>
    __UNALIGNED_UINT32_WRITE(&pData, USBx_DFIFO(0U));
 8004162:	f500 5080 	add.w	r0, r0, #4096	; 0x1000
 8004166:	6803      	ldr	r3, [r0, #0]
 8004168:	9301      	str	r3, [sp, #4]
 800416a:	4608      	mov	r0, r1
    i = 0U;
 800416c:	2400      	movs	r4, #0
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
 800416e:	b2e3      	uxtb	r3, r4
 8004170:	00d9      	lsls	r1, r3, #3
 8004172:	9b01      	ldr	r3, [sp, #4]
 8004174:	40cb      	lsrs	r3, r1
 8004176:	f800 3b01 	strb.w	r3, [r0], #1
      i++;
 800417a:	3401      	adds	r4, #1
      remaining_bytes--;
 800417c:	3a01      	subs	r2, #1
 800417e:	b292      	uxth	r2, r2
    } while (remaining_bytes != 0U);
 8004180:	2a00      	cmp	r2, #0
 8004182:	d1f4      	bne.n	800416e <USB_ReadPacket+0x2e>
}
 8004184:	b003      	add	sp, #12
 8004186:	bc70      	pop	{r4, r5, r6}
 8004188:	4770      	bx	lr
 800418a:	4608      	mov	r0, r1
  return ((void *)pDest);
 800418c:	e7fa      	b.n	8004184 <USB_ReadPacket+0x44>

0800418e <USB_EPSetStall>:
  uint32_t epnum = (uint32_t)ep->num;
 800418e:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8004190:	784a      	ldrb	r2, [r1, #1]
 8004192:	2a01      	cmp	r2, #1
 8004194:	d014      	beq.n	80041c0 <USB_EPSetStall+0x32>
    if (((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == 0U) && (epnum != 0U))
 8004196:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 800419a:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	; 0xb00
 800419e:	2a00      	cmp	r2, #0
 80041a0:	db06      	blt.n	80041b0 <USB_EPSetStall+0x22>
 80041a2:	b12b      	cbz	r3, 80041b0 <USB_EPSetStall+0x22>
      USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_EPDIS);
 80041a4:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 80041a8:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 80041ac:	f8c0 3b00 	str.w	r3, [r0, #2816]	; 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_STALL;
 80041b0:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 80041b4:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80041b8:	f8c0 3b00 	str.w	r3, [r0, #2816]	; 0xb00
}
 80041bc:	2000      	movs	r0, #0
 80041be:	4770      	bx	lr
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 80041c0:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 80041c4:	f8d0 2900 	ldr.w	r2, [r0, #2304]	; 0x900
 80041c8:	2a00      	cmp	r2, #0
 80041ca:	db06      	blt.n	80041da <USB_EPSetStall+0x4c>
 80041cc:	b12b      	cbz	r3, 80041da <USB_EPSetStall+0x4c>
      USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_EPDIS);
 80041ce:	f8d0 3900 	ldr.w	r3, [r0, #2304]	; 0x900
 80041d2:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 80041d6:	f8c0 3900 	str.w	r3, [r0, #2304]	; 0x900
    USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_STALL;
 80041da:	f8d0 3900 	ldr.w	r3, [r0, #2304]	; 0x900
 80041de:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80041e2:	f8c0 3900 	str.w	r3, [r0, #2304]	; 0x900
 80041e6:	e7e9      	b.n	80041bc <USB_EPSetStall+0x2e>

080041e8 <USB_EPClearStall>:
  uint32_t epnum = (uint32_t)ep->num;
 80041e8:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 80041ea:	784a      	ldrb	r2, [r1, #1]
 80041ec:	2a01      	cmp	r2, #1
 80041ee:	d00e      	beq.n	800420e <USB_EPClearStall+0x26>
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 80041f0:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 80041f4:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 80041f8:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80041fc:	f8c0 3b00 	str.w	r3, [r0, #2816]	; 0xb00
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8004200:	78cb      	ldrb	r3, [r1, #3]
 8004202:	3b02      	subs	r3, #2
 8004204:	b2db      	uxtb	r3, r3
 8004206:	2b01      	cmp	r3, #1
 8004208:	d915      	bls.n	8004236 <USB_EPClearStall+0x4e>
}
 800420a:	2000      	movs	r0, #0
 800420c:	4770      	bx	lr
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 800420e:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8004212:	f8d0 3900 	ldr.w	r3, [r0, #2304]	; 0x900
 8004216:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800421a:	f8c0 3900 	str.w	r3, [r0, #2304]	; 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 800421e:	78cb      	ldrb	r3, [r1, #3]
 8004220:	3b02      	subs	r3, #2
 8004222:	b2db      	uxtb	r3, r3
 8004224:	2b01      	cmp	r3, #1
 8004226:	d8f0      	bhi.n	800420a <USB_EPClearStall+0x22>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 8004228:	f8d0 3900 	ldr.w	r3, [r0, #2304]	; 0x900
 800422c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004230:	f8c0 3900 	str.w	r3, [r0, #2304]	; 0x900
 8004234:	e7e9      	b.n	800420a <USB_EPClearStall+0x22>
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 8004236:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 800423a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800423e:	f8c0 3b00 	str.w	r3, [r0, #2816]	; 0xb00
 8004242:	e7e2      	b.n	800420a <USB_EPClearStall+0x22>

08004244 <USB_SetDevAddress>:
  USBx_DEVICE->DCFG &= ~(USB_OTG_DCFG_DAD);
 8004244:	f8d0 3800 	ldr.w	r3, [r0, #2048]	; 0x800
 8004248:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 800424c:	f8c0 3800 	str.w	r3, [r0, #2048]	; 0x800
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
 8004250:	f8d0 3800 	ldr.w	r3, [r0, #2048]	; 0x800
 8004254:	0109      	lsls	r1, r1, #4
 8004256:	f401 61fe 	and.w	r1, r1, #2032	; 0x7f0
 800425a:	430b      	orrs	r3, r1
 800425c:	f8c0 3800 	str.w	r3, [r0, #2048]	; 0x800
}
 8004260:	2000      	movs	r0, #0
 8004262:	4770      	bx	lr

08004264 <USB_DevConnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 8004264:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	; 0xe00
 8004268:	f023 0303 	bic.w	r3, r3, #3
 800426c:	f8c0 3e00 	str.w	r3, [r0, #3584]	; 0xe00
  USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_SDIS;
 8004270:	f8d0 3804 	ldr.w	r3, [r0, #2052]	; 0x804
 8004274:	f023 0302 	bic.w	r3, r3, #2
 8004278:	f8c0 3804 	str.w	r3, [r0, #2052]	; 0x804
}
 800427c:	2000      	movs	r0, #0
 800427e:	4770      	bx	lr

08004280 <USB_DevDisconnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 8004280:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	; 0xe00
 8004284:	f023 0303 	bic.w	r3, r3, #3
 8004288:	f8c0 3e00 	str.w	r3, [r0, #3584]	; 0xe00
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 800428c:	f8d0 3804 	ldr.w	r3, [r0, #2052]	; 0x804
 8004290:	f043 0302 	orr.w	r3, r3, #2
 8004294:	f8c0 3804 	str.w	r3, [r0, #2052]	; 0x804
}
 8004298:	2000      	movs	r0, #0
 800429a:	4770      	bx	lr

0800429c <USB_ReadInterrupts>:
  tmpreg = USBx->GINTSTS;
 800429c:	6942      	ldr	r2, [r0, #20]
  tmpreg &= USBx->GINTMSK;
 800429e:	6980      	ldr	r0, [r0, #24]
}
 80042a0:	4010      	ands	r0, r2
 80042a2:	4770      	bx	lr

080042a4 <USB_ReadDevAllOutEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 80042a4:	f8d0 3818 	ldr.w	r3, [r0, #2072]	; 0x818
 80042a8:	f500 6000 	add.w	r0, r0, #2048	; 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 80042ac:	69c0      	ldr	r0, [r0, #28]
 80042ae:	4018      	ands	r0, r3
}
 80042b0:	0c00      	lsrs	r0, r0, #16
 80042b2:	4770      	bx	lr

080042b4 <USB_ReadDevAllInEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 80042b4:	f8d0 3818 	ldr.w	r3, [r0, #2072]	; 0x818
 80042b8:	f500 6000 	add.w	r0, r0, #2048	; 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 80042bc:	69c0      	ldr	r0, [r0, #28]
 80042be:	4018      	ands	r0, r3
}
 80042c0:	b280      	uxth	r0, r0
 80042c2:	4770      	bx	lr

080042c4 <USB_ReadDevOutEPInterrupt>:
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 80042c4:	eb00 1141 	add.w	r1, r0, r1, lsl #5
 80042c8:	f8d1 2b08 	ldr.w	r2, [r1, #2824]	; 0xb08
  tmpreg &= USBx_DEVICE->DOEPMSK;
 80042cc:	f500 6000 	add.w	r0, r0, #2048	; 0x800
 80042d0:	6940      	ldr	r0, [r0, #20]
}
 80042d2:	4010      	ands	r0, r2
 80042d4:	4770      	bx	lr

080042d6 <USB_ReadDevInEPInterrupt>:
{
 80042d6:	b410      	push	{r4}
  msk = USBx_DEVICE->DIEPMSK;
 80042d8:	f8d0 4810 	ldr.w	r4, [r0, #2064]	; 0x810
  emp = USBx_DEVICE->DIEPEMPMSK;
 80042dc:	f8d0 3834 	ldr.w	r3, [r0, #2100]	; 0x834
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 80042e0:	f001 020f 	and.w	r2, r1, #15
 80042e4:	40d3      	lsrs	r3, r2
 80042e6:	01db      	lsls	r3, r3, #7
 80042e8:	b2db      	uxtb	r3, r3
 80042ea:	4323      	orrs	r3, r4
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 80042ec:	eb00 1041 	add.w	r0, r0, r1, lsl #5
 80042f0:	f500 6010 	add.w	r0, r0, #2304	; 0x900
 80042f4:	6880      	ldr	r0, [r0, #8]
}
 80042f6:	4018      	ands	r0, r3
 80042f8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80042fc:	4770      	bx	lr

080042fe <USB_GetMode>:
  return ((USBx->GINTSTS) & 0x1U);
 80042fe:	6940      	ldr	r0, [r0, #20]
}
 8004300:	f000 0001 	and.w	r0, r0, #1
 8004304:	4770      	bx	lr

08004306 <USB_SetCurrentMode>:
{
 8004306:	b538      	push	{r3, r4, r5, lr}
 8004308:	4605      	mov	r5, r0
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 800430a:	68c3      	ldr	r3, [r0, #12]
 800430c:	f023 43c0 	bic.w	r3, r3, #1610612736	; 0x60000000
 8004310:	60c3      	str	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 8004312:	2901      	cmp	r1, #1
 8004314:	d013      	beq.n	800433e <USB_SetCurrentMode+0x38>
  else if (mode == USB_DEVICE_MODE)
 8004316:	bb29      	cbnz	r1, 8004364 <USB_SetCurrentMode+0x5e>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
 8004318:	68c3      	ldr	r3, [r0, #12]
 800431a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800431e:	60c3      	str	r3, [r0, #12]
  uint32_t ms = 0U;
 8004320:	2400      	movs	r4, #0
      HAL_Delay(1U);
 8004322:	2001      	movs	r0, #1
 8004324:	f7fd f952 	bl	80015cc <HAL_Delay>
      ms++;
 8004328:	3401      	adds	r4, #1
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < 50U));
 800432a:	4628      	mov	r0, r5
 800432c:	f7ff ffe7 	bl	80042fe <USB_GetMode>
 8004330:	b108      	cbz	r0, 8004336 <USB_SetCurrentMode+0x30>
 8004332:	2c31      	cmp	r4, #49	; 0x31
 8004334:	d9f5      	bls.n	8004322 <USB_SetCurrentMode+0x1c>
  if (ms == 50U)
 8004336:	2c32      	cmp	r4, #50	; 0x32
 8004338:	d012      	beq.n	8004360 <USB_SetCurrentMode+0x5a>
  return HAL_OK;
 800433a:	2000      	movs	r0, #0
}
 800433c:	bd38      	pop	{r3, r4, r5, pc}
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
 800433e:	68c3      	ldr	r3, [r0, #12]
 8004340:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8004344:	60c3      	str	r3, [r0, #12]
  uint32_t ms = 0U;
 8004346:	2400      	movs	r4, #0
      HAL_Delay(1U);
 8004348:	2001      	movs	r0, #1
 800434a:	f7fd f93f 	bl	80015cc <HAL_Delay>
      ms++;
 800434e:	3401      	adds	r4, #1
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < 50U));
 8004350:	4628      	mov	r0, r5
 8004352:	f7ff ffd4 	bl	80042fe <USB_GetMode>
 8004356:	2801      	cmp	r0, #1
 8004358:	d0ed      	beq.n	8004336 <USB_SetCurrentMode+0x30>
 800435a:	2c31      	cmp	r4, #49	; 0x31
 800435c:	d9f4      	bls.n	8004348 <USB_SetCurrentMode+0x42>
 800435e:	e7ea      	b.n	8004336 <USB_SetCurrentMode+0x30>
    return HAL_ERROR;
 8004360:	2001      	movs	r0, #1
 8004362:	e7eb      	b.n	800433c <USB_SetCurrentMode+0x36>
    return HAL_ERROR;
 8004364:	2001      	movs	r0, #1
 8004366:	e7e9      	b.n	800433c <USB_SetCurrentMode+0x36>

08004368 <USB_ActivateSetup>:
  USBx_INEP(0U)->DIEPCTL &= ~USB_OTG_DIEPCTL_MPSIZ;
 8004368:	f8d0 2900 	ldr.w	r2, [r0, #2304]	; 0x900
 800436c:	4b05      	ldr	r3, [pc, #20]	; (8004384 <USB_ActivateSetup+0x1c>)
 800436e:	4013      	ands	r3, r2
 8004370:	f8c0 3900 	str.w	r3, [r0, #2304]	; 0x900
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGINAK;
 8004374:	f8d0 3804 	ldr.w	r3, [r0, #2052]	; 0x804
 8004378:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800437c:	f8c0 3804 	str.w	r3, [r0, #2052]	; 0x804
}
 8004380:	2000      	movs	r0, #0
 8004382:	4770      	bx	lr
 8004384:	fffff800 	.word	0xfffff800

08004388 <USB_EP0_OutStart>:
{
 8004388:	b410      	push	{r4}
  uint32_t gSNPSiD = *(__IO uint32_t *)(&USBx->CID + 0x1U);
 800438a:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 800438c:	4b15      	ldr	r3, [pc, #84]	; (80043e4 <USB_EP0_OutStart+0x5c>)
 800438e:	429c      	cmp	r4, r3
 8004390:	d903      	bls.n	800439a <USB_EP0_OutStart+0x12>
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8004392:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 8004396:	2b00      	cmp	r3, #0
 8004398:	db16      	blt.n	80043c8 <USB_EP0_OutStart+0x40>
  USBx_OUTEP(0U)->DOEPTSIZ = 0U;
 800439a:	2400      	movs	r4, #0
 800439c:	f8c0 4b10 	str.w	r4, [r0, #2832]	; 0xb10
  USBx_OUTEP(0U)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 80043a0:	f8d0 4b10 	ldr.w	r4, [r0, #2832]	; 0xb10
 80043a4:	f444 2400 	orr.w	r4, r4, #524288	; 0x80000
 80043a8:	f8c0 4b10 	str.w	r4, [r0, #2832]	; 0xb10
  USBx_OUTEP(0U)->DOEPTSIZ |= (3U * 8U);
 80043ac:	f8d0 4b10 	ldr.w	r4, [r0, #2832]	; 0xb10
 80043b0:	f044 0418 	orr.w	r4, r4, #24
 80043b4:	f8c0 4b10 	str.w	r4, [r0, #2832]	; 0xb10
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 80043b8:	f8d0 4b10 	ldr.w	r4, [r0, #2832]	; 0xb10
 80043bc:	f044 44c0 	orr.w	r4, r4, #1610612736	; 0x60000000
 80043c0:	f8c0 4b10 	str.w	r4, [r0, #2832]	; 0xb10
  if (dma == 1U)
 80043c4:	2901      	cmp	r1, #1
 80043c6:	d003      	beq.n	80043d0 <USB_EP0_OutStart+0x48>
}
 80043c8:	2000      	movs	r0, #0
 80043ca:	f85d 4b04 	ldr.w	r4, [sp], #4
 80043ce:	4770      	bx	lr
    USBx_OUTEP(0U)->DOEPDMA = (uint32_t)psetup;
 80043d0:	f8c0 2b14 	str.w	r2, [r0, #2836]	; 0xb14
    USBx_OUTEP(0U)->DOEPCTL |= USB_OTG_DOEPCTL_EPENA | USB_OTG_DOEPCTL_USBAEP;
 80043d4:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 80043d8:	f043 2380 	orr.w	r3, r3, #2147516416	; 0x80008000
 80043dc:	f8c0 3b00 	str.w	r3, [r0, #2816]	; 0xb00
 80043e0:	e7f2      	b.n	80043c8 <USB_EP0_OutStart+0x40>
 80043e2:	bf00      	nop
 80043e4:	4f54300a 	.word	0x4f54300a

080043e8 <USBD_CDC_EP0_RxReady>:
  *         Handle EP0 Rx Ready event
  * @param  pdev: device instance
  * @retval status
  */
static uint8_t USBD_CDC_EP0_RxReady(USBD_HandleTypeDef *pdev)
{
 80043e8:	b510      	push	{r4, lr}
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassData;
 80043ea:	f8d0 42bc 	ldr.w	r4, [r0, #700]	; 0x2bc

  if ((pdev->pUserData != NULL) && (hcdc->CmdOpCode != 0xFFU))
 80043ee:	f8d0 32c0 	ldr.w	r3, [r0, #704]	; 0x2c0
 80043f2:	b15b      	cbz	r3, 800440c <USBD_CDC_EP0_RxReady+0x24>
 80043f4:	f894 0200 	ldrb.w	r0, [r4, #512]	; 0x200
 80043f8:	28ff      	cmp	r0, #255	; 0xff
 80043fa:	d007      	beq.n	800440c <USBD_CDC_EP0_RxReady+0x24>
  {
    ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->Control(hcdc->CmdOpCode,
 80043fc:	689b      	ldr	r3, [r3, #8]
 80043fe:	f894 2201 	ldrb.w	r2, [r4, #513]	; 0x201
 8004402:	4621      	mov	r1, r4
 8004404:	4798      	blx	r3
                                                      (uint8_t *)hcdc->data,
                                                      (uint16_t)hcdc->CmdLength);
    hcdc->CmdOpCode = 0xFFU;
 8004406:	23ff      	movs	r3, #255	; 0xff
 8004408:	f884 3200 	strb.w	r3, [r4, #512]	; 0x200

  }

  return (uint8_t)USBD_OK;
}
 800440c:	2000      	movs	r0, #0
 800440e:	bd10      	pop	{r4, pc}

08004410 <USBD_CDC_GetFSCfgDesc>:
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_CDC_GetFSCfgDesc(uint16_t *length)
{
  *length = (uint16_t)sizeof(USBD_CDC_CfgFSDesc);
 8004410:	2343      	movs	r3, #67	; 0x43
 8004412:	8003      	strh	r3, [r0, #0]

  return USBD_CDC_CfgFSDesc;
}
 8004414:	4800      	ldr	r0, [pc, #0]	; (8004418 <USBD_CDC_GetFSCfgDesc+0x8>)
 8004416:	4770      	bx	lr
 8004418:	20000040 	.word	0x20000040

0800441c <USBD_CDC_GetHSCfgDesc>:
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_CDC_GetHSCfgDesc(uint16_t *length)
{
  *length = (uint16_t)sizeof(USBD_CDC_CfgHSDesc);
 800441c:	2343      	movs	r3, #67	; 0x43
 800441e:	8003      	strh	r3, [r0, #0]

  return USBD_CDC_CfgHSDesc;
}
 8004420:	4800      	ldr	r0, [pc, #0]	; (8004424 <USBD_CDC_GetHSCfgDesc+0x8>)
 8004422:	4770      	bx	lr
 8004424:	20000084 	.word	0x20000084

08004428 <USBD_CDC_GetOtherSpeedCfgDesc>:
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_CDC_GetOtherSpeedCfgDesc(uint16_t *length)
{
  *length = (uint16_t)sizeof(USBD_CDC_OtherSpeedCfgDesc);
 8004428:	2343      	movs	r3, #67	; 0x43
 800442a:	8003      	strh	r3, [r0, #0]

  return USBD_CDC_OtherSpeedCfgDesc;
}
 800442c:	4800      	ldr	r0, [pc, #0]	; (8004430 <USBD_CDC_GetOtherSpeedCfgDesc+0x8>)
 800442e:	4770      	bx	lr
 8004430:	200000d4 	.word	0x200000d4

08004434 <USBD_CDC_GetDeviceQualifierDescriptor>:
* @param  length : pointer data length
* @retval pointer to descriptor buffer
*/
uint8_t *USBD_CDC_GetDeviceQualifierDescriptor(uint16_t *length)
{
  *length = (uint16_t)sizeof(USBD_CDC_DeviceQualifierDesc);
 8004434:	230a      	movs	r3, #10
 8004436:	8003      	strh	r3, [r0, #0]

  return USBD_CDC_DeviceQualifierDesc;
}
 8004438:	4800      	ldr	r0, [pc, #0]	; (800443c <USBD_CDC_GetDeviceQualifierDescriptor+0x8>)
 800443a:	4770      	bx	lr
 800443c:	200000c8 	.word	0x200000c8

08004440 <USBD_CDC_DataOut>:
{
 8004440:	b538      	push	{r3, r4, r5, lr}
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassData;
 8004442:	f8d0 52bc 	ldr.w	r5, [r0, #700]	; 0x2bc
  if (pdev->pClassData == NULL)
 8004446:	b175      	cbz	r5, 8004466 <USBD_CDC_DataOut+0x26>
 8004448:	4604      	mov	r4, r0
  hcdc->RxLength = USBD_LL_GetRxDataSize(pdev, epnum);
 800444a:	f001 fdd8 	bl	8005ffe <USBD_LL_GetRxDataSize>
 800444e:	f8c5 020c 	str.w	r0, [r5, #524]	; 0x20c
  ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->Receive(hcdc->RxBuffer, &hcdc->RxLength);
 8004452:	f8d4 32c0 	ldr.w	r3, [r4, #704]	; 0x2c0
 8004456:	68db      	ldr	r3, [r3, #12]
 8004458:	f505 7103 	add.w	r1, r5, #524	; 0x20c
 800445c:	f8d5 0204 	ldr.w	r0, [r5, #516]	; 0x204
 8004460:	4798      	blx	r3
  return (uint8_t)USBD_OK;
 8004462:	2000      	movs	r0, #0
}
 8004464:	bd38      	pop	{r3, r4, r5, pc}
    return (uint8_t)USBD_FAIL;
 8004466:	2003      	movs	r0, #3
 8004468:	e7fc      	b.n	8004464 <USBD_CDC_DataOut+0x24>

0800446a <USBD_CDC_DataIn>:
{
 800446a:	b570      	push	{r4, r5, r6, lr}
  PCD_HandleTypeDef *hpcd = pdev->pData;
 800446c:	f8d0 42c4 	ldr.w	r4, [r0, #708]	; 0x2c4
  if (pdev->pClassData == NULL)
 8004470:	f8d0 52bc 	ldr.w	r5, [r0, #700]	; 0x2bc
 8004474:	b355      	cbz	r5, 80044cc <USBD_CDC_DataIn+0x62>
  if ((pdev->ep_in[epnum].total_length > 0U) &&
 8004476:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 800447a:	0093      	lsls	r3, r2, #2
 800447c:	4403      	add	r3, r0
 800447e:	699b      	ldr	r3, [r3, #24]
 8004480:	b96b      	cbnz	r3, 800449e <USBD_CDC_DataIn+0x34>
    hcdc->TxState = 0U;
 8004482:	2400      	movs	r4, #0
 8004484:	f8c5 4214 	str.w	r4, [r5, #532]	; 0x214
    ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->TransmitCplt(hcdc->TxBuffer, &hcdc->TxLength, epnum);
 8004488:	f8d0 32c0 	ldr.w	r3, [r0, #704]	; 0x2c0
 800448c:	691b      	ldr	r3, [r3, #16]
 800448e:	460a      	mov	r2, r1
 8004490:	f505 7104 	add.w	r1, r5, #528	; 0x210
 8004494:	f8d5 0208 	ldr.w	r0, [r5, #520]	; 0x208
 8004498:	4798      	blx	r3
  return (uint8_t)USBD_OK;
 800449a:	4620      	mov	r0, r4
}
 800449c:	bd70      	pop	{r4, r5, r6, pc}
      ((pdev->ep_in[epnum].total_length % hpcd->IN_ep[epnum].maxpacket) == 0U))
 800449e:	ebc1 06c1 	rsb	r6, r1, r1, lsl #3
 80044a2:	00b2      	lsls	r2, r6, #2
 80044a4:	4414      	add	r4, r2
 80044a6:	6c64      	ldr	r4, [r4, #68]	; 0x44
 80044a8:	fbb3 f2f4 	udiv	r2, r3, r4
 80044ac:	fb04 3312 	mls	r3, r4, r2, r3
  if ((pdev->ep_in[epnum].total_length > 0U) &&
 80044b0:	2b00      	cmp	r3, #0
 80044b2:	d1e6      	bne.n	8004482 <USBD_CDC_DataIn+0x18>
    pdev->ep_in[epnum].total_length = 0U;
 80044b4:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 80044b8:	0093      	lsls	r3, r2, #2
 80044ba:	4403      	add	r3, r0
 80044bc:	2400      	movs	r4, #0
 80044be:	619c      	str	r4, [r3, #24]
    (void)USBD_LL_Transmit(pdev, epnum, NULL, 0U);
 80044c0:	4623      	mov	r3, r4
 80044c2:	4622      	mov	r2, r4
 80044c4:	f001 fe10 	bl	80060e8 <USBD_LL_Transmit>
  return (uint8_t)USBD_OK;
 80044c8:	4620      	mov	r0, r4
    (void)USBD_LL_Transmit(pdev, epnum, NULL, 0U);
 80044ca:	e7e7      	b.n	800449c <USBD_CDC_DataIn+0x32>
    return (uint8_t)USBD_FAIL;
 80044cc:	2003      	movs	r0, #3
 80044ce:	e7e5      	b.n	800449c <USBD_CDC_DataIn+0x32>

080044d0 <USBD_CDC_Setup>:
{
 80044d0:	b570      	push	{r4, r5, r6, lr}
 80044d2:	b082      	sub	sp, #8
 80044d4:	4605      	mov	r5, r0
 80044d6:	460c      	mov	r4, r1
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassData;
 80044d8:	f8d0 62bc 	ldr.w	r6, [r0, #700]	; 0x2bc
  uint8_t ifalt = 0U;
 80044dc:	2300      	movs	r3, #0
 80044de:	f88d 3007 	strb.w	r3, [sp, #7]
  uint16_t status_info = 0U;
 80044e2:	f8ad 3004 	strh.w	r3, [sp, #4]
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 80044e6:	780b      	ldrb	r3, [r1, #0]
 80044e8:	f013 0260 	ands.w	r2, r3, #96	; 0x60
 80044ec:	d027      	beq.n	800453e <USBD_CDC_Setup+0x6e>
 80044ee:	2a20      	cmp	r2, #32
 80044f0:	d15b      	bne.n	80045aa <USBD_CDC_Setup+0xda>
    if (req->wLength != 0U)
 80044f2:	88ca      	ldrh	r2, [r1, #6]
 80044f4:	b93a      	cbnz	r2, 8004506 <USBD_CDC_Setup+0x36>
      ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->Control(req->bRequest,
 80044f6:	f8d0 32c0 	ldr.w	r3, [r0, #704]	; 0x2c0
 80044fa:	689b      	ldr	r3, [r3, #8]
 80044fc:	2200      	movs	r2, #0
 80044fe:	7848      	ldrb	r0, [r1, #1]
 8004500:	4798      	blx	r3
  USBD_StatusTypeDef ret = USBD_OK;
 8004502:	2000      	movs	r0, #0
 8004504:	e054      	b.n	80045b0 <USBD_CDC_Setup+0xe0>
      if ((req->bmRequest & 0x80U) != 0U)
 8004506:	f013 0f80 	tst.w	r3, #128	; 0x80
 800450a:	d00c      	beq.n	8004526 <USBD_CDC_Setup+0x56>
        ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->Control(req->bRequest,
 800450c:	f8d0 32c0 	ldr.w	r3, [r0, #704]	; 0x2c0
 8004510:	689b      	ldr	r3, [r3, #8]
 8004512:	4631      	mov	r1, r6
 8004514:	7860      	ldrb	r0, [r4, #1]
 8004516:	4798      	blx	r3
          (void)USBD_CtlSendData(pdev, (uint8_t *)hcdc->data, req->wLength);
 8004518:	88e2      	ldrh	r2, [r4, #6]
 800451a:	4631      	mov	r1, r6
 800451c:	4628      	mov	r0, r5
 800451e:	f000 fde7 	bl	80050f0 <USBD_CtlSendData>
  USBD_StatusTypeDef ret = USBD_OK;
 8004522:	2000      	movs	r0, #0
 8004524:	e044      	b.n	80045b0 <USBD_CDC_Setup+0xe0>
        hcdc->CmdOpCode = req->bRequest;
 8004526:	784b      	ldrb	r3, [r1, #1]
 8004528:	f886 3200 	strb.w	r3, [r6, #512]	; 0x200
        hcdc->CmdLength = (uint8_t)req->wLength;
 800452c:	798b      	ldrb	r3, [r1, #6]
 800452e:	f886 3201 	strb.w	r3, [r6, #513]	; 0x201
        (void)USBD_CtlPrepareRx(pdev, (uint8_t *)hcdc->data, req->wLength);
 8004532:	88ca      	ldrh	r2, [r1, #6]
 8004534:	4631      	mov	r1, r6
 8004536:	f000 fdf0 	bl	800511a <USBD_CtlPrepareRx>
  USBD_StatusTypeDef ret = USBD_OK;
 800453a:	2000      	movs	r0, #0
 800453c:	e038      	b.n	80045b0 <USBD_CDC_Setup+0xe0>
    switch (req->bRequest)
 800453e:	784b      	ldrb	r3, [r1, #1]
 8004540:	2b0b      	cmp	r3, #11
 8004542:	d82e      	bhi.n	80045a2 <USBD_CDC_Setup+0xd2>
 8004544:	e8df f003 	tbb	[pc, r3]
 8004548:	2d2d3606 	.word	0x2d2d3606
 800454c:	2d2d2d2d 	.word	0x2d2d2d2d
 8004550:	23142d2d 	.word	0x23142d2d
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8004554:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8004558:	2b03      	cmp	r3, #3
 800455a:	d105      	bne.n	8004568 <USBD_CDC_Setup+0x98>
        (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
 800455c:	2202      	movs	r2, #2
 800455e:	a901      	add	r1, sp, #4
 8004560:	f000 fdc6 	bl	80050f0 <USBD_CtlSendData>
  USBD_StatusTypeDef ret = USBD_OK;
 8004564:	2000      	movs	r0, #0
 8004566:	e023      	b.n	80045b0 <USBD_CDC_Setup+0xe0>
        USBD_CtlError(pdev, req);
 8004568:	f000 fa66 	bl	8004a38 <USBD_CtlError>
        ret = USBD_FAIL;
 800456c:	2003      	movs	r0, #3
 800456e:	e01f      	b.n	80045b0 <USBD_CDC_Setup+0xe0>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8004570:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8004574:	2b03      	cmp	r3, #3
 8004576:	d106      	bne.n	8004586 <USBD_CDC_Setup+0xb6>
        (void)USBD_CtlSendData(pdev, &ifalt, 1U);
 8004578:	2201      	movs	r2, #1
 800457a:	f10d 0107 	add.w	r1, sp, #7
 800457e:	f000 fdb7 	bl	80050f0 <USBD_CtlSendData>
  USBD_StatusTypeDef ret = USBD_OK;
 8004582:	2000      	movs	r0, #0
 8004584:	e014      	b.n	80045b0 <USBD_CDC_Setup+0xe0>
        USBD_CtlError(pdev, req);
 8004586:	f000 fa57 	bl	8004a38 <USBD_CtlError>
        ret = USBD_FAIL;
 800458a:	2003      	movs	r0, #3
 800458c:	e010      	b.n	80045b0 <USBD_CDC_Setup+0xe0>
      if (pdev->dev_state != USBD_STATE_CONFIGURED)
 800458e:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8004592:	2b03      	cmp	r3, #3
 8004594:	d101      	bne.n	800459a <USBD_CDC_Setup+0xca>
  USBD_StatusTypeDef ret = USBD_OK;
 8004596:	2000      	movs	r0, #0
 8004598:	e00a      	b.n	80045b0 <USBD_CDC_Setup+0xe0>
        USBD_CtlError(pdev, req);
 800459a:	f000 fa4d 	bl	8004a38 <USBD_CtlError>
        ret = USBD_FAIL;
 800459e:	2003      	movs	r0, #3
 80045a0:	e006      	b.n	80045b0 <USBD_CDC_Setup+0xe0>
      USBD_CtlError(pdev, req);
 80045a2:	f000 fa49 	bl	8004a38 <USBD_CtlError>
      ret = USBD_FAIL;
 80045a6:	2003      	movs	r0, #3
      break;
 80045a8:	e002      	b.n	80045b0 <USBD_CDC_Setup+0xe0>
    USBD_CtlError(pdev, req);
 80045aa:	f000 fa45 	bl	8004a38 <USBD_CtlError>
    ret = USBD_FAIL;
 80045ae:	2003      	movs	r0, #3
}
 80045b0:	b002      	add	sp, #8
 80045b2:	bd70      	pop	{r4, r5, r6, pc}
  USBD_StatusTypeDef ret = USBD_OK;
 80045b4:	2000      	movs	r0, #0
 80045b6:	e7fb      	b.n	80045b0 <USBD_CDC_Setup+0xe0>

080045b8 <USBD_CDC_DeInit>:
{
 80045b8:	b538      	push	{r3, r4, r5, lr}
 80045ba:	4604      	mov	r4, r0
  (void)USBD_LL_CloseEP(pdev, CDC_IN_EP);
 80045bc:	2181      	movs	r1, #129	; 0x81
 80045be:	f001 fd73 	bl	80060a8 <USBD_LL_CloseEP>
  pdev->ep_in[CDC_IN_EP & 0xFU].is_used = 0U;
 80045c2:	2500      	movs	r5, #0
 80045c4:	8725      	strh	r5, [r4, #56]	; 0x38
  (void)USBD_LL_CloseEP(pdev, CDC_OUT_EP);
 80045c6:	2101      	movs	r1, #1
 80045c8:	4620      	mov	r0, r4
 80045ca:	f001 fd6d 	bl	80060a8 <USBD_LL_CloseEP>
  pdev->ep_out[CDC_OUT_EP & 0xFU].is_used = 0U;
 80045ce:	f8a4 5178 	strh.w	r5, [r4, #376]	; 0x178
  (void)USBD_LL_CloseEP(pdev, CDC_CMD_EP);
 80045d2:	2182      	movs	r1, #130	; 0x82
 80045d4:	4620      	mov	r0, r4
 80045d6:	f001 fd67 	bl	80060a8 <USBD_LL_CloseEP>
  pdev->ep_in[CDC_CMD_EP & 0xFU].is_used = 0U;
 80045da:	f8a4 504c 	strh.w	r5, [r4, #76]	; 0x4c
  pdev->ep_in[CDC_CMD_EP & 0xFU].bInterval = 0U;
 80045de:	f8a4 504e 	strh.w	r5, [r4, #78]	; 0x4e
  if (pdev->pClassData != NULL)
 80045e2:	f8d4 32bc 	ldr.w	r3, [r4, #700]	; 0x2bc
 80045e6:	b14b      	cbz	r3, 80045fc <USBD_CDC_DeInit+0x44>
    ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->DeInit();
 80045e8:	f8d4 32c0 	ldr.w	r3, [r4, #704]	; 0x2c0
 80045ec:	685b      	ldr	r3, [r3, #4]
 80045ee:	4798      	blx	r3
    (void)USBD_free(pdev->pClassData);
 80045f0:	f8d4 02bc 	ldr.w	r0, [r4, #700]	; 0x2bc
 80045f4:	f010 fe2c 	bl	8015250 <free>
    pdev->pClassData = NULL;
 80045f8:	f8c4 52bc 	str.w	r5, [r4, #700]	; 0x2bc
}
 80045fc:	2000      	movs	r0, #0
 80045fe:	bd38      	pop	{r3, r4, r5, pc}

08004600 <USBD_CDC_Init>:
{
 8004600:	b570      	push	{r4, r5, r6, lr}
 8004602:	4604      	mov	r4, r0
  hcdc = USBD_malloc(sizeof(USBD_CDC_HandleTypeDef));
 8004604:	f44f 7007 	mov.w	r0, #540	; 0x21c
 8004608:	f010 fe1a 	bl	8015240 <malloc>
  if (hcdc == NULL)
 800460c:	b3b0      	cbz	r0, 800467c <USBD_CDC_Init+0x7c>
 800460e:	4605      	mov	r5, r0
  pdev->pClassData = (void *)hcdc;
 8004610:	f8c4 02bc 	str.w	r0, [r4, #700]	; 0x2bc
  if (pdev->dev_speed == USBD_SPEED_HIGH)
 8004614:	7c23      	ldrb	r3, [r4, #16]
 8004616:	bbb3      	cbnz	r3, 8004686 <USBD_CDC_Init+0x86>
    (void)USBD_LL_OpenEP(pdev, CDC_IN_EP, USBD_EP_TYPE_BULK,
 8004618:	f44f 7300 	mov.w	r3, #512	; 0x200
 800461c:	2202      	movs	r2, #2
 800461e:	2181      	movs	r1, #129	; 0x81
 8004620:	4620      	mov	r0, r4
 8004622:	f001 fd36 	bl	8006092 <USBD_LL_OpenEP>
     pdev->ep_in[CDC_IN_EP & 0xFU].is_used = 1U;
 8004626:	2601      	movs	r6, #1
 8004628:	8726      	strh	r6, [r4, #56]	; 0x38
     (void)USBD_LL_OpenEP(pdev, CDC_OUT_EP, USBD_EP_TYPE_BULK,
 800462a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800462e:	2202      	movs	r2, #2
 8004630:	4631      	mov	r1, r6
 8004632:	4620      	mov	r0, r4
 8004634:	f001 fd2d 	bl	8006092 <USBD_LL_OpenEP>
      pdev->ep_out[CDC_OUT_EP & 0xFU].is_used = 1U;
 8004638:	f8a4 6178 	strh.w	r6, [r4, #376]	; 0x178
      pdev->ep_in[CDC_CMD_EP & 0xFU].bInterval = CDC_HS_BINTERVAL;
 800463c:	2310      	movs	r3, #16
 800463e:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
  (void)USBD_LL_OpenEP(pdev, CDC_CMD_EP, USBD_EP_TYPE_INTR, CDC_CMD_PACKET_SIZE);
 8004642:	2308      	movs	r3, #8
 8004644:	2203      	movs	r2, #3
 8004646:	2182      	movs	r1, #130	; 0x82
 8004648:	4620      	mov	r0, r4
 800464a:	f001 fd22 	bl	8006092 <USBD_LL_OpenEP>
  pdev->ep_in[CDC_CMD_EP & 0xFU].is_used = 1U;
 800464e:	2301      	movs	r3, #1
 8004650:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
  ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->Init();
 8004654:	f8d4 32c0 	ldr.w	r3, [r4, #704]	; 0x2c0
 8004658:	681b      	ldr	r3, [r3, #0]
 800465a:	4798      	blx	r3
  hcdc->TxState = 0U;
 800465c:	2300      	movs	r3, #0
 800465e:	f8c5 3214 	str.w	r3, [r5, #532]	; 0x214
  hcdc->RxState = 0U;
 8004662:	f8c5 3218 	str.w	r3, [r5, #536]	; 0x218
  if (pdev->dev_speed == USBD_SPEED_HIGH)
 8004666:	7c23      	ldrb	r3, [r4, #16]
 8004668:	b30b      	cbz	r3, 80046ae <USBD_CDC_Init+0xae>
    (void)USBD_LL_PrepareReceive(pdev, CDC_OUT_EP, hcdc->RxBuffer,
 800466a:	2340      	movs	r3, #64	; 0x40
 800466c:	f8d5 2204 	ldr.w	r2, [r5, #516]	; 0x204
 8004670:	2101      	movs	r1, #1
 8004672:	4620      	mov	r0, r4
 8004674:	f001 fd40 	bl	80060f8 <USBD_LL_PrepareReceive>
  return (uint8_t)USBD_OK;
 8004678:	2000      	movs	r0, #0
}
 800467a:	bd70      	pop	{r4, r5, r6, pc}
    pdev->pClassData = NULL;
 800467c:	2300      	movs	r3, #0
 800467e:	f8c4 32bc 	str.w	r3, [r4, #700]	; 0x2bc
    return (uint8_t)USBD_EMEM;
 8004682:	2002      	movs	r0, #2
 8004684:	e7f9      	b.n	800467a <USBD_CDC_Init+0x7a>
    (void)USBD_LL_OpenEP(pdev, CDC_IN_EP, USBD_EP_TYPE_BULK,
 8004686:	2340      	movs	r3, #64	; 0x40
 8004688:	2202      	movs	r2, #2
 800468a:	2181      	movs	r1, #129	; 0x81
 800468c:	4620      	mov	r0, r4
 800468e:	f001 fd00 	bl	8006092 <USBD_LL_OpenEP>
     pdev->ep_in[CDC_IN_EP & 0xFU].is_used = 1U;
 8004692:	2601      	movs	r6, #1
 8004694:	8726      	strh	r6, [r4, #56]	; 0x38
     (void)USBD_LL_OpenEP(pdev, CDC_OUT_EP, USBD_EP_TYPE_BULK,
 8004696:	2340      	movs	r3, #64	; 0x40
 8004698:	2202      	movs	r2, #2
 800469a:	4631      	mov	r1, r6
 800469c:	4620      	mov	r0, r4
 800469e:	f001 fcf8 	bl	8006092 <USBD_LL_OpenEP>
      pdev->ep_out[CDC_OUT_EP & 0xFU].is_used = 1U;
 80046a2:	f8a4 6178 	strh.w	r6, [r4, #376]	; 0x178
      pdev->ep_in[CDC_CMD_EP & 0xFU].bInterval = CDC_FS_BINTERVAL;
 80046a6:	2310      	movs	r3, #16
 80046a8:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 80046ac:	e7c9      	b.n	8004642 <USBD_CDC_Init+0x42>
    (void)USBD_LL_PrepareReceive(pdev, CDC_OUT_EP, hcdc->RxBuffer,
 80046ae:	f44f 7300 	mov.w	r3, #512	; 0x200
 80046b2:	f8d5 2204 	ldr.w	r2, [r5, #516]	; 0x204
 80046b6:	2101      	movs	r1, #1
 80046b8:	4620      	mov	r0, r4
 80046ba:	f001 fd1d 	bl	80060f8 <USBD_LL_PrepareReceive>
  return (uint8_t)USBD_OK;
 80046be:	2000      	movs	r0, #0
 80046c0:	e7db      	b.n	800467a <USBD_CDC_Init+0x7a>

080046c2 <USBD_CDC_RegisterInterface>:
  * @retval status
  */
uint8_t USBD_CDC_RegisterInterface(USBD_HandleTypeDef *pdev,
                                   USBD_CDC_ItfTypeDef *fops)
{
  if (fops == NULL)
 80046c2:	b119      	cbz	r1, 80046cc <USBD_CDC_RegisterInterface+0xa>
  {
    return (uint8_t)USBD_FAIL;
  }

  pdev->pUserData = fops;
 80046c4:	f8c0 12c0 	str.w	r1, [r0, #704]	; 0x2c0

  return (uint8_t)USBD_OK;
 80046c8:	2000      	movs	r0, #0
 80046ca:	4770      	bx	lr
    return (uint8_t)USBD_FAIL;
 80046cc:	2003      	movs	r0, #3
}
 80046ce:	4770      	bx	lr

080046d0 <USBD_CDC_SetTxBuffer>:
  * @retval status
  */
uint8_t USBD_CDC_SetTxBuffer(USBD_HandleTypeDef *pdev,
                             uint8_t *pbuff, uint32_t length)
{
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassData;
 80046d0:	f8d0 32bc 	ldr.w	r3, [r0, #700]	; 0x2bc

  hcdc->TxBuffer = pbuff;
 80046d4:	f8c3 1208 	str.w	r1, [r3, #520]	; 0x208
  hcdc->TxLength = length;
 80046d8:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210

  return (uint8_t)USBD_OK;
}
 80046dc:	2000      	movs	r0, #0
 80046de:	4770      	bx	lr

080046e0 <USBD_CDC_SetRxBuffer>:
  * @param  pbuff: Rx Buffer
  * @retval status
  */
uint8_t USBD_CDC_SetRxBuffer(USBD_HandleTypeDef *pdev, uint8_t *pbuff)
{
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassData;
 80046e0:	f8d0 32bc 	ldr.w	r3, [r0, #700]	; 0x2bc

  hcdc->RxBuffer = pbuff;
 80046e4:	f8c3 1204 	str.w	r1, [r3, #516]	; 0x204

  return (uint8_t)USBD_OK;
}
 80046e8:	2000      	movs	r0, #0
 80046ea:	4770      	bx	lr

080046ec <USBD_CDC_ReceivePacket>:
  * @param  pdev: device instance
  * @retval status
  */
uint8_t USBD_CDC_ReceivePacket(USBD_HandleTypeDef *pdev)
{
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassData;
 80046ec:	f8d0 22bc 	ldr.w	r2, [r0, #700]	; 0x2bc

  if (pdev->pClassData == NULL)
 80046f0:	b19a      	cbz	r2, 800471a <USBD_CDC_ReceivePacket+0x2e>
{
 80046f2:	b508      	push	{r3, lr}
  {
    return (uint8_t)USBD_FAIL;
  }

  if (pdev->dev_speed == USBD_SPEED_HIGH)
 80046f4:	7c03      	ldrb	r3, [r0, #16]
 80046f6:	b13b      	cbz	r3, 8004708 <USBD_CDC_ReceivePacket+0x1c>
                                 CDC_DATA_HS_OUT_PACKET_SIZE);
  }
  else
  {
    /* Prepare Out endpoint to receive next packet */
    (void)USBD_LL_PrepareReceive(pdev, CDC_OUT_EP, hcdc->RxBuffer,
 80046f8:	2340      	movs	r3, #64	; 0x40
 80046fa:	f8d2 2204 	ldr.w	r2, [r2, #516]	; 0x204
 80046fe:	2101      	movs	r1, #1
 8004700:	f001 fcfa 	bl	80060f8 <USBD_LL_PrepareReceive>
                                 CDC_DATA_FS_OUT_PACKET_SIZE);
  }

  return (uint8_t)USBD_OK;
 8004704:	2000      	movs	r0, #0
}
 8004706:	bd08      	pop	{r3, pc}
    (void)USBD_LL_PrepareReceive(pdev, CDC_OUT_EP, hcdc->RxBuffer,
 8004708:	f44f 7300 	mov.w	r3, #512	; 0x200
 800470c:	f8d2 2204 	ldr.w	r2, [r2, #516]	; 0x204
 8004710:	2101      	movs	r1, #1
 8004712:	f001 fcf1 	bl	80060f8 <USBD_LL_PrepareReceive>
  return (uint8_t)USBD_OK;
 8004716:	2000      	movs	r0, #0
 8004718:	e7f5      	b.n	8004706 <USBD_CDC_ReceivePacket+0x1a>
    return (uint8_t)USBD_FAIL;
 800471a:	2003      	movs	r0, #3
}
 800471c:	4770      	bx	lr

0800471e <USBD_Init>:
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
  USBD_StatusTypeDef ret;

  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
 800471e:	b1c0      	cbz	r0, 8004752 <USBD_Init+0x34>
{
 8004720:	b508      	push	{r3, lr}
 8004722:	4603      	mov	r3, r0
#endif
    return USBD_FAIL;
  }

  /* Unlink previous class */
  if (pdev->pClass != NULL)
 8004724:	f8d0 02b8 	ldr.w	r0, [r0, #696]	; 0x2b8
 8004728:	b110      	cbz	r0, 8004730 <USBD_Init+0x12>
  {
    pdev->pClass = NULL;
 800472a:	2000      	movs	r0, #0
 800472c:	f8c3 02b8 	str.w	r0, [r3, #696]	; 0x2b8
  }

  if (pdev->pConfDesc != NULL)
 8004730:	f8d3 02cc 	ldr.w	r0, [r3, #716]	; 0x2cc
 8004734:	b110      	cbz	r0, 800473c <USBD_Init+0x1e>
  {
    pdev->pConfDesc = NULL;
 8004736:	2000      	movs	r0, #0
 8004738:	f8c3 02cc 	str.w	r0, [r3, #716]	; 0x2cc
  }

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
 800473c:	b109      	cbz	r1, 8004742 <USBD_Init+0x24>
  {
    pdev->pDesc = pdesc;
 800473e:	f8c3 12b4 	str.w	r1, [r3, #692]	; 0x2b4
 8004742:	4618      	mov	r0, r3
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
 8004744:	2301      	movs	r3, #1
 8004746:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c
  pdev->id = id;
 800474a:	7002      	strb	r2, [r0, #0]

  /* Initialize low level driver */
  ret = USBD_LL_Init(pdev);
 800474c:	f001 fc0c 	bl	8005f68 <USBD_LL_Init>

  return ret;
}
 8004750:	bd08      	pop	{r3, pc}
    return USBD_FAIL;
 8004752:	2003      	movs	r0, #3
}
 8004754:	4770      	bx	lr

08004756 <USBD_RegisterClass>:
  * @param  pDevice : Device Handle
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
 8004756:	b510      	push	{r4, lr}
 8004758:	b082      	sub	sp, #8
  uint16_t len = 0U;
 800475a:	2300      	movs	r3, #0
 800475c:	f8ad 3006 	strh.w	r3, [sp, #6]

  if (pclass == NULL)
 8004760:	b159      	cbz	r1, 800477a <USBD_RegisterClass+0x24>
 8004762:	4604      	mov	r4, r0
#endif
    return USBD_FAIL;
  }

  /* link the class to the USB Device handle */
  pdev->pClass = pclass;
 8004764:	f8c4 12b8 	str.w	r1, [r4, #696]	; 0x2b8

  /* Get Device Configuration Descriptor */
#ifdef USE_USB_FS
  pdev->pConfDesc = (void *)pdev->pClass->GetFSConfigDescriptor(&len);
#else /* USE_USB_HS */
  pdev->pConfDesc = (void *)pdev->pClass->GetHSConfigDescriptor(&len);
 8004768:	6a8b      	ldr	r3, [r1, #40]	; 0x28
 800476a:	f10d 0006 	add.w	r0, sp, #6
 800476e:	4798      	blx	r3
 8004770:	f8c4 02cc 	str.w	r0, [r4, #716]	; 0x2cc
#endif /* USE_USB_FS */


  return USBD_OK;
 8004774:	2000      	movs	r0, #0
}
 8004776:	b002      	add	sp, #8
 8004778:	bd10      	pop	{r4, pc}
    return USBD_FAIL;
 800477a:	2003      	movs	r0, #3
 800477c:	e7fb      	b.n	8004776 <USBD_RegisterClass+0x20>

0800477e <USBD_Start>:
  *         Start the USB Device Core.
  * @param  pdev: Device Handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_Start(USBD_HandleTypeDef *pdev)
{
 800477e:	b508      	push	{r3, lr}
  /* Start the low level driver  */
  return USBD_LL_Start(pdev);
 8004780:	f001 fc7f 	bl	8006082 <USBD_LL_Start>
}
 8004784:	bd08      	pop	{r3, pc}

08004786 <USBD_SetClassConfig>:
* @param  cfgidx: configuration index
* @retval status
*/

USBD_StatusTypeDef USBD_SetClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 8004786:	b508      	push	{r3, lr}
  USBD_StatusTypeDef ret = USBD_FAIL;

  if (pdev->pClass != NULL)
 8004788:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 800478c:	b113      	cbz	r3, 8004794 <USBD_SetClassConfig+0xe>
  {
    /* Set configuration and Start the Class */
    ret = (USBD_StatusTypeDef)pdev->pClass->Init(pdev, cfgidx);
 800478e:	681b      	ldr	r3, [r3, #0]
 8004790:	4798      	blx	r3
  }

  return ret;
}
 8004792:	bd08      	pop	{r3, pc}
  USBD_StatusTypeDef ret = USBD_FAIL;
 8004794:	2003      	movs	r0, #3
 8004796:	e7fc      	b.n	8004792 <USBD_SetClassConfig+0xc>

08004798 <USBD_ClrClassConfig>:
* @param  pdev: device instance
* @param  cfgidx: configuration index
* @retval status: USBD_StatusTypeDef
*/
USBD_StatusTypeDef USBD_ClrClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 8004798:	b508      	push	{r3, lr}
  /* Clear configuration and De-initialize the Class process */
  if (pdev->pClass != NULL)
 800479a:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 800479e:	b10b      	cbz	r3, 80047a4 <USBD_ClrClassConfig+0xc>
  {
    pdev->pClass->DeInit(pdev, cfgidx);
 80047a0:	685b      	ldr	r3, [r3, #4]
 80047a2:	4798      	blx	r3
  }

  return USBD_OK;
}
 80047a4:	2000      	movs	r0, #0
 80047a6:	bd08      	pop	{r3, pc}

080047a8 <USBD_LL_SetupStage>:
*         Handle the setup stage
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef USBD_LL_SetupStage(USBD_HandleTypeDef *pdev, uint8_t *psetup)
{
 80047a8:	b538      	push	{r3, r4, r5, lr}
 80047aa:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret;

  USBD_ParseSetupRequest(&pdev->request, psetup);
 80047ac:	f200 25aa 	addw	r5, r0, #682	; 0x2aa
 80047b0:	4628      	mov	r0, r5
 80047b2:	f000 f92d 	bl	8004a10 <USBD_ParseSetupRequest>

  pdev->ep0_state = USBD_EP0_SETUP;
 80047b6:	2301      	movs	r3, #1
 80047b8:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294

  pdev->ep0_data_len = pdev->request.wLength;
 80047bc:	f8b4 32b0 	ldrh.w	r3, [r4, #688]	; 0x2b0
 80047c0:	f8c4 3298 	str.w	r3, [r4, #664]	; 0x298

  switch (pdev->request.bmRequest & 0x1FU)
 80047c4:	f894 12aa 	ldrb.w	r1, [r4, #682]	; 0x2aa
 80047c8:	f001 031f 	and.w	r3, r1, #31
 80047cc:	2b01      	cmp	r3, #1
 80047ce:	d00d      	beq.n	80047ec <USBD_LL_SetupStage+0x44>
 80047d0:	b13b      	cbz	r3, 80047e2 <USBD_LL_SetupStage+0x3a>
 80047d2:	2b02      	cmp	r3, #2
 80047d4:	d00f      	beq.n	80047f6 <USBD_LL_SetupStage+0x4e>
    case USB_REQ_RECIPIENT_ENDPOINT:
      ret = USBD_StdEPReq(pdev, &pdev->request);
      break;

    default:
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 80047d6:	f001 0180 	and.w	r1, r1, #128	; 0x80
 80047da:	4620      	mov	r0, r4
 80047dc:	f001 fc6c 	bl	80060b8 <USBD_LL_StallEP>
      break;
 80047e0:	e003      	b.n	80047ea <USBD_LL_SetupStage+0x42>
      ret = USBD_StdDevReq(pdev, &pdev->request);
 80047e2:	4629      	mov	r1, r5
 80047e4:	4620      	mov	r0, r4
 80047e6:	f000 fae0 	bl	8004daa <USBD_StdDevReq>
  }

  return ret;
}
 80047ea:	bd38      	pop	{r3, r4, r5, pc}
      ret = USBD_StdItfReq(pdev, &pdev->request);
 80047ec:	4629      	mov	r1, r5
 80047ee:	4620      	mov	r0, r4
 80047f0:	f000 fb16 	bl	8004e20 <USBD_StdItfReq>
      break;
 80047f4:	e7f9      	b.n	80047ea <USBD_LL_SetupStage+0x42>
      ret = USBD_StdEPReq(pdev, &pdev->request);
 80047f6:	4629      	mov	r1, r5
 80047f8:	4620      	mov	r0, r4
 80047fa:	f000 fb45 	bl	8004e88 <USBD_StdEPReq>
      break;
 80047fe:	e7f4      	b.n	80047ea <USBD_LL_SetupStage+0x42>

08004800 <USBD_LL_DataOutStage>:
* @param  epnum: endpoint index
* @retval status
*/
USBD_StatusTypeDef USBD_LL_DataOutStage(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum, uint8_t *pdata)
{
 8004800:	b510      	push	{r4, lr}
 8004802:	4604      	mov	r4, r0
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret;

  if (epnum == 0U)
 8004804:	bb29      	cbnz	r1, 8004852 <USBD_LL_DataOutStage+0x52>
 8004806:	4613      	mov	r3, r2
  {
    pep = &pdev->ep_out[0];

    if (pdev->ep0_state == USBD_EP0_DATA_OUT)
 8004808:	f8d0 2294 	ldr.w	r2, [r0, #660]	; 0x294
 800480c:	2a03      	cmp	r2, #3
 800480e:	d001      	beq.n	8004814 <USBD_LL_DataOutStage+0x14>
  {
    /* should never be in this condition */
    return USBD_FAIL;
  }

  return USBD_OK;
 8004810:	2000      	movs	r0, #0
 8004812:	e029      	b.n	8004868 <USBD_LL_DataOutStage+0x68>
      if (pep->rem_length > pep->maxpacket)
 8004814:	f8d0 115c 	ldr.w	r1, [r0, #348]	; 0x15c
 8004818:	f8d0 2160 	ldr.w	r2, [r0, #352]	; 0x160
 800481c:	4291      	cmp	r1, r2
 800481e:	d80d      	bhi.n	800483c <USBD_LL_DataOutStage+0x3c>
        if ((pdev->pClass->EP0_RxReady != NULL) &&
 8004820:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 8004824:	691b      	ldr	r3, [r3, #16]
 8004826:	b123      	cbz	r3, 8004832 <USBD_LL_DataOutStage+0x32>
            (pdev->dev_state == USBD_STATE_CONFIGURED))
 8004828:	f890 229c 	ldrb.w	r2, [r0, #668]	; 0x29c
        if ((pdev->pClass->EP0_RxReady != NULL) &&
 800482c:	2a03      	cmp	r2, #3
 800482e:	d100      	bne.n	8004832 <USBD_LL_DataOutStage+0x32>
          pdev->pClass->EP0_RxReady(pdev);
 8004830:	4798      	blx	r3
        (void)USBD_CtlSendStatus(pdev);
 8004832:	4620      	mov	r0, r4
 8004834:	f000 fc88 	bl	8005148 <USBD_CtlSendStatus>
  return USBD_OK;
 8004838:	2000      	movs	r0, #0
 800483a:	e015      	b.n	8004868 <USBD_LL_DataOutStage+0x68>
        pep->rem_length -= pep->maxpacket;
 800483c:	1a89      	subs	r1, r1, r2
 800483e:	f8c0 115c 	str.w	r1, [r0, #348]	; 0x15c
        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
 8004842:	428a      	cmp	r2, r1
 8004844:	bf28      	it	cs
 8004846:	460a      	movcs	r2, r1
 8004848:	4619      	mov	r1, r3
 800484a:	f000 fc75 	bl	8005138 <USBD_CtlContinueRx>
  return USBD_OK;
 800484e:	2000      	movs	r0, #0
 8004850:	e00a      	b.n	8004868 <USBD_LL_DataOutStage+0x68>
 8004852:	460a      	mov	r2, r1
  else if ((pdev->pClass->DataOut != NULL) &&
 8004854:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 8004858:	699b      	ldr	r3, [r3, #24]
 800485a:	b133      	cbz	r3, 800486a <USBD_LL_DataOutStage+0x6a>
           (pdev->dev_state == USBD_STATE_CONFIGURED))
 800485c:	f890 129c 	ldrb.w	r1, [r0, #668]	; 0x29c
  else if ((pdev->pClass->DataOut != NULL) &&
 8004860:	2903      	cmp	r1, #3
 8004862:	d104      	bne.n	800486e <USBD_LL_DataOutStage+0x6e>
    ret = (USBD_StatusTypeDef)pdev->pClass->DataOut(pdev, epnum);
 8004864:	4611      	mov	r1, r2
 8004866:	4798      	blx	r3
}
 8004868:	bd10      	pop	{r4, pc}
    return USBD_FAIL;
 800486a:	2003      	movs	r0, #3
 800486c:	e7fc      	b.n	8004868 <USBD_LL_DataOutStage+0x68>
 800486e:	2003      	movs	r0, #3
 8004870:	e7fa      	b.n	8004868 <USBD_LL_DataOutStage+0x68>

08004872 <USBD_LL_DataInStage>:
* @param  epnum: endpoint index
* @retval status
*/
USBD_StatusTypeDef USBD_LL_DataInStage(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum, uint8_t *pdata)
{
 8004872:	b510      	push	{r4, lr}
 8004874:	4604      	mov	r4, r0
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret;

  if (epnum == 0U)
 8004876:	2900      	cmp	r1, #0
 8004878:	d146      	bne.n	8004908 <USBD_LL_DataInStage+0x96>
 800487a:	4613      	mov	r3, r2
  {
    pep = &pdev->ep_in[0];

    if (pdev->ep0_state == USBD_EP0_DATA_IN)
 800487c:	f8d0 2294 	ldr.w	r2, [r0, #660]	; 0x294
 8004880:	2a02      	cmp	r2, #2
 8004882:	d005      	beq.n	8004890 <USBD_LL_DataInStage+0x1e>
        (void)USBD_LL_StallEP(pdev, 0x80U);
      }
#endif
    }

    if (pdev->dev_test_mode == 1U)
 8004884:	f894 32a0 	ldrb.w	r3, [r4, #672]	; 0x2a0
 8004888:	2b01      	cmp	r3, #1
 800488a:	d039      	beq.n	8004900 <USBD_LL_DataInStage+0x8e>
  {
    /* should never be in this condition */
    return USBD_FAIL;
  }

  return USBD_OK;
 800488c:	2000      	movs	r0, #0
 800488e:	e046      	b.n	800491e <USBD_LL_DataInStage+0xac>
      if (pep->rem_length > pep->maxpacket)
 8004890:	69c2      	ldr	r2, [r0, #28]
 8004892:	6a01      	ldr	r1, [r0, #32]
 8004894:	428a      	cmp	r2, r1
 8004896:	d813      	bhi.n	80048c0 <USBD_LL_DataInStage+0x4e>
        if ((pep->maxpacket == pep->rem_length) &&
 8004898:	428a      	cmp	r2, r1
 800489a:	d01d      	beq.n	80048d8 <USBD_LL_DataInStage+0x66>
          if ((pdev->pClass->EP0_TxSent != NULL) &&
 800489c:	f8d4 32b8 	ldr.w	r3, [r4, #696]	; 0x2b8
 80048a0:	68db      	ldr	r3, [r3, #12]
 80048a2:	b12b      	cbz	r3, 80048b0 <USBD_LL_DataInStage+0x3e>
              (pdev->dev_state == USBD_STATE_CONFIGURED))
 80048a4:	f894 229c 	ldrb.w	r2, [r4, #668]	; 0x29c
          if ((pdev->pClass->EP0_TxSent != NULL) &&
 80048a8:	2a03      	cmp	r2, #3
 80048aa:	d101      	bne.n	80048b0 <USBD_LL_DataInStage+0x3e>
            pdev->pClass->EP0_TxSent(pdev);
 80048ac:	4620      	mov	r0, r4
 80048ae:	4798      	blx	r3
          (void)USBD_LL_StallEP(pdev, 0x80U);
 80048b0:	2180      	movs	r1, #128	; 0x80
 80048b2:	4620      	mov	r0, r4
 80048b4:	f001 fc00 	bl	80060b8 <USBD_LL_StallEP>
          (void)USBD_CtlReceiveStatus(pdev);
 80048b8:	4620      	mov	r0, r4
 80048ba:	f000 fc50 	bl	800515e <USBD_CtlReceiveStatus>
 80048be:	e7e1      	b.n	8004884 <USBD_LL_DataInStage+0x12>
        pep->rem_length -= pep->maxpacket;
 80048c0:	1a52      	subs	r2, r2, r1
 80048c2:	61c2      	str	r2, [r0, #28]
        (void)USBD_CtlContinueSendData(pdev, pdata, pep->rem_length);
 80048c4:	4619      	mov	r1, r3
 80048c6:	f000 fc20 	bl	800510a <USBD_CtlContinueSendData>
       (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 80048ca:	2300      	movs	r3, #0
 80048cc:	461a      	mov	r2, r3
 80048ce:	4619      	mov	r1, r3
 80048d0:	4620      	mov	r0, r4
 80048d2:	f001 fc11 	bl	80060f8 <USBD_LL_PrepareReceive>
 80048d6:	e7d5      	b.n	8004884 <USBD_LL_DataInStage+0x12>
            (pep->total_length >= pep->maxpacket) &&
 80048d8:	6983      	ldr	r3, [r0, #24]
        if ((pep->maxpacket == pep->rem_length) &&
 80048da:	4299      	cmp	r1, r3
 80048dc:	d8de      	bhi.n	800489c <USBD_LL_DataInStage+0x2a>
            (pep->total_length < pdev->ep0_data_len))
 80048de:	f8d0 2298 	ldr.w	r2, [r0, #664]	; 0x298
            (pep->total_length >= pep->maxpacket) &&
 80048e2:	4293      	cmp	r3, r2
 80048e4:	d2da      	bcs.n	800489c <USBD_LL_DataInStage+0x2a>
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
 80048e6:	2200      	movs	r2, #0
 80048e8:	4611      	mov	r1, r2
 80048ea:	f000 fc0e 	bl	800510a <USBD_CtlContinueSendData>
          pdev->ep0_data_len = 0U;
 80048ee:	2100      	movs	r1, #0
 80048f0:	f8c4 1298 	str.w	r1, [r4, #664]	; 0x298
          (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 80048f4:	460b      	mov	r3, r1
 80048f6:	460a      	mov	r2, r1
 80048f8:	4620      	mov	r0, r4
 80048fa:	f001 fbfd 	bl	80060f8 <USBD_LL_PrepareReceive>
 80048fe:	e7c1      	b.n	8004884 <USBD_LL_DataInStage+0x12>
      pdev->dev_test_mode = 0U;
 8004900:	2000      	movs	r0, #0
 8004902:	f884 02a0 	strb.w	r0, [r4, #672]	; 0x2a0
 8004906:	e00a      	b.n	800491e <USBD_LL_DataInStage+0xac>
 8004908:	460a      	mov	r2, r1
  else if ((pdev->pClass->DataIn != NULL) &&
 800490a:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 800490e:	695b      	ldr	r3, [r3, #20]
 8004910:	b133      	cbz	r3, 8004920 <USBD_LL_DataInStage+0xae>
           (pdev->dev_state == USBD_STATE_CONFIGURED))
 8004912:	f890 129c 	ldrb.w	r1, [r0, #668]	; 0x29c
  else if ((pdev->pClass->DataIn != NULL) &&
 8004916:	2903      	cmp	r1, #3
 8004918:	d104      	bne.n	8004924 <USBD_LL_DataInStage+0xb2>
    ret = (USBD_StatusTypeDef)pdev->pClass->DataIn(pdev, epnum);
 800491a:	4611      	mov	r1, r2
 800491c:	4798      	blx	r3
}
 800491e:	bd10      	pop	{r4, pc}
    return USBD_FAIL;
 8004920:	2003      	movs	r0, #3
 8004922:	e7fc      	b.n	800491e <USBD_LL_DataInStage+0xac>
 8004924:	2003      	movs	r0, #3
 8004926:	e7fa      	b.n	800491e <USBD_LL_DataInStage+0xac>

08004928 <USBD_LL_Reset>:
* @param  pdev: device instance
* @retval status
*/

USBD_StatusTypeDef USBD_LL_Reset(USBD_HandleTypeDef *pdev)
{
 8004928:	b570      	push	{r4, r5, r6, lr}
 800492a:	4604      	mov	r4, r0
  /* Upon Reset call user call back */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800492c:	2301      	movs	r3, #1
 800492e:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c
  pdev->ep0_state = USBD_EP0_IDLE;
 8004932:	2300      	movs	r3, #0
 8004934:	f8c0 3294 	str.w	r3, [r0, #660]	; 0x294
  pdev->dev_config = 0U;
 8004938:	6043      	str	r3, [r0, #4]
  pdev->dev_remote_wakeup = 0U;
 800493a:	f8c0 32a4 	str.w	r3, [r0, #676]	; 0x2a4

  if (pdev->pClassData != NULL)
 800493e:	f8d0 32bc 	ldr.w	r3, [r0, #700]	; 0x2bc
 8004942:	b123      	cbz	r3, 800494e <USBD_LL_Reset+0x26>
  {
    pdev->pClass->DeInit(pdev, (uint8_t)pdev->dev_config);
 8004944:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 8004948:	685b      	ldr	r3, [r3, #4]
 800494a:	2100      	movs	r1, #0
 800494c:	4798      	blx	r3
  }

    /* Open EP0 OUT */
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800494e:	2340      	movs	r3, #64	; 0x40
 8004950:	2200      	movs	r2, #0
 8004952:	4611      	mov	r1, r2
 8004954:	4620      	mov	r0, r4
 8004956:	f001 fb9c 	bl	8006092 <USBD_LL_OpenEP>
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 800495a:	2601      	movs	r6, #1
 800495c:	f8a4 6164 	strh.w	r6, [r4, #356]	; 0x164

  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 8004960:	2540      	movs	r5, #64	; 0x40
 8004962:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160

  /* Open EP0 IN */
  (void)USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 8004966:	462b      	mov	r3, r5
 8004968:	2200      	movs	r2, #0
 800496a:	2180      	movs	r1, #128	; 0x80
 800496c:	4620      	mov	r0, r4
 800496e:	f001 fb90 	bl	8006092 <USBD_LL_OpenEP>
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;
 8004972:	84a6      	strh	r6, [r4, #36]	; 0x24

  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;
 8004974:	6225      	str	r5, [r4, #32]

  return USBD_OK;
}
 8004976:	2000      	movs	r0, #0
 8004978:	bd70      	pop	{r4, r5, r6, pc}

0800497a <USBD_LL_SetSpeed>:
* @retval status
*/
USBD_StatusTypeDef USBD_LL_SetSpeed(USBD_HandleTypeDef *pdev,
                                    USBD_SpeedTypeDef speed)
{
  pdev->dev_speed = speed;
 800497a:	7401      	strb	r1, [r0, #16]

  return USBD_OK;
}
 800497c:	2000      	movs	r0, #0
 800497e:	4770      	bx	lr

08004980 <USBD_LL_Suspend>:
* @retval status
*/

USBD_StatusTypeDef USBD_LL_Suspend(USBD_HandleTypeDef *pdev)
{
  pdev->dev_old_state = pdev->dev_state;
 8004980:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8004984:	f880 329d 	strb.w	r3, [r0, #669]	; 0x29d
  pdev->dev_state = USBD_STATE_SUSPENDED;
 8004988:	2304      	movs	r3, #4
 800498a:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c

  return USBD_OK;
}
 800498e:	2000      	movs	r0, #0
 8004990:	4770      	bx	lr

08004992 <USBD_LL_Resume>:
* @retval status
*/

USBD_StatusTypeDef USBD_LL_Resume(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state == USBD_STATE_SUSPENDED)
 8004992:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8004996:	2b04      	cmp	r3, #4
 8004998:	d001      	beq.n	800499e <USBD_LL_Resume+0xc>
  {
    pdev->dev_state = pdev->dev_old_state;
  }

  return USBD_OK;
}
 800499a:	2000      	movs	r0, #0
 800499c:	4770      	bx	lr
    pdev->dev_state = pdev->dev_old_state;
 800499e:	f890 329d 	ldrb.w	r3, [r0, #669]	; 0x29d
 80049a2:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c
 80049a6:	e7f8      	b.n	800499a <USBD_LL_Resume+0x8>

080049a8 <USBD_LL_SOF>:
* @param  pdev: device instance
* @retval status
*/

USBD_StatusTypeDef USBD_LL_SOF(USBD_HandleTypeDef *pdev)
{
 80049a8:	b508      	push	{r3, lr}
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80049aa:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 80049ae:	2b03      	cmp	r3, #3
 80049b0:	d001      	beq.n	80049b6 <USBD_LL_SOF+0xe>
      pdev->pClass->SOF(pdev);
    }
  }

  return USBD_OK;
}
 80049b2:	2000      	movs	r0, #0
 80049b4:	bd08      	pop	{r3, pc}
    if (pdev->pClass->SOF != NULL)
 80049b6:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 80049ba:	69db      	ldr	r3, [r3, #28]
 80049bc:	2b00      	cmp	r3, #0
 80049be:	d0f8      	beq.n	80049b2 <USBD_LL_SOF+0xa>
      pdev->pClass->SOF(pdev);
 80049c0:	4798      	blx	r3
 80049c2:	e7f6      	b.n	80049b2 <USBD_LL_SOF+0xa>

080049c4 <USBD_LL_IsoINIncomplete>:
  /* Prevent unused arguments compilation warning */
  UNUSED(pdev);
  UNUSED(epnum);

  return USBD_OK;
}
 80049c4:	2000      	movs	r0, #0
 80049c6:	4770      	bx	lr

080049c8 <USBD_LL_IsoOUTIncomplete>:
  /* Prevent unused arguments compilation warning */
  UNUSED(pdev);
  UNUSED(epnum);

  return USBD_OK;
}
 80049c8:	2000      	movs	r0, #0
 80049ca:	4770      	bx	lr

080049cc <USBD_LL_DevConnected>:
{
  /* Prevent unused argument compilation warning */
  UNUSED(pdev);

  return USBD_OK;
}
 80049cc:	2000      	movs	r0, #0
 80049ce:	4770      	bx	lr

080049d0 <USBD_LL_DevDisconnected>:
*         Handle device disconnection event
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef USBD_LL_DevDisconnected(USBD_HandleTypeDef *pdev)
{
 80049d0:	b508      	push	{r3, lr}
  /* Free Class Resources */
  pdev->dev_state = USBD_STATE_DEFAULT;
 80049d2:	2301      	movs	r3, #1
 80049d4:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c

  if (pdev->pClass != NULL)
 80049d8:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 80049dc:	b113      	cbz	r3, 80049e4 <USBD_LL_DevDisconnected+0x14>
  {
    pdev->pClass->DeInit(pdev, (uint8_t)pdev->dev_config);
 80049de:	685b      	ldr	r3, [r3, #4]
 80049e0:	7901      	ldrb	r1, [r0, #4]
 80049e2:	4798      	blx	r3
  }

  return USBD_OK;
}
 80049e4:	2000      	movs	r0, #0
 80049e6:	bd08      	pop	{r3, pc}

080049e8 <USBD_GetLen>:
   * @param  buf : pointer to the ascii string buffer
  * @retval string length
  */
static uint8_t USBD_GetLen(uint8_t *buf)
{
  uint8_t  len = 0U;
 80049e8:	2300      	movs	r3, #0
  uint8_t *pbuff = buf;

  while (*pbuff != (uint8_t)'\0')
 80049ea:	e002      	b.n	80049f2 <USBD_GetLen+0xa>
  {
    len++;
 80049ec:	3301      	adds	r3, #1
 80049ee:	b2db      	uxtb	r3, r3
    pbuff++;
 80049f0:	3001      	adds	r0, #1
  while (*pbuff != (uint8_t)'\0')
 80049f2:	7802      	ldrb	r2, [r0, #0]
 80049f4:	2a00      	cmp	r2, #0
 80049f6:	d1f9      	bne.n	80049ec <USBD_GetLen+0x4>
  }

  return len;
}
 80049f8:	4618      	mov	r0, r3
 80049fa:	4770      	bx	lr

080049fc <USBD_SetFeature>:
{
 80049fc:	b508      	push	{r3, lr}
  if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 80049fe:	884b      	ldrh	r3, [r1, #2]
 8004a00:	2b01      	cmp	r3, #1
 8004a02:	d000      	beq.n	8004a06 <USBD_SetFeature+0xa>
}
 8004a04:	bd08      	pop	{r3, pc}
    pdev->dev_remote_wakeup = 1U;
 8004a06:	f8c0 32a4 	str.w	r3, [r0, #676]	; 0x2a4
    (void)USBD_CtlSendStatus(pdev);
 8004a0a:	f000 fb9d 	bl	8005148 <USBD_CtlSendStatus>
}
 8004a0e:	e7f9      	b.n	8004a04 <USBD_SetFeature+0x8>

08004a10 <USBD_ParseSetupRequest>:
  req->bmRequest = *(uint8_t *)(pbuff);
 8004a10:	780b      	ldrb	r3, [r1, #0]
 8004a12:	7003      	strb	r3, [r0, #0]
  req->bRequest = *(uint8_t *)(pbuff);
 8004a14:	784b      	ldrb	r3, [r1, #1]
 8004a16:	7043      	strb	r3, [r0, #1]
__STATIC_INLINE uint16_t SWAPBYTE(uint8_t *addr)
{
  uint16_t _SwapVal, _Byte1, _Byte2;
  uint8_t *_pbuff = addr;

  _Byte1 = *(uint8_t *)_pbuff;
 8004a18:	788b      	ldrb	r3, [r1, #2]
  _pbuff++;
  _Byte2 = *(uint8_t *)_pbuff;
 8004a1a:	78ca      	ldrb	r2, [r1, #3]

  _SwapVal = (_Byte2 << 8) | _Byte1;
 8004a1c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  req->wValue = SWAPBYTE(pbuff);
 8004a20:	8043      	strh	r3, [r0, #2]
  _Byte1 = *(uint8_t *)_pbuff;
 8004a22:	790b      	ldrb	r3, [r1, #4]
  _Byte2 = *(uint8_t *)_pbuff;
 8004a24:	794a      	ldrb	r2, [r1, #5]
  _SwapVal = (_Byte2 << 8) | _Byte1;
 8004a26:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  req->wIndex = SWAPBYTE(pbuff);
 8004a2a:	8083      	strh	r3, [r0, #4]
  _Byte1 = *(uint8_t *)_pbuff;
 8004a2c:	798b      	ldrb	r3, [r1, #6]
  _Byte2 = *(uint8_t *)_pbuff;
 8004a2e:	79ca      	ldrb	r2, [r1, #7]
  _SwapVal = (_Byte2 << 8) | _Byte1;
 8004a30:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  req->wLength = SWAPBYTE(pbuff);
 8004a34:	80c3      	strh	r3, [r0, #6]
}
 8004a36:	4770      	bx	lr

08004a38 <USBD_CtlError>:
{
 8004a38:	b510      	push	{r4, lr}
 8004a3a:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
 8004a3c:	2180      	movs	r1, #128	; 0x80
 8004a3e:	f001 fb3b 	bl	80060b8 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 8004a42:	2100      	movs	r1, #0
 8004a44:	4620      	mov	r0, r4
 8004a46:	f001 fb37 	bl	80060b8 <USBD_LL_StallEP>
}
 8004a4a:	bd10      	pop	{r4, pc}

08004a4c <USBD_GetDescriptor>:
{
 8004a4c:	b530      	push	{r4, r5, lr}
 8004a4e:	b083      	sub	sp, #12
 8004a50:	4604      	mov	r4, r0
 8004a52:	460d      	mov	r5, r1
  uint16_t len = 0U;
 8004a54:	2300      	movs	r3, #0
 8004a56:	f8ad 3006 	strh.w	r3, [sp, #6]
  switch (req->wValue >> 8)
 8004a5a:	884a      	ldrh	r2, [r1, #2]
 8004a5c:	0a13      	lsrs	r3, r2, #8
 8004a5e:	3b01      	subs	r3, #1
 8004a60:	2b0e      	cmp	r3, #14
 8004a62:	f200 80bc 	bhi.w	8004bde <USBD_GetDescriptor+0x192>
 8004a66:	e8df f003 	tbb	[pc, r3]
 8004a6a:	3015      	.short	0x3015
 8004a6c:	9ebaba44 	.word	0x9ebaba44
 8004a70:	bababaab 	.word	0xbababaab
 8004a74:	babababa 	.word	0xbabababa
 8004a78:	08          	.byte	0x08
 8004a79:	00          	.byte	0x00
    if (pdev->pDesc->GetBOSDescriptor != NULL)
 8004a7a:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 8004a7e:	69db      	ldr	r3, [r3, #28]
 8004a80:	b123      	cbz	r3, 8004a8c <USBD_GetDescriptor+0x40>
      pbuf = pdev->pDesc->GetBOSDescriptor(pdev->dev_speed, &len);
 8004a82:	f10d 0106 	add.w	r1, sp, #6
 8004a86:	7c00      	ldrb	r0, [r0, #16]
 8004a88:	4798      	blx	r3
 8004a8a:	e00a      	b.n	8004aa2 <USBD_GetDescriptor+0x56>
      USBD_CtlError(pdev, req);
 8004a8c:	4629      	mov	r1, r5
 8004a8e:	f7ff ffd3 	bl	8004a38 <USBD_CtlError>
 8004a92:	e018      	b.n	8004ac6 <USBD_GetDescriptor+0x7a>
    pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
 8004a94:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 8004a98:	681b      	ldr	r3, [r3, #0]
 8004a9a:	f10d 0106 	add.w	r1, sp, #6
 8004a9e:	7c00      	ldrb	r0, [r0, #16]
 8004aa0:	4798      	blx	r3
    if (req->wLength != 0U)
 8004aa2:	88ea      	ldrh	r2, [r5, #6]
 8004aa4:	2a00      	cmp	r2, #0
 8004aa6:	f000 80a3 	beq.w	8004bf0 <USBD_GetDescriptor+0x1a4>
      if (len != 0U)
 8004aaa:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8004aae:	2b00      	cmp	r3, #0
 8004ab0:	f000 8099 	beq.w	8004be6 <USBD_GetDescriptor+0x19a>
        len = MIN(len, req->wLength);
 8004ab4:	429a      	cmp	r2, r3
 8004ab6:	bf28      	it	cs
 8004ab8:	461a      	movcs	r2, r3
 8004aba:	f8ad 2006 	strh.w	r2, [sp, #6]
        (void)USBD_CtlSendData(pdev, pbuf, len);
 8004abe:	4601      	mov	r1, r0
 8004ac0:	4620      	mov	r0, r4
 8004ac2:	f000 fb15 	bl	80050f0 <USBD_CtlSendData>
}
 8004ac6:	b003      	add	sp, #12
 8004ac8:	bd30      	pop	{r4, r5, pc}
    if (pdev->dev_speed == USBD_SPEED_HIGH)
 8004aca:	7c03      	ldrb	r3, [r0, #16]
 8004acc:	b943      	cbnz	r3, 8004ae0 <USBD_GetDescriptor+0x94>
      pbuf = pdev->pClass->GetHSConfigDescriptor(&len);
 8004ace:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 8004ad2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004ad4:	f10d 0006 	add.w	r0, sp, #6
 8004ad8:	4798      	blx	r3
      pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 8004ada:	2302      	movs	r3, #2
 8004adc:	7043      	strb	r3, [r0, #1]
 8004ade:	e7e0      	b.n	8004aa2 <USBD_GetDescriptor+0x56>
      pbuf = pdev->pClass->GetFSConfigDescriptor(&len);
 8004ae0:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 8004ae4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004ae6:	f10d 0006 	add.w	r0, sp, #6
 8004aea:	4798      	blx	r3
      pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 8004aec:	2302      	movs	r3, #2
 8004aee:	7043      	strb	r3, [r0, #1]
 8004af0:	e7d7      	b.n	8004aa2 <USBD_GetDescriptor+0x56>
    switch ((uint8_t)(req->wValue))
 8004af2:	b2d2      	uxtb	r2, r2
 8004af4:	2a05      	cmp	r2, #5
 8004af6:	d852      	bhi.n	8004b9e <USBD_GetDescriptor+0x152>
 8004af8:	e8df f002 	tbb	[pc, r2]
 8004afc:	2a1d1003 	.word	0x2a1d1003
 8004b00:	4437      	.short	0x4437
      if (pdev->pDesc->GetLangIDStrDescriptor != NULL)
 8004b02:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 8004b06:	685b      	ldr	r3, [r3, #4]
 8004b08:	b123      	cbz	r3, 8004b14 <USBD_GetDescriptor+0xc8>
        pbuf = pdev->pDesc->GetLangIDStrDescriptor(pdev->dev_speed, &len);
 8004b0a:	f10d 0106 	add.w	r1, sp, #6
 8004b0e:	7c00      	ldrb	r0, [r0, #16]
 8004b10:	4798      	blx	r3
 8004b12:	e7c6      	b.n	8004aa2 <USBD_GetDescriptor+0x56>
        USBD_CtlError(pdev, req);
 8004b14:	4629      	mov	r1, r5
 8004b16:	f7ff ff8f 	bl	8004a38 <USBD_CtlError>
 8004b1a:	e7d4      	b.n	8004ac6 <USBD_GetDescriptor+0x7a>
      if (pdev->pDesc->GetManufacturerStrDescriptor != NULL)
 8004b1c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 8004b20:	689b      	ldr	r3, [r3, #8]
 8004b22:	b123      	cbz	r3, 8004b2e <USBD_GetDescriptor+0xe2>
        pbuf = pdev->pDesc->GetManufacturerStrDescriptor(pdev->dev_speed, &len);
 8004b24:	f10d 0106 	add.w	r1, sp, #6
 8004b28:	7c00      	ldrb	r0, [r0, #16]
 8004b2a:	4798      	blx	r3
 8004b2c:	e7b9      	b.n	8004aa2 <USBD_GetDescriptor+0x56>
        USBD_CtlError(pdev, req);
 8004b2e:	4629      	mov	r1, r5
 8004b30:	f7ff ff82 	bl	8004a38 <USBD_CtlError>
 8004b34:	e7c7      	b.n	8004ac6 <USBD_GetDescriptor+0x7a>
      if (pdev->pDesc->GetProductStrDescriptor != NULL)
 8004b36:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 8004b3a:	68db      	ldr	r3, [r3, #12]
 8004b3c:	b123      	cbz	r3, 8004b48 <USBD_GetDescriptor+0xfc>
        pbuf = pdev->pDesc->GetProductStrDescriptor(pdev->dev_speed, &len);
 8004b3e:	f10d 0106 	add.w	r1, sp, #6
 8004b42:	7c00      	ldrb	r0, [r0, #16]
 8004b44:	4798      	blx	r3
 8004b46:	e7ac      	b.n	8004aa2 <USBD_GetDescriptor+0x56>
        USBD_CtlError(pdev, req);
 8004b48:	4629      	mov	r1, r5
 8004b4a:	f7ff ff75 	bl	8004a38 <USBD_CtlError>
 8004b4e:	e7ba      	b.n	8004ac6 <USBD_GetDescriptor+0x7a>
      if (pdev->pDesc->GetSerialStrDescriptor != NULL)
 8004b50:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 8004b54:	691b      	ldr	r3, [r3, #16]
 8004b56:	b123      	cbz	r3, 8004b62 <USBD_GetDescriptor+0x116>
        pbuf = pdev->pDesc->GetSerialStrDescriptor(pdev->dev_speed, &len);
 8004b58:	f10d 0106 	add.w	r1, sp, #6
 8004b5c:	7c00      	ldrb	r0, [r0, #16]
 8004b5e:	4798      	blx	r3
 8004b60:	e79f      	b.n	8004aa2 <USBD_GetDescriptor+0x56>
        USBD_CtlError(pdev, req);
 8004b62:	4629      	mov	r1, r5
 8004b64:	f7ff ff68 	bl	8004a38 <USBD_CtlError>
 8004b68:	e7ad      	b.n	8004ac6 <USBD_GetDescriptor+0x7a>
      if (pdev->pDesc->GetConfigurationStrDescriptor != NULL)
 8004b6a:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 8004b6e:	695b      	ldr	r3, [r3, #20]
 8004b70:	b123      	cbz	r3, 8004b7c <USBD_GetDescriptor+0x130>
        pbuf = pdev->pDesc->GetConfigurationStrDescriptor(pdev->dev_speed, &len);
 8004b72:	f10d 0106 	add.w	r1, sp, #6
 8004b76:	7c00      	ldrb	r0, [r0, #16]
 8004b78:	4798      	blx	r3
 8004b7a:	e792      	b.n	8004aa2 <USBD_GetDescriptor+0x56>
        USBD_CtlError(pdev, req);
 8004b7c:	4629      	mov	r1, r5
 8004b7e:	f7ff ff5b 	bl	8004a38 <USBD_CtlError>
 8004b82:	e7a0      	b.n	8004ac6 <USBD_GetDescriptor+0x7a>
      if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 8004b84:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 8004b88:	699b      	ldr	r3, [r3, #24]
 8004b8a:	b123      	cbz	r3, 8004b96 <USBD_GetDescriptor+0x14a>
        pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
 8004b8c:	f10d 0106 	add.w	r1, sp, #6
 8004b90:	7c00      	ldrb	r0, [r0, #16]
 8004b92:	4798      	blx	r3
 8004b94:	e785      	b.n	8004aa2 <USBD_GetDescriptor+0x56>
        USBD_CtlError(pdev, req);
 8004b96:	4629      	mov	r1, r5
 8004b98:	f7ff ff4e 	bl	8004a38 <USBD_CtlError>
 8004b9c:	e793      	b.n	8004ac6 <USBD_GetDescriptor+0x7a>
      USBD_CtlError(pdev, req);
 8004b9e:	4629      	mov	r1, r5
 8004ba0:	f7ff ff4a 	bl	8004a38 <USBD_CtlError>
 8004ba4:	e78f      	b.n	8004ac6 <USBD_GetDescriptor+0x7a>
    if (pdev->dev_speed == USBD_SPEED_HIGH)
 8004ba6:	7c03      	ldrb	r3, [r0, #16]
 8004ba8:	b933      	cbnz	r3, 8004bb8 <USBD_GetDescriptor+0x16c>
      pbuf = pdev->pClass->GetDeviceQualifierDescriptor(&len);
 8004baa:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 8004bae:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004bb0:	f10d 0006 	add.w	r0, sp, #6
 8004bb4:	4798      	blx	r3
 8004bb6:	e774      	b.n	8004aa2 <USBD_GetDescriptor+0x56>
      USBD_CtlError(pdev, req);
 8004bb8:	4629      	mov	r1, r5
 8004bba:	f7ff ff3d 	bl	8004a38 <USBD_CtlError>
 8004bbe:	e782      	b.n	8004ac6 <USBD_GetDescriptor+0x7a>
    if (pdev->dev_speed == USBD_SPEED_HIGH)
 8004bc0:	7c03      	ldrb	r3, [r0, #16]
 8004bc2:	b943      	cbnz	r3, 8004bd6 <USBD_GetDescriptor+0x18a>
      pbuf = pdev->pClass->GetOtherSpeedConfigDescriptor(&len);
 8004bc4:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 8004bc8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004bca:	f10d 0006 	add.w	r0, sp, #6
 8004bce:	4798      	blx	r3
      pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 8004bd0:	2307      	movs	r3, #7
 8004bd2:	7043      	strb	r3, [r0, #1]
 8004bd4:	e765      	b.n	8004aa2 <USBD_GetDescriptor+0x56>
      USBD_CtlError(pdev, req);
 8004bd6:	4629      	mov	r1, r5
 8004bd8:	f7ff ff2e 	bl	8004a38 <USBD_CtlError>
 8004bdc:	e773      	b.n	8004ac6 <USBD_GetDescriptor+0x7a>
    USBD_CtlError(pdev, req);
 8004bde:	4629      	mov	r1, r5
 8004be0:	f7ff ff2a 	bl	8004a38 <USBD_CtlError>
 8004be4:	e76f      	b.n	8004ac6 <USBD_GetDescriptor+0x7a>
        USBD_CtlError(pdev, req);
 8004be6:	4629      	mov	r1, r5
 8004be8:	4620      	mov	r0, r4
 8004bea:	f7ff ff25 	bl	8004a38 <USBD_CtlError>
 8004bee:	e76a      	b.n	8004ac6 <USBD_GetDescriptor+0x7a>
      (void)USBD_CtlSendStatus(pdev);
 8004bf0:	4620      	mov	r0, r4
 8004bf2:	f000 faa9 	bl	8005148 <USBD_CtlSendStatus>
 8004bf6:	e766      	b.n	8004ac6 <USBD_GetDescriptor+0x7a>

08004bf8 <USBD_SetAddress>:
{
 8004bf8:	b538      	push	{r3, r4, r5, lr}
 8004bfa:	4604      	mov	r4, r0
  if ((req->wIndex == 0U) && (req->wLength == 0U) && (req->wValue < 128U))
 8004bfc:	888b      	ldrh	r3, [r1, #4]
 8004bfe:	b9f3      	cbnz	r3, 8004c3e <USBD_SetAddress+0x46>
 8004c00:	88cb      	ldrh	r3, [r1, #6]
 8004c02:	b9e3      	cbnz	r3, 8004c3e <USBD_SetAddress+0x46>
 8004c04:	884b      	ldrh	r3, [r1, #2]
 8004c06:	2b7f      	cmp	r3, #127	; 0x7f
 8004c08:	d819      	bhi.n	8004c3e <USBD_SetAddress+0x46>
    dev_addr = (uint8_t)(req->wValue) & 0x7FU;
 8004c0a:	f003 057f 	and.w	r5, r3, #127	; 0x7f
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8004c0e:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8004c12:	2b03      	cmp	r3, #3
 8004c14:	d00c      	beq.n	8004c30 <USBD_SetAddress+0x38>
      pdev->dev_address = dev_addr;
 8004c16:	f880 529e 	strb.w	r5, [r0, #670]	; 0x29e
      (void)USBD_LL_SetUSBAddress(pdev, dev_addr);
 8004c1a:	4629      	mov	r1, r5
 8004c1c:	f001 fa5c 	bl	80060d8 <USBD_LL_SetUSBAddress>
      (void)USBD_CtlSendStatus(pdev);
 8004c20:	4620      	mov	r0, r4
 8004c22:	f000 fa91 	bl	8005148 <USBD_CtlSendStatus>
      if (dev_addr != 0U)
 8004c26:	b135      	cbz	r5, 8004c36 <USBD_SetAddress+0x3e>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 8004c28:	2302      	movs	r3, #2
 8004c2a:	f884 329c 	strb.w	r3, [r4, #668]	; 0x29c
 8004c2e:	e009      	b.n	8004c44 <USBD_SetAddress+0x4c>
      USBD_CtlError(pdev, req);
 8004c30:	f7ff ff02 	bl	8004a38 <USBD_CtlError>
 8004c34:	e006      	b.n	8004c44 <USBD_SetAddress+0x4c>
        pdev->dev_state = USBD_STATE_DEFAULT;
 8004c36:	2301      	movs	r3, #1
 8004c38:	f884 329c 	strb.w	r3, [r4, #668]	; 0x29c
 8004c3c:	e002      	b.n	8004c44 <USBD_SetAddress+0x4c>
    USBD_CtlError(pdev, req);
 8004c3e:	4620      	mov	r0, r4
 8004c40:	f7ff fefa 	bl	8004a38 <USBD_CtlError>
}
 8004c44:	bd38      	pop	{r3, r4, r5, pc}
	...

08004c48 <USBD_SetConfig>:
{
 8004c48:	b570      	push	{r4, r5, r6, lr}
 8004c4a:	4604      	mov	r4, r0
 8004c4c:	460d      	mov	r5, r1
  cfgidx = (uint8_t)(req->wValue);
 8004c4e:	7889      	ldrb	r1, [r1, #2]
 8004c50:	4b2e      	ldr	r3, [pc, #184]	; (8004d0c <USBD_SetConfig+0xc4>)
 8004c52:	7019      	strb	r1, [r3, #0]
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 8004c54:	2901      	cmp	r1, #1
 8004c56:	d80f      	bhi.n	8004c78 <USBD_SetConfig+0x30>
  switch (pdev->dev_state)
 8004c58:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8004c5c:	2b02      	cmp	r3, #2
 8004c5e:	d011      	beq.n	8004c84 <USBD_SetConfig+0x3c>
 8004c60:	2b03      	cmp	r3, #3
 8004c62:	d025      	beq.n	8004cb0 <USBD_SetConfig+0x68>
    USBD_CtlError(pdev, req);
 8004c64:	4629      	mov	r1, r5
 8004c66:	f7ff fee7 	bl	8004a38 <USBD_CtlError>
    (void)USBD_ClrClassConfig(pdev, cfgidx);
 8004c6a:	4b28      	ldr	r3, [pc, #160]	; (8004d0c <USBD_SetConfig+0xc4>)
 8004c6c:	7819      	ldrb	r1, [r3, #0]
 8004c6e:	4620      	mov	r0, r4
 8004c70:	f7ff fd92 	bl	8004798 <USBD_ClrClassConfig>
    ret = USBD_FAIL;
 8004c74:	2603      	movs	r6, #3
    break;
 8004c76:	e003      	b.n	8004c80 <USBD_SetConfig+0x38>
    USBD_CtlError(pdev, req);
 8004c78:	4629      	mov	r1, r5
 8004c7a:	f7ff fedd 	bl	8004a38 <USBD_CtlError>
    return USBD_FAIL;
 8004c7e:	2603      	movs	r6, #3
}
 8004c80:	4630      	mov	r0, r6
 8004c82:	bd70      	pop	{r4, r5, r6, pc}
    if (cfgidx != 0U)
 8004c84:	b181      	cbz	r1, 8004ca8 <USBD_SetConfig+0x60>
      pdev->dev_config = cfgidx;
 8004c86:	6041      	str	r1, [r0, #4]
      ret = USBD_SetClassConfig(pdev, cfgidx);
 8004c88:	f7ff fd7d 	bl	8004786 <USBD_SetClassConfig>
      if (ret != USBD_OK)
 8004c8c:	4606      	mov	r6, r0
 8004c8e:	b120      	cbz	r0, 8004c9a <USBD_SetConfig+0x52>
        USBD_CtlError(pdev, req);
 8004c90:	4629      	mov	r1, r5
 8004c92:	4620      	mov	r0, r4
 8004c94:	f7ff fed0 	bl	8004a38 <USBD_CtlError>
 8004c98:	e7f2      	b.n	8004c80 <USBD_SetConfig+0x38>
        (void)USBD_CtlSendStatus(pdev);
 8004c9a:	4620      	mov	r0, r4
 8004c9c:	f000 fa54 	bl	8005148 <USBD_CtlSendStatus>
        pdev->dev_state = USBD_STATE_CONFIGURED;
 8004ca0:	2303      	movs	r3, #3
 8004ca2:	f884 329c 	strb.w	r3, [r4, #668]	; 0x29c
 8004ca6:	e7eb      	b.n	8004c80 <USBD_SetConfig+0x38>
      (void)USBD_CtlSendStatus(pdev);
 8004ca8:	f000 fa4e 	bl	8005148 <USBD_CtlSendStatus>
  USBD_StatusTypeDef ret = USBD_OK;
 8004cac:	2600      	movs	r6, #0
 8004cae:	e7e7      	b.n	8004c80 <USBD_SetConfig+0x38>
    if (cfgidx == 0U)
 8004cb0:	b1c9      	cbz	r1, 8004ce6 <USBD_SetConfig+0x9e>
    else if (cfgidx != pdev->dev_config)
 8004cb2:	6843      	ldr	r3, [r0, #4]
 8004cb4:	4299      	cmp	r1, r3
 8004cb6:	d025      	beq.n	8004d04 <USBD_SetConfig+0xbc>
      (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 8004cb8:	b2d9      	uxtb	r1, r3
 8004cba:	f7ff fd6d 	bl	8004798 <USBD_ClrClassConfig>
      pdev->dev_config = cfgidx;
 8004cbe:	4b13      	ldr	r3, [pc, #76]	; (8004d0c <USBD_SetConfig+0xc4>)
 8004cc0:	7819      	ldrb	r1, [r3, #0]
 8004cc2:	6061      	str	r1, [r4, #4]
      ret = USBD_SetClassConfig(pdev, cfgidx);
 8004cc4:	4620      	mov	r0, r4
 8004cc6:	f7ff fd5e 	bl	8004786 <USBD_SetClassConfig>
      if (ret != USBD_OK)
 8004cca:	4606      	mov	r6, r0
 8004ccc:	b1b0      	cbz	r0, 8004cfc <USBD_SetConfig+0xb4>
        USBD_CtlError(pdev, req);
 8004cce:	4629      	mov	r1, r5
 8004cd0:	4620      	mov	r0, r4
 8004cd2:	f7ff feb1 	bl	8004a38 <USBD_CtlError>
        (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 8004cd6:	7921      	ldrb	r1, [r4, #4]
 8004cd8:	4620      	mov	r0, r4
 8004cda:	f7ff fd5d 	bl	8004798 <USBD_ClrClassConfig>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 8004cde:	2302      	movs	r3, #2
 8004ce0:	f884 329c 	strb.w	r3, [r4, #668]	; 0x29c
 8004ce4:	e7cc      	b.n	8004c80 <USBD_SetConfig+0x38>
      pdev->dev_state = USBD_STATE_ADDRESSED;
 8004ce6:	2302      	movs	r3, #2
 8004ce8:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c
      pdev->dev_config = cfgidx;
 8004cec:	6041      	str	r1, [r0, #4]
      (void)USBD_ClrClassConfig(pdev, cfgidx);
 8004cee:	f7ff fd53 	bl	8004798 <USBD_ClrClassConfig>
      (void)USBD_CtlSendStatus(pdev);
 8004cf2:	4620      	mov	r0, r4
 8004cf4:	f000 fa28 	bl	8005148 <USBD_CtlSendStatus>
  USBD_StatusTypeDef ret = USBD_OK;
 8004cf8:	2600      	movs	r6, #0
 8004cfa:	e7c1      	b.n	8004c80 <USBD_SetConfig+0x38>
        (void)USBD_CtlSendStatus(pdev);
 8004cfc:	4620      	mov	r0, r4
 8004cfe:	f000 fa23 	bl	8005148 <USBD_CtlSendStatus>
 8004d02:	e7bd      	b.n	8004c80 <USBD_SetConfig+0x38>
      (void)USBD_CtlSendStatus(pdev);
 8004d04:	f000 fa20 	bl	8005148 <USBD_CtlSendStatus>
  USBD_StatusTypeDef ret = USBD_OK;
 8004d08:	2600      	movs	r6, #0
 8004d0a:	e7b9      	b.n	8004c80 <USBD_SetConfig+0x38>
 8004d0c:	2000048a 	.word	0x2000048a

08004d10 <USBD_GetConfig>:
{
 8004d10:	b508      	push	{r3, lr}
  if (req->wLength != 1U)
 8004d12:	88cb      	ldrh	r3, [r1, #6]
 8004d14:	2b01      	cmp	r3, #1
 8004d16:	d10b      	bne.n	8004d30 <USBD_GetConfig+0x20>
    switch (pdev->dev_state)
 8004d18:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8004d1c:	b19b      	cbz	r3, 8004d46 <USBD_GetConfig+0x36>
 8004d1e:	2b02      	cmp	r3, #2
 8004d20:	d909      	bls.n	8004d36 <USBD_GetConfig+0x26>
 8004d22:	2b03      	cmp	r3, #3
 8004d24:	d10f      	bne.n	8004d46 <USBD_GetConfig+0x36>
      (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config, 1U);
 8004d26:	2201      	movs	r2, #1
 8004d28:	1d01      	adds	r1, r0, #4
 8004d2a:	f000 f9e1 	bl	80050f0 <USBD_CtlSendData>
      break;
 8004d2e:	e001      	b.n	8004d34 <USBD_GetConfig+0x24>
    USBD_CtlError(pdev, req);
 8004d30:	f7ff fe82 	bl	8004a38 <USBD_CtlError>
}
 8004d34:	bd08      	pop	{r3, pc}
      pdev->dev_default_config = 0U;
 8004d36:	4601      	mov	r1, r0
 8004d38:	2300      	movs	r3, #0
 8004d3a:	f841 3f08 	str.w	r3, [r1, #8]!
      (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_default_config, 1U);
 8004d3e:	2201      	movs	r2, #1
 8004d40:	f000 f9d6 	bl	80050f0 <USBD_CtlSendData>
      break;
 8004d44:	e7f6      	b.n	8004d34 <USBD_GetConfig+0x24>
      USBD_CtlError(pdev, req);
 8004d46:	f7ff fe77 	bl	8004a38 <USBD_CtlError>
}
 8004d4a:	e7f3      	b.n	8004d34 <USBD_GetConfig+0x24>

08004d4c <USBD_GetStatus>:
{
 8004d4c:	b508      	push	{r3, lr}
  switch (pdev->dev_state)
 8004d4e:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8004d52:	3b01      	subs	r3, #1
 8004d54:	2b02      	cmp	r3, #2
 8004d56:	d812      	bhi.n	8004d7e <USBD_GetStatus+0x32>
    if (req->wLength != 0x2U)
 8004d58:	88cb      	ldrh	r3, [r1, #6]
 8004d5a:	2b02      	cmp	r3, #2
 8004d5c:	d10c      	bne.n	8004d78 <USBD_GetStatus+0x2c>
    pdev->dev_config_status = USB_CONFIG_SELF_POWERED;
 8004d5e:	2301      	movs	r3, #1
 8004d60:	60c3      	str	r3, [r0, #12]
    if (pdev->dev_remote_wakeup != 0U)
 8004d62:	f8d0 32a4 	ldr.w	r3, [r0, #676]	; 0x2a4
 8004d66:	b10b      	cbz	r3, 8004d6c <USBD_GetStatus+0x20>
      pdev->dev_config_status |= USB_CONFIG_REMOTE_WAKEUP;
 8004d68:	2303      	movs	r3, #3
 8004d6a:	60c3      	str	r3, [r0, #12]
    (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config_status, 2U);
 8004d6c:	2202      	movs	r2, #2
 8004d6e:	f100 010c 	add.w	r1, r0, #12
 8004d72:	f000 f9bd 	bl	80050f0 <USBD_CtlSendData>
}
 8004d76:	bd08      	pop	{r3, pc}
      USBD_CtlError(pdev, req);
 8004d78:	f7ff fe5e 	bl	8004a38 <USBD_CtlError>
      break;
 8004d7c:	e7fb      	b.n	8004d76 <USBD_GetStatus+0x2a>
    USBD_CtlError(pdev, req);
 8004d7e:	f7ff fe5b 	bl	8004a38 <USBD_CtlError>
}
 8004d82:	e7f8      	b.n	8004d76 <USBD_GetStatus+0x2a>

08004d84 <USBD_ClrFeature>:
{
 8004d84:	b508      	push	{r3, lr}
  switch (pdev->dev_state)
 8004d86:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8004d8a:	3b01      	subs	r3, #1
 8004d8c:	2b02      	cmp	r3, #2
 8004d8e:	d809      	bhi.n	8004da4 <USBD_ClrFeature+0x20>
      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 8004d90:	884b      	ldrh	r3, [r1, #2]
 8004d92:	2b01      	cmp	r3, #1
 8004d94:	d000      	beq.n	8004d98 <USBD_ClrFeature+0x14>
}
 8004d96:	bd08      	pop	{r3, pc}
        pdev->dev_remote_wakeup = 0U;
 8004d98:	2300      	movs	r3, #0
 8004d9a:	f8c0 32a4 	str.w	r3, [r0, #676]	; 0x2a4
        (void)USBD_CtlSendStatus(pdev);
 8004d9e:	f000 f9d3 	bl	8005148 <USBD_CtlSendStatus>
 8004da2:	e7f8      	b.n	8004d96 <USBD_ClrFeature+0x12>
      USBD_CtlError(pdev, req);
 8004da4:	f7ff fe48 	bl	8004a38 <USBD_CtlError>
}
 8004da8:	e7f5      	b.n	8004d96 <USBD_ClrFeature+0x12>

08004daa <USBD_StdDevReq>:
{
 8004daa:	b508      	push	{r3, lr}
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8004dac:	780b      	ldrb	r3, [r1, #0]
 8004dae:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8004db2:	2b20      	cmp	r3, #32
 8004db4:	d006      	beq.n	8004dc4 <USBD_StdDevReq+0x1a>
 8004db6:	2b40      	cmp	r3, #64	; 0x40
 8004db8:	d004      	beq.n	8004dc4 <USBD_StdDevReq+0x1a>
 8004dba:	b143      	cbz	r3, 8004dce <USBD_StdDevReq+0x24>
    USBD_CtlError(pdev, req);
 8004dbc:	f7ff fe3c 	bl	8004a38 <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 8004dc0:	2000      	movs	r0, #0
    break;
 8004dc2:	e003      	b.n	8004dcc <USBD_StdDevReq+0x22>
    ret = (USBD_StatusTypeDef)pdev->pClass->Setup(pdev, req);
 8004dc4:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 8004dc8:	689b      	ldr	r3, [r3, #8]
 8004dca:	4798      	blx	r3
}
 8004dcc:	bd08      	pop	{r3, pc}
    switch (req->bRequest)
 8004dce:	784b      	ldrb	r3, [r1, #1]
 8004dd0:	2b09      	cmp	r3, #9
 8004dd2:	d821      	bhi.n	8004e18 <USBD_StdDevReq+0x6e>
 8004dd4:	e8df f003 	tbb	[pc, r3]
 8004dd8:	18201c14 	.word	0x18201c14
 8004ddc:	20050920 	.word	0x20050920
 8004de0:	0d10      	.short	0x0d10
      USBD_GetDescriptor(pdev, req);
 8004de2:	f7ff fe33 	bl	8004a4c <USBD_GetDescriptor>
  USBD_StatusTypeDef ret = USBD_OK;
 8004de6:	2000      	movs	r0, #0
      break;
 8004de8:	e7f0      	b.n	8004dcc <USBD_StdDevReq+0x22>
      USBD_SetAddress(pdev, req);
 8004dea:	f7ff ff05 	bl	8004bf8 <USBD_SetAddress>
  USBD_StatusTypeDef ret = USBD_OK;
 8004dee:	2000      	movs	r0, #0
      break;
 8004df0:	e7ec      	b.n	8004dcc <USBD_StdDevReq+0x22>
      ret = USBD_SetConfig(pdev, req);
 8004df2:	f7ff ff29 	bl	8004c48 <USBD_SetConfig>
      break;
 8004df6:	e7e9      	b.n	8004dcc <USBD_StdDevReq+0x22>
      USBD_GetConfig(pdev, req);
 8004df8:	f7ff ff8a 	bl	8004d10 <USBD_GetConfig>
  USBD_StatusTypeDef ret = USBD_OK;
 8004dfc:	2000      	movs	r0, #0
      break;
 8004dfe:	e7e5      	b.n	8004dcc <USBD_StdDevReq+0x22>
      USBD_GetStatus(pdev, req);
 8004e00:	f7ff ffa4 	bl	8004d4c <USBD_GetStatus>
  USBD_StatusTypeDef ret = USBD_OK;
 8004e04:	2000      	movs	r0, #0
      break;
 8004e06:	e7e1      	b.n	8004dcc <USBD_StdDevReq+0x22>
      USBD_SetFeature(pdev, req);
 8004e08:	f7ff fdf8 	bl	80049fc <USBD_SetFeature>
  USBD_StatusTypeDef ret = USBD_OK;
 8004e0c:	2000      	movs	r0, #0
      break;
 8004e0e:	e7dd      	b.n	8004dcc <USBD_StdDevReq+0x22>
      USBD_ClrFeature(pdev, req);
 8004e10:	f7ff ffb8 	bl	8004d84 <USBD_ClrFeature>
  USBD_StatusTypeDef ret = USBD_OK;
 8004e14:	2000      	movs	r0, #0
      break;
 8004e16:	e7d9      	b.n	8004dcc <USBD_StdDevReq+0x22>
      USBD_CtlError(pdev, req);
 8004e18:	f7ff fe0e 	bl	8004a38 <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 8004e1c:	2000      	movs	r0, #0
      break;
 8004e1e:	e7d5      	b.n	8004dcc <USBD_StdDevReq+0x22>

08004e20 <USBD_StdItfReq>:
{
 8004e20:	b570      	push	{r4, r5, r6, lr}
 8004e22:	4605      	mov	r5, r0
 8004e24:	460c      	mov	r4, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8004e26:	780b      	ldrb	r3, [r1, #0]
 8004e28:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8004e2c:	2b20      	cmp	r3, #32
 8004e2e:	d007      	beq.n	8004e40 <USBD_StdItfReq+0x20>
 8004e30:	2b40      	cmp	r3, #64	; 0x40
 8004e32:	d005      	beq.n	8004e40 <USBD_StdItfReq+0x20>
 8004e34:	b123      	cbz	r3, 8004e40 <USBD_StdItfReq+0x20>
    USBD_CtlError(pdev, req);
 8004e36:	f7ff fdff 	bl	8004a38 <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 8004e3a:	2600      	movs	r6, #0
}
 8004e3c:	4630      	mov	r0, r6
 8004e3e:	bd70      	pop	{r4, r5, r6, pc}
    switch (pdev->dev_state)
 8004e40:	f895 329c 	ldrb.w	r3, [r5, #668]	; 0x29c
 8004e44:	3b01      	subs	r3, #1
 8004e46:	2b02      	cmp	r3, #2
 8004e48:	d818      	bhi.n	8004e7c <USBD_StdItfReq+0x5c>
      if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 8004e4a:	7923      	ldrb	r3, [r4, #4]
 8004e4c:	2b01      	cmp	r3, #1
 8004e4e:	d80f      	bhi.n	8004e70 <USBD_StdItfReq+0x50>
        ret = (USBD_StatusTypeDef)pdev->pClass->Setup(pdev, req);
 8004e50:	f8d5 32b8 	ldr.w	r3, [r5, #696]	; 0x2b8
 8004e54:	689b      	ldr	r3, [r3, #8]
 8004e56:	4621      	mov	r1, r4
 8004e58:	4628      	mov	r0, r5
 8004e5a:	4798      	blx	r3
 8004e5c:	4606      	mov	r6, r0
        if ((req->wLength == 0U) && (ret == USBD_OK))
 8004e5e:	88e3      	ldrh	r3, [r4, #6]
 8004e60:	2b00      	cmp	r3, #0
 8004e62:	d1eb      	bne.n	8004e3c <USBD_StdItfReq+0x1c>
 8004e64:	2800      	cmp	r0, #0
 8004e66:	d1e9      	bne.n	8004e3c <USBD_StdItfReq+0x1c>
          (void)USBD_CtlSendStatus(pdev);
 8004e68:	4628      	mov	r0, r5
 8004e6a:	f000 f96d 	bl	8005148 <USBD_CtlSendStatus>
 8004e6e:	e7e5      	b.n	8004e3c <USBD_StdItfReq+0x1c>
        USBD_CtlError(pdev, req);
 8004e70:	4621      	mov	r1, r4
 8004e72:	4628      	mov	r0, r5
 8004e74:	f7ff fde0 	bl	8004a38 <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 8004e78:	2600      	movs	r6, #0
 8004e7a:	e7df      	b.n	8004e3c <USBD_StdItfReq+0x1c>
      USBD_CtlError(pdev, req);
 8004e7c:	4621      	mov	r1, r4
 8004e7e:	4628      	mov	r0, r5
 8004e80:	f7ff fdda 	bl	8004a38 <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 8004e84:	2600      	movs	r6, #0
      break;
 8004e86:	e7d9      	b.n	8004e3c <USBD_StdItfReq+0x1c>

08004e88 <USBD_StdEPReq>:
{
 8004e88:	b538      	push	{r3, r4, r5, lr}
 8004e8a:	4605      	mov	r5, r0
 8004e8c:	460c      	mov	r4, r1
  ep_addr = LOBYTE(req->wIndex);
 8004e8e:	888a      	ldrh	r2, [r1, #4]
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8004e90:	780b      	ldrb	r3, [r1, #0]
 8004e92:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8004e96:	2b20      	cmp	r3, #32
 8004e98:	d008      	beq.n	8004eac <USBD_StdEPReq+0x24>
 8004e9a:	b2d1      	uxtb	r1, r2
 8004e9c:	2b40      	cmp	r3, #64	; 0x40
 8004e9e:	d005      	beq.n	8004eac <USBD_StdEPReq+0x24>
 8004ea0:	b15b      	cbz	r3, 8004eba <USBD_StdEPReq+0x32>
    USBD_CtlError(pdev, req);
 8004ea2:	4621      	mov	r1, r4
 8004ea4:	f7ff fdc8 	bl	8004a38 <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 8004ea8:	2000      	movs	r0, #0
    break;
 8004eaa:	e005      	b.n	8004eb8 <USBD_StdEPReq+0x30>
    ret = (USBD_StatusTypeDef)pdev->pClass->Setup(pdev, req);
 8004eac:	f8d5 32b8 	ldr.w	r3, [r5, #696]	; 0x2b8
 8004eb0:	689b      	ldr	r3, [r3, #8]
 8004eb2:	4621      	mov	r1, r4
 8004eb4:	4628      	mov	r0, r5
 8004eb6:	4798      	blx	r3
}
 8004eb8:	bd38      	pop	{r3, r4, r5, pc}
    switch (req->bRequest)
 8004eba:	7863      	ldrb	r3, [r4, #1]
 8004ebc:	2b01      	cmp	r3, #1
 8004ebe:	d038      	beq.n	8004f32 <USBD_StdEPReq+0xaa>
 8004ec0:	2b00      	cmp	r3, #0
 8004ec2:	d06b      	beq.n	8004f9c <USBD_StdEPReq+0x114>
 8004ec4:	2b03      	cmp	r3, #3
 8004ec6:	f040 80f0 	bne.w	80050aa <USBD_StdEPReq+0x222>
      switch (pdev->dev_state)
 8004eca:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8004ece:	2b02      	cmp	r3, #2
 8004ed0:	d006      	beq.n	8004ee0 <USBD_StdEPReq+0x58>
 8004ed2:	2b03      	cmp	r3, #3
 8004ed4:	d019      	beq.n	8004f0a <USBD_StdEPReq+0x82>
        USBD_CtlError(pdev, req);
 8004ed6:	4621      	mov	r1, r4
 8004ed8:	f7ff fdae 	bl	8004a38 <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 8004edc:	2000      	movs	r0, #0
        break;
 8004ede:	e7eb      	b.n	8004eb8 <USBD_StdEPReq+0x30>
        if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 8004ee0:	f1b1 0380 	subs.w	r3, r1, #128	; 0x80
 8004ee4:	bf18      	it	ne
 8004ee6:	2301      	movne	r3, #1
 8004ee8:	2900      	cmp	r1, #0
 8004eea:	bf08      	it	eq
 8004eec:	2300      	moveq	r3, #0
 8004eee:	b13b      	cbz	r3, 8004f00 <USBD_StdEPReq+0x78>
          (void)USBD_LL_StallEP(pdev, ep_addr);
 8004ef0:	f001 f8e2 	bl	80060b8 <USBD_LL_StallEP>
          (void)USBD_LL_StallEP(pdev, 0x80U);
 8004ef4:	2180      	movs	r1, #128	; 0x80
 8004ef6:	4628      	mov	r0, r5
 8004ef8:	f001 f8de 	bl	80060b8 <USBD_LL_StallEP>
  USBD_StatusTypeDef ret = USBD_OK;
 8004efc:	2000      	movs	r0, #0
 8004efe:	e7db      	b.n	8004eb8 <USBD_StdEPReq+0x30>
          USBD_CtlError(pdev, req);
 8004f00:	4621      	mov	r1, r4
 8004f02:	f7ff fd99 	bl	8004a38 <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 8004f06:	2000      	movs	r0, #0
 8004f08:	e7d6      	b.n	8004eb8 <USBD_StdEPReq+0x30>
        if (req->wValue == USB_FEATURE_EP_HALT)
 8004f0a:	8863      	ldrh	r3, [r4, #2]
 8004f0c:	b94b      	cbnz	r3, 8004f22 <USBD_StdEPReq+0x9a>
          if ((ep_addr != 0x00U) && (ep_addr != 0x80U) && (req->wLength == 0x00U))
 8004f0e:	f1b1 0380 	subs.w	r3, r1, #128	; 0x80
 8004f12:	bf18      	it	ne
 8004f14:	2301      	movne	r3, #1
 8004f16:	2900      	cmp	r1, #0
 8004f18:	bf08      	it	eq
 8004f1a:	2300      	moveq	r3, #0
 8004f1c:	b10b      	cbz	r3, 8004f22 <USBD_StdEPReq+0x9a>
 8004f1e:	88e3      	ldrh	r3, [r4, #6]
 8004f20:	b123      	cbz	r3, 8004f2c <USBD_StdEPReq+0xa4>
        (void)USBD_CtlSendStatus(pdev);
 8004f22:	4628      	mov	r0, r5
 8004f24:	f000 f910 	bl	8005148 <USBD_CtlSendStatus>
  USBD_StatusTypeDef ret = USBD_OK;
 8004f28:	2000      	movs	r0, #0
        break;
 8004f2a:	e7c5      	b.n	8004eb8 <USBD_StdEPReq+0x30>
            (void)USBD_LL_StallEP(pdev, ep_addr);
 8004f2c:	f001 f8c4 	bl	80060b8 <USBD_LL_StallEP>
 8004f30:	e7f7      	b.n	8004f22 <USBD_StdEPReq+0x9a>
      switch (pdev->dev_state)
 8004f32:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8004f36:	2b02      	cmp	r3, #2
 8004f38:	d006      	beq.n	8004f48 <USBD_StdEPReq+0xc0>
 8004f3a:	2b03      	cmp	r3, #3
 8004f3c:	d019      	beq.n	8004f72 <USBD_StdEPReq+0xea>
        USBD_CtlError(pdev, req);
 8004f3e:	4621      	mov	r1, r4
 8004f40:	f7ff fd7a 	bl	8004a38 <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 8004f44:	2000      	movs	r0, #0
        break;
 8004f46:	e7b7      	b.n	8004eb8 <USBD_StdEPReq+0x30>
        if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 8004f48:	f1b1 0380 	subs.w	r3, r1, #128	; 0x80
 8004f4c:	bf18      	it	ne
 8004f4e:	2301      	movne	r3, #1
 8004f50:	2900      	cmp	r1, #0
 8004f52:	bf08      	it	eq
 8004f54:	2300      	moveq	r3, #0
 8004f56:	b13b      	cbz	r3, 8004f68 <USBD_StdEPReq+0xe0>
          (void)USBD_LL_StallEP(pdev, ep_addr);
 8004f58:	f001 f8ae 	bl	80060b8 <USBD_LL_StallEP>
          (void)USBD_LL_StallEP(pdev, 0x80U);
 8004f5c:	2180      	movs	r1, #128	; 0x80
 8004f5e:	4628      	mov	r0, r5
 8004f60:	f001 f8aa 	bl	80060b8 <USBD_LL_StallEP>
  USBD_StatusTypeDef ret = USBD_OK;
 8004f64:	2000      	movs	r0, #0
 8004f66:	e7a7      	b.n	8004eb8 <USBD_StdEPReq+0x30>
          USBD_CtlError(pdev, req);
 8004f68:	4621      	mov	r1, r4
 8004f6a:	f7ff fd65 	bl	8004a38 <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 8004f6e:	2000      	movs	r0, #0
 8004f70:	e7a2      	b.n	8004eb8 <USBD_StdEPReq+0x30>
        if (req->wValue == USB_FEATURE_EP_HALT)
 8004f72:	8863      	ldrh	r3, [r4, #2]
 8004f74:	2b00      	cmp	r3, #0
 8004f76:	f040 809d 	bne.w	80050b4 <USBD_StdEPReq+0x22c>
          if ((ep_addr & 0x7FU) != 0x00U)
 8004f7a:	f011 0f7f 	tst.w	r1, #127	; 0x7f
 8004f7e:	d10a      	bne.n	8004f96 <USBD_StdEPReq+0x10e>
          (void)USBD_CtlSendStatus(pdev);
 8004f80:	4628      	mov	r0, r5
 8004f82:	f000 f8e1 	bl	8005148 <USBD_CtlSendStatus>
          (USBD_StatusTypeDef)pdev->pClass->Setup(pdev, req);
 8004f86:	f8d5 32b8 	ldr.w	r3, [r5, #696]	; 0x2b8
 8004f8a:	689b      	ldr	r3, [r3, #8]
 8004f8c:	4621      	mov	r1, r4
 8004f8e:	4628      	mov	r0, r5
 8004f90:	4798      	blx	r3
  USBD_StatusTypeDef ret = USBD_OK;
 8004f92:	2000      	movs	r0, #0
 8004f94:	e790      	b.n	8004eb8 <USBD_StdEPReq+0x30>
            (void)USBD_LL_ClearStallEP(pdev, ep_addr);
 8004f96:	f001 f897 	bl	80060c8 <USBD_LL_ClearStallEP>
 8004f9a:	e7f1      	b.n	8004f80 <USBD_StdEPReq+0xf8>
      switch (pdev->dev_state)
 8004f9c:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8004fa0:	2b02      	cmp	r3, #2
 8004fa2:	d006      	beq.n	8004fb2 <USBD_StdEPReq+0x12a>
 8004fa4:	2b03      	cmp	r3, #3
 8004fa6:	d02f      	beq.n	8005008 <USBD_StdEPReq+0x180>
        USBD_CtlError(pdev, req);
 8004fa8:	4621      	mov	r1, r4
 8004faa:	f7ff fd45 	bl	8004a38 <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 8004fae:	2000      	movs	r0, #0
        break;
 8004fb0:	e782      	b.n	8004eb8 <USBD_StdEPReq+0x30>
        if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 8004fb2:	f1b1 0380 	subs.w	r3, r1, #128	; 0x80
 8004fb6:	bf18      	it	ne
 8004fb8:	2301      	movne	r3, #1
 8004fba:	2900      	cmp	r1, #0
 8004fbc:	bf08      	it	eq
 8004fbe:	2300      	moveq	r3, #0
 8004fc0:	b99b      	cbnz	r3, 8004fea <USBD_StdEPReq+0x162>
        pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8004fc2:	f012 0f80 	tst.w	r2, #128	; 0x80
 8004fc6:	d115      	bne.n	8004ff4 <USBD_StdEPReq+0x16c>
              &pdev->ep_out[ep_addr & 0x7FU];
 8004fc8:	f001 017f 	and.w	r1, r1, #127	; 0x7f
        pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8004fcc:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8004fd0:	008b      	lsls	r3, r1, #2
 8004fd2:	f503 71a8 	add.w	r1, r3, #336	; 0x150
 8004fd6:	4401      	add	r1, r0
 8004fd8:	3104      	adds	r1, #4
        pep->status = 0x0000U;
 8004fda:	2400      	movs	r4, #0
 8004fdc:	600c      	str	r4, [r1, #0]
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 8004fde:	2202      	movs	r2, #2
 8004fe0:	4628      	mov	r0, r5
 8004fe2:	f000 f885 	bl	80050f0 <USBD_CtlSendData>
  USBD_StatusTypeDef ret = USBD_OK;
 8004fe6:	4620      	mov	r0, r4
        break;
 8004fe8:	e766      	b.n	8004eb8 <USBD_StdEPReq+0x30>
          USBD_CtlError(pdev, req);
 8004fea:	4621      	mov	r1, r4
 8004fec:	f7ff fd24 	bl	8004a38 <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 8004ff0:	2000      	movs	r0, #0
          break;
 8004ff2:	e761      	b.n	8004eb8 <USBD_StdEPReq+0x30>
        pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8004ff4:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 8004ff8:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8004ffc:	008b      	lsls	r3, r1, #2
 8004ffe:	f103 0110 	add.w	r1, r3, #16
 8005002:	4401      	add	r1, r0
 8005004:	3104      	adds	r1, #4
 8005006:	e7e8      	b.n	8004fda <USBD_StdEPReq+0x152>
        if ((ep_addr & 0x80U) == 0x80U)
 8005008:	b252      	sxtb	r2, r2
 800500a:	2a00      	cmp	r2, #0
 800500c:	db24      	blt.n	8005058 <USBD_StdEPReq+0x1d0>
          if (pdev->ep_out[ep_addr & 0xFU].is_used == 0U)
 800500e:	f001 030f 	and.w	r3, r1, #15
 8005012:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8005016:	0098      	lsls	r0, r3, #2
 8005018:	4428      	add	r0, r5
 800501a:	f8b0 3164 	ldrh.w	r3, [r0, #356]	; 0x164
 800501e:	b353      	cbz	r3, 8005076 <USBD_StdEPReq+0x1ee>
        pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8005020:	2a00      	cmp	r2, #0
 8005022:	db2e      	blt.n	8005082 <USBD_StdEPReq+0x1fa>
              &pdev->ep_out[ep_addr & 0x7FU];
 8005024:	f001 027f 	and.w	r2, r1, #127	; 0x7f
        pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8005028:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800502c:	0093      	lsls	r3, r2, #2
 800502e:	f503 74a8 	add.w	r4, r3, #336	; 0x150
 8005032:	442c      	add	r4, r5
 8005034:	3404      	adds	r4, #4
          if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 8005036:	2980      	cmp	r1, #128	; 0x80
 8005038:	bf14      	ite	ne
 800503a:	2300      	movne	r3, #0
 800503c:	2301      	moveq	r3, #1
 800503e:	2900      	cmp	r1, #0
 8005040:	bf08      	it	eq
 8005042:	2301      	moveq	r3, #1
 8005044:	b33b      	cbz	r3, 8005096 <USBD_StdEPReq+0x20e>
            pep->status = 0x0000U;
 8005046:	2300      	movs	r3, #0
 8005048:	6023      	str	r3, [r4, #0]
          (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800504a:	2202      	movs	r2, #2
 800504c:	4621      	mov	r1, r4
 800504e:	4628      	mov	r0, r5
 8005050:	f000 f84e 	bl	80050f0 <USBD_CtlSendData>
  USBD_StatusTypeDef ret = USBD_OK;
 8005054:	2000      	movs	r0, #0
          break;
 8005056:	e72f      	b.n	8004eb8 <USBD_StdEPReq+0x30>
          if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 8005058:	f001 030f 	and.w	r3, r1, #15
 800505c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8005060:	0098      	lsls	r0, r3, #2
 8005062:	4428      	add	r0, r5
 8005064:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8005066:	2b00      	cmp	r3, #0
 8005068:	d1da      	bne.n	8005020 <USBD_StdEPReq+0x198>
            USBD_CtlError(pdev, req);
 800506a:	4621      	mov	r1, r4
 800506c:	4628      	mov	r0, r5
 800506e:	f7ff fce3 	bl	8004a38 <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 8005072:	2000      	movs	r0, #0
            break;
 8005074:	e720      	b.n	8004eb8 <USBD_StdEPReq+0x30>
            USBD_CtlError(pdev, req);
 8005076:	4621      	mov	r1, r4
 8005078:	4628      	mov	r0, r5
 800507a:	f7ff fcdd 	bl	8004a38 <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 800507e:	2000      	movs	r0, #0
            break;
 8005080:	e71a      	b.n	8004eb8 <USBD_StdEPReq+0x30>
        pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8005082:	f001 027f 	and.w	r2, r1, #127	; 0x7f
 8005086:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800508a:	0093      	lsls	r3, r2, #2
 800508c:	f103 0410 	add.w	r4, r3, #16
 8005090:	442c      	add	r4, r5
 8005092:	3404      	adds	r4, #4
 8005094:	e7cf      	b.n	8005036 <USBD_StdEPReq+0x1ae>
          else if (USBD_LL_IsStallEP(pdev, ep_addr) != 0U)
 8005096:	4628      	mov	r0, r5
 8005098:	f000 ff9a 	bl	8005fd0 <USBD_LL_IsStallEP>
 800509c:	b110      	cbz	r0, 80050a4 <USBD_StdEPReq+0x21c>
            pep->status = 0x0001U;
 800509e:	2301      	movs	r3, #1
 80050a0:	6023      	str	r3, [r4, #0]
 80050a2:	e7d2      	b.n	800504a <USBD_StdEPReq+0x1c2>
            pep->status = 0x0000U;
 80050a4:	2300      	movs	r3, #0
 80050a6:	6023      	str	r3, [r4, #0]
 80050a8:	e7cf      	b.n	800504a <USBD_StdEPReq+0x1c2>
      USBD_CtlError(pdev, req);
 80050aa:	4621      	mov	r1, r4
 80050ac:	f7ff fcc4 	bl	8004a38 <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 80050b0:	2000      	movs	r0, #0
      break;
 80050b2:	e701      	b.n	8004eb8 <USBD_StdEPReq+0x30>
  USBD_StatusTypeDef ret = USBD_OK;
 80050b4:	2000      	movs	r0, #0
 80050b6:	e6ff      	b.n	8004eb8 <USBD_StdEPReq+0x30>

080050b8 <USBD_GetString>:
  if (desc == NULL)
 80050b8:	b1c8      	cbz	r0, 80050ee <USBD_GetString+0x36>
{
 80050ba:	b570      	push	{r4, r5, r6, lr}
 80050bc:	460d      	mov	r5, r1
 80050be:	4616      	mov	r6, r2
 80050c0:	4604      	mov	r4, r0
  *len = ((uint16_t)USBD_GetLen(pdesc) * 2U) + 2U;
 80050c2:	f7ff fc91 	bl	80049e8 <USBD_GetLen>
 80050c6:	3001      	adds	r0, #1
 80050c8:	0040      	lsls	r0, r0, #1
 80050ca:	8030      	strh	r0, [r6, #0]
  unicode[idx] = *(uint8_t *)len;
 80050cc:	7028      	strb	r0, [r5, #0]
  unicode[idx] = USB_DESC_TYPE_STRING;
 80050ce:	2303      	movs	r3, #3
 80050d0:	706b      	strb	r3, [r5, #1]
  idx++;
 80050d2:	2302      	movs	r3, #2
  while (*pdesc != (uint8_t)'\0')
 80050d4:	e007      	b.n	80050e6 <USBD_GetString+0x2e>
    unicode[idx] = *pdesc;
 80050d6:	54ea      	strb	r2, [r5, r3]
    pdesc++;
 80050d8:	3401      	adds	r4, #1
    idx++;
 80050da:	1c5a      	adds	r2, r3, #1
 80050dc:	b2d2      	uxtb	r2, r2
    unicode[idx] = 0U;
 80050de:	2100      	movs	r1, #0
 80050e0:	54a9      	strb	r1, [r5, r2]
    idx++;
 80050e2:	3302      	adds	r3, #2
 80050e4:	b2db      	uxtb	r3, r3
  while (*pdesc != (uint8_t)'\0')
 80050e6:	7822      	ldrb	r2, [r4, #0]
 80050e8:	2a00      	cmp	r2, #0
 80050ea:	d1f4      	bne.n	80050d6 <USBD_GetString+0x1e>
}
 80050ec:	bd70      	pop	{r4, r5, r6, pc}
 80050ee:	4770      	bx	lr

080050f0 <USBD_CtlSendData>:
* @param  len: length of data to be sent
* @retval status
*/
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint32_t len)
{
 80050f0:	b510      	push	{r4, lr}
 80050f2:	4613      	mov	r3, r2
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
 80050f4:	2202      	movs	r2, #2
 80050f6:	f8c0 2294 	str.w	r2, [r0, #660]	; 0x294
  pdev->ep_in[0].total_length = len;
 80050fa:	6183      	str	r3, [r0, #24]
  pdev->ep_in[0].rem_length = len;
 80050fc:	61c3      	str	r3, [r0, #28]

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 80050fe:	460a      	mov	r2, r1
 8005100:	2100      	movs	r1, #0
 8005102:	f000 fff1 	bl	80060e8 <USBD_LL_Transmit>

  return USBD_OK;
}
 8005106:	2000      	movs	r0, #0
 8005108:	bd10      	pop	{r4, pc}

0800510a <USBD_CtlContinueSendData>:
* @param  len: length of data to be sent
* @retval status
*/
USBD_StatusTypeDef USBD_CtlContinueSendData(USBD_HandleTypeDef *pdev,
                                            uint8_t *pbuf, uint32_t len)
{
 800510a:	b508      	push	{r3, lr}
  /* Start the next transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800510c:	4613      	mov	r3, r2
 800510e:	460a      	mov	r2, r1
 8005110:	2100      	movs	r1, #0
 8005112:	f000 ffe9 	bl	80060e8 <USBD_LL_Transmit>

  return USBD_OK;
}
 8005116:	2000      	movs	r0, #0
 8005118:	bd08      	pop	{r3, pc}

0800511a <USBD_CtlPrepareRx>:
* @param  len: length of data to be received
* @retval status
*/
USBD_StatusTypeDef USBD_CtlPrepareRx(USBD_HandleTypeDef *pdev,
                                     uint8_t *pbuf, uint32_t len)
{
 800511a:	b510      	push	{r4, lr}
 800511c:	4613      	mov	r3, r2
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_OUT;
 800511e:	2203      	movs	r2, #3
 8005120:	f8c0 2294 	str.w	r2, [r0, #660]	; 0x294
  pdev->ep_out[0].total_length = len;
 8005124:	f8c0 3158 	str.w	r3, [r0, #344]	; 0x158
  pdev->ep_out[0].rem_length = len;
 8005128:	f8c0 315c 	str.w	r3, [r0, #348]	; 0x15c

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 800512c:	460a      	mov	r2, r1
 800512e:	2100      	movs	r1, #0
 8005130:	f000 ffe2 	bl	80060f8 <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 8005134:	2000      	movs	r0, #0
 8005136:	bd10      	pop	{r4, pc}

08005138 <USBD_CtlContinueRx>:
* @param  len: length of data to be received
* @retval status
*/
USBD_StatusTypeDef USBD_CtlContinueRx(USBD_HandleTypeDef *pdev,
                                      uint8_t *pbuf, uint32_t len)
{
 8005138:	b508      	push	{r3, lr}
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 800513a:	4613      	mov	r3, r2
 800513c:	460a      	mov	r2, r1
 800513e:	2100      	movs	r1, #0
 8005140:	f000 ffda 	bl	80060f8 <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 8005144:	2000      	movs	r0, #0
 8005146:	bd08      	pop	{r3, pc}

08005148 <USBD_CtlSendStatus>:
*         send zero lzngth packet on the ctl pipe
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef USBD_CtlSendStatus(USBD_HandleTypeDef *pdev)
{
 8005148:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 800514a:	2304      	movs	r3, #4
 800514c:	f8c0 3294 	str.w	r3, [r0, #660]	; 0x294

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 8005150:	2300      	movs	r3, #0
 8005152:	461a      	mov	r2, r3
 8005154:	4619      	mov	r1, r3
 8005156:	f000 ffc7 	bl	80060e8 <USBD_LL_Transmit>

  return USBD_OK;
}
 800515a:	2000      	movs	r0, #0
 800515c:	bd08      	pop	{r3, pc}

0800515e <USBD_CtlReceiveStatus>:
*         receive zero lzngth packet on the ctl pipe
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef USBD_CtlReceiveStatus(USBD_HandleTypeDef *pdev)
{
 800515e:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 8005160:	2305      	movs	r3, #5
 8005162:	f8c0 3294 	str.w	r3, [r0, #660]	; 0x294

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 8005166:	2300      	movs	r3, #0
 8005168:	461a      	mov	r2, r3
 800516a:	4619      	mov	r1, r3
 800516c:	f000 ffc4 	bl	80060f8 <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 8005170:	2000      	movs	r0, #0
 8005172:	bd08      	pop	{r3, pc}

08005174 <I2CWriteReg>:

    return Output;
}

static void I2CWriteReg(uint8_t Reg, uint8_t Data)
{
 8005174:	b500      	push	{lr}
 8005176:	b085      	sub	sp, #20
    uint8_t WriteMsg[2u] = { Reg, Data};
 8005178:	f88d 000c 	strb.w	r0, [sp, #12]
 800517c:	f88d 100d 	strb.w	r1, [sp, #13]
    while(HAL_I2C_Master_Transmit(&i2cHandle, CO23_I2C_ADDR, WriteMsg, 2, CO2_TIMEOUT)!= HAL_OK);
 8005180:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8005184:	9300      	str	r3, [sp, #0]
 8005186:	2302      	movs	r3, #2
 8005188:	aa03      	add	r2, sp, #12
 800518a:	2150      	movs	r1, #80	; 0x50
 800518c:	4803      	ldr	r0, [pc, #12]	; (800519c <I2CWriteReg+0x28>)
 800518e:	f7fc fd8b 	bl	8001ca8 <HAL_I2C_Master_Transmit>
 8005192:	2800      	cmp	r0, #0
 8005194:	d1f4      	bne.n	8005180 <I2CWriteReg+0xc>
}
 8005196:	b005      	add	sp, #20
 8005198:	f85d fb04 	ldr.w	pc, [sp], #4
 800519c:	20000498 	.word	0x20000498

080051a0 <I2CReadReg>:
{
 80051a0:	b500      	push	{lr}
 80051a2:	b087      	sub	sp, #28
 80051a4:	f88d 000f 	strb.w	r0, [sp, #15]
    uint8_t Output = 0u;
 80051a8:	2300      	movs	r3, #0
 80051aa:	f88d 3017 	strb.w	r3, [sp, #23]
    while(HAL_I2C_Master_Transmit(&i2cHandle, CO23_I2C_ADDR, &Reg, 1, CO2_TIMEOUT)!= HAL_OK);
 80051ae:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 80051b2:	9300      	str	r3, [sp, #0]
 80051b4:	2301      	movs	r3, #1
 80051b6:	f10d 020f 	add.w	r2, sp, #15
 80051ba:	2150      	movs	r1, #80	; 0x50
 80051bc:	480a      	ldr	r0, [pc, #40]	; (80051e8 <I2CReadReg+0x48>)
 80051be:	f7fc fd73 	bl	8001ca8 <HAL_I2C_Master_Transmit>
 80051c2:	2800      	cmp	r0, #0
 80051c4:	d1f3      	bne.n	80051ae <I2CReadReg+0xe>
    while(HAL_I2C_Master_Receive(&i2cHandle, CO23_I2C_ADDR, &Output, 1, CO2_TIMEOUT) != HAL_OK);
 80051c6:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 80051ca:	9300      	str	r3, [sp, #0]
 80051cc:	2301      	movs	r3, #1
 80051ce:	f10d 0217 	add.w	r2, sp, #23
 80051d2:	2150      	movs	r1, #80	; 0x50
 80051d4:	4804      	ldr	r0, [pc, #16]	; (80051e8 <I2CReadReg+0x48>)
 80051d6:	f7fc fe25 	bl	8001e24 <HAL_I2C_Master_Receive>
 80051da:	2800      	cmp	r0, #0
 80051dc:	d1f3      	bne.n	80051c6 <I2CReadReg+0x26>
}
 80051de:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80051e2:	b007      	add	sp, #28
 80051e4:	f85d fb04 	ldr.w	pc, [sp], #4
 80051e8:	20000498 	.word	0x20000498

080051ec <C02Click_Init>:

void C02Click_Init(I2C_HandleTypeDef handle, MeasurementFinishedCallback_t cbk)
{
 80051ec:	b084      	sub	sp, #16
 80051ee:	b508      	push	{r3, lr}
 80051f0:	f10d 0c08 	add.w	ip, sp, #8
 80051f4:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
    i2cHandle = handle;
 80051f8:	224c      	movs	r2, #76	; 0x4c
 80051fa:	4661      	mov	r1, ip
 80051fc:	4804      	ldr	r0, [pc, #16]	; (8005210 <C02Click_Init+0x24>)
 80051fe:	f010 f83e 	bl	801527e <memcpy>
    MesFinishedCbk = cbk;
 8005202:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8005204:	4b03      	ldr	r3, [pc, #12]	; (8005214 <C02Click_Init+0x28>)
 8005206:	601a      	str	r2, [r3, #0]
}
 8005208:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800520c:	b004      	add	sp, #16
 800520e:	4770      	bx	lr
 8005210:	20000498 	.word	0x20000498
 8005214:	2000048c 	.word	0x2000048c

08005218 <C02Click_SetMeasurementRate>:

    return Rev;
}

void C02Click_SetMeasurementRate(uint16_t mesRate)
{
 8005218:	b538      	push	{r3, r4, r5, lr}
 800521a:	4604      	mov	r4, r0
    uint8_t MesRateBuffer[MES_RATE_LEN] = { 0u };

    MesRateBuffer[MES_RATE_LSB] = (UINT16_LSB_MASK)&mesRate;
 800521c:	b2c5      	uxtb	r5, r0
    MesRateBuffer[MES_RATE_MSB] = ((UINT16_MSB_MASK)&mesRate) >> BITS_IN_BYTE;

    I2CWriteReg(MEAS_RATE_H, MesRateBuffer[MES_RATE_MSB]);
 800521e:	0a01      	lsrs	r1, r0, #8
 8005220:	2002      	movs	r0, #2
 8005222:	f7ff ffa7 	bl	8005174 <I2CWriteReg>
    I2CWriteReg(MEAS_RATE_L, MesRateBuffer[MES_RATE_LSB]);
 8005226:	4629      	mov	r1, r5
 8005228:	2003      	movs	r0, #3
 800522a:	f7ff ffa3 	bl	8005174 <I2CWriteReg>

    MeasurementRateMs = mesRate*SECONDS_TO_MS_RATE;
 800522e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8005232:	fb00 f004 	mul.w	r0, r0, r4
 8005236:	4b02      	ldr	r3, [pc, #8]	; (8005240 <C02Click_SetMeasurementRate+0x28>)
 8005238:	6018      	str	r0, [r3, #0]
 800523a:	2200      	movs	r2, #0
 800523c:	605a      	str	r2, [r3, #4]
}
 800523e:	bd38      	pop	{r3, r4, r5, pc}
 8005240:	20000118 	.word	0x20000118

08005244 <C02Click_GetC02Ppm>:

uint16_t C02Click_GetC02Ppm(void)
{
 8005244:	b510      	push	{r4, lr}
    uint8_t Co2PpmBuffer[CO2PPM_LEN] = {0xFFu, 0xFFu};
    Co2PpmBuffer[CO2PPM_LSB] = I2CReadReg(CO2PPM_L);
 8005246:	2006      	movs	r0, #6
 8005248:	f7ff ffaa 	bl	80051a0 <I2CReadReg>
 800524c:	4604      	mov	r4, r0
    Co2PpmBuffer[CO2PPM_MSB] = I2CReadReg(CO2PPM_H);
 800524e:	2005      	movs	r0, #5
 8005250:	f7ff ffa6 	bl	80051a0 <I2CReadReg>

    return Co2PpmBuffer[CO2PPM_LSB] | (Co2PpmBuffer[CO2PPM_MSB] << BITS_IN_BYTE);
 8005254:	b224      	sxth	r4, r4
 8005256:	ea44 2000 	orr.w	r0, r4, r0, lsl #8
}
 800525a:	b280      	uxth	r0, r0
 800525c:	bd10      	pop	{r4, pc}

0800525e <C02Click_SetRefPressure>:

void C02Click_SetRefPressure(uint16_t refPressure)
{
 800525e:	b510      	push	{r4, lr}
    uint8_t RefPressureBuffer[REF_PRES_LEN] = { 0u };

    RefPressureBuffer[REF_PRES_LSB] = refPressure & UINT16_LSB_MASK;
    RefPressureBuffer[REF_PRES_MSB] = (refPressure & UINT16_MSB_MASK) >> BITS_IN_BYTE;
 8005260:	0a04      	lsrs	r4, r0, #8

    I2CWriteReg(PRESS_REF_L, RefPressureBuffer[REF_PRES_LSB]);
 8005262:	b2c1      	uxtb	r1, r0
 8005264:	200c      	movs	r0, #12
 8005266:	f7ff ff85 	bl	8005174 <I2CWriteReg>
    I2CWriteReg(PRESS_REF_H, RefPressureBuffer[REF_PRES_MSB]);
 800526a:	4621      	mov	r1, r4
 800526c:	200b      	movs	r0, #11
 800526e:	f7ff ff81 	bl	8005174 <I2CWriteReg>
}
 8005272:	bd10      	pop	{r4, pc}

08005274 <C02Click_CyclicJob1ms>:

    return RefPressureBuffer[REF_PRES_LSB] | (RefPressureBuffer[REF_PRES_MSB] << BITS_IN_BYTE);
}

void C02Click_CyclicJob1ms(void)
{
 8005274:	e92d 4800 	stmdb	sp!, {fp, lr}
    SystemTime++;
 8005278:	4919      	ldr	r1, [pc, #100]	; (80052e0 <C02Click_CyclicJob1ms+0x6c>)
 800527a:	e9d1 2300 	ldrd	r2, r3, [r1]
 800527e:	f112 0b01 	adds.w	fp, r2, #1
 8005282:	f143 0c00 	adc.w	ip, r3, #0
 8005286:	e9c1 bc00 	strd	fp, ip, [r1]
    if(MEASUREMENT_RATE_INVALID != MeasurementRateMs && MEASUREMENT_RATE_INVALID != MeasurementTimer)
 800528a:	4b16      	ldr	r3, [pc, #88]	; (80052e4 <C02Click_CyclicJob1ms+0x70>)
 800528c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005290:	2b00      	cmp	r3, #0
 8005292:	bf08      	it	eq
 8005294:	f1b2 3fff 	cmpeq.w	r2, #4294967295
 8005298:	d014      	beq.n	80052c4 <C02Click_CyclicJob1ms+0x50>
 800529a:	4b13      	ldr	r3, [pc, #76]	; (80052e8 <C02Click_CyclicJob1ms+0x74>)
 800529c:	e9d3 bc00 	ldrd	fp, ip, [r3]
 80052a0:	f1bc 0f00 	cmp.w	ip, #0
 80052a4:	bf08      	it	eq
 80052a6:	f1bb 3fff 	cmpeq.w	fp, #4294967295
 80052aa:	d00b      	beq.n	80052c4 <C02Click_CyclicJob1ms+0x50>
    {
        if(NULL != MesFinishedCbk)
 80052ac:	490f      	ldr	r1, [pc, #60]	; (80052ec <C02Click_CyclicJob1ms+0x78>)
 80052ae:	6809      	ldr	r1, [r1, #0]
 80052b0:	b141      	cbz	r1, 80052c4 <C02Click_CyclicJob1ms+0x50>
        {
            MeasurementTimer--;
 80052b2:	f11b 32ff 	adds.w	r2, fp, #4294967295
 80052b6:	f14c 33ff 	adc.w	r3, ip, #4294967295
 80052ba:	490b      	ldr	r1, [pc, #44]	; (80052e8 <C02Click_CyclicJob1ms+0x74>)
 80052bc:	e9c1 2300 	strd	r2, r3, [r1]
            if(0u == MeasurementTimer)
 80052c0:	4313      	orrs	r3, r2
 80052c2:	d001      	beq.n	80052c8 <C02Click_CyclicJob1ms+0x54>
                MesFinishedCbk(Co2Ppm);
                MeasurementTimer = MeasurementRateMs;
            }
        }
    }
}
 80052c4:	e8bd 8800 	ldmia.w	sp!, {fp, pc}
                uint16_t Co2Ppm = C02Click_GetC02Ppm();
 80052c8:	f7ff ffbc 	bl	8005244 <C02Click_GetC02Ppm>
                MesFinishedCbk(Co2Ppm);
 80052cc:	4b07      	ldr	r3, [pc, #28]	; (80052ec <C02Click_CyclicJob1ms+0x78>)
 80052ce:	681b      	ldr	r3, [r3, #0]
 80052d0:	4798      	blx	r3
                MeasurementTimer = MeasurementRateMs;
 80052d2:	4b04      	ldr	r3, [pc, #16]	; (80052e4 <C02Click_CyclicJob1ms+0x70>)
 80052d4:	e9d3 0100 	ldrd	r0, r1, [r3]
 80052d8:	4b03      	ldr	r3, [pc, #12]	; (80052e8 <C02Click_CyclicJob1ms+0x74>)
 80052da:	e9c3 0100 	strd	r0, r1, [r3]
}
 80052de:	e7f1      	b.n	80052c4 <C02Click_CyclicJob1ms+0x50>
 80052e0:	20000490 	.word	0x20000490
 80052e4:	20000118 	.word	0x20000118
 80052e8:	20000120 	.word	0x20000120
 80052ec:	2000048c 	.word	0x2000048c

080052f0 <C02Click_SetOpMode>:

void C02Click_SetOpMode(OpMode_t OpMode)
{
    if(OpMode < OpModeInvalid)
 80052f0:	28ff      	cmp	r0, #255	; 0xff
 80052f2:	d005      	beq.n	8005300 <C02Click_SetOpMode+0x10>
{
 80052f4:	b508      	push	{r3, lr}
 80052f6:	4601      	mov	r1, r0
    {
        uint8_t CfgReg = 0u;
        CfgReg |= (uint8_t)OpMode;
        I2CWriteReg(MEAS_CFG, CfgReg);
 80052f8:	2004      	movs	r0, #4
 80052fa:	f7ff ff3b 	bl	8005174 <I2CWriteReg>
    }
}
 80052fe:	bd08      	pop	{r3, pc}
 8005300:	4770      	bx	lr
	...

08005304 <C02Click_TriggerContinuousMeasurement>:

void C02Click_TriggerContinuousMeasurement(uint16_t MesRate)
{
 8005304:	b510      	push	{r4, lr}
 8005306:	4604      	mov	r4, r0
    C02Click_SetMeasurementRate(MesRate);
 8005308:	f7ff ff86 	bl	8005218 <C02Click_SetMeasurementRate>
    C02Click_SetOpMode(OpModeContinuous);
 800530c:	2002      	movs	r0, #2
 800530e:	f7ff ffef 	bl	80052f0 <C02Click_SetOpMode>

    MeasurementRateMs = MesRate * SECONDS_TO_MS_RATE;
 8005312:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8005316:	fb00 f004 	mul.w	r0, r0, r4
 800531a:	2200      	movs	r2, #0
 800531c:	4b03      	ldr	r3, [pc, #12]	; (800532c <C02Click_TriggerContinuousMeasurement+0x28>)
 800531e:	6018      	str	r0, [r3, #0]
 8005320:	605a      	str	r2, [r3, #4]
    MeasurementTimer = MeasurementRateMs; //start measurement rate timer
 8005322:	4b03      	ldr	r3, [pc, #12]	; (8005330 <C02Click_TriggerContinuousMeasurement+0x2c>)
 8005324:	6018      	str	r0, [r3, #0]
 8005326:	605a      	str	r2, [r3, #4]
}
 8005328:	bd10      	pop	{r4, pc}
 800532a:	bf00      	nop
 800532c:	20000118 	.word	0x20000118
 8005330:	20000120 	.word	0x20000120

08005334 <C02Click_StopMeasurement>:

void C02Click_StopMeasurement(void)
{
 8005334:	b508      	push	{r3, lr}
    C02Click_SetOpMode(OpModeIdle);
 8005336:	2000      	movs	r0, #0
 8005338:	f7ff ffda 	bl	80052f0 <C02Click_SetOpMode>

    MeasurementRateMs = MEASUREMENT_RATE_INVALID;
 800533c:	f04f 32ff 	mov.w	r2, #4294967295
 8005340:	2300      	movs	r3, #0
 8005342:	4903      	ldr	r1, [pc, #12]	; (8005350 <C02Click_StopMeasurement+0x1c>)
 8005344:	e9c1 2300 	strd	r2, r3, [r1]
    MeasurementTimer = MEASUREMENT_RATE_INVALID;
 8005348:	4902      	ldr	r1, [pc, #8]	; (8005354 <C02Click_StopMeasurement+0x20>)
 800534a:	e9c1 2300 	strd	r2, r3, [r1]
}
 800534e:	bd08      	pop	{r3, pc}
 8005350:	20000118 	.word	0x20000118
 8005354:	20000120 	.word	0x20000120

08005358 <GUI_X_Config>:
*
* Purpose:
*   Called during the initialization process in order to set up the
*   available memory for the GUI.
*/
void GUI_X_Config(void) {
 8005358:	b508      	push	{r3, lr}
  //
  static U32 aMemory[GUI_NUMBYTES / 4];
  //
  // Assign memory to emWin
  //
  GUI_ALLOC_AssignMemory(aMemory, GUI_NUMBYTES);
 800535a:	f44f 31c8 	mov.w	r1, #102400	; 0x19000
 800535e:	4803      	ldr	r0, [pc, #12]	; (800536c <GUI_X_Config+0x14>)
 8005360:	f00a f8aa 	bl	800f4b8 <GUI_ALLOC_AssignMemory>
  //
  // Set default font
  //
  GUI_SetDefaultFont(GUI_FONT_6X8);
 8005364:	4802      	ldr	r0, [pc, #8]	; (8005370 <GUI_X_Config+0x18>)
 8005366:	f009 fc19 	bl	800eb9c <GUI_SetDefaultFont>
}
 800536a:	bd08      	pop	{r3, pc}
 800536c:	200004e4 	.word	0x200004e4
 8005370:	080161d8 	.word	0x080161d8

08005374 <GUI_X_GetTime>:
  and delay function. Default time unit (tick), normally is
  1 ms.
*/

GUI_TIMER_TIME GUI_X_GetTime(void) { 
  return OS_TimeMS; 
 8005374:	4b01      	ldr	r3, [pc, #4]	; (800537c <GUI_X_GetTime+0x8>)
 8005376:	6818      	ldr	r0, [r3, #0]
}
 8005378:	4770      	bx	lr
 800537a:	bf00      	nop
 800537c:	2001a00c 	.word	0x2001a00c

08005380 <GUI_X_Delay>:

void GUI_X_Delay(int ms) { 
  int tEnd = OS_TimeMS + ms;
 8005380:	4b04      	ldr	r3, [pc, #16]	; (8005394 <GUI_X_Delay+0x14>)
 8005382:	681b      	ldr	r3, [r3, #0]
 8005384:	4418      	add	r0, r3
  while ((tEnd - OS_TimeMS) > 0);
 8005386:	4b03      	ldr	r3, [pc, #12]	; (8005394 <GUI_X_Delay+0x14>)
 8005388:	681b      	ldr	r3, [r3, #0]
 800538a:	1ac3      	subs	r3, r0, r3
 800538c:	2b00      	cmp	r3, #0
 800538e:	dcfa      	bgt.n	8005386 <GUI_X_Delay+0x6>
}
 8005390:	4770      	bx	lr
 8005392:	bf00      	nop
 8005394:	2001a00c 	.word	0x2001a00c

08005398 <GUI_X_Init>:
*     GUI_X_Init() is called from GUI_Init is a possibility to init
*     some hardware which needs to be up and running before the GUI.
*     If not required, leave this routine blank.
*/

void GUI_X_Init(void) {}
 8005398:	4770      	bx	lr

0800539a <GUI_TOUCH_X_ActivateX>:



void GUI_TOUCH_X_ActivateX(void)
{
}
 800539a:	4770      	bx	lr

0800539c <GUI_TOUCH_X_ActivateY>:
void GUI_TOUCH_X_ActivateY(void)
{
}
 800539c:	4770      	bx	lr

0800539e <GUI_TOUCH_X_MeasureX>:
int  GUI_TOUCH_X_MeasureX(void)
{
 800539e:	b508      	push	{r3, lr}
  return STMPE610_GetX_TOUCH_RAW();
 80053a0:	f7fc f8c4 	bl	800152c <STMPE610_GetX_TOUCH_RAW>
}
 80053a4:	bd08      	pop	{r3, pc}

080053a6 <GUI_TOUCH_X_MeasureY>:
int  GUI_TOUCH_X_MeasureY(void)
{
 80053a6:	b508      	push	{r3, lr}
  return STMPE610_GetY_TOUCH_RAW();
 80053a8:	f7fc f8c6 	bl	8001538 <STMPE610_GetY_TOUCH_RAW>
}
 80053ac:	bd08      	pop	{r3, pc}
	...

080053b0 <LCD_X_Config>:
* Function description:
*   Called during the initialization process in order to set up the
*   display driver configuration.
*
*/
void LCD_X_Config(void) {
 80053b0:	b530      	push	{r4, r5, lr}
 80053b2:	b0a3      	sub	sp, #140	; 0x8c
  GUI_DEVICE * pDevice;
  CONFIG_FLEXCOLOR Config = {0};
 80053b4:	2400      	movs	r4, #0
 80053b6:	941d      	str	r4, [sp, #116]	; 0x74
 80053b8:	941e      	str	r4, [sp, #120]	; 0x78
 80053ba:	941f      	str	r4, [sp, #124]	; 0x7c
 80053bc:	9420      	str	r4, [sp, #128]	; 0x80
 80053be:	9421      	str	r4, [sp, #132]	; 0x84
  GUI_PORT_API PortAPI = {0};
 80053c0:	2268      	movs	r2, #104	; 0x68
 80053c2:	4621      	mov	r1, r4
 80053c4:	a803      	add	r0, sp, #12
 80053c6:	f00f ff7e 	bl	80152c6 <memset>
  //
  // Set display driver and color conversion
  //
  pDevice = GUI_DEVICE_CreateAndLink(GUIDRV_FLEXCOLOR, GUICC_M565, 0, 0);
 80053ca:	4623      	mov	r3, r4
 80053cc:	4622      	mov	r2, r4
 80053ce:	491d      	ldr	r1, [pc, #116]	; (8005444 <LCD_X_Config+0x94>)
 80053d0:	481d      	ldr	r0, [pc, #116]	; (8005448 <LCD_X_Config+0x98>)
 80053d2:	f009 fb79 	bl	800eac8 <GUI_DEVICE_CreateAndLink>
 80053d6:	4605      	mov	r5, r0
  //
  // Display driver configuration, required for Lin-driver
  //
  LCD_SetSizeEx (0, XSIZE_PHYS , YSIZE_PHYS);
 80053d8:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80053dc:	f44f 7148 	mov.w	r1, #800	; 0x320
 80053e0:	4620      	mov	r0, r4
 80053e2:	f006 fd27 	bl	800be34 <LCD_SetSizeEx>
  LCD_SetVSizeEx(0, XSIZE_PHYS, YSIZE_PHYS);
 80053e6:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80053ea:	f44f 7148 	mov.w	r1, #800	; 0x320
 80053ee:	4620      	mov	r0, r4
 80053f0:	f006 fd08 	bl	800be04 <LCD_SetVSizeEx>
  //
  // Orientation
  //
  Config.Orientation = 0;
 80053f4:	941f      	str	r4, [sp, #124]	; 0x7c
  GUIDRV_FlexColor_Config(pDevice, &Config);
 80053f6:	a91d      	add	r1, sp, #116	; 0x74
 80053f8:	4628      	mov	r0, r5
 80053fa:	f006 fca2 	bl	800bd42 <GUIDRV_FlexColor_Config>
  //
  // Set controller and operation mode
  //
  PortAPI.pfWrite16_A0  = SSD1963_WriteCommand;
 80053fe:	4b13      	ldr	r3, [pc, #76]	; (800544c <LCD_X_Config+0x9c>)
 8005400:	930b      	str	r3, [sp, #44]	; 0x2c
  PortAPI.pfWrite16_A1  = SSD1963_WriteData;
 8005402:	4b13      	ldr	r3, [pc, #76]	; (8005450 <LCD_X_Config+0xa0>)
 8005404:	930c      	str	r3, [sp, #48]	; 0x30
  PortAPI.pfWriteM16_A1 = SSD1963_WriteDataMultiple;
 8005406:	4b13      	ldr	r3, [pc, #76]	; (8005454 <LCD_X_Config+0xa4>)
 8005408:	930e      	str	r3, [sp, #56]	; 0x38
 // PortAPI.pfReadM16_A1  = SSD1963_ReadData;
  GUIDRV_FlexColor_SetFunc(pDevice, &PortAPI, GUIDRV_FLEXCOLOR_F66720, GUIDRV_FLEXCOLOR_M16C0B16);
 800540a:	4b13      	ldr	r3, [pc, #76]	; (8005458 <LCD_X_Config+0xa8>)
 800540c:	4a13      	ldr	r2, [pc, #76]	; (800545c <LCD_X_Config+0xac>)
 800540e:	a903      	add	r1, sp, #12
 8005410:	4628      	mov	r0, r5
 8005412:	f006 fcb4 	bl	800bd7e <GUIDRV_FlexColor_SetFunc>

  GUI_TOUCH_Calibrate(GUI_COORD_X, 0, 800, GUI_TOUCH_AD_LEFT , GUI_TOUCH_AD_RIGHT);
 8005416:	f44f 6375 	mov.w	r3, #3920	; 0xf50
 800541a:	9300      	str	r3, [sp, #0]
 800541c:	236e      	movs	r3, #110	; 0x6e
 800541e:	f44f 7248 	mov.w	r2, #800	; 0x320
 8005422:	4621      	mov	r1, r4
 8005424:	4620      	mov	r0, r4
 8005426:	f007 ffc7 	bl	800d3b8 <GUI_TOUCH_Calibrate>
  GUI_TOUCH_Calibrate(GUI_COORD_Y, 0, 480, GUI_TOUCH_AD_TOP, GUI_TOUCH_AD_BOTTOM);
 800542a:	f640 7385 	movw	r3, #3973	; 0xf85
 800542e:	9300      	str	r3, [sp, #0]
 8005430:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8005434:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8005438:	4621      	mov	r1, r4
 800543a:	2001      	movs	r0, #1
 800543c:	f007 ffbc 	bl	800d3b8 <GUI_TOUCH_Calibrate>

}
 8005440:	b023      	add	sp, #140	; 0x8c
 8005442:	bd30      	pop	{r4, r5, pc}
 8005444:	08017300 	.word	0x08017300
 8005448:	0801714c 	.word	0x0801714c
 800544c:	0800104d 	.word	0x0800104d
 8005450:	080010a5 	.word	0x080010a5
 8005454:	080010fd 	.word	0x080010fd
 8005458:	0800b749 	.word	0x0800b749
 800545c:	0800b0ad 	.word	0x0800b0ad

08005460 <LCD_X_DisplayDriver>:
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) {
  int r;
  (void) LayerIndex;
  (void) pData;
  
  switch (Cmd) {
 8005460:	2901      	cmp	r1, #1
 8005462:	d106      	bne.n	8005472 <LCD_X_DisplayDriver+0x12>
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) {
 8005464:	b508      	push	{r3, lr}
    // display controller and put it into operation. If the display
    // controller is not initialized by any external routine this needs
    // to be adapted by the customer...
    //
    // ...
	  SSD1963_Init();
 8005466:	f7fb fe55 	bl	8001114 <SSD1963_Init>
	  STMPE610_Init();
 800546a:	f7fb ff79 	bl	8001360 <STMPE610_Init>
    return 0;
 800546e:	2000      	movs	r0, #0
  }
  default:
    r = -1;
  }
  return r;
}
 8005470:	bd08      	pop	{r3, pc}
  return r;
 8005472:	f04f 30ff 	mov.w	r0, #4294967295
}
 8005476:	4770      	bx	lr

08005478 <SetGraphScale>:
    sprintf(msg, "Mes rate: %d", SLIDER_GetValue(MesRateSliderHandle));
    TEXT_SetText(MesRateTextBox, msg);
}

static void SetGraphScale(uint16_t MesRate)
{
 8005478:	b508      	push	{r3, lr}
	float rate = 1.0/MesRate;
 800547a:	f7fb f873 	bl	8000564 <__aeabi_i2d>
 800547e:	4602      	mov	r2, r0
 8005480:	460b      	mov	r3, r1
 8005482:	2000      	movs	r0, #0
 8005484:	4905      	ldr	r1, [pc, #20]	; (800549c <SetGraphScale+0x24>)
 8005486:	f7fb fa01 	bl	800088c <__aeabi_ddiv>
 800548a:	f7fb fb97 	bl	8000bbc <__aeabi_d2f>
	GRAPH_SCALE_SetFactor(GraphScaleHandle, rate);
 800548e:	ee00 0a10 	vmov	s0, r0
 8005492:	4b03      	ldr	r3, [pc, #12]	; (80054a0 <SetGraphScale+0x28>)
 8005494:	6818      	ldr	r0, [r3, #0]
 8005496:	f001 fd8f 	bl	8006fb8 <GRAPH_SCALE_SetFactor>
}
 800549a:	bd08      	pop	{r3, pc}
 800549c:	3ff00000 	.word	0x3ff00000
 80054a0:	2001a01c 	.word	0x2001a01c

080054a4 <AddMesToGraph>:
static int mescount = 0;
static void AddMesToGraph(uint16_t MeasuredPpm)
{
 80054a4:	b570      	push	{r4, r5, r6, lr}
 80054a6:	4606      	mov	r6, r0
	int stepSize = (MeasuredPpm - lastMeasuredPpm)/ (GRAPH_STEP_SIZE - 1);
 80054a8:	4b18      	ldr	r3, [pc, #96]	; (800550c <AddMesToGraph+0x68>)
 80054aa:	881b      	ldrh	r3, [r3, #0]
 80054ac:	1ac3      	subs	r3, r0, r3
 80054ae:	4d18      	ldr	r5, [pc, #96]	; (8005510 <AddMesToGraph+0x6c>)
 80054b0:	fb85 2503 	smull	r2, r5, r5, r3
 80054b4:	17db      	asrs	r3, r3, #31
 80054b6:	ebc3 05a5 	rsb	r5, r3, r5, asr #2
	for(int x = 0; x < GRAPH_STEP_SIZE; x++) //25pixels = 5s
 80054ba:	2400      	movs	r4, #0
 80054bc:	e011      	b.n	80054e2 <AddMesToGraph+0x3e>
	{
		  GRAPH_DATA_YT_AddValue(GraphDataHandle, ((int16_t)lastMeasuredPpm + x*(int16_t)stepSize)/10);
 80054be:	4b13      	ldr	r3, [pc, #76]	; (800550c <AddMesToGraph+0x68>)
 80054c0:	f9b3 1000 	ldrsh.w	r1, [r3]
 80054c4:	b22b      	sxth	r3, r5
 80054c6:	fb04 1303 	mla	r3, r4, r3, r1
 80054ca:	4912      	ldr	r1, [pc, #72]	; (8005514 <AddMesToGraph+0x70>)
 80054cc:	fb81 2103 	smull	r2, r1, r1, r3
 80054d0:	17db      	asrs	r3, r3, #31
 80054d2:	ebc3 01a1 	rsb	r1, r3, r1, asr #2
 80054d6:	b209      	sxth	r1, r1
 80054d8:	4b0f      	ldr	r3, [pc, #60]	; (8005518 <AddMesToGraph+0x74>)
 80054da:	6818      	ldr	r0, [r3, #0]
 80054dc:	f001 fe84 	bl	80071e8 <GRAPH_DATA_YT_AddValue>
	for(int x = 0; x < GRAPH_STEP_SIZE; x++) //25pixels = 5s
 80054e0:	3401      	adds	r4, #1
 80054e2:	2c18      	cmp	r4, #24
 80054e4:	ddeb      	ble.n	80054be <AddMesToGraph+0x1a>
	}
	lastMeasuredPpm = MeasuredPpm;
 80054e6:	4b09      	ldr	r3, [pc, #36]	; (800550c <AddMesToGraph+0x68>)
 80054e8:	801e      	strh	r6, [r3, #0]
	mescount++;
 80054ea:	4a0c      	ldr	r2, [pc, #48]	; (800551c <AddMesToGraph+0x78>)
 80054ec:	6813      	ldr	r3, [r2, #0]
 80054ee:	3301      	adds	r3, #1
 80054f0:	6013      	str	r3, [r2, #0]
	if(mescount > 12)
 80054f2:	2b0c      	cmp	r3, #12
 80054f4:	dc00      	bgt.n	80054f8 <AddMesToGraph+0x54>
	{
		static int scroll = 0;
		scroll -= 25;
		GRAPH_SCALE_SetOff(GraphScaleHandle, scroll);
	}
}
 80054f6:	bd70      	pop	{r4, r5, r6, pc}
		scroll -= 25;
 80054f8:	4b09      	ldr	r3, [pc, #36]	; (8005520 <AddMesToGraph+0x7c>)
 80054fa:	6819      	ldr	r1, [r3, #0]
 80054fc:	3919      	subs	r1, #25
 80054fe:	6019      	str	r1, [r3, #0]
		GRAPH_SCALE_SetOff(GraphScaleHandle, scroll);
 8005500:	4b08      	ldr	r3, [pc, #32]	; (8005524 <AddMesToGraph+0x80>)
 8005502:	6818      	ldr	r0, [r3, #0]
 8005504:	f001 fd44 	bl	8006f90 <GRAPH_SCALE_SetOff>
}
 8005508:	e7f5      	b.n	80054f6 <AddMesToGraph+0x52>
 800550a:	bf00      	nop
 800550c:	20019cbc 	.word	0x20019cbc
 8005510:	2aaaaaab 	.word	0x2aaaaaab
 8005514:	66666667 	.word	0x66666667
 8005518:	2001a0bc 	.word	0x2001a0bc
 800551c:	20019cc0 	.word	0x20019cc0
 8005520:	20019cc4 	.word	0x20019cc4
 8005524:	2001a01c 	.word	0x2001a01c

08005528 <Co2MeasurementFinished>:
{
 8005528:	b510      	push	{r4, lr}
 800552a:	b09a      	sub	sp, #104	; 0x68
 800552c:	4604      	mov	r4, r0
  NewMeasurementEvent = TRUE;
 800552e:	4b0c      	ldr	r3, [pc, #48]	; (8005560 <Co2MeasurementFinished+0x38>)
 8005530:	2201      	movs	r2, #1
 8005532:	701a      	strb	r2, [r3, #0]
  MeasurementMsg.Result = Co2Ppm;
 8005534:	4b0b      	ldr	r3, [pc, #44]	; (8005564 <Co2MeasurementFinished+0x3c>)
 8005536:	8018      	strh	r0, [r3, #0]
  AddMesToGraph(Co2Ppm);
 8005538:	f7ff ffb4 	bl	80054a4 <AddMesToGraph>
  char msg[100] = { 0u };
 800553c:	2264      	movs	r2, #100	; 0x64
 800553e:	2100      	movs	r1, #0
 8005540:	a801      	add	r0, sp, #4
 8005542:	f00f fec0 	bl	80152c6 <memset>
  sprintf(msg, "Last result: %d [ppm]", Co2Ppm);
 8005546:	4622      	mov	r2, r4
 8005548:	4907      	ldr	r1, [pc, #28]	; (8005568 <Co2MeasurementFinished+0x40>)
 800554a:	a801      	add	r0, sp, #4
 800554c:	f00f ff7c 	bl	8015448 <siprintf>
  TEXT_SetText(LastResultTextBox, msg);
 8005550:	a901      	add	r1, sp, #4
 8005552:	4b06      	ldr	r3, [pc, #24]	; (800556c <Co2MeasurementFinished+0x44>)
 8005554:	6818      	ldr	r0, [r3, #0]
 8005556:	f001 f96e 	bl	8006836 <TEXT_SetText>
}
 800555a:	b01a      	add	sp, #104	; 0x68
 800555c:	bd10      	pop	{r4, pc}
 800555e:	bf00      	nop
 8005560:	20019cb4 	.word	0x20019cb4
 8005564:	20000128 	.word	0x20000128
 8005568:	08015d28 	.word	0x08015d28
 800556c:	2001a0c8 	.word	0x2001a0c8

08005570 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8005570:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005572:	b08b      	sub	sp, #44	; 0x2c
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8005574:	2400      	movs	r4, #0
 8005576:	9405      	str	r4, [sp, #20]
 8005578:	9406      	str	r4, [sp, #24]
 800557a:	9407      	str	r4, [sp, #28]
 800557c:	9408      	str	r4, [sp, #32]
 800557e:	9409      	str	r4, [sp, #36]	; 0x24

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8005580:	4b28      	ldr	r3, [pc, #160]	; (8005624 <MX_GPIO_Init+0xb4>)
 8005582:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005584:	f042 0220 	orr.w	r2, r2, #32
 8005588:	631a      	str	r2, [r3, #48]	; 0x30
 800558a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800558c:	f002 0220 	and.w	r2, r2, #32
 8005590:	9200      	str	r2, [sp, #0]
 8005592:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8005594:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005596:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800559a:	631a      	str	r2, [r3, #48]	; 0x30
 800559c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800559e:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80055a2:	9201      	str	r2, [sp, #4]
 80055a4:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80055a6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80055a8:	f042 0201 	orr.w	r2, r2, #1
 80055ac:	631a      	str	r2, [r3, #48]	; 0x30
 80055ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80055b0:	f002 0201 	and.w	r2, r2, #1
 80055b4:	9202      	str	r2, [sp, #8]
 80055b6:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80055b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80055ba:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80055be:	631a      	str	r2, [r3, #48]	; 0x30
 80055c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80055c2:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80055c6:	9203      	str	r2, [sp, #12]
 80055c8:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80055ca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80055cc:	f042 0202 	orr.w	r2, r2, #2
 80055d0:	631a      	str	r2, [r3, #48]	; 0x30
 80055d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80055d4:	f003 0302 	and.w	r3, r3, #2
 80055d8:	9304      	str	r3, [sp, #16]
 80055da:	9b04      	ldr	r3, [sp, #16]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_15, GPIO_PIN_RESET);
 80055dc:	4f12      	ldr	r7, [pc, #72]	; (8005628 <MX_GPIO_Init+0xb8>)
 80055de:	4622      	mov	r2, r4
 80055e0:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80055e4:	4638      	mov	r0, r7
 80055e6:	f7fc f965 	bl	80018b4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3|GPIO_PIN_4, GPIO_PIN_RESET);
 80055ea:	4d10      	ldr	r5, [pc, #64]	; (800562c <MX_GPIO_Init+0xbc>)
 80055ec:	4622      	mov	r2, r4
 80055ee:	2118      	movs	r1, #24
 80055f0:	4628      	mov	r0, r5
 80055f2:	f7fc f95f 	bl	80018b4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PG15 */
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80055f6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80055fa:	9305      	str	r3, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80055fc:	2601      	movs	r6, #1
 80055fe:	9606      	str	r6, [sp, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005600:	9407      	str	r4, [sp, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8005602:	9408      	str	r4, [sp, #32]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8005604:	a905      	add	r1, sp, #20
 8005606:	4638      	mov	r0, r7
 8005608:	f7fc f860 	bl	80016cc <HAL_GPIO_Init>

  /*Configure GPIO pins : PB3 PB4 */
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4;
 800560c:	2318      	movs	r3, #24
 800560e:	9305      	str	r3, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8005610:	9606      	str	r6, [sp, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005612:	9407      	str	r4, [sp, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8005614:	9408      	str	r4, [sp, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8005616:	a905      	add	r1, sp, #20
 8005618:	4628      	mov	r0, r5
 800561a:	f7fc f857 	bl	80016cc <HAL_GPIO_Init>

}
 800561e:	b00b      	add	sp, #44	; 0x2c
 8005620:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005622:	bf00      	nop
 8005624:	40023800 	.word	0x40023800
 8005628:	40021800 	.word	0x40021800
 800562c:	40020400 	.word	0x40020400

08005630 <MX_I2C1_Init>:
{
 8005630:	b538      	push	{r3, r4, r5, lr}
  hi2c1.Instance = I2C1;
 8005632:	4c0d      	ldr	r4, [pc, #52]	; (8005668 <MX_I2C1_Init+0x38>)
 8005634:	4b0d      	ldr	r3, [pc, #52]	; (800566c <MX_I2C1_Init+0x3c>)
 8005636:	6023      	str	r3, [r4, #0]
  hi2c1.Init.Timing = 0x20303E5D;
 8005638:	4b0d      	ldr	r3, [pc, #52]	; (8005670 <MX_I2C1_Init+0x40>)
 800563a:	6063      	str	r3, [r4, #4]
  hi2c1.Init.OwnAddress1 = 0;
 800563c:	2500      	movs	r5, #0
 800563e:	60a5      	str	r5, [r4, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8005640:	2301      	movs	r3, #1
 8005642:	60e3      	str	r3, [r4, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8005644:	6125      	str	r5, [r4, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8005646:	6165      	str	r5, [r4, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8005648:	61a5      	str	r5, [r4, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800564a:	61e5      	str	r5, [r4, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800564c:	6225      	str	r5, [r4, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800564e:	4620      	mov	r0, r4
 8005650:	f7fc facc 	bl	8001bec <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8005654:	4629      	mov	r1, r5
 8005656:	4620      	mov	r0, r4
 8005658:	f7fc fca2 	bl	8001fa0 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 800565c:	4629      	mov	r1, r5
 800565e:	4620      	mov	r0, r4
 8005660:	f7fc fccc 	bl	8001ffc <HAL_I2CEx_ConfigDigitalFilter>
}
 8005664:	bd38      	pop	{r3, r4, r5, pc}
 8005666:	bf00      	nop
 8005668:	2001a020 	.word	0x2001a020
 800566c:	40005400 	.word	0x40005400
 8005670:	20303e5d 	.word	0x20303e5d

08005674 <MX_I2C2_Init>:
{
 8005674:	b538      	push	{r3, r4, r5, lr}
  hi2c2.Instance = I2C2;
 8005676:	4c0d      	ldr	r4, [pc, #52]	; (80056ac <MX_I2C2_Init+0x38>)
 8005678:	4b0d      	ldr	r3, [pc, #52]	; (80056b0 <MX_I2C2_Init+0x3c>)
 800567a:	6023      	str	r3, [r4, #0]
  hi2c2.Init.Timing = 0x20303E5D;
 800567c:	4b0d      	ldr	r3, [pc, #52]	; (80056b4 <MX_I2C2_Init+0x40>)
 800567e:	6063      	str	r3, [r4, #4]
  hi2c2.Init.OwnAddress1 = 0;
 8005680:	2500      	movs	r5, #0
 8005682:	60a5      	str	r5, [r4, #8]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8005684:	2301      	movs	r3, #1
 8005686:	60e3      	str	r3, [r4, #12]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8005688:	6125      	str	r5, [r4, #16]
  hi2c2.Init.OwnAddress2 = 0;
 800568a:	6165      	str	r5, [r4, #20]
  hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 800568c:	61a5      	str	r5, [r4, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800568e:	61e5      	str	r5, [r4, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8005690:	6225      	str	r5, [r4, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8005692:	4620      	mov	r0, r4
 8005694:	f7fc faaa 	bl	8001bec <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8005698:	4629      	mov	r1, r5
 800569a:	4620      	mov	r0, r4
 800569c:	f7fc fc80 	bl	8001fa0 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 80056a0:	4629      	mov	r1, r5
 80056a2:	4620      	mov	r0, r4
 80056a4:	f7fc fcaa 	bl	8001ffc <HAL_I2CEx_ConfigDigitalFilter>
}
 80056a8:	bd38      	pop	{r3, r4, r5, pc}
 80056aa:	bf00      	nop
 80056ac:	2001a070 	.word	0x2001a070
 80056b0:	40005800 	.word	0x40005800
 80056b4:	20303e5d 	.word	0x20303e5d

080056b8 <SetupGraph>:
{
 80056b8:	b538      	push	{r3, r4, r5, lr}
  GraphHandle = WM_GetDialogItem(hWin, ID_GRAPH_0);
 80056ba:	f640 0101 	movw	r1, #2049	; 0x801
 80056be:	4b22      	ldr	r3, [pc, #136]	; (8005748 <SetupGraph+0x90>)
 80056c0:	6818      	ldr	r0, [r3, #0]
 80056c2:	f003 f85b 	bl	800877c <WM_GetDialogItem>
 80056c6:	4c21      	ldr	r4, [pc, #132]	; (800574c <SetupGraph+0x94>)
 80056c8:	6020      	str	r0, [r4, #0]
  GRAPH_SetColor(GraphHandle, GUI_LIGHTGRAY, GRAPH_CI_BK);
 80056ca:	2200      	movs	r2, #0
 80056cc:	4920      	ldr	r1, [pc, #128]	; (8005750 <SetupGraph+0x98>)
 80056ce:	f002 f9b7 	bl	8007a40 <GRAPH_SetColor>
  GRAPH_SetGridVis(GraphHandle, TRUE);
 80056d2:	2101      	movs	r1, #1
 80056d4:	6820      	ldr	r0, [r4, #0]
 80056d6:	f002 f9d0 	bl	8007a7a <GRAPH_SetGridVis>
  GRAPH_SetAutoScrollbar(GraphHandle, GUI_COORD_X, TRUE);
 80056da:	2201      	movs	r2, #1
 80056dc:	2100      	movs	r1, #0
 80056de:	6820      	ldr	r0, [r4, #0]
 80056e0:	f002 f9e3 	bl	8007aaa <GRAPH_SetAutoScrollbar>
  GraphScaleHandle = GRAPH_SCALE_Create(390, GUI_TA_HCENTER, GRAPH_SCALE_CF_HORIZONTAL, 50);
 80056e4:	2332      	movs	r3, #50	; 0x32
 80056e6:	2200      	movs	r2, #0
 80056e8:	2102      	movs	r1, #2
 80056ea:	f44f 70c3 	mov.w	r0, #390	; 0x186
 80056ee:	f001 fc21 	bl	8006f34 <GRAPH_SCALE_Create>
 80056f2:	4d18      	ldr	r5, [pc, #96]	; (8005754 <SetupGraph+0x9c>)
 80056f4:	6028      	str	r0, [r5, #0]
  GRAPH_SCALE_SetFactor(GraphScaleHandle, 0.2);
 80056f6:	ed9f 0a18 	vldr	s0, [pc, #96]	; 8005758 <SetupGraph+0xa0>
 80056fa:	f001 fc5d 	bl	8006fb8 <GRAPH_SCALE_SetFactor>
  GRAPH_AttachScale(GraphHandle, GraphScaleHandle);
 80056fe:	6829      	ldr	r1, [r5, #0]
 8005700:	6820      	ldr	r0, [r4, #0]
 8005702:	f002 f97b 	bl	80079fc <GRAPH_AttachScale>
  GraphScaleHandle2 = GRAPH_SCALE_Create(0, GUI_TA_VCENTER, GRAPH_SCALE_CF_VERTICAL, 50);
 8005706:	2332      	movs	r3, #50	; 0x32
 8005708:	2201      	movs	r2, #1
 800570a:	210c      	movs	r1, #12
 800570c:	2000      	movs	r0, #0
 800570e:	f001 fc11 	bl	8006f34 <GRAPH_SCALE_Create>
 8005712:	4d12      	ldr	r5, [pc, #72]	; (800575c <SetupGraph+0xa4>)
 8005714:	6028      	str	r0, [r5, #0]
  GRAPH_SCALE_SetFactor(GraphScaleHandle2, 10);
 8005716:	eeb2 0a04 	vmov.f32	s0, #36	; 0x41200000  10.0
 800571a:	f001 fc4d 	bl	8006fb8 <GRAPH_SCALE_SetFactor>
  GRAPH_AttachScale(GraphHandle, GraphScaleHandle2);
 800571e:	6829      	ldr	r1, [r5, #0]
 8005720:	6820      	ldr	r0, [r4, #0]
 8005722:	f002 f96b 	bl	80079fc <GRAPH_AttachScale>
  GraphDataHandle = GRAPH_DATA_YT_Create(GUI_RED, 300, GraphData, 0);
 8005726:	2300      	movs	r3, #0
 8005728:	4a0d      	ldr	r2, [pc, #52]	; (8005760 <SetupGraph+0xa8>)
 800572a:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800572e:	20ff      	movs	r0, #255	; 0xff
 8005730:	f001 fd20 	bl	8007174 <GRAPH_DATA_YT_Create>
 8005734:	4d0b      	ldr	r5, [pc, #44]	; (8005764 <SetupGraph+0xac>)
 8005736:	6028      	str	r0, [r5, #0]
  GRAPH_DATA_YT_SetAlign(GraphDataHandle, GRAPH_ALIGN_LEFT);
 8005738:	2101      	movs	r1, #1
 800573a:	f001 fd70 	bl	800721e <GRAPH_DATA_YT_SetAlign>
  GRAPH_AttachData(GraphHandle, GraphDataHandle);
 800573e:	6829      	ldr	r1, [r5, #0]
 8005740:	6820      	ldr	r0, [r4, #0]
 8005742:	f002 f939 	bl	80079b8 <GRAPH_AttachData>
}
 8005746:	bd38      	pop	{r3, r4, r5, pc}
 8005748:	2001a010 	.word	0x2001a010
 800574c:	2001a018 	.word	0x2001a018
 8005750:	00d3d3d3 	.word	0x00d3d3d3
 8005754:	2001a01c 	.word	0x2001a01c
 8005758:	3e4ccccd 	.word	0x3e4ccccd
 800575c:	2001a0c4 	.word	0x2001a0c4
 8005760:	200194e4 	.word	0x200194e4
 8005764:	2001a0bc 	.word	0x2001a0bc

08005768 <SetupUtils>:
{
 8005768:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800576c:	b09a      	sub	sp, #104	; 0x68
    RefPressureSliderHandle = WM_GetDialogItem(hWin, ID_SLIDER_0);
 800576e:	4c2b      	ldr	r4, [pc, #172]	; (800581c <SetupUtils+0xb4>)
 8005770:	f640 0106 	movw	r1, #2054	; 0x806
 8005774:	6820      	ldr	r0, [r4, #0]
 8005776:	f003 f801 	bl	800877c <WM_GetDialogItem>
 800577a:	4e29      	ldr	r6, [pc, #164]	; (8005820 <SetupUtils+0xb8>)
 800577c:	6030      	str	r0, [r6, #0]
    MesRateSliderHandle = WM_GetDialogItem(hWin, ID_SLIDER_1);
 800577e:	f640 0107 	movw	r1, #2055	; 0x807
 8005782:	6820      	ldr	r0, [r4, #0]
 8005784:	f002 fffa 	bl	800877c <WM_GetDialogItem>
 8005788:	4d26      	ldr	r5, [pc, #152]	; (8005824 <SetupUtils+0xbc>)
 800578a:	6028      	str	r0, [r5, #0]
    RefPresTextBox = WM_GetDialogItem(hWin, ID_TEXT_7);
 800578c:	f640 0112 	movw	r1, #2066	; 0x812
 8005790:	6820      	ldr	r0, [r4, #0]
 8005792:	f002 fff3 	bl	800877c <WM_GetDialogItem>
 8005796:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 800583c <SetupUtils+0xd4>
 800579a:	f8c8 0000 	str.w	r0, [r8]
    MesRateTextBox = WM_GetDialogItem(hWin, ID_TEXT_8); 
 800579e:	f640 0113 	movw	r1, #2067	; 0x813
 80057a2:	6820      	ldr	r0, [r4, #0]
 80057a4:	f002 ffea 	bl	800877c <WM_GetDialogItem>
 80057a8:	4f1f      	ldr	r7, [pc, #124]	; (8005828 <SetupUtils+0xc0>)
 80057aa:	6038      	str	r0, [r7, #0]
    LastResultTextBox = WM_GetDialogItem(hWin, ID_TEXT_5);
 80057ac:	f44f 6101 	mov.w	r1, #2064	; 0x810
 80057b0:	6820      	ldr	r0, [r4, #0]
 80057b2:	f002 ffe3 	bl	800877c <WM_GetDialogItem>
 80057b6:	4b1d      	ldr	r3, [pc, #116]	; (800582c <SetupUtils+0xc4>)
 80057b8:	6018      	str	r0, [r3, #0]
    InfoTextBox = WM_GetDialogItem(hWin, ID_TEXT_6);
 80057ba:	f640 0111 	movw	r1, #2065	; 0x811
 80057be:	6820      	ldr	r0, [r4, #0]
 80057c0:	f002 ffdc 	bl	800877c <WM_GetDialogItem>
 80057c4:	4b1a      	ldr	r3, [pc, #104]	; (8005830 <SetupUtils+0xc8>)
 80057c6:	6018      	str	r0, [r3, #0]
    SLIDER_SetRange(RefPressureSliderHandle, 750, 1150);
 80057c8:	f240 427e 	movw	r2, #1150	; 0x47e
 80057cc:	f240 21ee 	movw	r1, #750	; 0x2ee
 80057d0:	6830      	ldr	r0, [r6, #0]
 80057d2:	f001 faa3 	bl	8006d1c <SLIDER_SetRange>
    SLIDER_SetRange(MesRateSliderHandle, 5, 4095);
 80057d6:	f640 72ff 	movw	r2, #4095	; 0xfff
 80057da:	2105      	movs	r1, #5
 80057dc:	6828      	ldr	r0, [r5, #0]
 80057de:	f001 fa9d 	bl	8006d1c <SLIDER_SetRange>
    sprintf(msg, "Ref pressure: %d", SLIDER_GetValue(RefPressureSliderHandle));
 80057e2:	6830      	ldr	r0, [r6, #0]
 80057e4:	f001 fab8 	bl	8006d58 <SLIDER_GetValue>
 80057e8:	4602      	mov	r2, r0
 80057ea:	4912      	ldr	r1, [pc, #72]	; (8005834 <SetupUtils+0xcc>)
 80057ec:	a801      	add	r0, sp, #4
 80057ee:	f00f fe2b 	bl	8015448 <siprintf>
    TEXT_SetText(RefPresTextBox, msg);
 80057f2:	a901      	add	r1, sp, #4
 80057f4:	f8d8 0000 	ldr.w	r0, [r8]
 80057f8:	f001 f81d 	bl	8006836 <TEXT_SetText>
    sprintf(msg, "Mes rate: %d", SLIDER_GetValue(MesRateSliderHandle));
 80057fc:	6828      	ldr	r0, [r5, #0]
 80057fe:	f001 faab 	bl	8006d58 <SLIDER_GetValue>
 8005802:	4602      	mov	r2, r0
 8005804:	490c      	ldr	r1, [pc, #48]	; (8005838 <SetupUtils+0xd0>)
 8005806:	a801      	add	r0, sp, #4
 8005808:	f00f fe1e 	bl	8015448 <siprintf>
    TEXT_SetText(MesRateTextBox, msg);
 800580c:	a901      	add	r1, sp, #4
 800580e:	6838      	ldr	r0, [r7, #0]
 8005810:	f001 f811 	bl	8006836 <TEXT_SetText>
}
 8005814:	b01a      	add	sp, #104	; 0x68
 8005816:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800581a:	bf00      	nop
 800581c:	2001a010 	.word	0x2001a010
 8005820:	2001a0d0 	.word	0x2001a0d0
 8005824:	2001a0c0 	.word	0x2001a0c0
 8005828:	2001a0d8 	.word	0x2001a0d8
 800582c:	2001a0c8 	.word	0x2001a0c8
 8005830:	2001a06c 	.word	0x2001a06c
 8005834:	08015d88 	.word	0x08015d88
 8005838:	08015d9c 	.word	0x08015d9c
 800583c:	2001a0d4 	.word	0x2001a0d4

08005840 <PrintToDisplay>:
{
 8005840:	b510      	push	{r4, lr}
 8005842:	4604      	mov	r4, r0
  GUI_Clear();
 8005844:	f009 f9e2 	bl	800ec0c <GUI_Clear>
  GUI_DispString(msg);
 8005848:	4620      	mov	r0, r4
 800584a:	f009 f831 	bl	800e8b0 <GUI_DispString>
}
 800584e:	bd10      	pop	{r4, pc}

08005850 <HAL_SYSTICK_Callback>:
{
 8005850:	b508      	push	{r3, lr}
	OS_TimeMS++;
 8005852:	4a03      	ldr	r2, [pc, #12]	; (8005860 <HAL_SYSTICK_Callback+0x10>)
 8005854:	6813      	ldr	r3, [r2, #0]
 8005856:	3301      	adds	r3, #1
 8005858:	6013      	str	r3, [r2, #0]
  C02Click_CyclicJob1ms();
 800585a:	f7ff fd0b 	bl	8005274 <C02Click_CyclicJob1ms>
}
 800585e:	bd08      	pop	{r3, pc}
 8005860:	2001a00c 	.word	0x2001a00c

08005864 <RefPressureSliderChanged>:
{
 8005864:	b530      	push	{r4, r5, lr}
 8005866:	b09b      	sub	sp, #108	; 0x6c
    sprintf(msg, "Ref pressure: %d", SLIDER_GetValue(RefPressureSliderHandle));
 8005868:	4b0d      	ldr	r3, [pc, #52]	; (80058a0 <RefPressureSliderChanged+0x3c>)
 800586a:	6818      	ldr	r0, [r3, #0]
 800586c:	f001 fa74 	bl	8006d58 <SLIDER_GetValue>
 8005870:	4602      	mov	r2, r0
 8005872:	490c      	ldr	r1, [pc, #48]	; (80058a4 <RefPressureSliderChanged+0x40>)
 8005874:	a801      	add	r0, sp, #4
 8005876:	f00f fde7 	bl	8015448 <siprintf>
    TEXT_SetText(RefPresTextBox, msg);
 800587a:	a901      	add	r1, sp, #4
 800587c:	4b0a      	ldr	r3, [pc, #40]	; (80058a8 <RefPressureSliderChanged+0x44>)
 800587e:	6818      	ldr	r0, [r3, #0]
 8005880:	f000 ffd9 	bl	8006836 <TEXT_SetText>
    sprintf(msg, "Set ref pressure?");
 8005884:	ac01      	add	r4, sp, #4
 8005886:	4d09      	ldr	r5, [pc, #36]	; (80058ac <RefPressureSliderChanged+0x48>)
 8005888:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800588a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800588c:	682b      	ldr	r3, [r5, #0]
 800588e:	8023      	strh	r3, [r4, #0]
    TEXT_SetText(InfoTextBox, msg);
 8005890:	a901      	add	r1, sp, #4
 8005892:	4b07      	ldr	r3, [pc, #28]	; (80058b0 <RefPressureSliderChanged+0x4c>)
 8005894:	6818      	ldr	r0, [r3, #0]
 8005896:	f000 ffce 	bl	8006836 <TEXT_SetText>
}
 800589a:	b01b      	add	sp, #108	; 0x6c
 800589c:	bd30      	pop	{r4, r5, pc}
 800589e:	bf00      	nop
 80058a0:	2001a0d0 	.word	0x2001a0d0
 80058a4:	08015d88 	.word	0x08015d88
 80058a8:	2001a0d4 	.word	0x2001a0d4
 80058ac:	08015d74 	.word	0x08015d74
 80058b0:	2001a06c 	.word	0x2001a06c

080058b4 <MesRateCliderChanged>:
{
 80058b4:	b510      	push	{r4, lr}
 80058b6:	b09a      	sub	sp, #104	; 0x68
    sprintf(msg, "Mes rate: %d", SLIDER_GetValue(MesRateSliderHandle));
 80058b8:	4b0c      	ldr	r3, [pc, #48]	; (80058ec <MesRateCliderChanged+0x38>)
 80058ba:	6818      	ldr	r0, [r3, #0]
 80058bc:	f001 fa4c 	bl	8006d58 <SLIDER_GetValue>
 80058c0:	4602      	mov	r2, r0
 80058c2:	490b      	ldr	r1, [pc, #44]	; (80058f0 <MesRateCliderChanged+0x3c>)
 80058c4:	a801      	add	r0, sp, #4
 80058c6:	f00f fdbf 	bl	8015448 <siprintf>
    TEXT_SetText(MesRateTextBox, msg);
 80058ca:	a901      	add	r1, sp, #4
 80058cc:	4b09      	ldr	r3, [pc, #36]	; (80058f4 <MesRateCliderChanged+0x40>)
 80058ce:	6818      	ldr	r0, [r3, #0]
 80058d0:	f000 ffb1 	bl	8006836 <TEXT_SetText>
    sprintf(msg, "Set mes rate?");
 80058d4:	4b08      	ldr	r3, [pc, #32]	; (80058f8 <MesRateCliderChanged+0x44>)
 80058d6:	ac01      	add	r4, sp, #4
 80058d8:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80058da:	c407      	stmia	r4!, {r0, r1, r2}
 80058dc:	8023      	strh	r3, [r4, #0]
    TEXT_SetText(InfoTextBox, msg);
 80058de:	a901      	add	r1, sp, #4
 80058e0:	4b06      	ldr	r3, [pc, #24]	; (80058fc <MesRateCliderChanged+0x48>)
 80058e2:	6818      	ldr	r0, [r3, #0]
 80058e4:	f000 ffa7 	bl	8006836 <TEXT_SetText>
}
 80058e8:	b01a      	add	sp, #104	; 0x68
 80058ea:	bd10      	pop	{r4, pc}
 80058ec:	2001a0c0 	.word	0x2001a0c0
 80058f0:	08015d9c 	.word	0x08015d9c
 80058f4:	2001a0d8 	.word	0x2001a0d8
 80058f8:	08015d40 	.word	0x08015d40
 80058fc:	2001a06c 	.word	0x2001a06c

08005900 <RefPressureSetButton>:
{
 8005900:	b508      	push	{r3, lr}
    uint16_t refPressure = (uint16_t)SLIDER_GetValue(RefPressureSliderHandle);
 8005902:	4b06      	ldr	r3, [pc, #24]	; (800591c <RefPressureSetButton+0x1c>)
 8005904:	6818      	ldr	r0, [r3, #0]
 8005906:	f001 fa27 	bl	8006d58 <SLIDER_GetValue>
    C02Click_SetRefPressure(refPressure);
 800590a:	b280      	uxth	r0, r0
 800590c:	f7ff fca7 	bl	800525e <C02Click_SetRefPressure>
    TEXT_SetText(InfoTextBox, "Ref pressure set!");
 8005910:	4903      	ldr	r1, [pc, #12]	; (8005920 <RefPressureSetButton+0x20>)
 8005912:	4b04      	ldr	r3, [pc, #16]	; (8005924 <RefPressureSetButton+0x24>)
 8005914:	6818      	ldr	r0, [r3, #0]
 8005916:	f000 ff8e 	bl	8006836 <TEXT_SetText>
}
 800591a:	bd08      	pop	{r3, pc}
 800591c:	2001a0d0 	.word	0x2001a0d0
 8005920:	08015d60 	.word	0x08015d60
 8005924:	2001a06c 	.word	0x2001a06c

08005928 <MesRateSetButton>:
{
 8005928:	b510      	push	{r4, lr}
    uint16_t MesRate = (uint16_t)SLIDER_GetValue(MesRateSliderHandle);
 800592a:	4b09      	ldr	r3, [pc, #36]	; (8005950 <MesRateSetButton+0x28>)
 800592c:	6818      	ldr	r0, [r3, #0]
 800592e:	f001 fa13 	bl	8006d58 <SLIDER_GetValue>
 8005932:	b284      	uxth	r4, r0
    MeasurementRateInS = MesRate;
 8005934:	4b07      	ldr	r3, [pc, #28]	; (8005954 <MesRateSetButton+0x2c>)
 8005936:	801c      	strh	r4, [r3, #0]
    SetGraphScale(MesRate);
 8005938:	4620      	mov	r0, r4
 800593a:	f7ff fd9d 	bl	8005478 <SetGraphScale>
    C02Click_SetMeasurementRate(MesRate);
 800593e:	4620      	mov	r0, r4
 8005940:	f7ff fc6a 	bl	8005218 <C02Click_SetMeasurementRate>
    TEXT_SetText(InfoTextBox, "Mes rate set!");
 8005944:	4904      	ldr	r1, [pc, #16]	; (8005958 <MesRateSetButton+0x30>)
 8005946:	4b05      	ldr	r3, [pc, #20]	; (800595c <MesRateSetButton+0x34>)
 8005948:	6818      	ldr	r0, [r3, #0]
 800594a:	f000 ff74 	bl	8006836 <TEXT_SetText>
}
 800594e:	bd10      	pop	{r4, pc}
 8005950:	2001a0c0 	.word	0x2001a0c0
 8005954:	2000012c 	.word	0x2000012c
 8005958:	08015d50 	.word	0x08015d50
 800595c:	2001a06c 	.word	0x2001a06c

08005960 <StartMesButton>:
{
 8005960:	b508      	push	{r3, lr}
  C02Click_TriggerContinuousMeasurement(MeasurementRateInS);
 8005962:	4b05      	ldr	r3, [pc, #20]	; (8005978 <StartMesButton+0x18>)
 8005964:	8818      	ldrh	r0, [r3, #0]
 8005966:	f7ff fccd 	bl	8005304 <C02Click_TriggerContinuousMeasurement>
  TEXT_SetText(InfoTextBox, "Mes started!");
 800596a:	4904      	ldr	r1, [pc, #16]	; (800597c <StartMesButton+0x1c>)
 800596c:	4b04      	ldr	r3, [pc, #16]	; (8005980 <StartMesButton+0x20>)
 800596e:	6818      	ldr	r0, [r3, #0]
 8005970:	f000 ff61 	bl	8006836 <TEXT_SetText>
}
 8005974:	bd08      	pop	{r3, pc}
 8005976:	bf00      	nop
 8005978:	2000012c 	.word	0x2000012c
 800597c:	08015dac 	.word	0x08015dac
 8005980:	2001a06c 	.word	0x2001a06c

08005984 <StopMesButton>:
{
 8005984:	b508      	push	{r3, lr}
  C02Click_StopMeasurement();
 8005986:	f7ff fcd5 	bl	8005334 <C02Click_StopMeasurement>
  TEXT_SetText(InfoTextBox, "Mes stopped!");
 800598a:	4903      	ldr	r1, [pc, #12]	; (8005998 <StopMesButton+0x14>)
 800598c:	4b03      	ldr	r3, [pc, #12]	; (800599c <StopMesButton+0x18>)
 800598e:	6818      	ldr	r0, [r3, #0]
 8005990:	f000 ff51 	bl	8006836 <TEXT_SetText>
}
 8005994:	bd08      	pop	{r3, pc}
 8005996:	bf00      	nop
 8005998:	08015dbc 	.word	0x08015dbc
 800599c:	2001a06c 	.word	0x2001a06c

080059a0 <ClearGraphButton>:
{
 80059a0:	b508      	push	{r3, lr}
    GRAPH_SCALE_SetOff(GraphScaleHandle, 0);
 80059a2:	2100      	movs	r1, #0
 80059a4:	4b06      	ldr	r3, [pc, #24]	; (80059c0 <ClearGraphButton+0x20>)
 80059a6:	6818      	ldr	r0, [r3, #0]
 80059a8:	f001 faf2 	bl	8006f90 <GRAPH_SCALE_SetOff>
    GRAPH_DATA_YT_Clear(GraphDataHandle);
 80059ac:	4b05      	ldr	r3, [pc, #20]	; (80059c4 <ClearGraphButton+0x24>)
 80059ae:	6818      	ldr	r0, [r3, #0]
 80059b0:	f001 fc49 	bl	8007246 <GRAPH_DATA_YT_Clear>
    TEXT_SetText(InfoTextBox, "Graph cleared!");
 80059b4:	4904      	ldr	r1, [pc, #16]	; (80059c8 <ClearGraphButton+0x28>)
 80059b6:	4b05      	ldr	r3, [pc, #20]	; (80059cc <ClearGraphButton+0x2c>)
 80059b8:	6818      	ldr	r0, [r3, #0]
 80059ba:	f000 ff3c 	bl	8006836 <TEXT_SetText>
}
 80059be:	bd08      	pop	{r3, pc}
 80059c0:	2001a01c 	.word	0x2001a01c
 80059c4:	2001a0bc 	.word	0x2001a0bc
 80059c8:	08015d18 	.word	0x08015d18
 80059cc:	2001a06c 	.word	0x2001a06c

080059d0 <SystemClock_Config>:
{
 80059d0:	b530      	push	{r4, r5, lr}
 80059d2:	b0b5      	sub	sp, #212	; 0xd4
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80059d4:	2230      	movs	r2, #48	; 0x30
 80059d6:	2100      	movs	r1, #0
 80059d8:	a828      	add	r0, sp, #160	; 0xa0
 80059da:	f00f fc74 	bl	80152c6 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80059de:	2400      	movs	r4, #0
 80059e0:	9423      	str	r4, [sp, #140]	; 0x8c
 80059e2:	9424      	str	r4, [sp, #144]	; 0x90
 80059e4:	9425      	str	r4, [sp, #148]	; 0x94
 80059e6:	9426      	str	r4, [sp, #152]	; 0x98
 80059e8:	9427      	str	r4, [sp, #156]	; 0x9c
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80059ea:	2284      	movs	r2, #132	; 0x84
 80059ec:	4621      	mov	r1, r4
 80059ee:	a802      	add	r0, sp, #8
 80059f0:	f00f fc69 	bl	80152c6 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 80059f4:	4b21      	ldr	r3, [pc, #132]	; (8005a7c <SystemClock_Config+0xac>)
 80059f6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80059f8:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80059fc:	641a      	str	r2, [r3, #64]	; 0x40
 80059fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a00:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005a04:	9300      	str	r3, [sp, #0]
 8005a06:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8005a08:	4b1d      	ldr	r3, [pc, #116]	; (8005a80 <SystemClock_Config+0xb0>)
 8005a0a:	681a      	ldr	r2, [r3, #0]
 8005a0c:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8005a10:	601a      	str	r2, [r3, #0]
 8005a12:	681b      	ldr	r3, [r3, #0]
 8005a14:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8005a18:	9301      	str	r3, [sp, #4]
 8005a1a:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8005a1c:	2301      	movs	r3, #1
 8005a1e:	9328      	str	r3, [sp, #160]	; 0xa0
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8005a20:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8005a24:	9329      	str	r3, [sp, #164]	; 0xa4
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8005a26:	2502      	movs	r5, #2
 8005a28:	952e      	str	r5, [sp, #184]	; 0xb8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8005a2a:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8005a2e:	932f      	str	r3, [sp, #188]	; 0xbc
  RCC_OscInitStruct.PLL.PLLM = 25;
 8005a30:	2319      	movs	r3, #25
 8005a32:	9330      	str	r3, [sp, #192]	; 0xc0
  RCC_OscInitStruct.PLL.PLLN = 384;
 8005a34:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8005a38:	9331      	str	r3, [sp, #196]	; 0xc4
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8005a3a:	9532      	str	r5, [sp, #200]	; 0xc8
  RCC_OscInitStruct.PLL.PLLQ = 8;
 8005a3c:	2308      	movs	r3, #8
 8005a3e:	9333      	str	r3, [sp, #204]	; 0xcc
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8005a40:	a828      	add	r0, sp, #160	; 0xa0
 8005a42:	f7fd f915 	bl	8002c70 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8005a46:	f7fd f8d5 	bl	8002bf4 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8005a4a:	230f      	movs	r3, #15
 8005a4c:	9323      	str	r3, [sp, #140]	; 0x8c
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8005a4e:	9524      	str	r5, [sp, #144]	; 0x90
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8005a50:	9425      	str	r4, [sp, #148]	; 0x94
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8005a52:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8005a56:	9326      	str	r3, [sp, #152]	; 0x98
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8005a58:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005a5c:	9327      	str	r3, [sp, #156]	; 0x9c
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 8005a5e:	2106      	movs	r1, #6
 8005a60:	a823      	add	r0, sp, #140	; 0x8c
 8005a62:	f7fd fb73 	bl	800314c <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_I2C2
 8005a66:	f44f 1303 	mov.w	r3, #2146304	; 0x20c000
 8005a6a:	9302      	str	r3, [sp, #8]
  PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 8005a6c:	941b      	str	r4, [sp, #108]	; 0x6c
  PeriphClkInitStruct.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
 8005a6e:	941c      	str	r4, [sp, #112]	; 0x70
  PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 8005a70:	9421      	str	r4, [sp, #132]	; 0x84
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8005a72:	a802      	add	r0, sp, #8
 8005a74:	f7fd fc24 	bl	80032c0 <HAL_RCCEx_PeriphCLKConfig>
}
 8005a78:	b035      	add	sp, #212	; 0xd4
 8005a7a:	bd30      	pop	{r4, r5, pc}
 8005a7c:	40023800 	.word	0x40023800
 8005a80:	40007000 	.word	0x40007000

08005a84 <main>:
{
 8005a84:	b500      	push	{lr}
 8005a86:	b0ab      	sub	sp, #172	; 0xac
  HAL_Init();
 8005a88:	f7fb fd82 	bl	8001590 <HAL_Init>
  SystemClock_Config();
 8005a8c:	f7ff ffa0 	bl	80059d0 <SystemClock_Config>
  MX_GPIO_Init();
 8005a90:	f7ff fd6e 	bl	8005570 <MX_GPIO_Init>
  MX_I2C1_Init();
 8005a94:	f7ff fdcc 	bl	8005630 <MX_I2C1_Init>
  MX_I2C2_Init();
 8005a98:	f7ff fdec 	bl	8005674 <MX_I2C2_Init>
  MX_USB_DEVICE_Init();
 8005a9c:	f000 f958 	bl	8005d50 <MX_USB_DEVICE_Init>
  Init_LCD_GPIO();
 8005aa0:	f7fb fa5c 	bl	8000f5c <Init_LCD_GPIO>
  Init_TOUCH_GPIO(hi2c1);
 8005aa4:	4e42      	ldr	r6, [pc, #264]	; (8005bb0 <main+0x12c>)
 8005aa6:	466c      	mov	r4, sp
 8005aa8:	f106 0510 	add.w	r5, r6, #16
 8005aac:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005aae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005ab0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005ab2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005ab4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005ab6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005ab8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005abc:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8005ac0:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8005ac4:	f7fb fbd2 	bl	800126c <Init_TOUCH_GPIO>
  C02Click_Init(hi2c2, Co2MeasurementFinished);
 8005ac8:	4e3a      	ldr	r6, [pc, #232]	; (8005bb4 <main+0x130>)
 8005aca:	4b3b      	ldr	r3, [pc, #236]	; (8005bb8 <main+0x134>)
 8005acc:	930f      	str	r3, [sp, #60]	; 0x3c
 8005ace:	466c      	mov	r4, sp
 8005ad0:	f106 0510 	add.w	r5, r6, #16
 8005ad4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005ad6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005ad8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005ada:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005adc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005ade:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005ae0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005ae4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8005ae8:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8005aec:	f7ff fb7e 	bl	80051ec <C02Click_Init>
  STMPE610_Init();
 8005af0:	f7fb fc36 	bl	8001360 <STMPE610_Init>
  GUI_Init();
 8005af4:	f009 f8c4 	bl	800ec80 <GUI_Init>
  GUI_SetBkColor(GUI_BLUE);
 8005af8:	f44f 007f 	mov.w	r0, #16711680	; 0xff0000
 8005afc:	f008 f85c 	bl	800dbb8 <GUI_SetBkColor>
  GUI_Clear();
 8005b00:	f009 f884 	bl	800ec0c <GUI_Clear>
  char msg[100u] = { 0u };
 8005b04:	2464      	movs	r4, #100	; 0x64
 8005b06:	4622      	mov	r2, r4
 8005b08:	2100      	movs	r1, #0
 8005b0a:	a811      	add	r0, sp, #68	; 0x44
 8005b0c:	f00f fbdb 	bl	80152c6 <memset>
  GUI_Delay(100);
 8005b10:	4620      	mov	r0, r4
 8005b12:	f007 fc3d 	bl	800d390 <GUI_Delay>
  hWin = CreateWindow();
 8005b16:	f000 fbc7 	bl	80062a8 <CreateWindow>
 8005b1a:	4b28      	ldr	r3, [pc, #160]	; (8005bbc <main+0x138>)
 8005b1c:	6018      	str	r0, [r3, #0]
  SetupGraph();
 8005b1e:	f7ff fdcb 	bl	80056b8 <SetupGraph>
  SetGraphScale(MeasurementRateInS);
 8005b22:	4b27      	ldr	r3, [pc, #156]	; (8005bc0 <main+0x13c>)
 8005b24:	8818      	ldrh	r0, [r3, #0]
 8005b26:	f7ff fca7 	bl	8005478 <SetGraphScale>
  SetupUtils();
 8005b2a:	f7ff fe1d 	bl	8005768 <SetupUtils>
 8005b2e:	e002      	b.n	8005b36 <main+0xb2>
      if(FALSE != NewMeasurementEvent)
 8005b30:	4b24      	ldr	r3, [pc, #144]	; (8005bc4 <main+0x140>)
 8005b32:	781b      	ldrb	r3, [r3, #0]
 8005b34:	bb0b      	cbnz	r3, 8005b7a <main+0xf6>
	  STMPE610_read_xyz();
 8005b36:	f7fb fc5b 	bl	80013f0 <STMPE610_read_xyz>
	  GUI_TOUCH_Exec();
 8005b3a:	f007 fc9b 	bl	800d474 <GUI_TOUCH_Exec>
	  keypressed = GUI_GetKey();
 8005b3e:	f008 f949 	bl	800ddd4 <GUI_GetKey>
 8005b42:	4b21      	ldr	r3, [pc, #132]	; (8005bc8 <main+0x144>)
 8005b44:	8018      	strh	r0, [r3, #0]
		  GUI_Delay(1);
 8005b46:	2001      	movs	r0, #1
 8005b48:	f007 fc22 	bl	800d390 <GUI_Delay>
		  X_koordinata = STMPE610_GetX_TOUCH();
 8005b4c:	f7fb fc90 	bl	8001470 <STMPE610_GetX_TOUCH>
 8005b50:	4c1e      	ldr	r4, [pc, #120]	; (8005bcc <main+0x148>)
 8005b52:	8020      	strh	r0, [r4, #0]
		  Y_koordinata = STMPE610_GetY_TOUCH();
 8005b54:	f7fb fcbc 	bl	80014d0 <STMPE610_GetY_TOUCH>
 8005b58:	4b1d      	ldr	r3, [pc, #116]	; (8005bd0 <main+0x14c>)
 8005b5a:	8018      	strh	r0, [r3, #0]
		  if(X_koordinata > 0 && X_koordinata < 80 && Y_koordinata > 0 && Y_koordinata < 80){
 8005b5c:	8823      	ldrh	r3, [r4, #0]
 8005b5e:	3b01      	subs	r3, #1
 8005b60:	b29b      	uxth	r3, r3
 8005b62:	2b4e      	cmp	r3, #78	; 0x4e
 8005b64:	d8e4      	bhi.n	8005b30 <main+0xac>
 8005b66:	2800      	cmp	r0, #0
 8005b68:	d0e2      	beq.n	8005b30 <main+0xac>
 8005b6a:	284f      	cmp	r0, #79	; 0x4f
 8005b6c:	d8e0      	bhi.n	8005b30 <main+0xac>
			  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3|GPIO_PIN_4, GPIO_PIN_SET);
 8005b6e:	2201      	movs	r2, #1
 8005b70:	2118      	movs	r1, #24
 8005b72:	4818      	ldr	r0, [pc, #96]	; (8005bd4 <main+0x150>)
 8005b74:	f7fb fe9e 	bl	80018b4 <HAL_GPIO_WritePin>
 8005b78:	e7da      	b.n	8005b30 <main+0xac>
          sprintf(msg, "Mes count: %d\nMes result: %d", MeasurementMsg.Count, MeasurementMsg.Result);
 8005b7a:	4c17      	ldr	r4, [pc, #92]	; (8005bd8 <main+0x154>)
 8005b7c:	8823      	ldrh	r3, [r4, #0]
 8005b7e:	8862      	ldrh	r2, [r4, #2]
 8005b80:	4916      	ldr	r1, [pc, #88]	; (8005bdc <main+0x158>)
 8005b82:	a811      	add	r0, sp, #68	; 0x44
 8005b84:	f00f fc60 	bl	8015448 <siprintf>
          PrintToDisplay(msg);
 8005b88:	a811      	add	r0, sp, #68	; 0x44
 8005b8a:	f7ff fe59 	bl	8005840 <PrintToDisplay>
          NewMeasurementEvent = FALSE;
 8005b8e:	4b0d      	ldr	r3, [pc, #52]	; (8005bc4 <main+0x140>)
 8005b90:	2200      	movs	r2, #0
 8005b92:	701a      	strb	r2, [r3, #0]
          if(MeasurementMsg.Count == 10)
 8005b94:	8863      	ldrh	r3, [r4, #2]
 8005b96:	2b0a      	cmp	r3, #10
 8005b98:	d1cd      	bne.n	8005b36 <main+0xb2>
            C02Click_StopMeasurement();
 8005b9a:	f7ff fbcb 	bl	8005334 <C02Click_StopMeasurement>
            sprintf(msg, "Measurement stopped after %d measurements", MeasurementMsg.Count);
 8005b9e:	8862      	ldrh	r2, [r4, #2]
 8005ba0:	490f      	ldr	r1, [pc, #60]	; (8005be0 <main+0x15c>)
 8005ba2:	a811      	add	r0, sp, #68	; 0x44
 8005ba4:	f00f fc50 	bl	8015448 <siprintf>
            PrintToDisplay(msg);
 8005ba8:	a811      	add	r0, sp, #68	; 0x44
 8005baa:	f7ff fe49 	bl	8005840 <PrintToDisplay>
 8005bae:	e7c2      	b.n	8005b36 <main+0xb2>
 8005bb0:	2001a020 	.word	0x2001a020
 8005bb4:	2001a070 	.word	0x2001a070
 8005bb8:	08005529 	.word	0x08005529
 8005bbc:	2001a010 	.word	0x2001a010
 8005bc0:	2000012c 	.word	0x2000012c
 8005bc4:	20019cb4 	.word	0x20019cb4
 8005bc8:	20019cba 	.word	0x20019cba
 8005bcc:	20019cb6 	.word	0x20019cb6
 8005bd0:	20019cb8 	.word	0x20019cb8
 8005bd4:	40020400 	.word	0x40020400
 8005bd8:	20000128 	.word	0x20000128
 8005bdc:	08015dcc 	.word	0x08015dcc
 8005be0:	08015dec 	.word	0x08015dec

08005be4 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8005be4:	4770      	bx	lr
	...

08005be8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8005be8:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 8005bea:	4b0a      	ldr	r3, [pc, #40]	; (8005c14 <HAL_MspInit+0x2c>)
 8005bec:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005bee:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005bf2:	641a      	str	r2, [r3, #64]	; 0x40
 8005bf4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005bf6:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8005bfa:	9200      	str	r2, [sp, #0]
 8005bfc:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005bfe:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005c00:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8005c04:	645a      	str	r2, [r3, #68]	; 0x44
 8005c06:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005c08:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8005c0c:	9301      	str	r3, [sp, #4]
 8005c0e:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8005c10:	b002      	add	sp, #8
 8005c12:	4770      	bx	lr
 8005c14:	40023800 	.word	0x40023800

08005c18 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8005c18:	b510      	push	{r4, lr}
 8005c1a:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8005c1c:	2300      	movs	r3, #0
 8005c1e:	9305      	str	r3, [sp, #20]
 8005c20:	9306      	str	r3, [sp, #24]
 8005c22:	9307      	str	r3, [sp, #28]
 8005c24:	9308      	str	r3, [sp, #32]
 8005c26:	9309      	str	r3, [sp, #36]	; 0x24
  if(hi2c->Instance==I2C1)
 8005c28:	6803      	ldr	r3, [r0, #0]
 8005c2a:	4a25      	ldr	r2, [pc, #148]	; (8005cc0 <HAL_I2C_MspInit+0xa8>)
 8005c2c:	4293      	cmp	r3, r2
 8005c2e:	d004      	beq.n	8005c3a <HAL_I2C_MspInit+0x22>
    __HAL_RCC_I2C1_CLK_ENABLE();
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
  else if(hi2c->Instance==I2C2)
 8005c30:	4a24      	ldr	r2, [pc, #144]	; (8005cc4 <HAL_I2C_MspInit+0xac>)
 8005c32:	4293      	cmp	r3, r2
 8005c34:	d023      	beq.n	8005c7e <HAL_I2C_MspInit+0x66>
  /* USER CODE BEGIN I2C2_MspInit 1 */

  /* USER CODE END I2C2_MspInit 1 */
  }

}
 8005c36:	b00a      	add	sp, #40	; 0x28
 8005c38:	bd10      	pop	{r4, pc}
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8005c3a:	4c23      	ldr	r4, [pc, #140]	; (8005cc8 <HAL_I2C_MspInit+0xb0>)
 8005c3c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005c3e:	f043 0302 	orr.w	r3, r3, #2
 8005c42:	6323      	str	r3, [r4, #48]	; 0x30
 8005c44:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005c46:	f003 0302 	and.w	r3, r3, #2
 8005c4a:	9301      	str	r3, [sp, #4]
 8005c4c:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8005c4e:	23c0      	movs	r3, #192	; 0xc0
 8005c50:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8005c52:	2312      	movs	r3, #18
 8005c54:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8005c56:	2301      	movs	r3, #1
 8005c58:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8005c5a:	2303      	movs	r3, #3
 8005c5c:	9308      	str	r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8005c5e:	2304      	movs	r3, #4
 8005c60:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8005c62:	a905      	add	r1, sp, #20
 8005c64:	4819      	ldr	r0, [pc, #100]	; (8005ccc <HAL_I2C_MspInit+0xb4>)
 8005c66:	f7fb fd31 	bl	80016cc <HAL_GPIO_Init>
    __HAL_RCC_I2C1_CLK_ENABLE();
 8005c6a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005c6c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8005c70:	6423      	str	r3, [r4, #64]	; 0x40
 8005c72:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005c74:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005c78:	9302      	str	r3, [sp, #8]
 8005c7a:	9b02      	ldr	r3, [sp, #8]
 8005c7c:	e7db      	b.n	8005c36 <HAL_I2C_MspInit+0x1e>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8005c7e:	4c12      	ldr	r4, [pc, #72]	; (8005cc8 <HAL_I2C_MspInit+0xb0>)
 8005c80:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005c82:	f043 0320 	orr.w	r3, r3, #32
 8005c86:	6323      	str	r3, [r4, #48]	; 0x30
 8005c88:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005c8a:	f003 0320 	and.w	r3, r3, #32
 8005c8e:	9303      	str	r3, [sp, #12]
 8005c90:	9b03      	ldr	r3, [sp, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8005c92:	2303      	movs	r3, #3
 8005c94:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8005c96:	2212      	movs	r2, #18
 8005c98:	9206      	str	r2, [sp, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8005c9a:	2201      	movs	r2, #1
 8005c9c:	9207      	str	r2, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8005c9e:	9308      	str	r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8005ca0:	2304      	movs	r3, #4
 8005ca2:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8005ca4:	a905      	add	r1, sp, #20
 8005ca6:	480a      	ldr	r0, [pc, #40]	; (8005cd0 <HAL_I2C_MspInit+0xb8>)
 8005ca8:	f7fb fd10 	bl	80016cc <HAL_GPIO_Init>
    __HAL_RCC_I2C2_CLK_ENABLE();
 8005cac:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005cae:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8005cb2:	6423      	str	r3, [r4, #64]	; 0x40
 8005cb4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005cb6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005cba:	9304      	str	r3, [sp, #16]
 8005cbc:	9b04      	ldr	r3, [sp, #16]
}
 8005cbe:	e7ba      	b.n	8005c36 <HAL_I2C_MspInit+0x1e>
 8005cc0:	40005400 	.word	0x40005400
 8005cc4:	40005800 	.word	0x40005800
 8005cc8:	40023800 	.word	0x40023800
 8005ccc:	40020400 	.word	0x40020400
 8005cd0:	40021400 	.word	0x40021400

08005cd4 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8005cd4:	4770      	bx	lr

08005cd6 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8005cd6:	e7fe      	b.n	8005cd6 <HardFault_Handler>

08005cd8 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8005cd8:	e7fe      	b.n	8005cd8 <MemManage_Handler>

08005cda <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8005cda:	e7fe      	b.n	8005cda <BusFault_Handler>

08005cdc <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8005cdc:	e7fe      	b.n	8005cdc <UsageFault_Handler>

08005cde <SVC_Handler>:

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8005cde:	4770      	bx	lr

08005ce0 <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8005ce0:	4770      	bx	lr

08005ce2 <PendSV_Handler>:

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8005ce2:	4770      	bx	lr

08005ce4 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8005ce4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8005ce6:	f7fb fc5f 	bl	80015a8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  HAL_SYSTICK_IRQHandler();
 8005cea:	f7fb fceb 	bl	80016c4 <HAL_SYSTICK_IRQHandler>

  /* USER CODE END SysTick_IRQn 1 */
}
 8005cee:	bd08      	pop	{r3, pc}

08005cf0 <OTG_FS_IRQHandler>:

/**
  * @brief This function handles USB On The Go FS global interrupt.
  */
void OTG_FS_IRQHandler(void)
{
 8005cf0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN OTG_FS_IRQn 0 */

  /* USER CODE END OTG_FS_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_OTG_FS);
 8005cf2:	4802      	ldr	r0, [pc, #8]	; (8005cfc <OTG_FS_IRQHandler+0xc>)
 8005cf4:	f7fc fb6e 	bl	80023d4 <HAL_PCD_IRQHandler>
  /* USER CODE BEGIN OTG_FS_IRQn 1 */

  /* USER CODE END OTG_FS_IRQn 1 */
}
 8005cf8:	bd08      	pop	{r3, pc}
 8005cfa:	bf00      	nop
 8005cfc:	2001b3ac 	.word	0x2001b3ac

08005d00 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8005d00:	b508      	push	{r3, lr}
 8005d02:	4603      	mov	r3, r0
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8005d04:	4a0b      	ldr	r2, [pc, #44]	; (8005d34 <_sbrk+0x34>)
 8005d06:	6812      	ldr	r2, [r2, #0]
 8005d08:	b142      	cbz	r2, 8005d1c <_sbrk+0x1c>
		heap_end = &end;

	prev_heap_end = heap_end;
 8005d0a:	4a0a      	ldr	r2, [pc, #40]	; (8005d34 <_sbrk+0x34>)
 8005d0c:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8005d0e:	4403      	add	r3, r0
 8005d10:	466a      	mov	r2, sp
 8005d12:	4293      	cmp	r3, r2
 8005d14:	d806      	bhi.n	8005d24 <_sbrk+0x24>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8005d16:	4a07      	ldr	r2, [pc, #28]	; (8005d34 <_sbrk+0x34>)
 8005d18:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8005d1a:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8005d1c:	4a05      	ldr	r2, [pc, #20]	; (8005d34 <_sbrk+0x34>)
 8005d1e:	4906      	ldr	r1, [pc, #24]	; (8005d38 <_sbrk+0x38>)
 8005d20:	6011      	str	r1, [r2, #0]
 8005d22:	e7f2      	b.n	8005d0a <_sbrk+0xa>
		errno = ENOMEM;
 8005d24:	f00f fa62 	bl	80151ec <__errno>
 8005d28:	230c      	movs	r3, #12
 8005d2a:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8005d2c:	f04f 30ff 	mov.w	r0, #4294967295
 8005d30:	e7f3      	b.n	8005d1a <_sbrk+0x1a>
 8005d32:	bf00      	nop
 8005d34:	20019cc8 	.word	0x20019cc8
 8005d38:	2001bb40 	.word	0x2001bb40

08005d3c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8005d3c:	4a03      	ldr	r2, [pc, #12]	; (8005d4c <SystemInit+0x10>)
 8005d3e:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8005d42:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8005d46:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8005d4a:	4770      	bx	lr
 8005d4c:	e000ed00 	.word	0xe000ed00

08005d50 <MX_USB_DEVICE_Init>:
/**
  * Init USB device Library, add supported class and start the library
  * @retval None
  */
void MX_USB_DEVICE_Init(void)
{
 8005d50:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */
  
  /* USER CODE END USB_DEVICE_Init_PreTreatment */
  
  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceFS, &FS_Desc, DEVICE_FS) != USBD_OK)
 8005d52:	2200      	movs	r2, #0
 8005d54:	490f      	ldr	r1, [pc, #60]	; (8005d94 <MX_USB_DEVICE_Init+0x44>)
 8005d56:	4810      	ldr	r0, [pc, #64]	; (8005d98 <MX_USB_DEVICE_Init+0x48>)
 8005d58:	f7fe fce1 	bl	800471e <USBD_Init>
 8005d5c:	b970      	cbnz	r0, 8005d7c <MX_USB_DEVICE_Init+0x2c>
  {
    Error_Handler();
  }
  if (USBD_RegisterClass(&hUsbDeviceFS, &USBD_CDC) != USBD_OK)
 8005d5e:	490f      	ldr	r1, [pc, #60]	; (8005d9c <MX_USB_DEVICE_Init+0x4c>)
 8005d60:	480d      	ldr	r0, [pc, #52]	; (8005d98 <MX_USB_DEVICE_Init+0x48>)
 8005d62:	f7fe fcf8 	bl	8004756 <USBD_RegisterClass>
 8005d66:	b960      	cbnz	r0, 8005d82 <MX_USB_DEVICE_Init+0x32>
  {
    Error_Handler();
  }
  if (USBD_CDC_RegisterInterface(&hUsbDeviceFS, &USBD_Interface_fops_FS) != USBD_OK)
 8005d68:	490d      	ldr	r1, [pc, #52]	; (8005da0 <MX_USB_DEVICE_Init+0x50>)
 8005d6a:	480b      	ldr	r0, [pc, #44]	; (8005d98 <MX_USB_DEVICE_Init+0x48>)
 8005d6c:	f7fe fca9 	bl	80046c2 <USBD_CDC_RegisterInterface>
 8005d70:	b950      	cbnz	r0, 8005d88 <MX_USB_DEVICE_Init+0x38>
  {
    Error_Handler();
  }
  if (USBD_Start(&hUsbDeviceFS) != USBD_OK)
 8005d72:	4809      	ldr	r0, [pc, #36]	; (8005d98 <MX_USB_DEVICE_Init+0x48>)
 8005d74:	f7fe fd03 	bl	800477e <USBD_Start>
 8005d78:	b948      	cbnz	r0, 8005d8e <MX_USB_DEVICE_Init+0x3e>
  }

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */
  
  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
 8005d7a:	bd08      	pop	{r3, pc}
    Error_Handler();
 8005d7c:	f7ff ff32 	bl	8005be4 <Error_Handler>
 8005d80:	e7ed      	b.n	8005d5e <MX_USB_DEVICE_Init+0xe>
    Error_Handler();
 8005d82:	f7ff ff2f 	bl	8005be4 <Error_Handler>
 8005d86:	e7ef      	b.n	8005d68 <MX_USB_DEVICE_Init+0x18>
    Error_Handler();
 8005d88:	f7ff ff2c 	bl	8005be4 <Error_Handler>
 8005d8c:	e7f1      	b.n	8005d72 <MX_USB_DEVICE_Init+0x22>
    Error_Handler();
 8005d8e:	f7ff ff29 	bl	8005be4 <Error_Handler>
}
 8005d92:	e7f2      	b.n	8005d7a <MX_USB_DEVICE_Init+0x2a>
 8005d94:	20000148 	.word	0x20000148
 8005d98:	2001a0dc 	.word	0x2001a0dc
 8005d9c:	20000008 	.word	0x20000008
 8005da0:	20000134 	.word	0x20000134

08005da4 <CDC_DeInit_FS>:
static int8_t CDC_DeInit_FS(void)
{
  /* USER CODE BEGIN 4 */
  return (USBD_OK);
  /* USER CODE END 4 */
}
 8005da4:	2000      	movs	r0, #0
 8005da6:	4770      	bx	lr

08005da8 <CDC_Control_FS>:
    break;
  }

  return (USBD_OK);
  /* USER CODE END 5 */
}
 8005da8:	2000      	movs	r0, #0
 8005daa:	4770      	bx	lr

08005dac <CDC_TransmitCplt_FS>:
  UNUSED(Buf);
  UNUSED(Len);
  UNUSED(epnum);
  /* USER CODE END 13 */
  return result;
}
 8005dac:	2000      	movs	r0, #0
 8005dae:	4770      	bx	lr

08005db0 <CDC_Receive_FS>:
{
 8005db0:	b510      	push	{r4, lr}
  USBD_CDC_SetRxBuffer(&hUsbDeviceFS, &Buf[0]);
 8005db2:	4c05      	ldr	r4, [pc, #20]	; (8005dc8 <CDC_Receive_FS+0x18>)
 8005db4:	4601      	mov	r1, r0
 8005db6:	4620      	mov	r0, r4
 8005db8:	f7fe fc92 	bl	80046e0 <USBD_CDC_SetRxBuffer>
  USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 8005dbc:	4620      	mov	r0, r4
 8005dbe:	f7fe fc95 	bl	80046ec <USBD_CDC_ReceivePacket>
}
 8005dc2:	2000      	movs	r0, #0
 8005dc4:	bd10      	pop	{r4, pc}
 8005dc6:	bf00      	nop
 8005dc8:	2001a0dc 	.word	0x2001a0dc

08005dcc <CDC_Init_FS>:
{
 8005dcc:	b510      	push	{r4, lr}
  USBD_CDC_SetTxBuffer(&hUsbDeviceFS, UserTxBufferFS, 0);
 8005dce:	4c06      	ldr	r4, [pc, #24]	; (8005de8 <CDC_Init_FS+0x1c>)
 8005dd0:	2200      	movs	r2, #0
 8005dd2:	4906      	ldr	r1, [pc, #24]	; (8005dec <CDC_Init_FS+0x20>)
 8005dd4:	4620      	mov	r0, r4
 8005dd6:	f7fe fc7b 	bl	80046d0 <USBD_CDC_SetTxBuffer>
  USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
 8005dda:	4905      	ldr	r1, [pc, #20]	; (8005df0 <CDC_Init_FS+0x24>)
 8005ddc:	4620      	mov	r0, r4
 8005dde:	f7fe fc7f 	bl	80046e0 <USBD_CDC_SetRxBuffer>
}
 8005de2:	2000      	movs	r0, #0
 8005de4:	bd10      	pop	{r4, pc}
 8005de6:	bf00      	nop
 8005de8:	2001a0dc 	.word	0x2001a0dc
 8005dec:	2001abac 	.word	0x2001abac
 8005df0:	2001a3ac 	.word	0x2001a3ac

08005df4 <SystemClockConfig_Resume>:
  * @brief  Configures system clock after wake-up from USB resume callBack:
  *         enable HSI, PLL and select PLL as system clock source.
  * @retval None
  */
static void SystemClockConfig_Resume(void)
{
 8005df4:	b508      	push	{r3, lr}
  SystemClock_Config();
 8005df6:	f7ff fdeb 	bl	80059d0 <SystemClock_Config>
}
 8005dfa:	bd08      	pop	{r3, pc}

08005dfc <HAL_PCD_MspInit>:
{
 8005dfc:	b510      	push	{r4, lr}
 8005dfe:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8005e00:	2300      	movs	r3, #0
 8005e02:	9303      	str	r3, [sp, #12]
 8005e04:	9304      	str	r3, [sp, #16]
 8005e06:	9305      	str	r3, [sp, #20]
 8005e08:	9306      	str	r3, [sp, #24]
 8005e0a:	9307      	str	r3, [sp, #28]
  if(pcdHandle->Instance==USB_OTG_FS)
 8005e0c:	6803      	ldr	r3, [r0, #0]
 8005e0e:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8005e12:	d001      	beq.n	8005e18 <HAL_PCD_MspInit+0x1c>
}
 8005e14:	b008      	add	sp, #32
 8005e16:	bd10      	pop	{r4, pc}
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8005e18:	4c18      	ldr	r4, [pc, #96]	; (8005e7c <HAL_PCD_MspInit+0x80>)
 8005e1a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005e1c:	f043 0301 	orr.w	r3, r3, #1
 8005e20:	6323      	str	r3, [r4, #48]	; 0x30
 8005e22:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005e24:	f003 0301 	and.w	r3, r3, #1
 8005e28:	9300      	str	r3, [sp, #0]
 8005e2a:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
 8005e2c:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 8005e30:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8005e32:	2302      	movs	r3, #2
 8005e34:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8005e36:	2303      	movs	r3, #3
 8005e38:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 8005e3a:	230a      	movs	r3, #10
 8005e3c:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8005e3e:	a903      	add	r1, sp, #12
 8005e40:	480f      	ldr	r0, [pc, #60]	; (8005e80 <HAL_PCD_MspInit+0x84>)
 8005e42:	f7fb fc43 	bl	80016cc <HAL_GPIO_Init>
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
 8005e46:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005e48:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005e4c:	6363      	str	r3, [r4, #52]	; 0x34
 8005e4e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005e50:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005e54:	9301      	str	r3, [sp, #4]
 8005e56:	9b01      	ldr	r3, [sp, #4]
 8005e58:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005e5a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005e5e:	6463      	str	r3, [r4, #68]	; 0x44
 8005e60:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005e62:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8005e66:	9302      	str	r3, [sp, #8]
 8005e68:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(OTG_FS_IRQn, 0, 0);
 8005e6a:	2200      	movs	r2, #0
 8005e6c:	4611      	mov	r1, r2
 8005e6e:	2043      	movs	r0, #67	; 0x43
 8005e70:	f7fb fbd2 	bl	8001618 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
 8005e74:	2043      	movs	r0, #67	; 0x43
 8005e76:	f7fb fc01 	bl	800167c <HAL_NVIC_EnableIRQ>
}
 8005e7a:	e7cb      	b.n	8005e14 <HAL_PCD_MspInit+0x18>
 8005e7c:	40023800 	.word	0x40023800
 8005e80:	40020000 	.word	0x40020000

08005e84 <HAL_PCD_SetupStageCallback>:
{
 8005e84:	b508      	push	{r3, lr}
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 8005e86:	f500 7171 	add.w	r1, r0, #964	; 0x3c4
 8005e8a:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 8005e8e:	f7fe fc8b 	bl	80047a8 <USBD_LL_SetupStage>
}
 8005e92:	bd08      	pop	{r3, pc}

08005e94 <HAL_PCD_DataOutStageCallback>:
{
 8005e94:	b508      	push	{r3, lr}
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 8005e96:	ebc1 02c1 	rsb	r2, r1, r1, lsl #3
 8005e9a:	0093      	lsls	r3, r2, #2
 8005e9c:	4403      	add	r3, r0
 8005e9e:	f8d3 2208 	ldr.w	r2, [r3, #520]	; 0x208
 8005ea2:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 8005ea6:	f7fe fcab 	bl	8004800 <USBD_LL_DataOutStage>
}
 8005eaa:	bd08      	pop	{r3, pc}

08005eac <HAL_PCD_DataInStageCallback>:
{
 8005eac:	b508      	push	{r3, lr}
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 8005eae:	ebc1 02c1 	rsb	r2, r1, r1, lsl #3
 8005eb2:	0093      	lsls	r3, r2, #2
 8005eb4:	4403      	add	r3, r0
 8005eb6:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8005eb8:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 8005ebc:	f7fe fcd9 	bl	8004872 <USBD_LL_DataInStage>
}
 8005ec0:	bd08      	pop	{r3, pc}

08005ec2 <HAL_PCD_SOFCallback>:
{
 8005ec2:	b508      	push	{r3, lr}
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 8005ec4:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 8005ec8:	f7fe fd6e 	bl	80049a8 <USBD_LL_SOF>
}
 8005ecc:	bd08      	pop	{r3, pc}

08005ece <HAL_PCD_ResetCallback>:
{ 
 8005ece:	b510      	push	{r4, lr}
 8005ed0:	4604      	mov	r4, r0
  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 8005ed2:	68c3      	ldr	r3, [r0, #12]
 8005ed4:	b12b      	cbz	r3, 8005ee2 <HAL_PCD_ResetCallback+0x14>
  else if ( hpcd->Init.speed == PCD_SPEED_FULL)
 8005ed6:	2b02      	cmp	r3, #2
 8005ed8:	d00d      	beq.n	8005ef6 <HAL_PCD_ResetCallback+0x28>
    Error_Handler();
 8005eda:	f7ff fe83 	bl	8005be4 <Error_Handler>
  USBD_SpeedTypeDef speed = USBD_SPEED_FULL;
 8005ede:	2101      	movs	r1, #1
 8005ee0:	e000      	b.n	8005ee4 <HAL_PCD_ResetCallback+0x16>
    speed = USBD_SPEED_HIGH;
 8005ee2:	2100      	movs	r1, #0
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 8005ee4:	f8d4 0400 	ldr.w	r0, [r4, #1024]	; 0x400
 8005ee8:	f7fe fd47 	bl	800497a <USBD_LL_SetSpeed>
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 8005eec:	f8d4 0400 	ldr.w	r0, [r4, #1024]	; 0x400
 8005ef0:	f7fe fd1a 	bl	8004928 <USBD_LL_Reset>
}
 8005ef4:	bd10      	pop	{r4, pc}
    speed = USBD_SPEED_FULL;
 8005ef6:	2101      	movs	r1, #1
 8005ef8:	e7f4      	b.n	8005ee4 <HAL_PCD_ResetCallback+0x16>
	...

08005efc <HAL_PCD_SuspendCallback>:
{
 8005efc:	b510      	push	{r4, lr}
 8005efe:	4604      	mov	r4, r0
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 8005f00:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 8005f04:	f7fe fd3c 	bl	8004980 <USBD_LL_Suspend>
  __HAL_PCD_GATE_PHYCLOCK(hpcd);
 8005f08:	6822      	ldr	r2, [r4, #0]
 8005f0a:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	; 0xe00
 8005f0e:	f043 0301 	orr.w	r3, r3, #1
 8005f12:	f8c2 3e00 	str.w	r3, [r2, #3584]	; 0xe00
  if (hpcd->Init.low_power_enable)
 8005f16:	6a23      	ldr	r3, [r4, #32]
 8005f18:	b123      	cbz	r3, 8005f24 <HAL_PCD_SuspendCallback+0x28>
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 8005f1a:	4a03      	ldr	r2, [pc, #12]	; (8005f28 <HAL_PCD_SuspendCallback+0x2c>)
 8005f1c:	6913      	ldr	r3, [r2, #16]
 8005f1e:	f043 0306 	orr.w	r3, r3, #6
 8005f22:	6113      	str	r3, [r2, #16]
}
 8005f24:	bd10      	pop	{r4, pc}
 8005f26:	bf00      	nop
 8005f28:	e000ed00 	.word	0xe000ed00

08005f2c <HAL_PCD_ResumeCallback>:
{
 8005f2c:	b508      	push	{r3, lr}
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 8005f2e:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 8005f32:	f7fe fd2e 	bl	8004992 <USBD_LL_Resume>
}
 8005f36:	bd08      	pop	{r3, pc}

08005f38 <HAL_PCD_ISOOUTIncompleteCallback>:
{
 8005f38:	b508      	push	{r3, lr}
  USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 8005f3a:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 8005f3e:	f7fe fd43 	bl	80049c8 <USBD_LL_IsoOUTIncomplete>
}
 8005f42:	bd08      	pop	{r3, pc}

08005f44 <HAL_PCD_ISOINIncompleteCallback>:
{
 8005f44:	b508      	push	{r3, lr}
  USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 8005f46:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 8005f4a:	f7fe fd3b 	bl	80049c4 <USBD_LL_IsoINIncomplete>
}
 8005f4e:	bd08      	pop	{r3, pc}

08005f50 <HAL_PCD_ConnectCallback>:
{
 8005f50:	b508      	push	{r3, lr}
  USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 8005f52:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 8005f56:	f7fe fd39 	bl	80049cc <USBD_LL_DevConnected>
}
 8005f5a:	bd08      	pop	{r3, pc}

08005f5c <HAL_PCD_DisconnectCallback>:
{
 8005f5c:	b508      	push	{r3, lr}
  USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 8005f5e:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 8005f62:	f7fe fd35 	bl	80049d0 <USBD_LL_DevDisconnected>
}
 8005f66:	bd08      	pop	{r3, pc}

08005f68 <USBD_LL_Init>:
  if (pdev->id == DEVICE_FS) {
 8005f68:	7803      	ldrb	r3, [r0, #0]
 8005f6a:	b10b      	cbz	r3, 8005f70 <USBD_LL_Init+0x8>
}
 8005f6c:	2000      	movs	r0, #0
 8005f6e:	4770      	bx	lr
{
 8005f70:	b510      	push	{r4, lr}
 8005f72:	4603      	mov	r3, r0
  hpcd_USB_OTG_FS.pData = pdev;
 8005f74:	4815      	ldr	r0, [pc, #84]	; (8005fcc <USBD_LL_Init+0x64>)
 8005f76:	f8c0 3400 	str.w	r3, [r0, #1024]	; 0x400
  pdev->pData = &hpcd_USB_OTG_FS;
 8005f7a:	f8c3 02c4 	str.w	r0, [r3, #708]	; 0x2c4
  hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 8005f7e:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
 8005f82:	6003      	str	r3, [r0, #0]
  hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 8005f84:	2306      	movs	r3, #6
 8005f86:	6043      	str	r3, [r0, #4]
  hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 8005f88:	2202      	movs	r2, #2
 8005f8a:	60c2      	str	r2, [r0, #12]
  hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 8005f8c:	2300      	movs	r3, #0
 8005f8e:	6103      	str	r3, [r0, #16]
  hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 8005f90:	6182      	str	r2, [r0, #24]
  hpcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 8005f92:	61c3      	str	r3, [r0, #28]
  hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 8005f94:	6203      	str	r3, [r0, #32]
  hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 8005f96:	6243      	str	r3, [r0, #36]	; 0x24
  hpcd_USB_OTG_FS.Init.vbus_sensing_enable = DISABLE;
 8005f98:	62c3      	str	r3, [r0, #44]	; 0x2c
  hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 8005f9a:	6303      	str	r3, [r0, #48]	; 0x30
  if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 8005f9c:	f7fc f8c4 	bl	8002128 <HAL_PCD_Init>
 8005fa0:	b980      	cbnz	r0, 8005fc4 <USBD_LL_Init+0x5c>
  HAL_PCDEx_SetRxFiFo(&hpcd_USB_OTG_FS, 0x80);
 8005fa2:	4c0a      	ldr	r4, [pc, #40]	; (8005fcc <USBD_LL_Init+0x64>)
 8005fa4:	2180      	movs	r1, #128	; 0x80
 8005fa6:	4620      	mov	r0, r4
 8005fa8:	f7fc fe0b 	bl	8002bc2 <HAL_PCDEx_SetRxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 0, 0x40);
 8005fac:	2240      	movs	r2, #64	; 0x40
 8005fae:	2100      	movs	r1, #0
 8005fb0:	4620      	mov	r0, r4
 8005fb2:	f7fc fde2 	bl	8002b7a <HAL_PCDEx_SetTxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 1, 0x80);
 8005fb6:	2280      	movs	r2, #128	; 0x80
 8005fb8:	2101      	movs	r1, #1
 8005fba:	4620      	mov	r0, r4
 8005fbc:	f7fc fddd 	bl	8002b7a <HAL_PCDEx_SetTxFiFo>
}
 8005fc0:	2000      	movs	r0, #0
 8005fc2:	bd10      	pop	{r4, pc}
    Error_Handler( );
 8005fc4:	f7ff fe0e 	bl	8005be4 <Error_Handler>
 8005fc8:	e7eb      	b.n	8005fa2 <USBD_LL_Init+0x3a>
 8005fca:	bf00      	nop
 8005fcc:	2001b3ac 	.word	0x2001b3ac

08005fd0 <USBD_LL_IsStallEP>:
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 8005fd0:	f8d0 32c4 	ldr.w	r3, [r0, #708]	; 0x2c4
  if((ep_addr & 0x80) == 0x80)
 8005fd4:	f011 0f80 	tst.w	r1, #128	; 0x80
 8005fd8:	d108      	bne.n	8005fec <USBD_LL_IsStallEP+0x1c>
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall; 
 8005fda:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 8005fde:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 8005fe2:	008a      	lsls	r2, r1, #2
 8005fe4:	4413      	add	r3, r2
 8005fe6:	f893 01fe 	ldrb.w	r0, [r3, #510]	; 0x1fe
}
 8005fea:	4770      	bx	lr
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall; 
 8005fec:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 8005ff0:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 8005ff4:	008a      	lsls	r2, r1, #2
 8005ff6:	4413      	add	r3, r2
 8005ff8:	f893 003e 	ldrb.w	r0, [r3, #62]	; 0x3e
 8005ffc:	4770      	bx	lr

08005ffe <USBD_LL_GetRxDataSize>:
{
 8005ffe:	b508      	push	{r3, lr}
  return HAL_PCD_EP_GetRxCount((PCD_HandleTypeDef*) pdev->pData, ep_addr);
 8006000:	f8d0 02c4 	ldr.w	r0, [r0, #708]	; 0x2c4
 8006004:	f7fc fd0e 	bl	8002a24 <HAL_PCD_EP_GetRxCount>
}
 8006008:	bd08      	pop	{r3, pc}
	...

0800600c <HAL_PCDEx_LPM_Callback>:
{
 800600c:	b510      	push	{r4, lr}
 800600e:	4604      	mov	r4, r0
  switch (msg)
 8006010:	b111      	cbz	r1, 8006018 <HAL_PCDEx_LPM_Callback+0xc>
 8006012:	2901      	cmp	r1, #1
 8006014:	d016      	beq.n	8006044 <HAL_PCDEx_LPM_Callback+0x38>
}
 8006016:	bd10      	pop	{r4, pc}
    if (hpcd->Init.low_power_enable)
 8006018:	6a03      	ldr	r3, [r0, #32]
 800601a:	b95b      	cbnz	r3, 8006034 <HAL_PCDEx_LPM_Callback+0x28>
    __HAL_PCD_UNGATE_PHYCLOCK(hpcd);
 800601c:	6822      	ldr	r2, [r4, #0]
 800601e:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	; 0xe00
 8006022:	f023 0301 	bic.w	r3, r3, #1
 8006026:	f8c2 3e00 	str.w	r3, [r2, #3584]	; 0xe00
    USBD_LL_Resume(hpcd->pData);
 800602a:	f8d4 0400 	ldr.w	r0, [r4, #1024]	; 0x400
 800602e:	f7fe fcb0 	bl	8004992 <USBD_LL_Resume>
    break;
 8006032:	e7f0      	b.n	8006016 <HAL_PCDEx_LPM_Callback+0xa>
      SystemClockConfig_Resume();
 8006034:	f7ff fede 	bl	8005df4 <SystemClockConfig_Resume>
      SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 8006038:	4a0c      	ldr	r2, [pc, #48]	; (800606c <HAL_PCDEx_LPM_Callback+0x60>)
 800603a:	6913      	ldr	r3, [r2, #16]
 800603c:	f023 0306 	bic.w	r3, r3, #6
 8006040:	6113      	str	r3, [r2, #16]
 8006042:	e7eb      	b.n	800601c <HAL_PCDEx_LPM_Callback+0x10>
    __HAL_PCD_GATE_PHYCLOCK(hpcd);
 8006044:	6802      	ldr	r2, [r0, #0]
 8006046:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	; 0xe00
 800604a:	f043 0301 	orr.w	r3, r3, #1
 800604e:	f8c2 3e00 	str.w	r3, [r2, #3584]	; 0xe00
    USBD_LL_Suspend(hpcd->pData);
 8006052:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 8006056:	f7fe fc93 	bl	8004980 <USBD_LL_Suspend>
    if (hpcd->Init.low_power_enable)
 800605a:	6a23      	ldr	r3, [r4, #32]
 800605c:	2b00      	cmp	r3, #0
 800605e:	d0da      	beq.n	8006016 <HAL_PCDEx_LPM_Callback+0xa>
      SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 8006060:	4a02      	ldr	r2, [pc, #8]	; (800606c <HAL_PCDEx_LPM_Callback+0x60>)
 8006062:	6913      	ldr	r3, [r2, #16]
 8006064:	f043 0306 	orr.w	r3, r3, #6
 8006068:	6113      	str	r3, [r2, #16]
}
 800606a:	e7d4      	b.n	8006016 <HAL_PCDEx_LPM_Callback+0xa>
 800606c:	e000ed00 	.word	0xe000ed00

08006070 <USBD_Get_USB_Status>:
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
  USBD_StatusTypeDef usb_status = USBD_OK;

  switch (hal_status)
 8006070:	b118      	cbz	r0, 800607a <USBD_Get_USB_Status+0xa>
 8006072:	2802      	cmp	r0, #2
 8006074:	d003      	beq.n	800607e <USBD_Get_USB_Status+0xe>
  {
    case HAL_OK :
      usb_status = USBD_OK;
    break;
    case HAL_ERROR :
      usb_status = USBD_FAIL;
 8006076:	2003      	movs	r0, #3
    default :
      usb_status = USBD_FAIL;
    break;
  }
  return usb_status;
}
 8006078:	4770      	bx	lr
      usb_status = USBD_OK;
 800607a:	2000      	movs	r0, #0
 800607c:	4770      	bx	lr
      usb_status = USBD_BUSY;
 800607e:	2001      	movs	r0, #1
    break;
 8006080:	4770      	bx	lr

08006082 <USBD_LL_Start>:
{
 8006082:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_Start(pdev->pData);
 8006084:	f8d0 02c4 	ldr.w	r0, [r0, #708]	; 0x2c4
 8006088:	f7fc f8e6 	bl	8002258 <HAL_PCD_Start>
  usb_status =  USBD_Get_USB_Status(hal_status);     
 800608c:	f7ff fff0 	bl	8006070 <USBD_Get_USB_Status>
}
 8006090:	bd08      	pop	{r3, pc}

08006092 <USBD_LL_OpenEP>:
{
 8006092:	b510      	push	{r4, lr}
 8006094:	461c      	mov	r4, r3
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 8006096:	4613      	mov	r3, r2
 8006098:	4622      	mov	r2, r4
 800609a:	f8d0 02c4 	ldr.w	r0, [r0, #708]	; 0x2c4
 800609e:	f7fc fc1b 	bl	80028d8 <HAL_PCD_EP_Open>
  usb_status =  USBD_Get_USB_Status(hal_status);
 80060a2:	f7ff ffe5 	bl	8006070 <USBD_Get_USB_Status>
}
 80060a6:	bd10      	pop	{r4, pc}

080060a8 <USBD_LL_CloseEP>:
{
 80060a8:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 80060aa:	f8d0 02c4 	ldr.w	r0, [r0, #708]	; 0x2c4
 80060ae:	f7fc fc54 	bl	800295a <HAL_PCD_EP_Close>
  usb_status =  USBD_Get_USB_Status(hal_status);    
 80060b2:	f7ff ffdd 	bl	8006070 <USBD_Get_USB_Status>
}
 80060b6:	bd08      	pop	{r3, pc}

080060b8 <USBD_LL_StallEP>:
{
 80060b8:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 80060ba:	f8d0 02c4 	ldr.w	r0, [r0, #708]	; 0x2c4
 80060be:	f7fc fce4 	bl	8002a8a <HAL_PCD_EP_SetStall>
  usb_status =  USBD_Get_USB_Status(hal_status);
 80060c2:	f7ff ffd5 	bl	8006070 <USBD_Get_USB_Status>
}
 80060c6:	bd08      	pop	{r3, pc}

080060c8 <USBD_LL_ClearStallEP>:
{
 80060c8:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 80060ca:	f8d0 02c4 	ldr.w	r0, [r0, #708]	; 0x2c4
 80060ce:	f7fc fd1d 	bl	8002b0c <HAL_PCD_EP_ClrStall>
  usb_status =  USBD_Get_USB_Status(hal_status);  
 80060d2:	f7ff ffcd 	bl	8006070 <USBD_Get_USB_Status>
}
 80060d6:	bd08      	pop	{r3, pc}

080060d8 <USBD_LL_SetUSBAddress>:
{
 80060d8:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 80060da:	f8d0 02c4 	ldr.w	r0, [r0, #708]	; 0x2c4
 80060de:	f7fc fbe7 	bl	80028b0 <HAL_PCD_SetAddress>
  usb_status =  USBD_Get_USB_Status(hal_status);
 80060e2:	f7ff ffc5 	bl	8006070 <USBD_Get_USB_Status>
}
 80060e6:	bd08      	pop	{r3, pc}

080060e8 <USBD_LL_Transmit>:
{
 80060e8:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 80060ea:	f8d0 02c4 	ldr.w	r0, [r0, #708]	; 0x2c4
 80060ee:	f7fc fca2 	bl	8002a36 <HAL_PCD_EP_Transmit>
  usb_status =  USBD_Get_USB_Status(hal_status); 
 80060f2:	f7ff ffbd 	bl	8006070 <USBD_Get_USB_Status>
}
 80060f6:	bd08      	pop	{r3, pc}

080060f8 <USBD_LL_PrepareReceive>:
{
 80060f8:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 80060fa:	f8d0 02c4 	ldr.w	r0, [r0, #708]	; 0x2c4
 80060fe:	f7fc fc63 	bl	80029c8 <HAL_PCD_EP_Receive>
  usb_status =  USBD_Get_USB_Status(hal_status);   
 8006102:	f7ff ffb5 	bl	8006070 <USBD_Get_USB_Status>
}
 8006106:	bd08      	pop	{r3, pc}

08006108 <USBD_FS_DeviceDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_FS_DeviceDesc);
 8006108:	2312      	movs	r3, #18
 800610a:	800b      	strh	r3, [r1, #0]
  return USBD_FS_DeviceDesc;
}
 800610c:	4800      	ldr	r0, [pc, #0]	; (8006110 <USBD_FS_DeviceDescriptor+0x8>)
 800610e:	4770      	bx	lr
 8006110:	20000174 	.word	0x20000174

08006114 <USBD_FS_LangIDStrDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_LangIDDesc);
 8006114:	2304      	movs	r3, #4
 8006116:	800b      	strh	r3, [r1, #0]
  return USBD_LangIDDesc;
}
 8006118:	4800      	ldr	r0, [pc, #0]	; (800611c <USBD_FS_LangIDStrDescriptor+0x8>)
 800611a:	4770      	bx	lr
 800611c:	20000188 	.word	0x20000188

08006120 <USBD_FS_USR_BOSDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_USR_BOSDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_FS_BOSDesc);
 8006120:	230c      	movs	r3, #12
 8006122:	800b      	strh	r3, [r1, #0]
  return (uint8_t*)USBD_FS_BOSDesc;
}
 8006124:	4800      	ldr	r0, [pc, #0]	; (8006128 <USBD_FS_USR_BOSDescriptor+0x8>)
 8006126:	4770      	bx	lr
 8006128:	20000168 	.word	0x20000168

0800612c <IntToUnicode>:
  */
static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
{
  uint8_t idx = 0;

  for (idx = 0; idx < len; idx++)
 800612c:	2300      	movs	r3, #0
 800612e:	4293      	cmp	r3, r2
 8006130:	d216      	bcs.n	8006160 <IntToUnicode+0x34>
{
 8006132:	b430      	push	{r4, r5}
 8006134:	e00b      	b.n	800614e <IntToUnicode+0x22>
    {
      pbuf[2 * idx] = (value >> 28) + '0';
    }
    else
    {
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 8006136:	3437      	adds	r4, #55	; 0x37
 8006138:	f801 4013 	strb.w	r4, [r1, r3, lsl #1]
    }

    value = value << 4;
 800613c:	0100      	lsls	r0, r0, #4

    pbuf[2 * idx + 1] = 0;
 800613e:	005c      	lsls	r4, r3, #1
 8006140:	3401      	adds	r4, #1
 8006142:	2500      	movs	r5, #0
 8006144:	550d      	strb	r5, [r1, r4]
  for (idx = 0; idx < len; idx++)
 8006146:	3301      	adds	r3, #1
 8006148:	b2db      	uxtb	r3, r3
 800614a:	4293      	cmp	r3, r2
 800614c:	d206      	bcs.n	800615c <IntToUnicode+0x30>
    if (((value >> 28)) < 0xA)
 800614e:	0f04      	lsrs	r4, r0, #28
 8006150:	2c09      	cmp	r4, #9
 8006152:	d8f0      	bhi.n	8006136 <IntToUnicode+0xa>
      pbuf[2 * idx] = (value >> 28) + '0';
 8006154:	3430      	adds	r4, #48	; 0x30
 8006156:	f801 4013 	strb.w	r4, [r1, r3, lsl #1]
 800615a:	e7ef      	b.n	800613c <IntToUnicode+0x10>
  }
}
 800615c:	bc30      	pop	{r4, r5}
 800615e:	4770      	bx	lr
 8006160:	4770      	bx	lr
	...

08006164 <Get_SerialNum>:
{
 8006164:	b538      	push	{r3, r4, r5, lr}
  deviceserial0 = *(uint32_t *) DEVICE_ID1;
 8006166:	4b0a      	ldr	r3, [pc, #40]	; (8006190 <Get_SerialNum+0x2c>)
 8006168:	6818      	ldr	r0, [r3, #0]
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
 800616a:	3304      	adds	r3, #4
 800616c:	681c      	ldr	r4, [r3, #0]
  deviceserial2 = *(uint32_t *) DEVICE_ID3;
 800616e:	3304      	adds	r3, #4
 8006170:	681b      	ldr	r3, [r3, #0]
  if (deviceserial0 != 0)
 8006172:	18c0      	adds	r0, r0, r3
 8006174:	d100      	bne.n	8006178 <Get_SerialNum+0x14>
}
 8006176:	bd38      	pop	{r3, r4, r5, pc}
    IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 8006178:	4d06      	ldr	r5, [pc, #24]	; (8006194 <Get_SerialNum+0x30>)
 800617a:	2208      	movs	r2, #8
 800617c:	1ca9      	adds	r1, r5, #2
 800617e:	f7ff ffd5 	bl	800612c <IntToUnicode>
    IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 8006182:	2204      	movs	r2, #4
 8006184:	f105 0112 	add.w	r1, r5, #18
 8006188:	4620      	mov	r0, r4
 800618a:	f7ff ffcf 	bl	800612c <IntToUnicode>
}
 800618e:	e7f2      	b.n	8006176 <Get_SerialNum+0x12>
 8006190:	1ff0f420 	.word	0x1ff0f420
 8006194:	2000018c 	.word	0x2000018c

08006198 <USBD_FS_SerialStrDescriptor>:
{
 8006198:	b508      	push	{r3, lr}
  *length = USB_SIZ_STRING_SERIAL;
 800619a:	231a      	movs	r3, #26
 800619c:	800b      	strh	r3, [r1, #0]
  Get_SerialNum();
 800619e:	f7ff ffe1 	bl	8006164 <Get_SerialNum>
}
 80061a2:	4801      	ldr	r0, [pc, #4]	; (80061a8 <USBD_FS_SerialStrDescriptor+0x10>)
 80061a4:	bd08      	pop	{r3, pc}
 80061a6:	bf00      	nop
 80061a8:	2000018c 	.word	0x2000018c

080061ac <USBD_FS_ProductStrDescriptor>:
{
 80061ac:	b508      	push	{r3, lr}
 80061ae:	460a      	mov	r2, r1
  if(speed == 0)
 80061b0:	b128      	cbz	r0, 80061be <USBD_FS_ProductStrDescriptor+0x12>
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 80061b2:	4905      	ldr	r1, [pc, #20]	; (80061c8 <USBD_FS_ProductStrDescriptor+0x1c>)
 80061b4:	4805      	ldr	r0, [pc, #20]	; (80061cc <USBD_FS_ProductStrDescriptor+0x20>)
 80061b6:	f7fe ff7f 	bl	80050b8 <USBD_GetString>
}
 80061ba:	4803      	ldr	r0, [pc, #12]	; (80061c8 <USBD_FS_ProductStrDescriptor+0x1c>)
 80061bc:	bd08      	pop	{r3, pc}
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 80061be:	4902      	ldr	r1, [pc, #8]	; (80061c8 <USBD_FS_ProductStrDescriptor+0x1c>)
 80061c0:	4802      	ldr	r0, [pc, #8]	; (80061cc <USBD_FS_ProductStrDescriptor+0x20>)
 80061c2:	f7fe ff79 	bl	80050b8 <USBD_GetString>
 80061c6:	e7f8      	b.n	80061ba <USBD_FS_ProductStrDescriptor+0xe>
 80061c8:	2001b7b0 	.word	0x2001b7b0
 80061cc:	08015e58 	.word	0x08015e58

080061d0 <USBD_FS_ManufacturerStrDescriptor>:
{
 80061d0:	b510      	push	{r4, lr}
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 80061d2:	4c04      	ldr	r4, [pc, #16]	; (80061e4 <USBD_FS_ManufacturerStrDescriptor+0x14>)
 80061d4:	460a      	mov	r2, r1
 80061d6:	4621      	mov	r1, r4
 80061d8:	4803      	ldr	r0, [pc, #12]	; (80061e8 <USBD_FS_ManufacturerStrDescriptor+0x18>)
 80061da:	f7fe ff6d 	bl	80050b8 <USBD_GetString>
}
 80061de:	4620      	mov	r0, r4
 80061e0:	bd10      	pop	{r4, pc}
 80061e2:	bf00      	nop
 80061e4:	2001b7b0 	.word	0x2001b7b0
 80061e8:	08015e44 	.word	0x08015e44

080061ec <USBD_FS_ConfigStrDescriptor>:
{
 80061ec:	b508      	push	{r3, lr}
 80061ee:	460a      	mov	r2, r1
  if(speed == USBD_SPEED_HIGH)
 80061f0:	b128      	cbz	r0, 80061fe <USBD_FS_ConfigStrDescriptor+0x12>
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 80061f2:	4905      	ldr	r1, [pc, #20]	; (8006208 <USBD_FS_ConfigStrDescriptor+0x1c>)
 80061f4:	4805      	ldr	r0, [pc, #20]	; (800620c <USBD_FS_ConfigStrDescriptor+0x20>)
 80061f6:	f7fe ff5f 	bl	80050b8 <USBD_GetString>
}
 80061fa:	4803      	ldr	r0, [pc, #12]	; (8006208 <USBD_FS_ConfigStrDescriptor+0x1c>)
 80061fc:	bd08      	pop	{r3, pc}
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 80061fe:	4902      	ldr	r1, [pc, #8]	; (8006208 <USBD_FS_ConfigStrDescriptor+0x1c>)
 8006200:	4802      	ldr	r0, [pc, #8]	; (800620c <USBD_FS_ConfigStrDescriptor+0x20>)
 8006202:	f7fe ff59 	bl	80050b8 <USBD_GetString>
 8006206:	e7f8      	b.n	80061fa <USBD_FS_ConfigStrDescriptor+0xe>
 8006208:	2001b7b0 	.word	0x2001b7b0
 800620c:	08015e28 	.word	0x08015e28

08006210 <USBD_FS_InterfaceStrDescriptor>:
{
 8006210:	b508      	push	{r3, lr}
 8006212:	460a      	mov	r2, r1
  if(speed == 0)
 8006214:	b128      	cbz	r0, 8006222 <USBD_FS_InterfaceStrDescriptor+0x12>
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 8006216:	4905      	ldr	r1, [pc, #20]	; (800622c <USBD_FS_InterfaceStrDescriptor+0x1c>)
 8006218:	4805      	ldr	r0, [pc, #20]	; (8006230 <USBD_FS_InterfaceStrDescriptor+0x20>)
 800621a:	f7fe ff4d 	bl	80050b8 <USBD_GetString>
}
 800621e:	4803      	ldr	r0, [pc, #12]	; (800622c <USBD_FS_InterfaceStrDescriptor+0x1c>)
 8006220:	bd08      	pop	{r3, pc}
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 8006222:	4902      	ldr	r1, [pc, #8]	; (800622c <USBD_FS_InterfaceStrDescriptor+0x1c>)
 8006224:	4802      	ldr	r0, [pc, #8]	; (8006230 <USBD_FS_InterfaceStrDescriptor+0x20>)
 8006226:	f7fe ff47 	bl	80050b8 <USBD_GetString>
 800622a:	e7f8      	b.n	800621e <USBD_FS_InterfaceStrDescriptor+0xe>
 800622c:	2001b7b0 	.word	0x2001b7b0
 8006230:	08015e34 	.word	0x08015e34

08006234 <_cbDialog>:

/*********************************************************************
*
*       _cbDialog
*/
static void _cbDialog(WM_MESSAGE * pMsg) {
 8006234:	b510      	push	{r4, lr}
 8006236:	4604      	mov	r4, r0
  int NCode;
  int Id;
  // USER START (Optionally insert additional variables)
  // USER END

  switch (pMsg->MsgId) {
 8006238:	6803      	ldr	r3, [r0, #0]
 800623a:	2b26      	cmp	r3, #38	; 0x26
 800623c:	d131      	bne.n	80062a2 <_cbDialog+0x6e>
  case WM_NOTIFY_PARENT:
    Id    = WM_GetId(pMsg->hWinSrc);
 800623e:	6880      	ldr	r0, [r0, #8]
 8006240:	f002 fa56 	bl	80086f0 <WM_GetId>
    NCode = pMsg->Data.v;
 8006244:	68e3      	ldr	r3, [r4, #12]
    switch(Id) {
 8006246:	f6a0 0006 	subw	r0, r0, #2054	; 0x806
 800624a:	2808      	cmp	r0, #8
 800624c:	d82b      	bhi.n	80062a6 <_cbDialog+0x72>
 800624e:	e8df f000 	tbb	[pc, r0]
 8006252:	0a05      	.short	0x0a05
 8006254:	2a140f2a 	.word	0x2a140f2a
 8006258:	1e19      	.short	0x1e19
 800625a:	23          	.byte	0x23
 800625b:	00          	.byte	0x00
      // USER START (Optionally insert additional code for further notification handling)
      // USER END
      }
      break;
    case ID_SLIDER_0: // Notifications sent by 'Slider'
      switch(NCode) {
 800625c:	2b05      	cmp	r3, #5
 800625e:	d122      	bne.n	80062a6 <_cbDialog+0x72>
        // USER START (Optionally insert code for reacting on notification message)
        // USER END
        break;
      case WM_NOTIFICATION_VALUE_CHANGED:
        // USER START (Optionally insert code for reacting on notification message)
        RefPressureSliderChanged();
 8006260:	f7ff fb00 	bl	8005864 <RefPressureSliderChanged>
        // USER END
        break;
 8006264:	e01f      	b.n	80062a6 <_cbDialog+0x72>
      // USER START (Optionally insert additional code for further notification handling)
      // USER END
      }
      break;
    case ID_SLIDER_1: // Notifications sent by 'Slider'
      switch(NCode) {
 8006266:	2b05      	cmp	r3, #5
 8006268:	d11d      	bne.n	80062a6 <_cbDialog+0x72>
        // USER START (Optionally insert code for reacting on notification message)
        // USER END
        break;
      case WM_NOTIFICATION_VALUE_CHANGED:
        // USER START (Optionally insert code for reacting on notification message)
        MesRateCliderChanged();
 800626a:	f7ff fb23 	bl	80058b4 <MesRateCliderChanged>
        // USER END
        break;
 800626e:	e01a      	b.n	80062a6 <_cbDialog+0x72>
      // USER START (Optionally insert additional code for further notification handling)
      // USER END
      }
      break;
    case ID_BUTTON_1: // Notifications sent by 'Set'
      switch(NCode) {
 8006270:	2b01      	cmp	r3, #1
 8006272:	d118      	bne.n	80062a6 <_cbDialog+0x72>
      case WM_NOTIFICATION_CLICKED:
        // USER START (Optionally insert code for reacting on notification message)
        RefPressureSetButton();
 8006274:	f7ff fb44 	bl	8005900 <RefPressureSetButton>
        // USER END
        break;
 8006278:	e015      	b.n	80062a6 <_cbDialog+0x72>
      // USER START (Optionally insert additional code for further notification handling)
      // USER END
      }
      break;
    case ID_BUTTON_2: // Notifications sent by 'Set'
      switch(NCode) {
 800627a:	2b01      	cmp	r3, #1
 800627c:	d113      	bne.n	80062a6 <_cbDialog+0x72>
      case WM_NOTIFICATION_CLICKED:
        // USER START (Optionally insert code for reacting on notification message)
        MesRateSetButton();
 800627e:	f7ff fb53 	bl	8005928 <MesRateSetButton>
        // USER END
        break;
 8006282:	e010      	b.n	80062a6 <_cbDialog+0x72>
      // USER START (Optionally insert additional code for further notification handling)
      // USER END
      }
      break;
    case ID_BUTTON_3: // Notifications sent by 'Start'
      switch(NCode) {
 8006284:	2b01      	cmp	r3, #1
 8006286:	d10e      	bne.n	80062a6 <_cbDialog+0x72>
      case WM_NOTIFICATION_CLICKED:
        // USER START (Optionally insert code for reacting on notification message)
        StartMesButton();
 8006288:	f7ff fb6a 	bl	8005960 <StartMesButton>
        // USER END
        break;
 800628c:	e00b      	b.n	80062a6 <_cbDialog+0x72>
      // USER START (Optionally insert additional code for further notification handling)
      // USER END
      }
      break;
    case ID_BUTTON_4: // Notifications sent by 'Stop'
      switch(NCode) {
 800628e:	2b01      	cmp	r3, #1
 8006290:	d109      	bne.n	80062a6 <_cbDialog+0x72>
      case WM_NOTIFICATION_CLICKED:
        // USER START (Optionally insert code for reacting on notification message)
        StopMesButton();
 8006292:	f7ff fb77 	bl	8005984 <StopMesButton>
        // USER END
        break;
 8006296:	e006      	b.n	80062a6 <_cbDialog+0x72>
      // USER START (Optionally insert additional code for further notification handling)
      // USER END
      }
      break;
    case ID_BUTTON_5: // Notifications sent by 'Clear'
      switch(NCode) {
 8006298:	2b01      	cmp	r3, #1
 800629a:	d104      	bne.n	80062a6 <_cbDialog+0x72>
      case WM_NOTIFICATION_CLICKED:
        // USER START (Optionally insert code for reacting on notification message)
        ClearGraphButton();
 800629c:	f7ff fb80 	bl	80059a0 <ClearGraphButton>
        // USER END
        break;
 80062a0:	e001      	b.n	80062a6 <_cbDialog+0x72>
    }
    break;
  // USER START (Optionally insert additional message handling)
  // USER END
  default:
    WM_DefaultProc(pMsg);
 80062a2:	f003 fbc5 	bl	8009a30 <WM_DefaultProc>
    break;
  }
}
 80062a6:	bd10      	pop	{r4, pc}

080062a8 <CreateWindow>:
/*********************************************************************
*
*       CreateWindow
*/

WM_HWIN CreateWindow(void) {
 80062a8:	b500      	push	{lr}
 80062aa:	b083      	sub	sp, #12
  WM_HWIN hWin;

  hWin = GUI_CreateDialogBox(_aDialogCreate, GUI_COUNTOF(_aDialogCreate), _cbDialog, WM_HBKWIN, 0, 0);
 80062ac:	f002 fa6a 	bl	8008784 <WM_GetDesktopWindow>
 80062b0:	2300      	movs	r3, #0
 80062b2:	9301      	str	r3, [sp, #4]
 80062b4:	9300      	str	r3, [sp, #0]
 80062b6:	4603      	mov	r3, r0
 80062b8:	4a03      	ldr	r2, [pc, #12]	; (80062c8 <CreateWindow+0x20>)
 80062ba:	2113      	movs	r1, #19
 80062bc:	4803      	ldr	r0, [pc, #12]	; (80062cc <CreateWindow+0x24>)
 80062be:	f001 fc20 	bl	8007b02 <GUI_CreateDialogBox>
  return hWin;
}
 80062c2:	b003      	add	sp, #12
 80062c4:	f85d fb04 	ldr.w	pc, [sp], #4
 80062c8:	08006235 	.word	0x08006235
 80062cc:	08015e70 	.word	0x08015e70

080062d0 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 80062d0:	f8df d034 	ldr.w	sp, [pc, #52]	; 8006308 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80062d4:	480d      	ldr	r0, [pc, #52]	; (800630c <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 80062d6:	490e      	ldr	r1, [pc, #56]	; (8006310 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 80062d8:	4a0e      	ldr	r2, [pc, #56]	; (8006314 <LoopFillZerobss+0x1e>)
  movs r3, #0
 80062da:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80062dc:	e002      	b.n	80062e4 <LoopCopyDataInit>

080062de <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80062de:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80062e0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80062e2:	3304      	adds	r3, #4

080062e4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80062e4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80062e6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80062e8:	d3f9      	bcc.n	80062de <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80062ea:	4a0b      	ldr	r2, [pc, #44]	; (8006318 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 80062ec:	4c0b      	ldr	r4, [pc, #44]	; (800631c <LoopFillZerobss+0x26>)
  movs r3, #0
 80062ee:	2300      	movs	r3, #0
  b LoopFillZerobss
 80062f0:	e001      	b.n	80062f6 <LoopFillZerobss>

080062f2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80062f2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80062f4:	3204      	adds	r2, #4

080062f6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80062f6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80062f8:	d3fb      	bcc.n	80062f2 <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 80062fa:	f7ff fd1f 	bl	8005d3c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80062fe:	f00e ff7b 	bl	80151f8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8006302:	f7ff fbbf 	bl	8005a84 <main>
  bx  lr    
 8006306:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8006308:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 800630c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8006310:	20000464 	.word	0x20000464
  ldr r2, =_sidata
 8006314:	08017eb8 	.word	0x08017eb8
  ldr r2, =_sbss
 8006318:	20000468 	.word	0x20000468
  ldr r4, =_ebss
 800631c:	2001bb3c 	.word	0x2001bb3c

08006320 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8006320:	e7fe      	b.n	8006320 <ADC_IRQHandler>

08006322 <WINDOW_Callback>:
 8006322:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006326:	6845      	ldr	r5, [r0, #4]
 8006328:	4604      	mov	r4, r0
 800632a:	4628      	mov	r0, r5
 800632c:	f009 f89e 	bl	800f46c <GUI_ALLOC_LockH>
 8006330:	af02      	add	r7, sp, #8
 8006332:	6b86      	ldr	r6, [r0, #56]	; 0x38
 8006334:	f847 0d08 	str.w	r0, [r7, #-8]!
 8006338:	f8d0 9034 	ldr.w	r9, [r0, #52]	; 0x34
 800633c:	f8d0 8040 	ldr.w	r8, [r0, #64]	; 0x40
 8006340:	4668      	mov	r0, sp
 8006342:	f009 f8a1 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006346:	6823      	ldr	r3, [r4, #0]
 8006348:	2b1f      	cmp	r3, #31
 800634a:	d02f      	beq.n	80063ac <WINDOW_Callback+0x8a>
 800634c:	dc06      	bgt.n	800635c <WINDOW_Callback+0x3a>
 800634e:	2b0f      	cmp	r3, #15
 8006350:	d060      	beq.n	8006414 <WINDOW_Callback+0xf2>
 8006352:	2b1e      	cmp	r3, #30
 8006354:	d015      	beq.n	8006382 <WINDOW_Callback+0x60>
 8006356:	2b0e      	cmp	r3, #14
 8006358:	d169      	bne.n	800642e <WINDOW_Callback+0x10c>
 800635a:	e04a      	b.n	80063f2 <WINDOW_Callback+0xd0>
 800635c:	2b22      	cmp	r3, #34	; 0x22
 800635e:	d063      	beq.n	8006428 <WINDOW_Callback+0x106>
 8006360:	2b2a      	cmp	r3, #42	; 0x2a
 8006362:	d002      	beq.n	800636a <WINDOW_Callback+0x48>
 8006364:	2b20      	cmp	r3, #32
 8006366:	d162      	bne.n	800642e <WINDOW_Callback+0x10c>
 8006368:	e025      	b.n	80063b6 <WINDOW_Callback+0x94>
 800636a:	4628      	mov	r0, r5
 800636c:	f009 f87e 	bl	800f46c <GUI_ALLOC_LockH>
 8006370:	68e3      	ldr	r3, [r4, #12]
 8006372:	9000      	str	r0, [sp, #0]
 8006374:	b10b      	cbz	r3, 800637a <WINDOW_Callback+0x58>
 8006376:	63c3      	str	r3, [r0, #60]	; 0x3c
 8006378:	e001      	b.n	800637e <WINDOW_Callback+0x5c>
 800637a:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800637c:	60e3      	str	r3, [r4, #12]
 800637e:	4668      	mov	r0, sp
 8006380:	e034      	b.n	80063ec <WINDOW_Callback+0xca>
 8006382:	68e4      	ldr	r4, [r4, #12]
 8006384:	2c01      	cmp	r4, #1
 8006386:	d15b      	bne.n	8006440 <WINDOW_Callback+0x11e>
 8006388:	4630      	mov	r0, r6
 800638a:	f002 f894 	bl	80084b6 <WM_IsWindow>
 800638e:	2800      	cmp	r0, #0
 8006390:	d03c      	beq.n	800640c <WINDOW_Callback+0xea>
 8006392:	4630      	mov	r0, r6
 8006394:	f001 fef8 	bl	8008188 <WM_SetFocus>
 8006398:	4630      	mov	r0, r6
 800639a:	f002 f8bd 	bl	8008518 <WM_HasFocus>
 800639e:	2800      	cmp	r0, #0
 80063a0:	d04e      	beq.n	8006440 <WINDOW_Callback+0x11e>
 80063a2:	4630      	mov	r0, r6
 80063a4:	4621      	mov	r1, r4
 80063a6:	f000 f928 	bl	80065fa <WIDGET_OrState>
 80063aa:	e049      	b.n	8006440 <WINDOW_Callback+0x11e>
 80063ac:	4628      	mov	r0, r5
 80063ae:	4621      	mov	r1, r4
 80063b0:	f000 f956 	bl	8006660 <WIDGET_HandleActive>
 80063b4:	e044      	b.n	8006440 <WINDOW_Callback+0x11e>
 80063b6:	4628      	mov	r0, r5
 80063b8:	f009 f858 	bl	800f46c <GUI_ALLOC_LockH>
 80063bc:	68e4      	ldr	r4, [r4, #12]
 80063be:	9001      	str	r0, [sp, #4]
 80063c0:	b19c      	cbz	r4, 80063ea <WINDOW_Callback+0xc8>
 80063c2:	6860      	ldr	r0, [r4, #4]
 80063c4:	4629      	mov	r1, r5
 80063c6:	f001 fdcc 	bl	8007f62 <WM__IsAncestorOrSelf>
 80063ca:	b930      	cbnz	r0, 80063da <WINDOW_Callback+0xb8>
 80063cc:	6820      	ldr	r0, [r4, #0]
 80063ce:	4629      	mov	r1, r5
 80063d0:	f001 fdb6 	bl	8007f40 <WM__IsAncestor>
 80063d4:	b148      	cbz	r0, 80063ea <WINDOW_Callback+0xc8>
 80063d6:	6822      	ldr	r2, [r4, #0]
 80063d8:	e005      	b.n	80063e6 <WINDOW_Callback+0xc4>
 80063da:	6860      	ldr	r0, [r4, #4]
 80063dc:	4629      	mov	r1, r5
 80063de:	f001 fdaf 	bl	8007f40 <WM__IsAncestor>
 80063e2:	b110      	cbz	r0, 80063ea <WINDOW_Callback+0xc8>
 80063e4:	6862      	ldr	r2, [r4, #4]
 80063e6:	9b01      	ldr	r3, [sp, #4]
 80063e8:	639a      	str	r2, [r3, #56]	; 0x38
 80063ea:	a801      	add	r0, sp, #4
 80063ec:	f009 f84c 	bl	800f488 <GUI_ALLOC_UnlockH>
 80063f0:	e026      	b.n	8006440 <WINDOW_Callback+0x11e>
 80063f2:	68e3      	ldr	r3, [r4, #12]
 80063f4:	685a      	ldr	r2, [r3, #4]
 80063f6:	2a00      	cmp	r2, #0
 80063f8:	dd19      	ble.n	800642e <WINDOW_Callback+0x10c>
 80063fa:	681b      	ldr	r3, [r3, #0]
 80063fc:	2b09      	cmp	r3, #9
 80063fe:	d005      	beq.n	800640c <WINDOW_Callback+0xea>
 8006400:	2b0a      	cmp	r3, #10
 8006402:	d114      	bne.n	800642e <WINDOW_Callback+0x10c>
 8006404:	4628      	mov	r0, r5
 8006406:	f001 fe5e 	bl	80080c6 <WM_SetFocusOnPrevChild>
 800640a:	e019      	b.n	8006440 <WINDOW_Callback+0x11e>
 800640c:	4628      	mov	r0, r5
 800640e:	f001 fe89 	bl	8008124 <WM_SetFocusOnNextChild>
 8006412:	e015      	b.n	8006440 <WINDOW_Callback+0x11e>
 8006414:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8006418:	4598      	cmp	r8, r3
 800641a:	d008      	beq.n	800642e <WINDOW_Callback+0x10c>
 800641c:	4640      	mov	r0, r8
 800641e:	f006 f9b3 	bl	800c788 <LCD_SetBkColor>
 8006422:	f008 fbf3 	bl	800ec0c <GUI_Clear>
 8006426:	e002      	b.n	800642e <WINDOW_Callback+0x10c>
 8006428:	f8c4 800c 	str.w	r8, [r4, #12]
 800642c:	e008      	b.n	8006440 <WINDOW_Callback+0x11e>
 800642e:	f1b9 0f00 	cmp.w	r9, #0
 8006432:	d002      	beq.n	800643a <WINDOW_Callback+0x118>
 8006434:	4620      	mov	r0, r4
 8006436:	47c8      	blx	r9
 8006438:	e002      	b.n	8006440 <WINDOW_Callback+0x11e>
 800643a:	4620      	mov	r0, r4
 800643c:	f003 faf8 	bl	8009a30 <WM_DefaultProc>
 8006440:	b003      	add	sp, #12
 8006442:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08006448 <WINDOW_CreateUser>:
 8006448:	b510      	push	{r4, lr}
 800644a:	b086      	sub	sp, #24
 800644c:	9c08      	ldr	r4, [sp, #32]
 800644e:	9400      	str	r4, [sp, #0]
 8006450:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8006452:	9401      	str	r4, [sp, #4]
 8006454:	4c0f      	ldr	r4, [pc, #60]	; (8006494 <WINDOW_CreateUser+0x4c>)
 8006456:	9402      	str	r4, [sp, #8]
 8006458:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800645a:	3418      	adds	r4, #24
 800645c:	9403      	str	r4, [sp, #12]
 800645e:	f002 fef7 	bl	8009250 <WM_CreateWindowAsChild>
 8006462:	4604      	mov	r4, r0
 8006464:	b190      	cbz	r0, 800648c <WINDOW_CreateUser+0x44>
 8006466:	f009 f801 	bl	800f46c <GUI_ALLOC_LockH>
 800646a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800646c:	9005      	str	r0, [sp, #20]
 800646e:	2210      	movs	r2, #16
 8006470:	f000 f8ee 	bl	8006650 <WIDGET__Init>
 8006474:	a806      	add	r0, sp, #24
 8006476:	990c      	ldr	r1, [sp, #48]	; 0x30
 8006478:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 800647c:	6351      	str	r1, [r2, #52]	; 0x34
 800647e:	2100      	movs	r1, #0
 8006480:	6391      	str	r1, [r2, #56]	; 0x38
 8006482:	4905      	ldr	r1, [pc, #20]	; (8006498 <WINDOW_CreateUser+0x50>)
 8006484:	6809      	ldr	r1, [r1, #0]
 8006486:	6411      	str	r1, [r2, #64]	; 0x40
 8006488:	f008 fffe 	bl	800f488 <GUI_ALLOC_UnlockH>
 800648c:	4620      	mov	r0, r4
 800648e:	b006      	add	sp, #24
 8006490:	bd10      	pop	{r4, pc}
 8006492:	bf00      	nop
 8006494:	08006323 	.word	0x08006323
 8006498:	200001a8 	.word	0x200001a8

0800649c <WINDOW_CreateIndirect>:
 800649c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800649e:	b087      	sub	sp, #28
 80064a0:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 80064a4:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 80064a8:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 80064ac:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 80064b0:	9100      	str	r1, [sp, #0]
 80064b2:	8a41      	ldrh	r1, [r0, #18]
 80064b4:	9101      	str	r1, [sp, #4]
 80064b6:	2100      	movs	r1, #0
 80064b8:	9102      	str	r1, [sp, #8]
 80064ba:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80064be:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80064c0:	9103      	str	r1, [sp, #12]
 80064c2:	9404      	str	r4, [sp, #16]
 80064c4:	6984      	ldr	r4, [r0, #24]
 80064c6:	9405      	str	r4, [sp, #20]
 80064c8:	eb0e 0002 	add.w	r0, lr, r2
 80064cc:	18f9      	adds	r1, r7, r3
 80064ce:	4632      	mov	r2, r6
 80064d0:	462b      	mov	r3, r5
 80064d2:	f7ff ffb9 	bl	8006448 <WINDOW_CreateUser>
 80064d6:	b007      	add	sp, #28
 80064d8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080064da <_EffectRequiresRedraw>:
 80064da:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80064dc:	460d      	mov	r5, r1
 80064de:	f100 0108 	add.w	r1, r0, #8
 80064e2:	4602      	mov	r2, r0
 80064e4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80064e6:	c903      	ldmia	r1, {r0, r1}
 80064e8:	681c      	ldr	r4, [r3, #0]
 80064ea:	e88d 0003 	stmia.w	sp, {r0, r1}
 80064ee:	4610      	mov	r0, r2
 80064f0:	4669      	mov	r1, sp
 80064f2:	f001 fd1c 	bl	8007f2e <WM__Screen2Client>
 80064f6:	f9b5 2000 	ldrsh.w	r2, [r5]
 80064fa:	f9bd 3000 	ldrsh.w	r3, [sp]
 80064fe:	4422      	add	r2, r4
 8006500:	429a      	cmp	r2, r3
 8006502:	dc17      	bgt.n	8006534 <_EffectRequiresRedraw+0x5a>
 8006504:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8006508:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800650c:	1b12      	subs	r2, r2, r4
 800650e:	429a      	cmp	r2, r3
 8006510:	db10      	blt.n	8006534 <_EffectRequiresRedraw+0x5a>
 8006512:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8006516:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800651a:	4422      	add	r2, r4
 800651c:	429a      	cmp	r2, r3
 800651e:	dc09      	bgt.n	8006534 <_EffectRequiresRedraw+0x5a>
 8006520:	f9b5 0006 	ldrsh.w	r0, [r5, #6]
 8006524:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8006528:	1b04      	subs	r4, r0, r4
 800652a:	429c      	cmp	r4, r3
 800652c:	bfac      	ite	ge
 800652e:	2000      	movge	r0, #0
 8006530:	2001      	movlt	r0, #1
 8006532:	e000      	b.n	8006536 <_EffectRequiresRedraw+0x5c>
 8006534:	2001      	movs	r0, #1
 8006536:	b003      	add	sp, #12
 8006538:	bd30      	pop	{r4, r5, pc}

0800653a <WIDGET__RotateRect90>:
 800653a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800653e:	b570      	push	{r4, r5, r6, lr}
 8006540:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 8006544:	8815      	ldrh	r5, [r2, #0]
 8006546:	88d0      	ldrh	r0, [r2, #6]
 8006548:	8894      	ldrh	r4, [r2, #4]
 800654a:	8852      	ldrh	r2, [r2, #2]
 800654c:	804d      	strh	r5, [r1, #2]
 800654e:	1af3      	subs	r3, r6, r3
 8006550:	b29b      	uxth	r3, r3
 8006552:	1a18      	subs	r0, r3, r0
 8006554:	1a9b      	subs	r3, r3, r2
 8006556:	8008      	strh	r0, [r1, #0]
 8006558:	808b      	strh	r3, [r1, #4]
 800655a:	80cc      	strh	r4, [r1, #6]
 800655c:	bd70      	pop	{r4, r5, r6, pc}

0800655e <WIDGET__GetClientRect>:
 800655e:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8006560:	071b      	lsls	r3, r3, #28
 8006562:	b513      	push	{r0, r1, r4, lr}
 8006564:	460c      	mov	r4, r1
 8006566:	d50f      	bpl.n	8006588 <WIDGET__GetClientRect+0x2a>
 8006568:	4668      	mov	r0, sp
 800656a:	f002 f939 	bl	80087e0 <WM_GetClientRect>
 800656e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8006572:	8023      	strh	r3, [r4, #0]
 8006574:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8006578:	80a3      	strh	r3, [r4, #4]
 800657a:	f8bd 3000 	ldrh.w	r3, [sp]
 800657e:	8063      	strh	r3, [r4, #2]
 8006580:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8006584:	80e3      	strh	r3, [r4, #6]
 8006586:	e002      	b.n	800658e <WIDGET__GetClientRect+0x30>
 8006588:	4608      	mov	r0, r1
 800658a:	f002 f929 	bl	80087e0 <WM_GetClientRect>
 800658e:	b002      	add	sp, #8
 8006590:	bd10      	pop	{r4, pc}

08006592 <WIDGET__GetInsideRect>:
 8006592:	b538      	push	{r3, r4, r5, lr}
 8006594:	4604      	mov	r4, r0
 8006596:	460d      	mov	r5, r1
 8006598:	f002 fdd1 	bl	800913e <WM__GetClientRectWin>
 800659c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800659e:	4628      	mov	r0, r5
 80065a0:	4629      	mov	r1, r5
 80065a2:	681a      	ldr	r2, [r3, #0]
 80065a4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80065a8:	f006 b991 	b.w	800c8ce <GUI__ReduceRect>

080065ac <WIDGET__GetWindowSizeX>:
 80065ac:	b513      	push	{r0, r1, r4, lr}
 80065ae:	4604      	mov	r4, r0
 80065b0:	f008 ff5c 	bl	800f46c <GUI_ALLOC_LockH>
 80065b4:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 80065b6:	9001      	str	r0, [sp, #4]
 80065b8:	071b      	lsls	r3, r3, #28
 80065ba:	4620      	mov	r0, r4
 80065bc:	d502      	bpl.n	80065c4 <WIDGET__GetWindowSizeX+0x18>
 80065be:	f001 ffce 	bl	800855e <WM_GetWindowSizeY>
 80065c2:	e001      	b.n	80065c8 <WIDGET__GetWindowSizeX+0x1c>
 80065c4:	f001 ffb6 	bl	8008534 <WM_GetWindowSizeX>
 80065c8:	4604      	mov	r4, r0
 80065ca:	a801      	add	r0, sp, #4
 80065cc:	f008 ff5c 	bl	800f488 <GUI_ALLOC_UnlockH>
 80065d0:	4620      	mov	r0, r4
 80065d2:	b002      	add	sp, #8
 80065d4:	bd10      	pop	{r4, pc}

080065d6 <WIDGET_SetState>:
 80065d6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80065d8:	460c      	mov	r4, r1
 80065da:	4605      	mov	r5, r0
 80065dc:	f008 ff46 	bl	800f46c <GUI_ALLOC_LockH>
 80065e0:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 80065e2:	9001      	str	r0, [sp, #4]
 80065e4:	4294      	cmp	r4, r2
 80065e6:	d003      	beq.n	80065f0 <WIDGET_SetState+0x1a>
 80065e8:	8644      	strh	r4, [r0, #50]	; 0x32
 80065ea:	4628      	mov	r0, r5
 80065ec:	f002 fdef 	bl	80091ce <WM_InvalidateWindow>
 80065f0:	a801      	add	r0, sp, #4
 80065f2:	f008 ff49 	bl	800f488 <GUI_ALLOC_UnlockH>
 80065f6:	b003      	add	sp, #12
 80065f8:	bd30      	pop	{r4, r5, pc}

080065fa <WIDGET_OrState>:
 80065fa:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80065fc:	460c      	mov	r4, r1
 80065fe:	4605      	mov	r5, r0
 8006600:	b178      	cbz	r0, 8006622 <WIDGET_OrState+0x28>
 8006602:	f008 ff33 	bl	800f46c <GUI_ALLOC_LockH>
 8006606:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8006608:	9001      	str	r0, [sp, #4]
 800660a:	ea04 0102 	and.w	r1, r4, r2
 800660e:	428c      	cmp	r4, r1
 8006610:	d004      	beq.n	800661c <WIDGET_OrState+0x22>
 8006612:	4314      	orrs	r4, r2
 8006614:	8644      	strh	r4, [r0, #50]	; 0x32
 8006616:	4628      	mov	r0, r5
 8006618:	f002 fdd9 	bl	80091ce <WM_InvalidateWindow>
 800661c:	a801      	add	r0, sp, #4
 800661e:	f008 ff33 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006622:	b003      	add	sp, #12
 8006624:	bd30      	pop	{r4, r5, pc}

08006626 <WIDGET_AndState>:
 8006626:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006628:	460d      	mov	r5, r1
 800662a:	4604      	mov	r4, r0
 800662c:	b170      	cbz	r0, 800664c <WIDGET_AndState+0x26>
 800662e:	f008 ff1d 	bl	800f46c <GUI_ALLOC_LockH>
 8006632:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8006634:	9001      	str	r0, [sp, #4]
 8006636:	ea22 0105 	bic.w	r1, r2, r5
 800663a:	428a      	cmp	r2, r1
 800663c:	d003      	beq.n	8006646 <WIDGET_AndState+0x20>
 800663e:	8641      	strh	r1, [r0, #50]	; 0x32
 8006640:	4620      	mov	r0, r4
 8006642:	f002 fdc4 	bl	80091ce <WM_InvalidateWindow>
 8006646:	a801      	add	r0, sp, #4
 8006648:	f008 ff1e 	bl	800f488 <GUI_ALLOC_UnlockH>
 800664c:	b003      	add	sp, #12
 800664e:	bd30      	pop	{r4, r5, pc}

08006650 <WIDGET__Init>:
 8006650:	4b02      	ldr	r3, [pc, #8]	; (800665c <WIDGET__Init+0xc>)
 8006652:	8642      	strh	r2, [r0, #50]	; 0x32
 8006654:	681b      	ldr	r3, [r3, #0]
 8006656:	62c3      	str	r3, [r0, #44]	; 0x2c
 8006658:	8601      	strh	r1, [r0, #48]	; 0x30
 800665a:	4770      	bx	lr
 800665c:	200001ac 	.word	0x200001ac

08006660 <WIDGET_HandleActive>:
 8006660:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006662:	460d      	mov	r5, r1
 8006664:	b085      	sub	sp, #20
 8006666:	4606      	mov	r6, r0
 8006668:	2800      	cmp	r0, #0
 800666a:	f000 8093 	beq.w	8006794 <WIDGET_HandleActive+0x134>
 800666e:	f008 fefd 	bl	800f46c <GUI_ALLOC_LockH>
 8006672:	682b      	ldr	r3, [r5, #0]
 8006674:	9002      	str	r0, [sp, #8]
 8006676:	2b16      	cmp	r3, #22
 8006678:	d052      	beq.n	8006720 <WIDGET_HandleActive+0xc0>
 800667a:	dc0c      	bgt.n	8006696 <WIDGET_HandleActive+0x36>
 800667c:	2b11      	cmp	r3, #17
 800667e:	d033      	beq.n	80066e8 <WIDGET_HandleActive+0x88>
 8006680:	dc02      	bgt.n	8006688 <WIDGET_HandleActive+0x28>
 8006682:	2b0d      	cmp	r3, #13
 8006684:	d03e      	beq.n	8006704 <WIDGET_HandleActive+0xa4>
 8006686:	e07e      	b.n	8006786 <WIDGET_HandleActive+0x126>
 8006688:	2b14      	cmp	r3, #20
 800668a:	d077      	beq.n	800677c <WIDGET_HandleActive+0x11c>
 800668c:	2b15      	cmp	r3, #21
 800668e:	d17a      	bne.n	8006786 <WIDGET_HandleActive+0x126>
 8006690:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 8006694:	e070      	b.n	8006778 <WIDGET_HandleActive+0x118>
 8006696:	2b1f      	cmp	r3, #31
 8006698:	d06b      	beq.n	8006772 <WIDGET_HandleActive+0x112>
 800669a:	dc02      	bgt.n	80066a2 <WIDGET_HandleActive+0x42>
 800669c:	2b1e      	cmp	r3, #30
 800669e:	d042      	beq.n	8006726 <WIDGET_HandleActive+0xc6>
 80066a0:	e071      	b.n	8006786 <WIDGET_HandleActive+0x126>
 80066a2:	2b31      	cmp	r3, #49	; 0x31
 80066a4:	d01e      	beq.n	80066e4 <WIDGET_HandleActive+0x84>
 80066a6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80066aa:	d16c      	bne.n	8006786 <WIDGET_HandleActive+0x126>
 80066ac:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80066ae:	6819      	ldr	r1, [r3, #0]
 80066b0:	68eb      	ldr	r3, [r5, #12]
 80066b2:	62c3      	str	r3, [r0, #44]	; 0x2c
 80066b4:	681b      	ldr	r3, [r3, #0]
 80066b6:	a802      	add	r0, sp, #8
 80066b8:	1acd      	subs	r5, r1, r3
 80066ba:	f008 fee5 	bl	800f488 <GUI_ALLOC_UnlockH>
 80066be:	4630      	mov	r0, r6
 80066c0:	f008 fed4 	bl	800f46c <GUI_ALLOC_LockH>
 80066c4:	ac04      	add	r4, sp, #16
 80066c6:	4269      	negs	r1, r5
 80066c8:	f844 0d04 	str.w	r0, [r4, #-4]!
 80066cc:	460a      	mov	r2, r1
 80066ce:	462b      	mov	r3, r5
 80066d0:	9500      	str	r5, [sp, #0]
 80066d2:	f001 fbb2 	bl	8007e3a <WM__UpdateChildPositions>
 80066d6:	4620      	mov	r0, r4
 80066d8:	f008 fed6 	bl	800f488 <GUI_ALLOC_UnlockH>
 80066dc:	4630      	mov	r0, r6
 80066de:	f002 fd76 	bl	80091ce <WM_InvalidateWindow>
 80066e2:	e04e      	b.n	8006782 <WIDGET_HandleActive+0x122>
 80066e4:	2400      	movs	r4, #0
 80066e6:	e03f      	b.n	8006768 <WIDGET_HandleActive+0x108>
 80066e8:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 80066ea:	06d9      	lsls	r1, r3, #27
 80066ec:	d54b      	bpl.n	8006786 <WIDGET_HandleActive+0x126>
 80066ee:	68eb      	ldr	r3, [r5, #12]
 80066f0:	7a1b      	ldrb	r3, [r3, #8]
 80066f2:	2b00      	cmp	r3, #0
 80066f4:	d047      	beq.n	8006786 <WIDGET_HandleActive+0x126>
 80066f6:	a802      	add	r0, sp, #8
 80066f8:	f008 fec6 	bl	800f488 <GUI_ALLOC_UnlockH>
 80066fc:	4630      	mov	r0, r6
 80066fe:	f001 fd43 	bl	8008188 <WM_SetFocus>
 8006702:	e040      	b.n	8006786 <WIDGET_HandleActive+0x126>
 8006704:	68eb      	ldr	r3, [r5, #12]
 8006706:	68db      	ldr	r3, [r3, #12]
 8006708:	2b00      	cmp	r3, #0
 800670a:	d03c      	beq.n	8006786 <WIDGET_HandleActive+0x126>
 800670c:	7a1b      	ldrb	r3, [r3, #8]
 800670e:	2b00      	cmp	r3, #0
 8006710:	d039      	beq.n	8006786 <WIDGET_HandleActive+0x126>
 8006712:	a802      	add	r0, sp, #8
 8006714:	f008 feb8 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006718:	4630      	mov	r0, r6
 800671a:	f002 f881 	bl	8008820 <WM_BringToTop>
 800671e:	e030      	b.n	8006782 <WIDGET_HandleActive+0x122>
 8006720:	68eb      	ldr	r3, [r5, #12]
 8006722:	8603      	strh	r3, [r0, #48]	; 0x30
 8006724:	e02d      	b.n	8006782 <WIDGET_HandleActive+0x122>
 8006726:	68eb      	ldr	r3, [r5, #12]
 8006728:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 800672a:	2b01      	cmp	r3, #1
 800672c:	d108      	bne.n	8006740 <WIDGET_HandleActive+0xe0>
 800672e:	06ca      	lsls	r2, r1, #27
 8006730:	d50d      	bpl.n	800674e <WIDGET_HandleActive+0xee>
 8006732:	4630      	mov	r0, r6
 8006734:	f041 0101 	orr.w	r1, r1, #1
 8006738:	f7ff ff4d 	bl	80065d6 <WIDGET_SetState>
 800673c:	2708      	movs	r7, #8
 800673e:	e008      	b.n	8006752 <WIDGET_HandleActive+0xf2>
 8006740:	f021 0101 	bic.w	r1, r1, #1
 8006744:	4630      	mov	r0, r6
 8006746:	f7ff ff46 	bl	80065d6 <WIDGET_SetState>
 800674a:	2709      	movs	r7, #9
 800674c:	e001      	b.n	8006752 <WIDGET_HandleActive+0xf2>
 800674e:	f04f 37ff 	mov.w	r7, #4294967295
 8006752:	a802      	add	r0, sp, #8
 8006754:	f008 fe98 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006758:	1c7b      	adds	r3, r7, #1
 800675a:	f04f 0400 	mov.w	r4, #0
 800675e:	d005      	beq.n	800676c <WIDGET_HandleActive+0x10c>
 8006760:	4630      	mov	r0, r6
 8006762:	4639      	mov	r1, r7
 8006764:	f001 fe11 	bl	800838a <WM_NotifyParent>
 8006768:	60ec      	str	r4, [r5, #12]
 800676a:	e00d      	b.n	8006788 <WIDGET_HandleActive+0x128>
 800676c:	2301      	movs	r3, #1
 800676e:	60eb      	str	r3, [r5, #12]
 8006770:	e00a      	b.n	8006788 <WIDGET_HandleActive+0x128>
 8006772:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8006774:	f3c3 1300 	ubfx	r3, r3, #4, #1
 8006778:	60eb      	str	r3, [r5, #12]
 800677a:	e002      	b.n	8006782 <WIDGET_HandleActive+0x122>
 800677c:	68e9      	ldr	r1, [r5, #12]
 800677e:	f7ff ff08 	bl	8006592 <WIDGET__GetInsideRect>
 8006782:	2400      	movs	r4, #0
 8006784:	e000      	b.n	8006788 <WIDGET_HandleActive+0x128>
 8006786:	2401      	movs	r4, #1
 8006788:	9b02      	ldr	r3, [sp, #8]
 800678a:	b123      	cbz	r3, 8006796 <WIDGET_HandleActive+0x136>
 800678c:	a802      	add	r0, sp, #8
 800678e:	f008 fe7b 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006792:	e000      	b.n	8006796 <WIDGET_HandleActive+0x136>
 8006794:	2401      	movs	r4, #1
 8006796:	4620      	mov	r0, r4
 8006798:	b005      	add	sp, #20
 800679a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800679c <WIDGET__SetScrollState>:
 800679c:	b570      	push	{r4, r5, r6, lr}
 800679e:	460d      	mov	r5, r1
 80067a0:	21fe      	movs	r1, #254	; 0xfe
 80067a2:	4616      	mov	r6, r2
 80067a4:	4604      	mov	r4, r0
 80067a6:	f001 ffe9 	bl	800877c <WM_GetDialogItem>
 80067aa:	4629      	mov	r1, r5
 80067ac:	f001 fc70 	bl	8008090 <WM_SetScrollState>
 80067b0:	4620      	mov	r0, r4
 80067b2:	21ff      	movs	r1, #255	; 0xff
 80067b4:	f001 ffe2 	bl	800877c <WM_GetDialogItem>
 80067b8:	4631      	mov	r1, r6
 80067ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80067be:	f001 bc67 	b.w	8008090 <WM_SetScrollState>

080067c2 <WIDGET__DrawTriangle>:
 80067c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80067c4:	461c      	mov	r4, r3
 80067c6:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 80067c8:	9f06      	ldr	r7, [sp, #24]
 80067ca:	071b      	lsls	r3, r3, #28
 80067cc:	460d      	mov	r5, r1
 80067ce:	4616      	mov	r6, r2
 80067d0:	d50a      	bpl.n	80067e8 <WIDGET__DrawTriangle+0x26>
 80067d2:	2c00      	cmp	r4, #0
 80067d4:	db07      	blt.n	80067e6 <WIDGET__DrawTriangle+0x24>
 80067d6:	4628      	mov	r0, r5
 80067d8:	1b31      	subs	r1, r6, r4
 80067da:	19a2      	adds	r2, r4, r6
 80067dc:	f007 fe3e 	bl	800e45c <GUI_DrawHLine>
 80067e0:	3c01      	subs	r4, #1
 80067e2:	443d      	add	r5, r7
 80067e4:	e7f5      	b.n	80067d2 <WIDGET__DrawTriangle+0x10>
 80067e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80067e8:	2c00      	cmp	r4, #0
 80067ea:	db07      	blt.n	80067fc <WIDGET__DrawTriangle+0x3a>
 80067ec:	4628      	mov	r0, r5
 80067ee:	1b31      	subs	r1, r6, r4
 80067f0:	19a2      	adds	r2, r4, r6
 80067f2:	f007 fbbb 	bl	800df6c <GUI_DrawVLine>
 80067f6:	3c01      	subs	r4, #1
 80067f8:	443d      	add	r5, r7
 80067fa:	e7f5      	b.n	80067e8 <WIDGET__DrawTriangle+0x26>
 80067fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080067fe <WIDGET__EFFECT_DrawDownRect>:
 80067fe:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006800:	4605      	mov	r5, r0
 8006802:	460c      	mov	r4, r1
 8006804:	b919      	cbnz	r1, 800680e <WIDGET__EFFECT_DrawDownRect+0x10>
 8006806:	4668      	mov	r0, sp
 8006808:	f001 ffea 	bl	80087e0 <WM_GetClientRect>
 800680c:	466c      	mov	r4, sp
 800680e:	8e6b      	ldrh	r3, [r5, #50]	; 0x32
 8006810:	071b      	lsls	r3, r3, #28
 8006812:	d505      	bpl.n	8006820 <WIDGET__EFFECT_DrawDownRect+0x22>
 8006814:	4622      	mov	r2, r4
 8006816:	4628      	mov	r0, r5
 8006818:	4669      	mov	r1, sp
 800681a:	f7ff fe8e 	bl	800653a <WIDGET__RotateRect90>
 800681e:	466c      	mov	r4, sp
 8006820:	4628      	mov	r0, r5
 8006822:	4621      	mov	r1, r4
 8006824:	f7ff fe59 	bl	80064da <_EffectRequiresRedraw>
 8006828:	b118      	cbz	r0, 8006832 <WIDGET__EFFECT_DrawDownRect+0x34>
 800682a:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800682c:	4620      	mov	r0, r4
 800682e:	691b      	ldr	r3, [r3, #16]
 8006830:	4798      	blx	r3
 8006832:	b003      	add	sp, #12
 8006834:	bd30      	pop	{r4, r5, pc}

08006836 <TEXT_SetText>:
 8006836:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006838:	460c      	mov	r4, r1
 800683a:	4605      	mov	r5, r0
 800683c:	b300      	cbz	r0, 8006880 <TEXT_SetText+0x4a>
 800683e:	f008 fe15 	bl	800f46c <GUI_ALLOC_LockH>
 8006842:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8006844:	9000      	str	r0, [sp, #0]
 8006846:	4668      	mov	r0, sp
 8006848:	9301      	str	r3, [sp, #4]
 800684a:	f008 fe1d 	bl	800f488 <GUI_ALLOC_UnlockH>
 800684e:	4621      	mov	r1, r4
 8006850:	a801      	add	r0, sp, #4
 8006852:	f006 f801 	bl	800c858 <GUI__SetText>
 8006856:	f1d0 0401 	rsbs	r4, r0, #1
 800685a:	bf38      	it	cc
 800685c:	2400      	movcc	r4, #0
 800685e:	b984      	cbnz	r4, 8006882 <TEXT_SetText+0x4c>
 8006860:	4628      	mov	r0, r5
 8006862:	f008 fe03 	bl	800f46c <GUI_ALLOC_LockH>
 8006866:	9a01      	ldr	r2, [sp, #4]
 8006868:	6c41      	ldr	r1, [r0, #68]	; 0x44
 800686a:	9000      	str	r0, [sp, #0]
 800686c:	4291      	cmp	r1, r2
 800686e:	bf18      	it	ne
 8006870:	6442      	strne	r2, [r0, #68]	; 0x44
 8006872:	4668      	mov	r0, sp
 8006874:	f008 fe08 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006878:	4628      	mov	r0, r5
 800687a:	f002 fca8 	bl	80091ce <WM_InvalidateWindow>
 800687e:	e000      	b.n	8006882 <TEXT_SetText+0x4c>
 8006880:	2401      	movs	r4, #1
 8006882:	4620      	mov	r0, r4
 8006884:	b003      	add	sp, #12
 8006886:	bd30      	pop	{r4, r5, pc}

08006888 <TEXT_CreateIndirect>:
 8006888:	b5f0      	push	{r4, r5, r6, r7, lr}
 800688a:	b087      	sub	sp, #28
 800688c:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8006890:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8006894:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8006898:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 800689c:	9100      	str	r1, [sp, #0]
 800689e:	2102      	movs	r1, #2
 80068a0:	9101      	str	r1, [sp, #4]
 80068a2:	8a41      	ldrh	r1, [r0, #18]
 80068a4:	9102      	str	r1, [sp, #8]
 80068a6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80068aa:	9103      	str	r1, [sp, #12]
 80068ac:	6844      	ldr	r4, [r0, #4]
 80068ae:	9404      	str	r4, [sp, #16]
 80068b0:	6984      	ldr	r4, [r0, #24]
 80068b2:	9405      	str	r4, [sp, #20]
 80068b4:	eb0e 0002 	add.w	r0, lr, r2
 80068b8:	18f9      	adds	r1, r7, r3
 80068ba:	4632      	mov	r2, r6
 80068bc:	462b      	mov	r3, r5
 80068be:	f000 f865 	bl	800698c <TEXT_CreateUser>
 80068c2:	b007      	add	sp, #28
 80068c4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080068c6 <TEXT_Callback>:
 80068c6:	b530      	push	{r4, r5, lr}
 80068c8:	6845      	ldr	r5, [r0, #4]
 80068ca:	4604      	mov	r4, r0
 80068cc:	b085      	sub	sp, #20
 80068ce:	4628      	mov	r0, r5
 80068d0:	4621      	mov	r1, r4
 80068d2:	f7ff fec5 	bl	8006660 <WIDGET_HandleActive>
 80068d6:	2800      	cmp	r0, #0
 80068d8:	d056      	beq.n	8006988 <TEXT_Callback+0xc2>
 80068da:	6823      	ldr	r3, [r4, #0]
 80068dc:	2b0f      	cmp	r3, #15
 80068de:	d01e      	beq.n	800691e <TEXT_Callback+0x58>
 80068e0:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 80068e4:	d00e      	beq.n	8006904 <TEXT_Callback+0x3e>
 80068e6:	2b0b      	cmp	r3, #11
 80068e8:	d14b      	bne.n	8006982 <TEXT_Callback+0xbc>
 80068ea:	4628      	mov	r0, r5
 80068ec:	f008 fdbe 	bl	800f46c <GUI_ALLOC_LockH>
 80068f0:	ad04      	add	r5, sp, #16
 80068f2:	f845 0d08 	str.w	r0, [r5, #-8]!
 80068f6:	3044      	adds	r0, #68	; 0x44
 80068f8:	f009 f810 	bl	800f91c <GUI_ALLOC_FreePtr>
 80068fc:	4628      	mov	r0, r5
 80068fe:	f008 fdc3 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006902:	e03e      	b.n	8006982 <TEXT_Callback+0xbc>
 8006904:	68e3      	ldr	r3, [r4, #12]
 8006906:	b12b      	cbz	r3, 8006914 <TEXT_Callback+0x4e>
 8006908:	7a1b      	ldrb	r3, [r3, #8]
 800690a:	2b00      	cmp	r3, #0
 800690c:	bf0c      	ite	eq
 800690e:	2102      	moveq	r1, #2
 8006910:	2101      	movne	r1, #1
 8006912:	e000      	b.n	8006916 <TEXT_Callback+0x50>
 8006914:	2103      	movs	r1, #3
 8006916:	4628      	mov	r0, r5
 8006918:	f001 fd37 	bl	800838a <WM_NotifyParent>
 800691c:	e031      	b.n	8006982 <TEXT_Callback+0xbc>
 800691e:	4628      	mov	r0, r5
 8006920:	f008 fda4 	bl	800f46c <GUI_ALLOC_LockH>
 8006924:	9000      	str	r0, [sp, #0]
 8006926:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8006928:	f005 ff36 	bl	800c798 <LCD_SetColor>
 800692c:	9b00      	ldr	r3, [sp, #0]
 800692e:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8006930:	f007 f916 	bl	800db60 <GUI_SetFont>
 8006934:	4628      	mov	r0, r5
 8006936:	f001 fb6d 	bl	8008014 <WM_GetHasTrans>
 800693a:	b928      	cbnz	r0, 8006948 <TEXT_Callback+0x82>
 800693c:	9b00      	ldr	r3, [sp, #0]
 800693e:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8006940:	f005 ff22 	bl	800c788 <LCD_SetBkColor>
 8006944:	f008 f962 	bl	800ec0c <GUI_Clear>
 8006948:	9b00      	ldr	r3, [sp, #0]
 800694a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800694c:	b1ab      	cbz	r3, 800697a <TEXT_Callback+0xb4>
 800694e:	2002      	movs	r0, #2
 8006950:	f007 f8ea 	bl	800db28 <GUI_SetTextMode>
 8006954:	a802      	add	r0, sp, #8
 8006956:	f001 ff43 	bl	80087e0 <WM_GetClientRect>
 800695a:	9b00      	ldr	r3, [sp, #0]
 800695c:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800695e:	f008 fd85 	bl	800f46c <GUI_ALLOC_LockH>
 8006962:	9b00      	ldr	r3, [sp, #0]
 8006964:	9001      	str	r0, [sp, #4]
 8006966:	f9b3 2048 	ldrsh.w	r2, [r3, #72]	; 0x48
 800696a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800696e:	a902      	add	r1, sp, #8
 8006970:	f007 ff00 	bl	800e774 <GUI_DispStringInRectWrap>
 8006974:	a801      	add	r0, sp, #4
 8006976:	f008 fd87 	bl	800f488 <GUI_ALLOC_UnlockH>
 800697a:	4668      	mov	r0, sp
 800697c:	f008 fd84 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006980:	e002      	b.n	8006988 <TEXT_Callback+0xc2>
 8006982:	4620      	mov	r0, r4
 8006984:	f003 f854 	bl	8009a30 <WM_DefaultProc>
 8006988:	b005      	add	sp, #20
 800698a:	bd30      	pop	{r4, r5, pc}

0800698c <TEXT_CreateUser>:
 800698c:	b570      	push	{r4, r5, r6, lr}
 800698e:	b086      	sub	sp, #24
 8006990:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8006992:	9500      	str	r5, [sp, #0]
 8006994:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8006996:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8006998:	f045 0501 	orr.w	r5, r5, #1
 800699c:	9501      	str	r5, [sp, #4]
 800699e:	4d1a      	ldr	r5, [pc, #104]	; (8006a08 <TEXT_CreateUser+0x7c>)
 80069a0:	9502      	str	r5, [sp, #8]
 80069a2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80069a4:	3520      	adds	r5, #32
 80069a6:	9503      	str	r5, [sp, #12]
 80069a8:	f002 fc52 	bl	8009250 <WM_CreateWindowAsChild>
 80069ac:	4605      	mov	r5, r0
 80069ae:	b340      	cbz	r0, 8006a02 <TEXT_CreateUser+0x76>
 80069b0:	b18c      	cbz	r4, 80069d6 <TEXT_CreateUser+0x4a>
 80069b2:	4620      	mov	r0, r4
 80069b4:	f7f9 fc2c 	bl	8000210 <strlen>
 80069b8:	3001      	adds	r0, #1
 80069ba:	f009 f837 	bl	800fa2c <GUI_ALLOC_AllocZero>
 80069be:	4606      	mov	r6, r0
 80069c0:	b150      	cbz	r0, 80069d8 <TEXT_CreateUser+0x4c>
 80069c2:	f008 fd53 	bl	800f46c <GUI_ALLOC_LockH>
 80069c6:	4621      	mov	r1, r4
 80069c8:	9005      	str	r0, [sp, #20]
 80069ca:	f00e fd5d 	bl	8015488 <strcpy>
 80069ce:	a805      	add	r0, sp, #20
 80069d0:	f008 fd5a 	bl	800f488 <GUI_ALLOC_UnlockH>
 80069d4:	e000      	b.n	80069d8 <TEXT_CreateUser+0x4c>
 80069d6:	4626      	mov	r6, r4
 80069d8:	4628      	mov	r0, r5
 80069da:	f008 fd47 	bl	800f46c <GUI_ALLOC_LockH>
 80069de:	990d      	ldr	r1, [sp, #52]	; 0x34
 80069e0:	9005      	str	r0, [sp, #20]
 80069e2:	2200      	movs	r2, #0
 80069e4:	f7ff fe34 	bl	8006650 <WIDGET__Init>
 80069e8:	9c05      	ldr	r4, [sp, #20]
 80069ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80069ec:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
 80069f0:	4b06      	ldr	r3, [pc, #24]	; (8006a0c <TEXT_CreateUser+0x80>)
 80069f2:	6466      	str	r6, [r4, #68]	; 0x44
 80069f4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80069f6:	3434      	adds	r4, #52	; 0x34
 80069f8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80069fc:	a805      	add	r0, sp, #20
 80069fe:	f008 fd43 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006a02:	4628      	mov	r0, r5
 8006a04:	b006      	add	sp, #24
 8006a06:	bd70      	pop	{r4, r5, r6, pc}
 8006a08:	080068c7 	.word	0x080068c7
 8006a0c:	200001b0 	.word	0x200001b0

08006a10 <SLIDER_CreateIndirect>:
 8006a10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006a12:	b087      	sub	sp, #28
 8006a14:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8006a18:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8006a1c:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8006a20:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8006a24:	9100      	str	r1, [sp, #0]
 8006a26:	2100      	movs	r1, #0
 8006a28:	9101      	str	r1, [sp, #4]
 8006a2a:	8a41      	ldrh	r1, [r0, #18]
 8006a2c:	9102      	str	r1, [sp, #8]
 8006a2e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8006a32:	9103      	str	r1, [sp, #12]
 8006a34:	6984      	ldr	r4, [r0, #24]
 8006a36:	9404      	str	r4, [sp, #16]
 8006a38:	eb0e 0002 	add.w	r0, lr, r2
 8006a3c:	18f9      	adds	r1, r7, r3
 8006a3e:	4632      	mov	r2, r6
 8006a40:	462b      	mov	r3, r5
 8006a42:	f000 f803 	bl	8006a4c <SLIDER_CreateUser>
 8006a46:	b007      	add	sp, #28
 8006a48:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08006a4c <SLIDER_CreateUser>:
 8006a4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006a50:	b086      	sub	sp, #24
 8006a52:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8006a54:	9400      	str	r4, [sp, #0]
 8006a56:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8006a58:	f044 0401 	orr.w	r4, r4, #1
 8006a5c:	9401      	str	r4, [sp, #4]
 8006a5e:	4c1c      	ldr	r4, [pc, #112]	; (8006ad0 <SLIDER_CreateUser+0x84>)
 8006a60:	9402      	str	r4, [sp, #8]
 8006a62:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8006a64:	3438      	adds	r4, #56	; 0x38
 8006a66:	9403      	str	r4, [sp, #12]
 8006a68:	f002 fbf2 	bl	8009250 <WM_CreateWindowAsChild>
 8006a6c:	4680      	mov	r8, r0
 8006a6e:	b358      	cbz	r0, 8006ac8 <SLIDER_CreateUser+0x7c>
 8006a70:	f008 fcfc 	bl	800f46c <GUI_ALLOC_LockH>
 8006a74:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006a76:	4d17      	ldr	r5, [pc, #92]	; (8006ad4 <SLIDER_CreateUser+0x88>)
 8006a78:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8006a7a:	9005      	str	r0, [sp, #20]
 8006a7c:	f013 0f08 	tst.w	r3, #8
 8006a80:	bf14      	ite	ne
 8006a82:	2218      	movne	r2, #24
 8006a84:	2210      	moveq	r2, #16
 8006a86:	f7ff fde3 	bl	8006650 <WIDGET__Init>
 8006a8a:	af06      	add	r7, sp, #24
 8006a8c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006a8e:	f857 6d04 	ldr.w	r6, [r7, #-4]!
 8006a92:	f106 0434 	add.w	r4, r6, #52	; 0x34
 8006a96:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006a98:	e895 0003 	ldmia.w	r5, {r0, r1}
 8006a9c:	e884 0003 	stmia.w	r4, {r0, r1}
 8006aa0:	4c0d      	ldr	r4, [pc, #52]	; (8006ad8 <SLIDER_CreateUser+0x8c>)
 8006aa2:	6823      	ldr	r3, [r4, #0]
 8006aa4:	64f3      	str	r3, [r6, #76]	; 0x4c
 8006aa6:	2308      	movs	r3, #8
 8006aa8:	f8a6 3060 	strh.w	r3, [r6, #96]	; 0x60
 8006aac:	2364      	movs	r3, #100	; 0x64
 8006aae:	6573      	str	r3, [r6, #84]	; 0x54
 8006ab0:	2300      	movs	r3, #0
 8006ab2:	65b3      	str	r3, [r6, #88]	; 0x58
 8006ab4:	f04f 33ff 	mov.w	r3, #4294967295
 8006ab8:	6533      	str	r3, [r6, #80]	; 0x50
 8006aba:	4638      	mov	r0, r7
 8006abc:	f008 fce4 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006ac0:	6823      	ldr	r3, [r4, #0]
 8006ac2:	4640      	mov	r0, r8
 8006ac4:	685b      	ldr	r3, [r3, #4]
 8006ac6:	4798      	blx	r3
 8006ac8:	4640      	mov	r0, r8
 8006aca:	b006      	add	sp, #24
 8006acc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006ad0:	08006bc5 	.word	0x08006bc5
 8006ad4:	200001c4 	.word	0x200001c4
 8006ad8:	200001c0 	.word	0x200001c0

08006adc <SLIDER_Dec>:
 8006adc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006ade:	4605      	mov	r5, r0
 8006ae0:	b1c0      	cbz	r0, 8006b14 <SLIDER_Dec+0x38>
 8006ae2:	f008 fcc3 	bl	800f46c <GUI_ALLOC_LockH>
 8006ae6:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8006ae8:	6d81      	ldr	r1, [r0, #88]	; 0x58
 8006aea:	ac02      	add	r4, sp, #8
 8006aec:	428a      	cmp	r2, r1
 8006aee:	f844 0d04 	str.w	r0, [r4, #-4]!
 8006af2:	dd0c      	ble.n	8006b0e <SLIDER_Dec+0x32>
 8006af4:	3a01      	subs	r2, #1
 8006af6:	65c2      	str	r2, [r0, #92]	; 0x5c
 8006af8:	4628      	mov	r0, r5
 8006afa:	f002 fb68 	bl	80091ce <WM_InvalidateWindow>
 8006afe:	4620      	mov	r0, r4
 8006b00:	f008 fcc2 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006b04:	4628      	mov	r0, r5
 8006b06:	2105      	movs	r1, #5
 8006b08:	f001 fc3f 	bl	800838a <WM_NotifyParent>
 8006b0c:	e002      	b.n	8006b14 <SLIDER_Dec+0x38>
 8006b0e:	4620      	mov	r0, r4
 8006b10:	f008 fcba 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006b14:	b003      	add	sp, #12
 8006b16:	bd30      	pop	{r4, r5, pc}

08006b18 <SLIDER_GetFlag>:
 8006b18:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006b1a:	460d      	mov	r5, r1
 8006b1c:	4604      	mov	r4, r0
 8006b1e:	b150      	cbz	r0, 8006b36 <SLIDER_GetFlag+0x1e>
 8006b20:	f008 fca4 	bl	800f46c <GUI_ALLOC_LockH>
 8006b24:	ab02      	add	r3, sp, #8
 8006b26:	f890 4034 	ldrb.w	r4, [r0, #52]	; 0x34
 8006b2a:	f843 0d04 	str.w	r0, [r3, #-4]!
 8006b2e:	4618      	mov	r0, r3
 8006b30:	402c      	ands	r4, r5
 8006b32:	f008 fca9 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006b36:	4620      	mov	r0, r4
 8006b38:	b003      	add	sp, #12
 8006b3a:	bd30      	pop	{r4, r5, pc}

08006b3c <SLIDER_Inc>:
 8006b3c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006b3e:	4605      	mov	r5, r0
 8006b40:	b1c0      	cbz	r0, 8006b74 <SLIDER_Inc+0x38>
 8006b42:	f008 fc93 	bl	800f46c <GUI_ALLOC_LockH>
 8006b46:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8006b48:	6d41      	ldr	r1, [r0, #84]	; 0x54
 8006b4a:	ac02      	add	r4, sp, #8
 8006b4c:	428a      	cmp	r2, r1
 8006b4e:	f844 0d04 	str.w	r0, [r4, #-4]!
 8006b52:	da0c      	bge.n	8006b6e <SLIDER_Inc+0x32>
 8006b54:	3201      	adds	r2, #1
 8006b56:	65c2      	str	r2, [r0, #92]	; 0x5c
 8006b58:	4628      	mov	r0, r5
 8006b5a:	f002 fb38 	bl	80091ce <WM_InvalidateWindow>
 8006b5e:	4620      	mov	r0, r4
 8006b60:	f008 fc92 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006b64:	4628      	mov	r0, r5
 8006b66:	2105      	movs	r1, #5
 8006b68:	f001 fc0f 	bl	800838a <WM_NotifyParent>
 8006b6c:	e002      	b.n	8006b74 <SLIDER_Inc+0x38>
 8006b6e:	4620      	mov	r0, r4
 8006b70:	f008 fc8a 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006b74:	b003      	add	sp, #12
 8006b76:	bd30      	pop	{r4, r5, pc}

08006b78 <SLIDER_SetValue>:
 8006b78:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006b7a:	460e      	mov	r6, r1
 8006b7c:	4605      	mov	r5, r0
 8006b7e:	b1f8      	cbz	r0, 8006bc0 <SLIDER_SetValue+0x48>
 8006b80:	f008 fc74 	bl	800f46c <GUI_ALLOC_LockH>
 8006b84:	6d82      	ldr	r2, [r0, #88]	; 0x58
 8006b86:	4296      	cmp	r6, r2
 8006b88:	bfac      	ite	ge
 8006b8a:	4631      	movge	r1, r6
 8006b8c:	4611      	movlt	r1, r2
 8006b8e:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8006b90:	4291      	cmp	r1, r2
 8006b92:	bfa8      	it	ge
 8006b94:	4611      	movge	r1, r2
 8006b96:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8006b98:	ac02      	add	r4, sp, #8
 8006b9a:	428a      	cmp	r2, r1
 8006b9c:	f844 0d04 	str.w	r0, [r4, #-4]!
 8006ba0:	d00b      	beq.n	8006bba <SLIDER_SetValue+0x42>
 8006ba2:	65c1      	str	r1, [r0, #92]	; 0x5c
 8006ba4:	4628      	mov	r0, r5
 8006ba6:	f002 fb12 	bl	80091ce <WM_InvalidateWindow>
 8006baa:	4620      	mov	r0, r4
 8006bac:	f008 fc6c 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006bb0:	4628      	mov	r0, r5
 8006bb2:	2105      	movs	r1, #5
 8006bb4:	f001 fbe9 	bl	800838a <WM_NotifyParent>
 8006bb8:	e002      	b.n	8006bc0 <SLIDER_SetValue+0x48>
 8006bba:	4620      	mov	r0, r4
 8006bbc:	f008 fc64 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006bc0:	b002      	add	sp, #8
 8006bc2:	bd70      	pop	{r4, r5, r6, pc}

08006bc4 <SLIDER_Callback>:
 8006bc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006bc8:	6844      	ldr	r4, [r0, #4]
 8006bca:	4605      	mov	r5, r0
 8006bcc:	b085      	sub	sp, #20
 8006bce:	4620      	mov	r0, r4
 8006bd0:	4629      	mov	r1, r5
 8006bd2:	f7ff fd45 	bl	8006660 <WIDGET_HandleActive>
 8006bd6:	2800      	cmp	r0, #0
 8006bd8:	f000 809d 	beq.w	8006d16 <SLIDER_Callback+0x152>
 8006bdc:	682b      	ldr	r3, [r5, #0]
 8006bde:	2b0f      	cmp	r3, #15
 8006be0:	d006      	beq.n	8006bf0 <SLIDER_Callback+0x2c>
 8006be2:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8006be6:	d014      	beq.n	8006c12 <SLIDER_Callback+0x4e>
 8006be8:	2b0e      	cmp	r3, #14
 8006bea:	f040 8091 	bne.w	8006d10 <SLIDER_Callback+0x14c>
 8006bee:	e07f      	b.n	8006cf0 <SLIDER_Callback+0x12c>
 8006bf0:	4620      	mov	r0, r4
 8006bf2:	f008 fc3b 	bl	800f46c <GUI_ALLOC_LockH>
 8006bf6:	ab04      	add	r3, sp, #16
 8006bf8:	f843 0d04 	str.w	r0, [r3, #-4]!
 8006bfc:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 8006bfe:	6815      	ldr	r5, [r2, #0]
 8006c00:	4618      	mov	r0, r3
 8006c02:	f008 fc41 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006c06:	2d00      	cmp	r5, #0
 8006c08:	f000 8085 	beq.w	8006d16 <SLIDER_Callback+0x152>
 8006c0c:	4620      	mov	r0, r4
 8006c0e:	47a8      	blx	r5
 8006c10:	e081      	b.n	8006d16 <SLIDER_Callback+0x152>
 8006c12:	68ef      	ldr	r7, [r5, #12]
 8006c14:	2f00      	cmp	r7, #0
 8006c16:	d07b      	beq.n	8006d10 <SLIDER_Callback+0x14c>
 8006c18:	4620      	mov	r0, r4
 8006c1a:	f008 fc27 	bl	800f46c <GUI_ALLOC_LockH>
 8006c1e:	4603      	mov	r3, r0
 8006c20:	a804      	add	r0, sp, #16
 8006c22:	8e5a      	ldrh	r2, [r3, #50]	; 0x32
 8006c24:	f840 3d04 	str.w	r3, [r0, #-4]!
 8006c28:	6d9e      	ldr	r6, [r3, #88]	; 0x58
 8006c2a:	f8d3 9054 	ldr.w	r9, [r3, #84]	; 0x54
 8006c2e:	f8b3 b060 	ldrh.w	fp, [r3, #96]	; 0x60
 8006c32:	f8b3 8028 	ldrh.w	r8, [r3, #40]	; 0x28
 8006c36:	9201      	str	r2, [sp, #4]
 8006c38:	f008 fc26 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006c3c:	9a01      	ldr	r2, [sp, #4]
 8006c3e:	7a3b      	ldrb	r3, [r7, #8]
 8006c40:	f402 7a80 	and.w	sl, r2, #256	; 0x100
 8006c44:	2b00      	cmp	r3, #0
 8006c46:	d043      	beq.n	8006cd0 <SLIDER_Callback+0x10c>
 8006c48:	cf82      	ldmia	r7, {r1, r7}
 8006c4a:	fa0f f38b 	sxth.w	r3, fp
 8006c4e:	f04f 0b02 	mov.w	fp, #2
 8006c52:	f012 0f08 	tst.w	r2, #8
 8006c56:	fb93 f3fb 	sdiv	r3, r3, fp
 8006c5a:	f103 0301 	add.w	r3, r3, #1
 8006c5e:	bf08      	it	eq
 8006c60:	460f      	moveq	r7, r1
 8006c62:	1aff      	subs	r7, r7, r3
 8006c64:	4620      	mov	r0, r4
 8006c66:	9301      	str	r3, [sp, #4]
 8006c68:	f7ff fca0 	bl	80065ac <WIDGET__GetWindowSizeX>
 8006c6c:	2f00      	cmp	r7, #0
 8006c6e:	9b01      	ldr	r3, [sp, #4]
 8006c70:	dd11      	ble.n	8006c96 <SLIDER_Callback+0xd2>
 8006c72:	eba0 0043 	sub.w	r0, r0, r3, lsl #1
 8006c76:	4287      	cmp	r7, r0
 8006c78:	da0c      	bge.n	8006c94 <SLIDER_Callback+0xd0>
 8006c7a:	2800      	cmp	r0, #0
 8006c7c:	bf08      	it	eq
 8006c7e:	2001      	moveq	r0, #1
 8006c80:	fb90 fbfb 	sdiv	fp, r0, fp
 8006c84:	ebc6 0909 	rsb	r9, r6, r9
 8006c88:	fb09 b707 	mla	r7, r9, r7, fp
 8006c8c:	fbb7 f0f0 	udiv	r0, r7, r0
 8006c90:	4406      	add	r6, r0
 8006c92:	e000      	b.n	8006c96 <SLIDER_Callback+0xd2>
 8006c94:	464e      	mov	r6, r9
 8006c96:	4620      	mov	r0, r4
 8006c98:	f001 fc0f 	bl	80084ba <WM_IsFocussable>
 8006c9c:	b110      	cbz	r0, 8006ca4 <SLIDER_Callback+0xe0>
 8006c9e:	4620      	mov	r0, r4
 8006ca0:	f001 fa72 	bl	8008188 <WM_SetFocus>
 8006ca4:	4620      	mov	r0, r4
 8006ca6:	2101      	movs	r1, #1
 8006ca8:	f001 fad6 	bl	8008258 <WM_SetCapture>
 8006cac:	4620      	mov	r0, r4
 8006cae:	4631      	mov	r1, r6
 8006cb0:	f7ff ff62 	bl	8006b78 <SLIDER_SetValue>
 8006cb4:	f1ba 0f00 	cmp.w	sl, #0
 8006cb8:	d12a      	bne.n	8006d10 <SLIDER_Callback+0x14c>
 8006cba:	4620      	mov	r0, r4
 8006cbc:	f44f 7180 	mov.w	r1, #256	; 0x100
 8006cc0:	f7ff fc9b 	bl	80065fa <WIDGET_OrState>
 8006cc4:	f018 0f02 	tst.w	r8, #2
 8006cc8:	d022      	beq.n	8006d10 <SLIDER_Callback+0x14c>
 8006cca:	4620      	mov	r0, r4
 8006ccc:	2101      	movs	r1, #1
 8006cce:	e00c      	b.n	8006cea <SLIDER_Callback+0x126>
 8006cd0:	f1ba 0f00 	cmp.w	sl, #0
 8006cd4:	d01c      	beq.n	8006d10 <SLIDER_Callback+0x14c>
 8006cd6:	4620      	mov	r0, r4
 8006cd8:	f44f 7180 	mov.w	r1, #256	; 0x100
 8006cdc:	f7ff fca3 	bl	8006626 <WIDGET_AndState>
 8006ce0:	f018 0f02 	tst.w	r8, #2
 8006ce4:	d014      	beq.n	8006d10 <SLIDER_Callback+0x14c>
 8006ce6:	4620      	mov	r0, r4
 8006ce8:	2102      	movs	r1, #2
 8006cea:	f001 fb4e 	bl	800838a <WM_NotifyParent>
 8006cee:	e00f      	b.n	8006d10 <SLIDER_Callback+0x14c>
 8006cf0:	68ea      	ldr	r2, [r5, #12]
 8006cf2:	6813      	ldr	r3, [r2, #0]
 8006cf4:	6852      	ldr	r2, [r2, #4]
 8006cf6:	2a00      	cmp	r2, #0
 8006cf8:	dd0a      	ble.n	8006d10 <SLIDER_Callback+0x14c>
 8006cfa:	2b10      	cmp	r3, #16
 8006cfc:	d005      	beq.n	8006d0a <SLIDER_Callback+0x146>
 8006cfe:	2b12      	cmp	r3, #18
 8006d00:	d106      	bne.n	8006d10 <SLIDER_Callback+0x14c>
 8006d02:	4620      	mov	r0, r4
 8006d04:	f7ff ff1a 	bl	8006b3c <SLIDER_Inc>
 8006d08:	e002      	b.n	8006d10 <SLIDER_Callback+0x14c>
 8006d0a:	4620      	mov	r0, r4
 8006d0c:	f7ff fee6 	bl	8006adc <SLIDER_Dec>
 8006d10:	4628      	mov	r0, r5
 8006d12:	f002 fe8d 	bl	8009a30 <WM_DefaultProc>
 8006d16:	b005      	add	sp, #20
 8006d18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08006d1c <SLIDER_SetRange>:
 8006d1c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006d1e:	460c      	mov	r4, r1
 8006d20:	4616      	mov	r6, r2
 8006d22:	4605      	mov	r5, r0
 8006d24:	b1b0      	cbz	r0, 8006d54 <SLIDER_SetRange+0x38>
 8006d26:	f008 fba1 	bl	800f46c <GUI_ALLOC_LockH>
 8006d2a:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 8006d2c:	9001      	str	r0, [sp, #4]
 8006d2e:	42a6      	cmp	r6, r4
 8006d30:	bfac      	ite	ge
 8006d32:	4632      	movge	r2, r6
 8006d34:	4622      	movlt	r2, r4
 8006d36:	42a1      	cmp	r1, r4
 8006d38:	bfb8      	it	lt
 8006d3a:	65c4      	strlt	r4, [r0, #92]	; 0x5c
 8006d3c:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 8006d3e:	6584      	str	r4, [r0, #88]	; 0x58
 8006d40:	4291      	cmp	r1, r2
 8006d42:	6542      	str	r2, [r0, #84]	; 0x54
 8006d44:	bfc8      	it	gt
 8006d46:	65c2      	strgt	r2, [r0, #92]	; 0x5c
 8006d48:	a801      	add	r0, sp, #4
 8006d4a:	f008 fb9d 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006d4e:	4628      	mov	r0, r5
 8006d50:	f002 fa3d 	bl	80091ce <WM_InvalidateWindow>
 8006d54:	b002      	add	sp, #8
 8006d56:	bd70      	pop	{r4, r5, r6, pc}

08006d58 <SLIDER_GetValue>:
 8006d58:	b513      	push	{r0, r1, r4, lr}
 8006d5a:	4604      	mov	r4, r0
 8006d5c:	b140      	cbz	r0, 8006d70 <SLIDER_GetValue+0x18>
 8006d5e:	f008 fb85 	bl	800f46c <GUI_ALLOC_LockH>
 8006d62:	ab02      	add	r3, sp, #8
 8006d64:	6dc4      	ldr	r4, [r0, #92]	; 0x5c
 8006d66:	f843 0d04 	str.w	r0, [r3, #-4]!
 8006d6a:	4618      	mov	r0, r3
 8006d6c:	f008 fb8c 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006d70:	4620      	mov	r0, r4
 8006d72:	b002      	add	sp, #8
 8006d74:	bd10      	pop	{r4, pc}

08006d76 <_OnPaint>:
 8006d76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006d7a:	ed2d 8b02 	vpush	{d8}
 8006d7e:	b085      	sub	sp, #20
 8006d80:	460d      	mov	r5, r1
 8006d82:	f008 fb73 	bl	800f46c <GUI_ALLOC_LockH>
 8006d86:	9000      	str	r0, [sp, #0]
 8006d88:	6900      	ldr	r0, [r0, #16]
 8006d8a:	f006 fee9 	bl	800db60 <GUI_SetFont>
 8006d8e:	9b00      	ldr	r3, [sp, #0]
 8006d90:	68d8      	ldr	r0, [r3, #12]
 8006d92:	f006 ff13 	bl	800dbbc <GUI_SetColor>
 8006d96:	2002      	movs	r0, #2
 8006d98:	f006 fec6 	bl	800db28 <GUI_SetTextMode>
 8006d9c:	9c00      	ldr	r4, [sp, #0]
 8006d9e:	8ca6      	ldrh	r6, [r4, #36]	; 0x24
 8006da0:	69e3      	ldr	r3, [r4, #28]
 8006da2:	f016 0601 	ands.w	r6, r6, #1
 8006da6:	d01a      	beq.n	8006dde <_OnPaint+0x68>
 8006da8:	2b00      	cmp	r3, #0
 8006daa:	d077      	beq.n	8006e9c <_OnPaint+0x126>
 8006dac:	68a0      	ldr	r0, [r4, #8]
 8006dae:	f008 fb5d 	bl	800f46c <GUI_ALLOC_LockH>
 8006db2:	9001      	str	r0, [sp, #4]
 8006db4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8006db6:	6963      	ldr	r3, [r4, #20]
 8006db8:	6817      	ldr	r7, [r2, #0]
 8006dba:	441f      	add	r7, r3
 8006dbc:	f001 fc28 	bl	8008610 <WM_GetOrgX>
 8006dc0:	69a3      	ldr	r3, [r4, #24]
 8006dc2:	4438      	add	r0, r7
 8006dc4:	b133      	cbz	r3, 8006dd4 <_OnPaint+0x5e>
 8006dc6:	2b01      	cmp	r3, #1
 8006dc8:	d170      	bne.n	8006eac <_OnPaint+0x136>
 8006dca:	f9b5 3000 	ldrsh.w	r3, [r5]
 8006dce:	4283      	cmp	r3, r0
 8006dd0:	dd6c      	ble.n	8006eac <_OnPaint+0x136>
 8006dd2:	e01c      	b.n	8006e0e <_OnPaint+0x98>
 8006dd4:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8006dd8:	4283      	cmp	r3, r0
 8006dda:	db18      	blt.n	8006e0e <_OnPaint+0x98>
 8006ddc:	e066      	b.n	8006eac <_OnPaint+0x136>
 8006dde:	2b00      	cmp	r3, #0
 8006de0:	d05c      	beq.n	8006e9c <_OnPaint+0x126>
 8006de2:	68a0      	ldr	r0, [r4, #8]
 8006de4:	f008 fb42 	bl	800f46c <GUI_ALLOC_LockH>
 8006de8:	9001      	str	r0, [sp, #4]
 8006dea:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8006dec:	f8d3 8000 	ldr.w	r8, [r3]
 8006df0:	f007 f874 	bl	800dedc <GUI_GetFontSizeY>
 8006df4:	6963      	ldr	r3, [r4, #20]
 8006df6:	4607      	mov	r7, r0
 8006df8:	ebc8 0903 	rsb	r9, r8, r3
 8006dfc:	f001 fc10 	bl	8008620 <WM_GetOrgY>
 8006e00:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8006e04:	88ea      	ldrh	r2, [r5, #6]
 8006e06:	4448      	add	r0, r9
 8006e08:	4407      	add	r7, r0
 8006e0a:	428f      	cmp	r7, r1
 8006e0c:	da03      	bge.n	8006e16 <_OnPaint+0xa0>
 8006e0e:	a801      	add	r0, sp, #4
 8006e10:	f008 fb3a 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006e14:	e042      	b.n	8006e9c <_OnPaint+0x126>
 8006e16:	b212      	sxth	r2, r2
 8006e18:	4290      	cmp	r0, r2
 8006e1a:	dcf8      	bgt.n	8006e0e <_OnPaint+0x98>
 8006e1c:	68a0      	ldr	r0, [r4, #8]
 8006e1e:	a902      	add	r1, sp, #8
 8006e20:	f001 fc06 	bl	8008630 <WM_GetInsideRectExScrollbar>
 8006e24:	9b01      	ldr	r3, [sp, #4]
 8006e26:	f9bd b00c 	ldrsh.w	fp, [sp, #12]
 8006e2a:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8006e2c:	f8d3 a054 	ldr.w	sl, [r3, #84]	; 0x54
 8006e30:	f9bd 7008 	ldrsh.w	r7, [sp, #8]
 8006e34:	6a25      	ldr	r5, [r4, #32]
 8006e36:	ebc2 0b0b 	rsb	fp, r2, fp
 8006e3a:	f8b3 2078 	ldrh.w	r2, [r3, #120]	; 0x78
 8006e3e:	07d2      	lsls	r2, r2, #31
 8006e40:	4457      	add	r7, sl
 8006e42:	bf58      	it	pl
 8006e44:	f8d3 608c 	ldrpl.w	r6, [r3, #140]	; 0x8c
 8006e48:	443d      	add	r5, r7
 8006e4a:	4435      	add	r5, r6
 8006e4c:	42bd      	cmp	r5, r7
 8006e4e:	dd22      	ble.n	8006e96 <_OnPaint+0x120>
 8006e50:	69e3      	ldr	r3, [r4, #28]
 8006e52:	1aed      	subs	r5, r5, r3
 8006e54:	e7fa      	b.n	8006e4c <_OnPaint+0xd6>
 8006e56:	42bd      	cmp	r5, r7
 8006e58:	dd1b      	ble.n	8006e92 <_OnPaint+0x11c>
 8006e5a:	69a0      	ldr	r0, [r4, #24]
 8006e5c:	f006 fe6e 	bl	800db3c <GUI_SetTextAlign>
 8006e60:	6a23      	ldr	r3, [r4, #32]
 8006e62:	edd4 7a0a 	vldr	s15, [r4, #40]	; 0x28
 8006e66:	1aeb      	subs	r3, r5, r3
 8006e68:	ebca 0303 	rsb	r3, sl, r3
 8006e6c:	ebc8 0303 	rsb	r3, r8, r3
 8006e70:	1b9b      	subs	r3, r3, r6
 8006e72:	ee08 3a10 	vmov	s16, r3
 8006e76:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 8006e7a:	4628      	mov	r0, r5
 8006e7c:	ee28 8a27 	vmul.f32	s16, s16, s15
 8006e80:	4649      	mov	r1, r9
 8006e82:	f007 f80f 	bl	800dea4 <GUI_GotoXY>
 8006e86:	eeb0 0a48 	vmov.f32	s0, s16
 8006e8a:	f894 002c 	ldrb.w	r0, [r4, #44]	; 0x2c
 8006e8e:	f006 f8a7 	bl	800cfe0 <GUI_DispFloatMin>
 8006e92:	69e3      	ldr	r3, [r4, #28]
 8006e94:	441d      	add	r5, r3
 8006e96:	455d      	cmp	r5, fp
 8006e98:	dddd      	ble.n	8006e56 <_OnPaint+0xe0>
 8006e9a:	e7b8      	b.n	8006e0e <_OnPaint+0x98>
 8006e9c:	4668      	mov	r0, sp
 8006e9e:	f008 faf3 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006ea2:	b005      	add	sp, #20
 8006ea4:	ecbd 8b02 	vpop	{d8}
 8006ea8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006eac:	68a0      	ldr	r0, [r4, #8]
 8006eae:	a902      	add	r1, sp, #8
 8006eb0:	f001 fbbe 	bl	8008630 <WM_GetInsideRectExScrollbar>
 8006eb4:	9b01      	ldr	r3, [sp, #4]
 8006eb6:	6e1d      	ldr	r5, [r3, #96]	; 0x60
 8006eb8:	f8d3 8058 	ldr.w	r8, [r3, #88]	; 0x58
 8006ebc:	f007 f80e 	bl	800dedc <GUI_GetFontSizeY>
 8006ec0:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8006ec4:	9b01      	ldr	r3, [sp, #4]
 8006ec6:	f8bd a00a 	ldrh.w	sl, [sp, #10]
 8006eca:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8006ece:	1b76      	subs	r6, r6, r5
 8006ed0:	6a25      	ldr	r5, [r4, #32]
 8006ed2:	1b75      	subs	r5, r6, r5
 8006ed4:	441d      	add	r5, r3
 8006ed6:	42b5      	cmp	r5, r6
 8006ed8:	da01      	bge.n	8006ede <_OnPaint+0x168>
 8006eda:	69e3      	ldr	r3, [r4, #28]
 8006edc:	e7fa      	b.n	8006ed4 <_OnPaint+0x15e>
 8006ede:	f04f 0902 	mov.w	r9, #2
 8006ee2:	fb90 f9f9 	sdiv	r9, r0, r9
 8006ee6:	fa08 f38a 	sxtah	r3, r8, sl
 8006eea:	429d      	cmp	r5, r3
 8006eec:	db8f      	blt.n	8006e0e <_OnPaint+0x98>
 8006eee:	42b5      	cmp	r5, r6
 8006ef0:	dc1c      	bgt.n	8006f2c <_OnPaint+0x1b6>
 8006ef2:	69a0      	ldr	r0, [r4, #24]
 8006ef4:	f006 fe22 	bl	800db3c <GUI_SetTextAlign>
 8006ef8:	6a23      	ldr	r3, [r4, #32]
 8006efa:	edd4 7a0a 	vldr	s15, [r4, #40]	; 0x28
 8006efe:	1b71      	subs	r1, r6, r5
 8006f00:	1ac9      	subs	r1, r1, r3
 8006f02:	9b01      	ldr	r3, [sp, #4]
 8006f04:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
 8006f08:	188a      	adds	r2, r1, r2
 8006f0a:	ee08 2a10 	vmov	s16, r2
 8006f0e:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 8006f12:	4638      	mov	r0, r7
 8006f14:	ee28 8a27 	vmul.f32	s16, s16, s15
 8006f18:	ebc9 0105 	rsb	r1, r9, r5
 8006f1c:	f006 ffc2 	bl	800dea4 <GUI_GotoXY>
 8006f20:	eeb0 0a48 	vmov.f32	s0, s16
 8006f24:	f894 002c 	ldrb.w	r0, [r4, #44]	; 0x2c
 8006f28:	f006 f85a 	bl	800cfe0 <GUI_DispFloatMin>
 8006f2c:	69e3      	ldr	r3, [r4, #28]
 8006f2e:	1aed      	subs	r5, r5, r3
 8006f30:	e7d9      	b.n	8006ee6 <_OnPaint+0x170>
	...

08006f34 <GRAPH_SCALE_Create>:
 8006f34:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8006f38:	4681      	mov	r9, r0
 8006f3a:	2030      	movs	r0, #48	; 0x30
 8006f3c:	4688      	mov	r8, r1
 8006f3e:	4617      	mov	r7, r2
 8006f40:	461e      	mov	r6, r3
 8006f42:	f008 fd73 	bl	800fa2c <GUI_ALLOC_AllocZero>
 8006f46:	4682      	mov	sl, r0
 8006f48:	b1d0      	cbz	r0, 8006f80 <GRAPH_SCALE_Create+0x4c>
 8006f4a:	f008 fa8f 	bl	800f46c <GUI_ALLOC_LockH>
 8006f4e:	ad02      	add	r5, sp, #8
 8006f50:	4a0d      	ldr	r2, [pc, #52]	; (8006f88 <GRAPH_SCALE_Create+0x54>)
 8006f52:	f845 0d04 	str.w	r0, [r5, #-4]!
 8006f56:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8006f5a:	6283      	str	r3, [r0, #40]	; 0x28
 8006f5c:	f8c0 9014 	str.w	r9, [r0, #20]
 8006f60:	f8c0 8018 	str.w	r8, [r0, #24]
 8006f64:	8487      	strh	r7, [r0, #36]	; 0x24
 8006f66:	61c6      	str	r6, [r0, #28]
 8006f68:	f100 030c 	add.w	r3, r0, #12
 8006f6c:	4604      	mov	r4, r0
 8006f6e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8006f72:	e883 0003 	stmia.w	r3, {r0, r1}
 8006f76:	4b05      	ldr	r3, [pc, #20]	; (8006f8c <GRAPH_SCALE_Create+0x58>)
 8006f78:	6023      	str	r3, [r4, #0]
 8006f7a:	4628      	mov	r0, r5
 8006f7c:	f008 fa84 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006f80:	4650      	mov	r0, sl
 8006f82:	b002      	add	sp, #8
 8006f84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006f88:	200001dc 	.word	0x200001dc
 8006f8c:	08006d77 	.word	0x08006d77

08006f90 <GRAPH_SCALE_SetOff>:
 8006f90:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006f92:	460d      	mov	r5, r1
 8006f94:	4604      	mov	r4, r0
 8006f96:	b160      	cbz	r0, 8006fb2 <GRAPH_SCALE_SetOff+0x22>
 8006f98:	f008 fa68 	bl	800f46c <GUI_ALLOC_LockH>
 8006f9c:	6a04      	ldr	r4, [r0, #32]
 8006f9e:	9001      	str	r0, [sp, #4]
 8006fa0:	42ac      	cmp	r4, r5
 8006fa2:	d003      	beq.n	8006fac <GRAPH_SCALE_SetOff+0x1c>
 8006fa4:	6205      	str	r5, [r0, #32]
 8006fa6:	6880      	ldr	r0, [r0, #8]
 8006fa8:	f002 f911 	bl	80091ce <WM_InvalidateWindow>
 8006fac:	a801      	add	r0, sp, #4
 8006fae:	f008 fa6b 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006fb2:	4620      	mov	r0, r4
 8006fb4:	b003      	add	sp, #12
 8006fb6:	bd30      	pop	{r4, r5, pc}

08006fb8 <GRAPH_SCALE_SetFactor>:
 8006fb8:	b500      	push	{lr}
 8006fba:	ed2d 8b02 	vpush	{d8}
 8006fbe:	eef0 8a40 	vmov.f32	s17, s0
 8006fc2:	b083      	sub	sp, #12
 8006fc4:	b190      	cbz	r0, 8006fec <GRAPH_SCALE_SetFactor+0x34>
 8006fc6:	f008 fa51 	bl	800f46c <GUI_ALLOC_LockH>
 8006fca:	ed90 8a0a 	vldr	s16, [r0, #40]	; 0x28
 8006fce:	9001      	str	r0, [sp, #4]
 8006fd0:	eeb4 8a68 	vcmp.f32	s16, s17
 8006fd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006fd8:	d004      	beq.n	8006fe4 <GRAPH_SCALE_SetFactor+0x2c>
 8006fda:	edc0 8a0a 	vstr	s17, [r0, #40]	; 0x28
 8006fde:	6880      	ldr	r0, [r0, #8]
 8006fe0:	f002 f8f5 	bl	80091ce <WM_InvalidateWindow>
 8006fe4:	a801      	add	r0, sp, #4
 8006fe6:	f008 fa4f 	bl	800f488 <GUI_ALLOC_UnlockH>
 8006fea:	e001      	b.n	8006ff0 <GRAPH_SCALE_SetFactor+0x38>
 8006fec:	ed9f 8a04 	vldr	s16, [pc, #16]	; 8007000 <GRAPH_SCALE_SetFactor+0x48>
 8006ff0:	eeb0 0a48 	vmov.f32	s0, s16
 8006ff4:	b003      	add	sp, #12
 8006ff6:	ecbd 8b02 	vpop	{d8}
 8006ffa:	f85d fb04 	ldr.w	pc, [sp], #4
 8006ffe:	bf00      	nop
 8007000:	00000000 	.word	0x00000000

08007004 <_OnDelete>:
 8007004:	b513      	push	{r0, r1, r4, lr}
 8007006:	4604      	mov	r4, r0
 8007008:	f008 fa30 	bl	800f46c <GUI_ALLOC_LockH>
 800700c:	9001      	str	r0, [sp, #4]
 800700e:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8007010:	b120      	cbz	r0, 800701c <_OnDelete+0x18>
 8007012:	f008 fa65 	bl	800f4e0 <GUI_ALLOC_Free>
 8007016:	9b01      	ldr	r3, [sp, #4]
 8007018:	2200      	movs	r2, #0
 800701a:	625a      	str	r2, [r3, #36]	; 0x24
 800701c:	a801      	add	r0, sp, #4
 800701e:	f008 fa33 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007022:	4620      	mov	r0, r4
 8007024:	f008 fa5c 	bl	800f4e0 <GUI_ALLOC_Free>
 8007028:	b002      	add	sp, #8
 800702a:	bd10      	pop	{r4, pc}

0800702c <_OnPaint>:
 800702c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007030:	b08b      	sub	sp, #44	; 0x2c
 8007032:	f008 fa1b 	bl	800f46c <GUI_ALLOC_LockH>
 8007036:	9007      	str	r0, [sp, #28]
 8007038:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800703a:	2800      	cmp	r0, #0
 800703c:	d060      	beq.n	8007100 <_OnPaint+0xd4>
 800703e:	f008 fa15 	bl	800f46c <GUI_ALLOC_LockH>
 8007042:	9b07      	ldr	r3, [sp, #28]
 8007044:	9005      	str	r0, [sp, #20]
 8007046:	4606      	mov	r6, r0
 8007048:	6898      	ldr	r0, [r3, #8]
 800704a:	f008 fa0f 	bl	800f46c <GUI_ALLOC_LockH>
 800704e:	9b07      	ldr	r3, [sp, #28]
 8007050:	f8d0 8054 	ldr.w	r8, [r0, #84]	; 0x54
 8007054:	6e05      	ldr	r5, [r0, #96]	; 0x60
 8007056:	6d87      	ldr	r7, [r0, #88]	; 0x58
 8007058:	6dc4      	ldr	r4, [r0, #92]	; 0x5c
 800705a:	9006      	str	r0, [sp, #24]
 800705c:	a908      	add	r1, sp, #32
 800705e:	6898      	ldr	r0, [r3, #8]
 8007060:	f001 fae6 	bl	8008630 <WM_GetInsideRectExScrollbar>
 8007064:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8007068:	9a07      	ldr	r2, [sp, #28]
 800706a:	9806      	ldr	r0, [sp, #24]
 800706c:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8007070:	f8d2 9020 	ldr.w	r9, [r2, #32]
 8007074:	441f      	add	r7, r3
 8007076:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800707a:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800707e:	f8bd 7026 	ldrh.w	r7, [sp, #38]	; 0x26
 8007082:	1b1c      	subs	r4, r3, r4
 8007084:	1b7f      	subs	r7, r7, r5
 8007086:	6913      	ldr	r3, [r2, #16]
 8007088:	f8d0 508c 	ldr.w	r5, [r0, #140]	; 0x8c
 800708c:	1b5d      	subs	r5, r3, r5
 800708e:	f892 3028 	ldrb.w	r3, [r2, #40]	; 0x28
 8007092:	4441      	add	r1, r8
 8007094:	b289      	uxth	r1, r1
 8007096:	b2a4      	uxth	r4, r4
 8007098:	b2bf      	uxth	r7, r7
 800709a:	2b01      	cmp	r3, #1
 800709c:	f8ad 1020 	strh.w	r1, [sp, #32]
 80070a0:	f8ad 4024 	strh.w	r4, [sp, #36]	; 0x24
 80070a4:	f8ad 7026 	strh.w	r7, [sp, #38]	; 0x26
 80070a8:	f8d0 8080 	ldr.w	r8, [r0, #128]	; 0x80
 80070ac:	b209      	sxth	r1, r1
 80070ae:	d008      	beq.n	80070c2 <_OnPaint+0x96>
 80070b0:	b224      	sxth	r4, r4
 80070b2:	1b64      	subs	r4, r4, r5
 80070b4:	3401      	adds	r4, #1
 80070b6:	42a1      	cmp	r1, r4
 80070b8:	dd04      	ble.n	80070c4 <_OnPaint+0x98>
 80070ba:	1b0c      	subs	r4, r1, r4
 80070bc:	eb06 0644 	add.w	r6, r6, r4, lsl #1
 80070c0:	1b2d      	subs	r5, r5, r4
 80070c2:	460c      	mov	r4, r1
 80070c4:	2d00      	cmp	r5, #0
 80070c6:	dd15      	ble.n	80070f4 <_OnPaint+0xc8>
 80070c8:	6990      	ldr	r0, [r2, #24]
 80070ca:	f006 fd77 	bl	800dbbc <GUI_SetColor>
 80070ce:	f04f 32ff 	mov.w	r2, #4294967295
 80070d2:	2301      	movs	r3, #1
 80070d4:	e88d 000c 	stmia.w	sp, {r2, r3}
 80070d8:	9a07      	ldr	r2, [sp, #28]
 80070da:	b23f      	sxth	r7, r7
 80070dc:	f892 3029 	ldrb.w	r3, [r2, #41]	; 0x29
 80070e0:	9302      	str	r3, [sp, #8]
 80070e2:	ebc9 0907 	rsb	r9, r9, r7
 80070e6:	4630      	mov	r0, r6
 80070e8:	4629      	mov	r1, r5
 80070ea:	4622      	mov	r2, r4
 80070ec:	eb09 0308 	add.w	r3, r9, r8
 80070f0:	f007 f9d8 	bl	800e4a4 <GUI_DrawGraphEx>
 80070f4:	a806      	add	r0, sp, #24
 80070f6:	f008 f9c7 	bl	800f488 <GUI_ALLOC_UnlockH>
 80070fa:	a805      	add	r0, sp, #20
 80070fc:	f008 f9c4 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007100:	a807      	add	r0, sp, #28
 8007102:	f008 f9c1 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007106:	b00b      	add	sp, #44	; 0x2c
 8007108:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800710c <_InvalidateNewItem>:
 800710c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800710e:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8007112:	2b01      	cmp	r3, #1
 8007114:	4604      	mov	r4, r0
 8007116:	6880      	ldr	r0, [r0, #8]
 8007118:	d127      	bne.n	800716a <_InvalidateNewItem+0x5e>
 800711a:	a902      	add	r1, sp, #8
 800711c:	f001 fa88 	bl	8008630 <WM_GetInsideRectExScrollbar>
 8007120:	68a0      	ldr	r0, [r4, #8]
 8007122:	f008 f9a3 	bl	800f46c <GUI_ALLOC_LockH>
 8007126:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800712a:	6d83      	ldr	r3, [r0, #88]	; 0x58
 800712c:	9001      	str	r0, [sp, #4]
 800712e:	4413      	add	r3, r2
 8007130:	f8ad 300a 	strh.w	r3, [sp, #10]
 8007134:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8007138:	6e03      	ldr	r3, [r0, #96]	; 0x60
 800713a:	1ad3      	subs	r3, r2, r3
 800713c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8007140:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8007142:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8007146:	4413      	add	r3, r2
 8007148:	6922      	ldr	r2, [r4, #16]
 800714a:	4413      	add	r3, r2
 800714c:	b29b      	uxth	r3, r3
 800714e:	1e9a      	subs	r2, r3, #2
 8007150:	a801      	add	r0, sp, #4
 8007152:	3b01      	subs	r3, #1
 8007154:	f8ad 2008 	strh.w	r2, [sp, #8]
 8007158:	f8ad 300c 	strh.w	r3, [sp, #12]
 800715c:	f008 f994 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007160:	68a0      	ldr	r0, [r4, #8]
 8007162:	a902      	add	r1, sp, #8
 8007164:	f001 fff7 	bl	8009156 <WM_InvalidateRect>
 8007168:	e001      	b.n	800716e <_InvalidateNewItem+0x62>
 800716a:	f000 fb8f 	bl	800788c <GRAPH__InvalidateGraph>
 800716e:	b004      	add	sp, #16
 8007170:	bd10      	pop	{r4, pc}
	...

08007174 <GRAPH_DATA_YT_Create>:
 8007174:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007178:	4680      	mov	r8, r0
 800717a:	202c      	movs	r0, #44	; 0x2c
 800717c:	460e      	mov	r6, r1
 800717e:	4617      	mov	r7, r2
 8007180:	461d      	mov	r5, r3
 8007182:	f008 fc53 	bl	800fa2c <GUI_ALLOC_AllocZero>
 8007186:	4604      	mov	r4, r0
 8007188:	b318      	cbz	r0, 80071d2 <GRAPH_DATA_YT_Create+0x5e>
 800718a:	0070      	lsls	r0, r6, #1
 800718c:	f008 fc4e 	bl	800fa2c <GUI_ALLOC_AllocZero>
 8007190:	4681      	mov	r9, r0
 8007192:	b158      	cbz	r0, 80071ac <GRAPH_DATA_YT_Create+0x38>
 8007194:	b157      	cbz	r7, 80071ac <GRAPH_DATA_YT_Create+0x38>
 8007196:	b14d      	cbz	r5, 80071ac <GRAPH_DATA_YT_Create+0x38>
 8007198:	f008 f968 	bl	800f46c <GUI_ALLOC_LockH>
 800719c:	4639      	mov	r1, r7
 800719e:	006a      	lsls	r2, r5, #1
 80071a0:	9001      	str	r0, [sp, #4]
 80071a2:	f00e f86c 	bl	801527e <memcpy>
 80071a6:	a801      	add	r0, sp, #4
 80071a8:	f008 f96e 	bl	800f488 <GUI_ALLOC_UnlockH>
 80071ac:	4620      	mov	r0, r4
 80071ae:	f008 f95d 	bl	800f46c <GUI_ALLOC_LockH>
 80071b2:	4b0a      	ldr	r3, [pc, #40]	; (80071dc <GRAPH_DATA_YT_Create+0x68>)
 80071b4:	9001      	str	r0, [sp, #4]
 80071b6:	60c3      	str	r3, [r0, #12]
 80071b8:	4b09      	ldr	r3, [pc, #36]	; (80071e0 <GRAPH_DATA_YT_Create+0x6c>)
 80071ba:	6003      	str	r3, [r0, #0]
 80071bc:	4b09      	ldr	r3, [pc, #36]	; (80071e4 <GRAPH_DATA_YT_Create+0x70>)
 80071be:	f8c0 9024 	str.w	r9, [r0, #36]	; 0x24
 80071c2:	f8c0 8018 	str.w	r8, [r0, #24]
 80071c6:	6146      	str	r6, [r0, #20]
 80071c8:	6105      	str	r5, [r0, #16]
 80071ca:	6043      	str	r3, [r0, #4]
 80071cc:	a801      	add	r0, sp, #4
 80071ce:	f008 f95b 	bl	800f488 <GUI_ALLOC_UnlockH>
 80071d2:	4620      	mov	r0, r4
 80071d4:	b003      	add	sp, #12
 80071d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80071da:	bf00      	nop
 80071dc:	0800710d 	.word	0x0800710d
 80071e0:	0800702d 	.word	0x0800702d
 80071e4:	08007005 	.word	0x08007005

080071e8 <GRAPH_DATA_YT_AddValue>:
 80071e8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80071ea:	f8ad 1006 	strh.w	r1, [sp, #6]
 80071ee:	f008 f93d 	bl	800f46c <GUI_ALLOC_LockH>
 80071f2:	9002      	str	r0, [sp, #8]
 80071f4:	b168      	cbz	r0, 8007212 <GRAPH_DATA_YT_AddValue+0x2a>
 80071f6:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80071f8:	f008 f938 	bl	800f46c <GUI_ALLOC_LockH>
 80071fc:	f10d 0206 	add.w	r2, sp, #6
 8007200:	4601      	mov	r1, r0
 8007202:	9003      	str	r0, [sp, #12]
 8007204:	2302      	movs	r3, #2
 8007206:	9802      	ldr	r0, [sp, #8]
 8007208:	f000 fb6f 	bl	80078ea <GRAPH__AddValue>
 800720c:	a803      	add	r0, sp, #12
 800720e:	f008 f93b 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007212:	a802      	add	r0, sp, #8
 8007214:	f008 f938 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007218:	b005      	add	sp, #20
 800721a:	f85d fb04 	ldr.w	pc, [sp], #4

0800721e <GRAPH_DATA_YT_SetAlign>:
 800721e:	b513      	push	{r0, r1, r4, lr}
 8007220:	460c      	mov	r4, r1
 8007222:	f008 f923 	bl	800f46c <GUI_ALLOC_LockH>
 8007226:	9001      	str	r0, [sp, #4]
 8007228:	b140      	cbz	r0, 800723c <GRAPH_DATA_YT_SetAlign+0x1e>
 800722a:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800722e:	42a3      	cmp	r3, r4
 8007230:	d004      	beq.n	800723c <GRAPH_DATA_YT_SetAlign+0x1e>
 8007232:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 8007236:	6880      	ldr	r0, [r0, #8]
 8007238:	f001 ffc9 	bl	80091ce <WM_InvalidateWindow>
 800723c:	a801      	add	r0, sp, #4
 800723e:	f008 f923 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007242:	b002      	add	sp, #8
 8007244:	bd10      	pop	{r4, pc}

08007246 <GRAPH_DATA_YT_Clear>:
 8007246:	b513      	push	{r0, r1, r4, lr}
 8007248:	b160      	cbz	r0, 8007264 <GRAPH_DATA_YT_Clear+0x1e>
 800724a:	f008 f90f 	bl	800f46c <GUI_ALLOC_LockH>
 800724e:	ac02      	add	r4, sp, #8
 8007250:	2300      	movs	r3, #0
 8007252:	f844 0d04 	str.w	r0, [r4, #-4]!
 8007256:	6103      	str	r3, [r0, #16]
 8007258:	6880      	ldr	r0, [r0, #8]
 800725a:	f001 ffb8 	bl	80091ce <WM_InvalidateWindow>
 800725e:	4620      	mov	r0, r4
 8007260:	f008 f912 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007264:	b002      	add	sp, #8
 8007266:	bd10      	pop	{r4, pc}

08007268 <GRAPH_CreateIndirect>:
 8007268:	b5f0      	push	{r4, r5, r6, r7, lr}
 800726a:	b087      	sub	sp, #28
 800726c:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8007270:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8007274:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8007278:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 800727c:	9100      	str	r1, [sp, #0]
 800727e:	2100      	movs	r1, #0
 8007280:	9101      	str	r1, [sp, #4]
 8007282:	8a41      	ldrh	r1, [r0, #18]
 8007284:	9102      	str	r1, [sp, #8]
 8007286:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800728a:	9103      	str	r1, [sp, #12]
 800728c:	6984      	ldr	r4, [r0, #24]
 800728e:	9404      	str	r4, [sp, #16]
 8007290:	eb0e 0002 	add.w	r0, lr, r2
 8007294:	18f9      	adds	r1, r7, r3
 8007296:	4632      	mov	r2, r6
 8007298:	462b      	mov	r3, r5
 800729a:	f000 fb53 	bl	8007944 <GRAPH_CreateUser>
 800729e:	b007      	add	sp, #28
 80072a0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080072a2 <_ManageScrollbars>:
 80072a2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80072a4:	b08b      	sub	sp, #44	; 0x2c
 80072a6:	a902      	add	r1, sp, #8
 80072a8:	4604      	mov	r4, r0
 80072aa:	f001 f9c1 	bl	8008630 <WM_GetInsideRectExScrollbar>
 80072ae:	4620      	mov	r0, r4
 80072b0:	f008 f8dc 	bl	800f46c <GUI_ALLOC_LockH>
 80072b4:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80072b8:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80072bc:	9001      	str	r0, [sp, #4]
 80072be:	1ab6      	subs	r6, r6, r2
 80072c0:	6d82      	ldr	r2, [r0, #88]	; 0x58
 80072c2:	6d45      	ldr	r5, [r0, #84]	; 0x54
 80072c4:	6dc7      	ldr	r7, [r0, #92]	; 0x5c
 80072c6:	1ab6      	subs	r6, r6, r2
 80072c8:	6e02      	ldr	r2, [r0, #96]	; 0x60
 80072ca:	1ab6      	subs	r6, r6, r2
 80072cc:	f8b0 2078 	ldrh.w	r2, [r0, #120]	; 0x78
 80072d0:	0751      	lsls	r1, r2, #29
 80072d2:	d407      	bmi.n	80072e4 <_ManageScrollbars+0x42>
 80072d4:	6f41      	ldr	r1, [r0, #116]	; 0x74
 80072d6:	42b1      	cmp	r1, r6
 80072d8:	4620      	mov	r0, r4
 80072da:	bfd4      	ite	le
 80072dc:	2100      	movle	r1, #0
 80072de:	2101      	movgt	r1, #1
 80072e0:	f000 fed4 	bl	800808c <WM_SetScrollbarV>
 80072e4:	9b01      	ldr	r3, [sp, #4]
 80072e6:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 80072ea:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 80072ec:	67da      	str	r2, [r3, #124]	; 0x7c
 80072ee:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80072f2:	f8c3 6084 	str.w	r6, [r3, #132]	; 0x84
 80072f6:	1a8a      	subs	r2, r1, r2
 80072f8:	1b55      	subs	r5, r2, r5
 80072fa:	f8b3 2078 	ldrh.w	r2, [r3, #120]	; 0x78
 80072fe:	0792      	lsls	r2, r2, #30
 8007300:	ebc7 0505 	rsb	r5, r7, r5
 8007304:	d407      	bmi.n	8007316 <_ManageScrollbars+0x74>
 8007306:	6f19      	ldr	r1, [r3, #112]	; 0x70
 8007308:	42a9      	cmp	r1, r5
 800730a:	4620      	mov	r0, r4
 800730c:	bfd4      	ite	le
 800730e:	2100      	movle	r1, #0
 8007310:	2101      	movgt	r1, #1
 8007312:	f000 feb9 	bl	8008088 <WM_SetScrollbarH>
 8007316:	9801      	ldr	r0, [sp, #4]
 8007318:	6f03      	ldr	r3, [r0, #112]	; 0x70
 800731a:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 800731e:	f8c0 5090 	str.w	r5, [r0, #144]	; 0x90
 8007322:	307c      	adds	r0, #124	; 0x7c
 8007324:	f001 fa6a 	bl	80087fc <WM_CheckScrollBounds>
 8007328:	9801      	ldr	r0, [sp, #4]
 800732a:	3088      	adds	r0, #136	; 0x88
 800732c:	f001 fa66 	bl	80087fc <WM_CheckScrollBounds>
 8007330:	9b01      	ldr	r3, [sp, #4]
 8007332:	f103 027c 	add.w	r2, r3, #124	; 0x7c
 8007336:	ca07      	ldmia	r2, {r0, r1, r2}
 8007338:	3388      	adds	r3, #136	; 0x88
 800733a:	ae07      	add	r6, sp, #28
 800733c:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8007340:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8007344:	ad04      	add	r5, sp, #16
 8007346:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800734a:	a801      	add	r0, sp, #4
 800734c:	f008 f89c 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007350:	4620      	mov	r0, r4
 8007352:	4631      	mov	r1, r6
 8007354:	462a      	mov	r2, r5
 8007356:	f7ff fa21 	bl	800679c <WIDGET__SetScrollState>
 800735a:	b00b      	add	sp, #44	; 0x2c
 800735c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800735e <_OnScrollValueChanged>:
 800735e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007360:	460c      	mov	r4, r1
 8007362:	4606      	mov	r6, r0
 8007364:	f008 f882 	bl	800f46c <GUI_ALLOC_LockH>
 8007368:	9001      	str	r0, [sp, #4]
 800736a:	4620      	mov	r0, r4
 800736c:	f008 ff74 	bl	8010258 <SCROLLBAR_GetValue>
 8007370:	4605      	mov	r5, r0
 8007372:	4620      	mov	r0, r4
 8007374:	f001 f9bc 	bl	80086f0 <WM_GetId>
 8007378:	9b01      	ldr	r3, [sp, #4]
 800737a:	28fe      	cmp	r0, #254	; 0xfe
 800737c:	bf0c      	ite	eq
 800737e:	f8c3 5080 	streq.w	r5, [r3, #128]	; 0x80
 8007382:	f8c3 508c 	strne.w	r5, [r3, #140]	; 0x8c
 8007386:	4630      	mov	r0, r6
 8007388:	f001 ff21 	bl	80091ce <WM_InvalidateWindow>
 800738c:	a801      	add	r0, sp, #4
 800738e:	f008 f87b 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007392:	b002      	add	sp, #8
 8007394:	bd70      	pop	{r4, r5, r6, pc}

08007396 <GRAPH_Callback>:
 8007396:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800739a:	6844      	ldr	r4, [r0, #4]
 800739c:	6806      	ldr	r6, [r0, #0]
 800739e:	4605      	mov	r5, r0
 80073a0:	b097      	sub	sp, #92	; 0x5c
 80073a2:	4620      	mov	r0, r4
 80073a4:	4629      	mov	r1, r5
 80073a6:	f7ff f95b 	bl	8006660 <WIDGET_HandleActive>
 80073aa:	f5b6 7f40 	cmp.w	r6, #768	; 0x300
 80073ae:	4607      	mov	r7, r0
 80073b0:	d102      	bne.n	80073b8 <GRAPH_Callback+0x22>
 80073b2:	4620      	mov	r0, r4
 80073b4:	f7ff ff75 	bl	80072a2 <_ManageScrollbars>
 80073b8:	2f00      	cmp	r7, #0
 80073ba:	f000 8264 	beq.w	8007886 <GRAPH_Callback+0x4f0>
 80073be:	682b      	ldr	r3, [r5, #0]
 80073c0:	2b0b      	cmp	r3, #11
 80073c2:	f000 8200 	beq.w	80077c6 <GRAPH_Callback+0x430>
 80073c6:	dc06      	bgt.n	80073d6 <GRAPH_Callback+0x40>
 80073c8:	2b05      	cmp	r3, #5
 80073ca:	f040 8259 	bne.w	8007880 <GRAPH_Callback+0x4ea>
 80073ce:	4620      	mov	r0, r4
 80073d0:	f7ff ff67 	bl	80072a2 <_ManageScrollbars>
 80073d4:	e254      	b.n	8007880 <GRAPH_Callback+0x4ea>
 80073d6:	2b0f      	cmp	r3, #15
 80073d8:	d003      	beq.n	80073e2 <GRAPH_Callback+0x4c>
 80073da:	2b26      	cmp	r3, #38	; 0x26
 80073dc:	f000 823d 	beq.w	800785a <GRAPH_Callback+0x4c4>
 80073e0:	e24e      	b.n	8007880 <GRAPH_Callback+0x4ea>
 80073e2:	68ed      	ldr	r5, [r5, #12]
 80073e4:	9502      	str	r5, [sp, #8]
 80073e6:	4620      	mov	r0, r4
 80073e8:	f008 f840 	bl	800f46c <GUI_ALLOC_LockH>
 80073ec:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80073ee:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 80073f0:	681b      	ldr	r3, [r3, #0]
 80073f2:	f8d0 9054 	ldr.w	r9, [r0, #84]	; 0x54
 80073f6:	f8d0 b058 	ldr.w	fp, [r0, #88]	; 0x58
 80073fa:	f8d0 a060 	ldr.w	sl, [r0, #96]	; 0x60
 80073fe:	900d      	str	r0, [sp, #52]	; 0x34
 8007400:	ad0e      	add	r5, sp, #56	; 0x38
 8007402:	4628      	mov	r0, r5
 8007404:	9303      	str	r3, [sp, #12]
 8007406:	9101      	str	r1, [sp, #4]
 8007408:	f001 f9ea 	bl	80087e0 <WM_GetClientRect>
 800740c:	980d      	ldr	r0, [sp, #52]	; 0x34
 800740e:	4629      	mov	r1, r5
 8007410:	f7ff f9f5 	bl	80067fe <WIDGET__EFFECT_DrawDownRect>
 8007414:	e895 0003 	ldmia.w	r5, {r0, r1}
 8007418:	ab12      	add	r3, sp, #72	; 0x48
 800741a:	e883 0003 	stmia.w	r3, {r0, r1}
 800741e:	9803      	ldr	r0, [sp, #12]
 8007420:	f8bd 104a 	ldrh.w	r1, [sp, #74]	; 0x4a
 8007424:	b282      	uxth	r2, r0
 8007426:	4459      	add	r1, fp
 8007428:	f8bd 004e 	ldrh.w	r0, [sp, #78]	; 0x4e
 800742c:	4411      	add	r1, r2
 800742e:	f8ad 104a 	strh.w	r1, [sp, #74]	; 0x4a
 8007432:	eb02 010a 	add.w	r1, r2, sl
 8007436:	1a41      	subs	r1, r0, r1
 8007438:	f8ad 104e 	strh.w	r1, [sp, #78]	; 0x4e
 800743c:	f8bd 1048 	ldrh.w	r1, [sp, #72]	; 0x48
 8007440:	4411      	add	r1, r2
 8007442:	4449      	add	r1, r9
 8007444:	f8ad 1048 	strh.w	r1, [sp, #72]	; 0x48
 8007448:	9901      	ldr	r1, [sp, #4]
 800744a:	440a      	add	r2, r1
 800744c:	f8bd 104c 	ldrh.w	r1, [sp, #76]	; 0x4c
 8007450:	1a8a      	subs	r2, r1, r2
 8007452:	f8ad 204c 	strh.w	r2, [sp, #76]	; 0x4c
 8007456:	e893 0003 	ldmia.w	r3, {r0, r1}
 800745a:	aa10      	add	r2, sp, #64	; 0x40
 800745c:	e882 0003 	stmia.w	r2, {r0, r1}
 8007460:	4610      	mov	r0, r2
 8007462:	f000 fdab 	bl	8007fbc <WM_SetUserClipRect>
 8007466:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8007468:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800746a:	f006 fba5 	bl	800dbb8 <GUI_SetBkColor>
 800746e:	f007 fbcd 	bl	800ec0c <GUI_Clear>
 8007472:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8007474:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8007478:	b113      	cbz	r3, 8007480 <GRAPH_Callback+0xea>
 800747a:	4620      	mov	r0, r4
 800747c:	2100      	movs	r1, #0
 800747e:	4798      	blx	r3
 8007480:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8007482:	f895 306c 	ldrb.w	r3, [r5, #108]	; 0x6c
 8007486:	2b00      	cmp	r3, #0
 8007488:	f000 808d 	beq.w	80075a6 <GRAPH_Callback+0x210>
 800748c:	4620      	mov	r0, r4
 800748e:	a914      	add	r1, sp, #80	; 0x50
 8007490:	f001 f8ce 	bl	8008630 <WM_GetInsideRectExScrollbar>
 8007494:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8007496:	f8bd 0056 	ldrh.w	r0, [sp, #86]	; 0x56
 800749a:	681b      	ldr	r3, [r3, #0]
 800749c:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 80074a0:	f8bd 1052 	ldrh.w	r1, [sp, #82]	; 0x52
 80074a4:	9304      	str	r3, [sp, #16]
 80074a6:	9007      	str	r0, [sp, #28]
 80074a8:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80074ac:	6c28      	ldr	r0, [r5, #64]	; 0x40
 80074ae:	9205      	str	r2, [sp, #20]
 80074b0:	9306      	str	r3, [sp, #24]
 80074b2:	9108      	str	r1, [sp, #32]
 80074b4:	6c6e      	ldr	r6, [r5, #68]	; 0x44
 80074b6:	6caf      	ldr	r7, [r5, #72]	; 0x48
 80074b8:	f006 fb80 	bl	800dbbc <GUI_SetColor>
 80074bc:	f006 fd08 	bl	800ded0 <GUI_GetLineStyle>
 80074c0:	9009      	str	r0, [sp, #36]	; 0x24
 80074c2:	b916      	cbnz	r6, 80074ca <GRAPH_Callback+0x134>
 80074c4:	2f00      	cmp	r7, #0
 80074c6:	d14b      	bne.n	8007560 <GRAPH_Callback+0x1ca>
 80074c8:	e046      	b.n	8007558 <GRAPH_Callback+0x1c2>
 80074ca:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 80074cc:	eb06 0c03 	add.w	ip, r6, r3
 80074d0:	f8b5 3078 	ldrh.w	r3, [r5, #120]	; 0x78
 80074d4:	07db      	lsls	r3, r3, #31
 80074d6:	bf54      	ite	pl
 80074d8:	f8d5 308c 	ldrpl.w	r3, [r5, #140]	; 0x8c
 80074dc:	2300      	movmi	r3, #0
 80074de:	eb0c 0803 	add.w	r8, ip, r3
 80074e2:	45b0      	cmp	r8, r6
 80074e4:	db02      	blt.n	80074ec <GRAPH_Callback+0x156>
 80074e6:	ebc6 0808 	rsb	r8, r6, r8
 80074ea:	e7fa      	b.n	80074e2 <GRAPH_Callback+0x14c>
 80074ec:	f895 007a 	ldrb.w	r0, [r5, #122]	; 0x7a
 80074f0:	f006 fb2e 	bl	800db50 <GUI_SetLineStyle>
 80074f4:	9805      	ldr	r0, [sp, #20]
 80074f6:	9a01      	ldr	r2, [sp, #4]
 80074f8:	b203      	sxth	r3, r0
 80074fa:	9806      	ldr	r0, [sp, #24]
 80074fc:	444a      	add	r2, r9
 80074fe:	b201      	sxth	r1, r0
 8007500:	f1c2 0201 	rsb	r2, r2, #1
 8007504:	1a5b      	subs	r3, r3, r1
 8007506:	4413      	add	r3, r2
 8007508:	4598      	cmp	r8, r3
 800750a:	dadb      	bge.n	80074c4 <GRAPH_Callback+0x12e>
 800750c:	9804      	ldr	r0, [sp, #16]
 800750e:	f9bd 1052 	ldrsh.w	r1, [sp, #82]	; 0x52
 8007512:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8007516:	f895 207a 	ldrb.w	r2, [r5, #122]	; 0x7a
 800751a:	4448      	add	r0, r9
 800751c:	4440      	add	r0, r8
 800751e:	4459      	add	r1, fp
 8007520:	ebca 0303 	rsb	r3, sl, r3
 8007524:	b11a      	cbz	r2, 800752e <GRAPH_Callback+0x198>
 8007526:	4602      	mov	r2, r0
 8007528:	f006 ff7a 	bl	800e420 <GUI_DrawLine>
 800752c:	e002      	b.n	8007534 <GRAPH_Callback+0x19e>
 800752e:	461a      	mov	r2, r3
 8007530:	f006 fd1c 	bl	800df6c <GUI_DrawVLine>
 8007534:	44b0      	add	r8, r6
 8007536:	e7dd      	b.n	80074f4 <GRAPH_Callback+0x15e>
 8007538:	f895 007b 	ldrb.w	r0, [r5, #123]	; 0x7b
 800753c:	f006 fb08 	bl	800db50 <GUI_SetLineStyle>
 8007540:	9907      	ldr	r1, [sp, #28]
 8007542:	9808      	ldr	r0, [sp, #32]
 8007544:	b20b      	sxth	r3, r1
 8007546:	eb0b 020a 	add.w	r2, fp, sl
 800754a:	b201      	sxth	r1, r0
 800754c:	f1c2 0201 	rsb	r2, r2, #1
 8007550:	1a5b      	subs	r3, r3, r1
 8007552:	4413      	add	r3, r2
 8007554:	429e      	cmp	r6, r3
 8007556:	db0c      	blt.n	8007572 <GRAPH_Callback+0x1dc>
 8007558:	9809      	ldr	r0, [sp, #36]	; 0x24
 800755a:	f006 faf9 	bl	800db50 <GUI_SetLineStyle>
 800755e:	e022      	b.n	80075a6 <GRAPH_Callback+0x210>
 8007560:	6d2e      	ldr	r6, [r5, #80]	; 0x50
 8007562:	f8d5 3080 	ldr.w	r3, [r5, #128]	; 0x80
 8007566:	443e      	add	r6, r7
 8007568:	1af6      	subs	r6, r6, r3
 800756a:	42be      	cmp	r6, r7
 800756c:	dbe4      	blt.n	8007538 <GRAPH_Callback+0x1a2>
 800756e:	1bf6      	subs	r6, r6, r7
 8007570:	e7fb      	b.n	800756a <GRAPH_Callback+0x1d4>
 8007572:	9801      	ldr	r0, [sp, #4]
 8007574:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8007578:	f9bd 1056 	ldrsh.w	r1, [sp, #86]	; 0x56
 800757c:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 8007580:	1a12      	subs	r2, r2, r0
 8007582:	f895 007b 	ldrb.w	r0, [r5, #123]	; 0x7b
 8007586:	ebca 0101 	rsb	r1, sl, r1
 800758a:	1b89      	subs	r1, r1, r6
 800758c:	444b      	add	r3, r9
 800758e:	b120      	cbz	r0, 800759a <GRAPH_Callback+0x204>
 8007590:	4618      	mov	r0, r3
 8007592:	460b      	mov	r3, r1
 8007594:	f006 ff44 	bl	800e420 <GUI_DrawLine>
 8007598:	e003      	b.n	80075a2 <GRAPH_Callback+0x20c>
 800759a:	4608      	mov	r0, r1
 800759c:	4619      	mov	r1, r3
 800759e:	f006 ff5d 	bl	800e45c <GUI_DrawHLine>
 80075a2:	443e      	add	r6, r7
 80075a4:	e7cc      	b.n	8007540 <GRAPH_Callback+0x1aa>
 80075a6:	9a03      	ldr	r2, [sp, #12]
 80075a8:	a812      	add	r0, sp, #72	; 0x48
 80075aa:	a90e      	add	r1, sp, #56	; 0x38
 80075ac:	f005 f98f 	bl	800c8ce <GUI__ReduceRect>
 80075b0:	a812      	add	r0, sp, #72	; 0x48
 80075b2:	f000 fd03 	bl	8007fbc <WM_SetUserClipRect>
 80075b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80075b8:	f893 203b 	ldrb.w	r2, [r3, #59]	; 0x3b
 80075bc:	2aff      	cmp	r2, #255	; 0xff
 80075be:	f000 80a3 	beq.w	8007708 <GRAPH_Callback+0x372>
 80075c2:	f1b9 0f00 	cmp.w	r9, #0
 80075c6:	d108      	bne.n	80075da <GRAPH_Callback+0x244>
 80075c8:	f1bb 0f00 	cmp.w	fp, #0
 80075cc:	d105      	bne.n	80075da <GRAPH_Callback+0x244>
 80075ce:	9901      	ldr	r1, [sp, #4]
 80075d0:	b919      	cbnz	r1, 80075da <GRAPH_Callback+0x244>
 80075d2:	f1ba 0f00 	cmp.w	sl, #0
 80075d6:	f000 8097 	beq.w	8007708 <GRAPH_Callback+0x372>
 80075da:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80075dc:	a914      	add	r1, sp, #80	; 0x50
 80075de:	4620      	mov	r0, r4
 80075e0:	6815      	ldr	r5, [r2, #0]
 80075e2:	9300      	str	r3, [sp, #0]
 80075e4:	f001 f824 	bl	8008630 <WM_GetInsideRectExScrollbar>
 80075e8:	f001 f812 	bl	8008610 <WM_GetOrgX>
 80075ec:	9004      	str	r0, [sp, #16]
 80075ee:	f001 f817 	bl	8008620 <WM_GetOrgY>
 80075f2:	f9bd 2052 	ldrsh.w	r2, [sp, #82]	; 0x52
 80075f6:	9b00      	ldr	r3, [sp, #0]
 80075f8:	f9bd 6054 	ldrsh.w	r6, [sp, #84]	; 0x54
 80075fc:	9005      	str	r0, [sp, #20]
 80075fe:	445a      	add	r2, fp
 8007600:	9203      	str	r2, [sp, #12]
 8007602:	9a01      	ldr	r2, [sp, #4]
 8007604:	6b98      	ldr	r0, [r3, #56]	; 0x38
 8007606:	f9bd 7050 	ldrsh.w	r7, [sp, #80]	; 0x50
 800760a:	f9bd 8056 	ldrsh.w	r8, [sp, #86]	; 0x56
 800760e:	1ab6      	subs	r6, r6, r2
 8007610:	f006 fad2 	bl	800dbb8 <GUI_SetBkColor>
 8007614:	9b00      	ldr	r3, [sp, #0]
 8007616:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8007618:	444f      	add	r7, r9
 800761a:	ebca 0808 	rsb	r8, sl, r8
 800761e:	f006 facd 	bl	800dbbc <GUI_SetColor>
 8007622:	f1b9 0f00 	cmp.w	r9, #0
 8007626:	d01b      	beq.n	8007660 <GRAPH_Callback+0x2ca>
 8007628:	9802      	ldr	r0, [sp, #8]
 800762a:	9904      	ldr	r1, [sp, #16]
 800762c:	f9b0 3000 	ldrsh.w	r3, [r0]
 8007630:	f109 32ff 	add.w	r2, r9, #4294967295
 8007634:	442a      	add	r2, r5
 8007636:	1a5b      	subs	r3, r3, r1
 8007638:	4293      	cmp	r3, r2
 800763a:	dc11      	bgt.n	8007660 <GRAPH_Callback+0x2ca>
 800763c:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8007640:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 8007644:	ebca 0303 	rsb	r3, sl, r3
 8007648:	eb05 010b 	add.w	r1, r5, fp
 800764c:	3301      	adds	r3, #1
 800764e:	f007 faab 	bl	800eba8 <GUI_ClearRect>
 8007652:	9a03      	ldr	r2, [sp, #12]
 8007654:	1e78      	subs	r0, r7, #1
 8007656:	1e51      	subs	r1, r2, #1
 8007658:	f108 0201 	add.w	r2, r8, #1
 800765c:	f006 fc86 	bl	800df6c <GUI_DrawVLine>
 8007660:	f1bb 0f00 	cmp.w	fp, #0
 8007664:	d017      	beq.n	8007696 <GRAPH_Callback+0x300>
 8007666:	9802      	ldr	r0, [sp, #8]
 8007668:	9905      	ldr	r1, [sp, #20]
 800766a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800766e:	f10b 33ff 	add.w	r3, fp, #4294967295
 8007672:	442b      	add	r3, r5
 8007674:	1a52      	subs	r2, r2, r1
 8007676:	429a      	cmp	r2, r3
 8007678:	dc0d      	bgt.n	8007696 <GRAPH_Callback+0x300>
 800767a:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 800767e:	f9bd 1052 	ldrsh.w	r1, [sp, #82]	; 0x52
 8007682:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8007686:	f007 fa8f 	bl	800eba8 <GUI_ClearRect>
 800768a:	9a03      	ldr	r2, [sp, #12]
 800768c:	1e79      	subs	r1, r7, #1
 800768e:	1e50      	subs	r0, r2, #1
 8007690:	1c72      	adds	r2, r6, #1
 8007692:	f006 fee3 	bl	800e45c <GUI_DrawHLine>
 8007696:	9b01      	ldr	r3, [sp, #4]
 8007698:	b1d3      	cbz	r3, 80076d0 <GRAPH_Callback+0x33a>
 800769a:	9902      	ldr	r1, [sp, #8]
 800769c:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 80076a0:	1ad0      	subs	r0, r2, r3
 80076a2:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80076a6:	9904      	ldr	r1, [sp, #16]
 80076a8:	3001      	adds	r0, #1
 80076aa:	1a5b      	subs	r3, r3, r1
 80076ac:	4283      	cmp	r3, r0
 80076ae:	db0f      	blt.n	80076d0 <GRAPH_Callback+0x33a>
 80076b0:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80076b4:	ebca 0303 	rsb	r3, sl, r3
 80076b8:	eb05 010b 	add.w	r1, r5, fp
 80076bc:	3301      	adds	r3, #1
 80076be:	f007 fa73 	bl	800eba8 <GUI_ClearRect>
 80076c2:	9a03      	ldr	r2, [sp, #12]
 80076c4:	1c70      	adds	r0, r6, #1
 80076c6:	1e51      	subs	r1, r2, #1
 80076c8:	f108 0201 	add.w	r2, r8, #1
 80076cc:	f006 fc4e 	bl	800df6c <GUI_DrawVLine>
 80076d0:	f1ba 0f00 	cmp.w	sl, #0
 80076d4:	d018      	beq.n	8007708 <GRAPH_Callback+0x372>
 80076d6:	9802      	ldr	r0, [sp, #8]
 80076d8:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80076dc:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80076e0:	9805      	ldr	r0, [sp, #20]
 80076e2:	ebca 0103 	rsb	r1, sl, r3
 80076e6:	3101      	adds	r1, #1
 80076e8:	ebc0 0a02 	rsb	sl, r0, r2
 80076ec:	458a      	cmp	sl, r1
 80076ee:	db0b      	blt.n	8007708 <GRAPH_Callback+0x372>
 80076f0:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 80076f4:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 80076f8:	f007 fa56 	bl	800eba8 <GUI_ClearRect>
 80076fc:	f108 0001 	add.w	r0, r8, #1
 8007700:	1e79      	subs	r1, r7, #1
 8007702:	1c72      	adds	r2, r6, #1
 8007704:	f006 feaa 	bl	800e45c <GUI_DrawHLine>
 8007708:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800770a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800770e:	b113      	cbz	r3, 8007716 <GRAPH_Callback+0x380>
 8007710:	4620      	mov	r0, r4
 8007712:	2101      	movs	r1, #1
 8007714:	4798      	blx	r3
 8007716:	a810      	add	r0, sp, #64	; 0x40
 8007718:	f000 fc50 	bl	8007fbc <WM_SetUserClipRect>
 800771c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800771e:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8007720:	f009 f8a6 	bl	8010870 <GUI_ARRAY_GetNumItems>
 8007724:	2500      	movs	r5, #0
 8007726:	4607      	mov	r7, r0
 8007728:	42bd      	cmp	r5, r7
 800772a:	d01a      	beq.n	8007762 <GRAPH_Callback+0x3cc>
 800772c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800772e:	4629      	mov	r1, r5
 8007730:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8007732:	f009 f91f 	bl	8010974 <GUI_ARRAY_GethItem>
 8007736:	f007 fe99 	bl	800f46c <GUI_ALLOC_LockH>
 800773a:	9014      	str	r0, [sp, #80]	; 0x50
 800773c:	b178      	cbz	r0, 800775e <GRAPH_Callback+0x3c8>
 800773e:	6806      	ldr	r6, [r0, #0]
 8007740:	4630      	mov	r0, r6
 8007742:	f007 fe93 	bl	800f46c <GUI_ALLOC_LockH>
 8007746:	900c      	str	r0, [sp, #48]	; 0x30
 8007748:	b130      	cbz	r0, 8007758 <GRAPH_Callback+0x3c2>
 800774a:	6803      	ldr	r3, [r0, #0]
 800774c:	9902      	ldr	r1, [sp, #8]
 800774e:	4630      	mov	r0, r6
 8007750:	4798      	blx	r3
 8007752:	a80c      	add	r0, sp, #48	; 0x30
 8007754:	f007 fe98 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007758:	a814      	add	r0, sp, #80	; 0x50
 800775a:	f007 fe95 	bl	800f488 <GUI_ALLOC_UnlockH>
 800775e:	3501      	adds	r5, #1
 8007760:	e7e2      	b.n	8007728 <GRAPH_Callback+0x392>
 8007762:	a812      	add	r0, sp, #72	; 0x48
 8007764:	f000 fc2a 	bl	8007fbc <WM_SetUserClipRect>
 8007768:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800776a:	6e98      	ldr	r0, [r3, #104]	; 0x68
 800776c:	f009 f880 	bl	8010870 <GUI_ARRAY_GetNumItems>
 8007770:	2500      	movs	r5, #0
 8007772:	4607      	mov	r7, r0
 8007774:	42bd      	cmp	r5, r7
 8007776:	d01a      	beq.n	80077ae <GRAPH_Callback+0x418>
 8007778:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800777a:	4629      	mov	r1, r5
 800777c:	6e98      	ldr	r0, [r3, #104]	; 0x68
 800777e:	f009 f8f9 	bl	8010974 <GUI_ARRAY_GethItem>
 8007782:	f007 fe73 	bl	800f46c <GUI_ALLOC_LockH>
 8007786:	9014      	str	r0, [sp, #80]	; 0x50
 8007788:	b178      	cbz	r0, 80077aa <GRAPH_Callback+0x414>
 800778a:	6806      	ldr	r6, [r0, #0]
 800778c:	4630      	mov	r0, r6
 800778e:	f007 fe6d 	bl	800f46c <GUI_ALLOC_LockH>
 8007792:	900b      	str	r0, [sp, #44]	; 0x2c
 8007794:	b130      	cbz	r0, 80077a4 <GRAPH_Callback+0x40e>
 8007796:	6803      	ldr	r3, [r0, #0]
 8007798:	9902      	ldr	r1, [sp, #8]
 800779a:	4630      	mov	r0, r6
 800779c:	4798      	blx	r3
 800779e:	a80b      	add	r0, sp, #44	; 0x2c
 80077a0:	f007 fe72 	bl	800f488 <GUI_ALLOC_UnlockH>
 80077a4:	a814      	add	r0, sp, #80	; 0x50
 80077a6:	f007 fe6f 	bl	800f488 <GUI_ALLOC_UnlockH>
 80077aa:	3501      	adds	r5, #1
 80077ac:	e7e2      	b.n	8007774 <GRAPH_Callback+0x3de>
 80077ae:	2000      	movs	r0, #0
 80077b0:	f000 fc04 	bl	8007fbc <WM_SetUserClipRect>
 80077b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80077b6:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80077ba:	b113      	cbz	r3, 80077c2 <GRAPH_Callback+0x42c>
 80077bc:	4620      	mov	r0, r4
 80077be:	2102      	movs	r1, #2
 80077c0:	4798      	blx	r3
 80077c2:	a80d      	add	r0, sp, #52	; 0x34
 80077c4:	e046      	b.n	8007854 <GRAPH_Callback+0x4be>
 80077c6:	4620      	mov	r0, r4
 80077c8:	f007 fe50 	bl	800f46c <GUI_ALLOC_LockH>
 80077cc:	9012      	str	r0, [sp, #72]	; 0x48
 80077ce:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80077d0:	f009 f84e 	bl	8010870 <GUI_ARRAY_GetNumItems>
 80077d4:	2400      	movs	r4, #0
 80077d6:	4606      	mov	r6, r0
 80077d8:	42b4      	cmp	r4, r6
 80077da:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80077dc:	da18      	bge.n	8007810 <GRAPH_Callback+0x47a>
 80077de:	6e58      	ldr	r0, [r3, #100]	; 0x64
 80077e0:	4621      	mov	r1, r4
 80077e2:	f009 f8c7 	bl	8010974 <GUI_ARRAY_GethItem>
 80077e6:	f007 fe41 	bl	800f46c <GUI_ALLOC_LockH>
 80077ea:	9014      	str	r0, [sp, #80]	; 0x50
 80077ec:	b170      	cbz	r0, 800780c <GRAPH_Callback+0x476>
 80077ee:	6805      	ldr	r5, [r0, #0]
 80077f0:	4628      	mov	r0, r5
 80077f2:	f007 fe3b 	bl	800f46c <GUI_ALLOC_LockH>
 80077f6:	9010      	str	r0, [sp, #64]	; 0x40
 80077f8:	b128      	cbz	r0, 8007806 <GRAPH_Callback+0x470>
 80077fa:	6847      	ldr	r7, [r0, #4]
 80077fc:	a810      	add	r0, sp, #64	; 0x40
 80077fe:	f007 fe43 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007802:	4628      	mov	r0, r5
 8007804:	47b8      	blx	r7
 8007806:	a814      	add	r0, sp, #80	; 0x50
 8007808:	f007 fe3e 	bl	800f488 <GUI_ALLOC_UnlockH>
 800780c:	3401      	adds	r4, #1
 800780e:	e7e3      	b.n	80077d8 <GRAPH_Callback+0x442>
 8007810:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8007812:	f009 f82d 	bl	8010870 <GUI_ARRAY_GetNumItems>
 8007816:	2400      	movs	r4, #0
 8007818:	4605      	mov	r5, r0
 800781a:	42ac      	cmp	r4, r5
 800781c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800781e:	da0f      	bge.n	8007840 <GRAPH_Callback+0x4aa>
 8007820:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8007822:	4621      	mov	r1, r4
 8007824:	f009 f8a6 	bl	8010974 <GUI_ARRAY_GethItem>
 8007828:	f007 fe20 	bl	800f46c <GUI_ALLOC_LockH>
 800782c:	9014      	str	r0, [sp, #80]	; 0x50
 800782e:	b128      	cbz	r0, 800783c <GRAPH_Callback+0x4a6>
 8007830:	6800      	ldr	r0, [r0, #0]
 8007832:	f007 fe55 	bl	800f4e0 <GUI_ALLOC_Free>
 8007836:	a814      	add	r0, sp, #80	; 0x50
 8007838:	f007 fe26 	bl	800f488 <GUI_ALLOC_UnlockH>
 800783c:	3401      	adds	r4, #1
 800783e:	e7ec      	b.n	800781a <GRAPH_Callback+0x484>
 8007840:	ac16      	add	r4, sp, #88	; 0x58
 8007842:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8007844:	f009 f86d 	bl	8010922 <GUI_ARRAY_Delete>
 8007848:	f854 3d10 	ldr.w	r3, [r4, #-16]!
 800784c:	6e98      	ldr	r0, [r3, #104]	; 0x68
 800784e:	f009 f868 	bl	8010922 <GUI_ARRAY_Delete>
 8007852:	4620      	mov	r0, r4
 8007854:	f007 fe18 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007858:	e015      	b.n	8007886 <GRAPH_Callback+0x4f0>
 800785a:	68eb      	ldr	r3, [r5, #12]
 800785c:	2b05      	cmp	r3, #5
 800785e:	d10f      	bne.n	8007880 <GRAPH_Callback+0x4ea>
 8007860:	4620      	mov	r0, r4
 8007862:	68ae      	ldr	r6, [r5, #8]
 8007864:	f000 feb7 	bl	80085d6 <WM_GetScrollbarV>
 8007868:	4286      	cmp	r6, r0
 800786a:	d005      	beq.n	8007878 <GRAPH_Callback+0x4e2>
 800786c:	4620      	mov	r0, r4
 800786e:	68ae      	ldr	r6, [r5, #8]
 8007870:	f000 feac 	bl	80085cc <WM_GetScrollbarH>
 8007874:	4286      	cmp	r6, r0
 8007876:	d103      	bne.n	8007880 <GRAPH_Callback+0x4ea>
 8007878:	6868      	ldr	r0, [r5, #4]
 800787a:	68a9      	ldr	r1, [r5, #8]
 800787c:	f7ff fd6f 	bl	800735e <_OnScrollValueChanged>
 8007880:	4628      	mov	r0, r5
 8007882:	f002 f8d5 	bl	8009a30 <WM_DefaultProc>
 8007886:	b017      	add	sp, #92	; 0x5c
 8007888:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800788c <GRAPH__InvalidateGraph>:
 800788c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8007890:	4604      	mov	r4, r0
 8007892:	f007 fdeb 	bl	800f46c <GUI_ALLOC_LockH>
 8007896:	4603      	mov	r3, r0
 8007898:	a804      	add	r0, sp, #16
 800789a:	f8d3 8054 	ldr.w	r8, [r3, #84]	; 0x54
 800789e:	f840 3d0c 	str.w	r3, [r0, #-12]!
 80078a2:	6d9f      	ldr	r7, [r3, #88]	; 0x58
 80078a4:	6dde      	ldr	r6, [r3, #92]	; 0x5c
 80078a6:	6e1d      	ldr	r5, [r3, #96]	; 0x60
 80078a8:	f007 fdee 	bl	800f488 <GUI_ALLOC_UnlockH>
 80078ac:	4620      	mov	r0, r4
 80078ae:	a902      	add	r1, sp, #8
 80078b0:	f000 febe 	bl	8008630 <WM_GetInsideRectExScrollbar>
 80078b4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80078b8:	4498      	add	r8, r3
 80078ba:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80078be:	f8ad 8008 	strh.w	r8, [sp, #8]
 80078c2:	441f      	add	r7, r3
 80078c4:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80078c8:	f8ad 700a 	strh.w	r7, [sp, #10]
 80078cc:	1b9e      	subs	r6, r3, r6
 80078ce:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80078d2:	f8ad 600c 	strh.w	r6, [sp, #12]
 80078d6:	1b5d      	subs	r5, r3, r5
 80078d8:	4620      	mov	r0, r4
 80078da:	a902      	add	r1, sp, #8
 80078dc:	f8ad 500e 	strh.w	r5, [sp, #14]
 80078e0:	f001 fc39 	bl	8009156 <WM_InvalidateRect>
 80078e4:	b004      	add	sp, #16
 80078e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080078ea <GRAPH__AddValue>:
 80078ea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80078ec:	461d      	mov	r5, r3
 80078ee:	6883      	ldr	r3, [r0, #8]
 80078f0:	4604      	mov	r4, r0
 80078f2:	460e      	mov	r6, r1
 80078f4:	4617      	mov	r7, r2
 80078f6:	b323      	cbz	r3, 8007942 <GRAPH__AddValue+0x58>
 80078f8:	6900      	ldr	r0, [r0, #16]
 80078fa:	6963      	ldr	r3, [r4, #20]
 80078fc:	4298      	cmp	r0, r3
 80078fe:	d10e      	bne.n	800791e <GRAPH__AddValue+0x34>
 8007900:	1e42      	subs	r2, r0, #1
 8007902:	436a      	muls	r2, r5
 8007904:	4608      	mov	r0, r1
 8007906:	4429      	add	r1, r5
 8007908:	f00d fcc4 	bl	8015294 <memmove>
 800790c:	6920      	ldr	r0, [r4, #16]
 800790e:	3801      	subs	r0, #1
 8007910:	fb00 6005 	mla	r0, r0, r5, r6
 8007914:	4639      	mov	r1, r7
 8007916:	462a      	mov	r2, r5
 8007918:	f00d fcbc 	bl	8015294 <memmove>
 800791c:	e00c      	b.n	8007938 <GRAPH__AddValue+0x4e>
 800791e:	1c43      	adds	r3, r0, #1
 8007920:	6123      	str	r3, [r4, #16]
 8007922:	fb00 1005 	mla	r0, r0, r5, r1
 8007926:	4611      	mov	r1, r2
 8007928:	462a      	mov	r2, r5
 800792a:	f00d fcb3 	bl	8015294 <memmove>
 800792e:	68e3      	ldr	r3, [r4, #12]
 8007930:	b113      	cbz	r3, 8007938 <GRAPH__AddValue+0x4e>
 8007932:	4620      	mov	r0, r4
 8007934:	4798      	blx	r3
 8007936:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007938:	68a0      	ldr	r0, [r4, #8]
 800793a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800793e:	f7ff bfa5 	b.w	800788c <GRAPH__InvalidateGraph>
 8007942:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007944 <GRAPH_CreateUser>:
 8007944:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007946:	b087      	sub	sp, #28
 8007948:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800794a:	9400      	str	r4, [sp, #0]
 800794c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800794e:	9401      	str	r4, [sp, #4]
 8007950:	4c17      	ldr	r4, [pc, #92]	; (80079b0 <GRAPH_CreateUser+0x6c>)
 8007952:	9402      	str	r4, [sp, #8]
 8007954:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8007956:	346c      	adds	r4, #108	; 0x6c
 8007958:	9403      	str	r4, [sp, #12]
 800795a:	f001 fc79 	bl	8009250 <WM_CreateWindowAsChild>
 800795e:	4606      	mov	r6, r0
 8007960:	b318      	cbz	r0, 80079aa <GRAPH_CreateUser+0x66>
 8007962:	f009 f81a 	bl	801099a <GUI_ARRAY_Create>
 8007966:	4605      	mov	r5, r0
 8007968:	f009 f817 	bl	801099a <GUI_ARRAY_Create>
 800796c:	4604      	mov	r4, r0
 800796e:	4630      	mov	r0, r6
 8007970:	f007 fd7c 	bl	800f46c <GUI_ALLOC_LockH>
 8007974:	6645      	str	r5, [r0, #100]	; 0x64
 8007976:	4d0f      	ldr	r5, [pc, #60]	; (80079b4 <GRAPH_CreateUser+0x70>)
 8007978:	6684      	str	r4, [r0, #104]	; 0x68
 800797a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800797c:	9005      	str	r0, [sp, #20]
 800797e:	2200      	movs	r2, #0
 8007980:	f7fe fe66 	bl	8006650 <WIDGET__Init>
 8007984:	af06      	add	r7, sp, #24
 8007986:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007988:	f857 ed04 	ldr.w	lr, [r7, #-4]!
 800798c:	f10e 0434 	add.w	r4, lr, #52	; 0x34
 8007990:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007992:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007994:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007996:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800799a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800799e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80079a0:	f8ae 3078 	strh.w	r3, [lr, #120]	; 0x78
 80079a4:	4638      	mov	r0, r7
 80079a6:	f007 fd6f 	bl	800f488 <GUI_ALLOC_UnlockH>
 80079aa:	4630      	mov	r0, r6
 80079ac:	b007      	add	sp, #28
 80079ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80079b0:	08007397 	.word	0x08007397
 80079b4:	200001e4 	.word	0x200001e4

080079b8 <GRAPH_AttachData>:
 80079b8:	b530      	push	{r4, r5, lr}
 80079ba:	b085      	sub	sp, #20
 80079bc:	4604      	mov	r4, r0
 80079be:	9101      	str	r1, [sp, #4]
 80079c0:	b1d0      	cbz	r0, 80079f8 <GRAPH_AttachData+0x40>
 80079c2:	f007 fd53 	bl	800f46c <GUI_ALLOC_LockH>
 80079c6:	ab04      	add	r3, sp, #16
 80079c8:	6e45      	ldr	r5, [r0, #100]	; 0x64
 80079ca:	f843 0d04 	str.w	r0, [r3, #-4]!
 80079ce:	4618      	mov	r0, r3
 80079d0:	f007 fd5a 	bl	800f488 <GUI_ALLOC_UnlockH>
 80079d4:	9801      	ldr	r0, [sp, #4]
 80079d6:	f007 fd49 	bl	800f46c <GUI_ALLOC_LockH>
 80079da:	4602      	mov	r2, r0
 80079dc:	a804      	add	r0, sp, #16
 80079de:	6094      	str	r4, [r2, #8]
 80079e0:	f840 2d08 	str.w	r2, [r0, #-8]!
 80079e4:	f007 fd50 	bl	800f488 <GUI_ALLOC_UnlockH>
 80079e8:	4628      	mov	r0, r5
 80079ea:	a901      	add	r1, sp, #4
 80079ec:	2204      	movs	r2, #4
 80079ee:	f008 ff4e 	bl	801088e <GUI_ARRAY_AddItem>
 80079f2:	4620      	mov	r0, r4
 80079f4:	f001 fbeb 	bl	80091ce <WM_InvalidateWindow>
 80079f8:	b005      	add	sp, #20
 80079fa:	bd30      	pop	{r4, r5, pc}

080079fc <GRAPH_AttachScale>:
 80079fc:	b530      	push	{r4, r5, lr}
 80079fe:	b085      	sub	sp, #20
 8007a00:	4604      	mov	r4, r0
 8007a02:	9101      	str	r1, [sp, #4]
 8007a04:	b1d0      	cbz	r0, 8007a3c <GRAPH_AttachScale+0x40>
 8007a06:	f007 fd31 	bl	800f46c <GUI_ALLOC_LockH>
 8007a0a:	ab04      	add	r3, sp, #16
 8007a0c:	6e85      	ldr	r5, [r0, #104]	; 0x68
 8007a0e:	f843 0d04 	str.w	r0, [r3, #-4]!
 8007a12:	4618      	mov	r0, r3
 8007a14:	f007 fd38 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007a18:	9801      	ldr	r0, [sp, #4]
 8007a1a:	f007 fd27 	bl	800f46c <GUI_ALLOC_LockH>
 8007a1e:	4602      	mov	r2, r0
 8007a20:	a804      	add	r0, sp, #16
 8007a22:	6094      	str	r4, [r2, #8]
 8007a24:	f840 2d08 	str.w	r2, [r0, #-8]!
 8007a28:	f007 fd2e 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007a2c:	4628      	mov	r0, r5
 8007a2e:	a901      	add	r1, sp, #4
 8007a30:	2204      	movs	r2, #4
 8007a32:	f008 ff2c 	bl	801088e <GUI_ARRAY_AddItem>
 8007a36:	4620      	mov	r0, r4
 8007a38:	f001 fbc9 	bl	80091ce <WM_InvalidateWindow>
 8007a3c:	b005      	add	sp, #20
 8007a3e:	bd30      	pop	{r4, r5, pc}

08007a40 <GRAPH_SetColor>:
 8007a40:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007a42:	460d      	mov	r5, r1
 8007a44:	4614      	mov	r4, r2
 8007a46:	4606      	mov	r6, r0
 8007a48:	b198      	cbz	r0, 8007a72 <GRAPH_SetColor+0x32>
 8007a4a:	f007 fd0f 	bl	800f46c <GUI_ALLOC_LockH>
 8007a4e:	2c03      	cmp	r4, #3
 8007a50:	9001      	str	r0, [sp, #4]
 8007a52:	d809      	bhi.n	8007a68 <GRAPH_SetColor+0x28>
 8007a54:	eb00 0084 	add.w	r0, r0, r4, lsl #2
 8007a58:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8007a5a:	42ac      	cmp	r4, r5
 8007a5c:	d005      	beq.n	8007a6a <GRAPH_SetColor+0x2a>
 8007a5e:	6345      	str	r5, [r0, #52]	; 0x34
 8007a60:	4630      	mov	r0, r6
 8007a62:	f001 fbb4 	bl	80091ce <WM_InvalidateWindow>
 8007a66:	e000      	b.n	8007a6a <GRAPH_SetColor+0x2a>
 8007a68:	2400      	movs	r4, #0
 8007a6a:	a801      	add	r0, sp, #4
 8007a6c:	f007 fd0c 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007a70:	e000      	b.n	8007a74 <GRAPH_SetColor+0x34>
 8007a72:	4604      	mov	r4, r0
 8007a74:	4620      	mov	r0, r4
 8007a76:	b002      	add	sp, #8
 8007a78:	bd70      	pop	{r4, r5, r6, pc}

08007a7a <GRAPH_SetGridVis>:
 8007a7a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007a7c:	460e      	mov	r6, r1
 8007a7e:	4605      	mov	r5, r0
 8007a80:	b178      	cbz	r0, 8007aa2 <GRAPH_SetGridVis+0x28>
 8007a82:	f007 fcf3 	bl	800f46c <GUI_ALLOC_LockH>
 8007a86:	f890 406c 	ldrb.w	r4, [r0, #108]	; 0x6c
 8007a8a:	9001      	str	r0, [sp, #4]
 8007a8c:	42b4      	cmp	r4, r6
 8007a8e:	d004      	beq.n	8007a9a <GRAPH_SetGridVis+0x20>
 8007a90:	f880 606c 	strb.w	r6, [r0, #108]	; 0x6c
 8007a94:	4628      	mov	r0, r5
 8007a96:	f001 fb9a 	bl	80091ce <WM_InvalidateWindow>
 8007a9a:	a801      	add	r0, sp, #4
 8007a9c:	f007 fcf4 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007aa0:	e000      	b.n	8007aa4 <GRAPH_SetGridVis+0x2a>
 8007aa2:	4604      	mov	r4, r0
 8007aa4:	4620      	mov	r0, r4
 8007aa6:	b002      	add	sp, #8
 8007aa8:	bd70      	pop	{r4, r5, r6, pc}

08007aaa <GRAPH_SetAutoScrollbar>:
 8007aaa:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007aac:	460e      	mov	r6, r1
 8007aae:	4615      	mov	r5, r2
 8007ab0:	4607      	mov	r7, r0
 8007ab2:	b320      	cbz	r0, 8007afe <GRAPH_SetAutoScrollbar+0x54>
 8007ab4:	f007 fcda 	bl	800f46c <GUI_ALLOC_LockH>
 8007ab8:	9001      	str	r0, [sp, #4]
 8007aba:	f8b0 4078 	ldrh.w	r4, [r0, #120]	; 0x78
 8007abe:	b946      	cbnz	r6, 8007ad2 <GRAPH_SetAutoScrollbar+0x28>
 8007ac0:	2d01      	cmp	r5, #1
 8007ac2:	d102      	bne.n	8007aca <GRAPH_SetAutoScrollbar+0x20>
 8007ac4:	f024 0202 	bic.w	r2, r4, #2
 8007ac8:	e00d      	b.n	8007ae6 <GRAPH_SetAutoScrollbar+0x3c>
 8007aca:	b975      	cbnz	r5, 8007aea <GRAPH_SetAutoScrollbar+0x40>
 8007acc:	f044 0202 	orr.w	r2, r4, #2
 8007ad0:	e009      	b.n	8007ae6 <GRAPH_SetAutoScrollbar+0x3c>
 8007ad2:	2e01      	cmp	r6, #1
 8007ad4:	d109      	bne.n	8007aea <GRAPH_SetAutoScrollbar+0x40>
 8007ad6:	2d01      	cmp	r5, #1
 8007ad8:	d102      	bne.n	8007ae0 <GRAPH_SetAutoScrollbar+0x36>
 8007ada:	f024 0204 	bic.w	r2, r4, #4
 8007ade:	e002      	b.n	8007ae6 <GRAPH_SetAutoScrollbar+0x3c>
 8007ae0:	b91d      	cbnz	r5, 8007aea <GRAPH_SetAutoScrollbar+0x40>
 8007ae2:	f044 0204 	orr.w	r2, r4, #4
 8007ae6:	f8a0 2078 	strh.w	r2, [r0, #120]	; 0x78
 8007aea:	f8b0 3078 	ldrh.w	r3, [r0, #120]	; 0x78
 8007aee:	42a3      	cmp	r3, r4
 8007af0:	d002      	beq.n	8007af8 <GRAPH_SetAutoScrollbar+0x4e>
 8007af2:	4638      	mov	r0, r7
 8007af4:	f001 fb6b 	bl	80091ce <WM_InvalidateWindow>
 8007af8:	a801      	add	r0, sp, #4
 8007afa:	f007 fcc5 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007afe:	b003      	add	sp, #12
 8007b00:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007b02 <GUI_CreateDialogBox>:
 8007b02:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007b06:	4606      	mov	r6, r0
 8007b08:	4688      	mov	r8, r1
 8007b0a:	4614      	mov	r4, r2
 8007b0c:	461d      	mov	r5, r3
 8007b0e:	b913      	cbnz	r3, 8007b16 <GUI_CreateDialogBox+0x14>
 8007b10:	f000 fe38 	bl	8008784 <WM_GetDesktopWindow>
 8007b14:	4605      	mov	r5, r0
 8007b16:	9400      	str	r4, [sp, #0]
 8007b18:	4630      	mov	r0, r6
 8007b1a:	6834      	ldr	r4, [r6, #0]
 8007b1c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007b1e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007b20:	4629      	mov	r1, r5
 8007b22:	47a0      	blx	r4
 8007b24:	4604      	mov	r4, r0
 8007b26:	2800      	cmp	r0, #0
 8007b28:	d039      	beq.n	8007b9e <GUI_CreateDialogBox+0x9c>
 8007b2a:	f000 fe37 	bl	800879c <WM_GetClientWindow>
 8007b2e:	8a71      	ldrh	r1, [r6, #18]
 8007b30:	4607      	mov	r7, r0
 8007b32:	4620      	mov	r0, r4
 8007b34:	f7fe fd61 	bl	80065fa <WIDGET_OrState>
 8007b38:	4620      	mov	r0, r4
 8007b3a:	f000 fa2b 	bl	8007f94 <WM_ShowWindow>
 8007b3e:	4638      	mov	r0, r7
 8007b40:	f108 38ff 	add.w	r8, r8, #4294967295
 8007b44:	f000 fa26 	bl	8007f94 <WM_ShowWindow>
 8007b48:	f1b8 0f00 	cmp.w	r8, #0
 8007b4c:	dd0f      	ble.n	8007b6e <GUI_CreateDialogBox+0x6c>
 8007b4e:	f856 cf1c 	ldr.w	ip, [r6, #28]!
 8007b52:	2200      	movs	r2, #0
 8007b54:	9200      	str	r2, [sp, #0]
 8007b56:	4630      	mov	r0, r6
 8007b58:	4639      	mov	r1, r7
 8007b5a:	4613      	mov	r3, r2
 8007b5c:	47e0      	blx	ip
 8007b5e:	4681      	mov	r9, r0
 8007b60:	2800      	cmp	r0, #0
 8007b62:	d1ed      	bne.n	8007b40 <GUI_CreateDialogBox+0x3e>
 8007b64:	4620      	mov	r0, r4
 8007b66:	f001 fc1d 	bl	80093a4 <WM_DeleteWindow>
 8007b6a:	4648      	mov	r0, r9
 8007b6c:	e018      	b.n	8007ba0 <GUI_CreateDialogBox+0x9e>
 8007b6e:	4638      	mov	r0, r7
 8007b70:	211d      	movs	r1, #29
 8007b72:	f000 fb8d 	bl	8008290 <WM_SendMessageNoPara>
 8007b76:	1c6b      	adds	r3, r5, #1
 8007b78:	d011      	beq.n	8007b9e <GUI_CreateDialogBox+0x9c>
 8007b7a:	f000 fdc9 	bl	8008710 <WM_GetFocussedWindow>
 8007b7e:	b150      	cbz	r0, 8007b96 <GUI_CreateDialogBox+0x94>
 8007b80:	f007 fc6a 	bl	800f458 <GUI_ALLOC_h2p>
 8007b84:	6980      	ldr	r0, [r0, #24]
 8007b86:	42a0      	cmp	r0, r4
 8007b88:	d00a      	beq.n	8007ba0 <GUI_CreateDialogBox+0x9e>
 8007b8a:	2800      	cmp	r0, #0
 8007b8c:	d1f8      	bne.n	8007b80 <GUI_CreateDialogBox+0x7e>
 8007b8e:	4620      	mov	r0, r4
 8007b90:	f000 fac8 	bl	8008124 <WM_SetFocusOnNextChild>
 8007b94:	e003      	b.n	8007b9e <GUI_CreateDialogBox+0x9c>
 8007b96:	42a5      	cmp	r5, r4
 8007b98:	d1f9      	bne.n	8007b8e <GUI_CreateDialogBox+0x8c>
 8007b9a:	4628      	mov	r0, r5
 8007b9c:	e000      	b.n	8007ba0 <GUI_CreateDialogBox+0x9e>
 8007b9e:	4620      	mov	r0, r4
 8007ba0:	b003      	add	sp, #12
 8007ba2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08007ba6 <BUTTON_CreateIndirect>:
 8007ba6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007ba8:	b087      	sub	sp, #28
 8007baa:	4604      	mov	r4, r0
 8007bac:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 8007bb0:	9100      	str	r1, [sp, #0]
 8007bb2:	2100      	movs	r1, #0
 8007bb4:	f9b4 e00c 	ldrsh.w	lr, [r4, #12]
 8007bb8:	f9b4 700e 	ldrsh.w	r7, [r4, #14]
 8007bbc:	f9b4 6010 	ldrsh.w	r6, [r4, #16]
 8007bc0:	9101      	str	r1, [sp, #4]
 8007bc2:	8a61      	ldrh	r1, [r4, #18]
 8007bc4:	69a5      	ldr	r5, [r4, #24]
 8007bc6:	9102      	str	r1, [sp, #8]
 8007bc8:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8007bcc:	9103      	str	r1, [sp, #12]
 8007bce:	9504      	str	r5, [sp, #16]
 8007bd0:	eb0e 0103 	add.w	r1, lr, r3
 8007bd4:	4410      	add	r0, r2
 8007bd6:	4633      	mov	r3, r6
 8007bd8:	463a      	mov	r2, r7
 8007bda:	f000 f8cd 	bl	8007d78 <BUTTON_CreateUser>
 8007bde:	6861      	ldr	r1, [r4, #4]
 8007be0:	4605      	mov	r5, r0
 8007be2:	f000 f901 	bl	8007de8 <BUTTON_SetText>
 8007be6:	4628      	mov	r0, r5
 8007be8:	b007      	add	sp, #28
 8007bea:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007bec <_OnButtonPressed>:
 8007bec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007bee:	f44f 7180 	mov.w	r1, #256	; 0x100
 8007bf2:	4604      	mov	r4, r0
 8007bf4:	f7fe fd01 	bl	80065fa <WIDGET_OrState>
 8007bf8:	4620      	mov	r0, r4
 8007bfa:	f007 fc37 	bl	800f46c <GUI_ALLOC_LockH>
 8007bfe:	ab02      	add	r3, sp, #8
 8007c00:	6a85      	ldr	r5, [r0, #40]	; 0x28
 8007c02:	f843 0d04 	str.w	r0, [r3, #-4]!
 8007c06:	4618      	mov	r0, r3
 8007c08:	f007 fc3e 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007c0c:	07ab      	lsls	r3, r5, #30
 8007c0e:	d503      	bpl.n	8007c18 <_OnButtonPressed+0x2c>
 8007c10:	4620      	mov	r0, r4
 8007c12:	2101      	movs	r1, #1
 8007c14:	f000 fbb9 	bl	800838a <WM_NotifyParent>
 8007c18:	b003      	add	sp, #12
 8007c1a:	bd30      	pop	{r4, r5, pc}

08007c1c <_OnButtonReleased>:
 8007c1c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007c1e:	4605      	mov	r5, r0
 8007c20:	460c      	mov	r4, r1
 8007c22:	f44f 7180 	mov.w	r1, #256	; 0x100
 8007c26:	f7fe fcfe 	bl	8006626 <WIDGET_AndState>
 8007c2a:	4628      	mov	r0, r5
 8007c2c:	f007 fc1e 	bl	800f46c <GUI_ALLOC_LockH>
 8007c30:	4602      	mov	r2, r0
 8007c32:	a802      	add	r0, sp, #8
 8007c34:	6a96      	ldr	r6, [r2, #40]	; 0x28
 8007c36:	f840 2d04 	str.w	r2, [r0, #-4]!
 8007c3a:	8e17      	ldrh	r7, [r2, #48]	; 0x30
 8007c3c:	f007 fc24 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007c40:	2c02      	cmp	r4, #2
 8007c42:	d102      	bne.n	8007c4a <_OnButtonReleased+0x2e>
 8007c44:	4638      	mov	r0, r7
 8007c46:	f006 f8cd 	bl	800dde4 <GUI_StoreKey>
 8007c4a:	07b3      	lsls	r3, r6, #30
 8007c4c:	d503      	bpl.n	8007c56 <_OnButtonReleased+0x3a>
 8007c4e:	4628      	mov	r0, r5
 8007c50:	4621      	mov	r1, r4
 8007c52:	f000 fb9a 	bl	800838a <WM_NotifyParent>
 8007c56:	b003      	add	sp, #12
 8007c58:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007c5a <_OnTouchDefault>:
 8007c5a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007c5c:	460d      	mov	r5, r1
 8007c5e:	4604      	mov	r4, r0
 8007c60:	f007 fc04 	bl	800f46c <GUI_ALLOC_LockH>
 8007c64:	ab02      	add	r3, sp, #8
 8007c66:	8e46      	ldrh	r6, [r0, #50]	; 0x32
 8007c68:	f843 0d04 	str.w	r0, [r3, #-4]!
 8007c6c:	4618      	mov	r0, r3
 8007c6e:	f007 fc0b 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007c72:	68ea      	ldr	r2, [r5, #12]
 8007c74:	b162      	cbz	r2, 8007c90 <_OnTouchDefault+0x36>
 8007c76:	7a12      	ldrb	r2, [r2, #8]
 8007c78:	f406 7380 	and.w	r3, r6, #256	; 0x100
 8007c7c:	b122      	cbz	r2, 8007c88 <_OnTouchDefault+0x2e>
 8007c7e:	b95b      	cbnz	r3, 8007c98 <_OnTouchDefault+0x3e>
 8007c80:	4620      	mov	r0, r4
 8007c82:	f7ff ffb3 	bl	8007bec <_OnButtonPressed>
 8007c86:	e007      	b.n	8007c98 <_OnTouchDefault+0x3e>
 8007c88:	b133      	cbz	r3, 8007c98 <_OnTouchDefault+0x3e>
 8007c8a:	4620      	mov	r0, r4
 8007c8c:	2102      	movs	r1, #2
 8007c8e:	e001      	b.n	8007c94 <_OnTouchDefault+0x3a>
 8007c90:	4620      	mov	r0, r4
 8007c92:	2103      	movs	r1, #3
 8007c94:	f7ff ffc2 	bl	8007c1c <_OnButtonReleased>
 8007c98:	b002      	add	sp, #8
 8007c9a:	bd70      	pop	{r4, r5, r6, pc}

08007c9c <BUTTON_Callback>:
 8007c9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007c9e:	6844      	ldr	r4, [r0, #4]
 8007ca0:	4605      	mov	r5, r0
 8007ca2:	4629      	mov	r1, r5
 8007ca4:	4620      	mov	r0, r4
 8007ca6:	f7fe fcdb 	bl	8006660 <WIDGET_HandleActive>
 8007caa:	2800      	cmp	r0, #0
 8007cac:	d05d      	beq.n	8007d6a <BUTTON_Callback+0xce>
 8007cae:	682b      	ldr	r3, [r5, #0]
 8007cb0:	2b0f      	cmp	r3, #15
 8007cb2:	d016      	beq.n	8007ce2 <BUTTON_Callback+0x46>
 8007cb4:	dc04      	bgt.n	8007cc0 <BUTTON_Callback+0x24>
 8007cb6:	2b0b      	cmp	r3, #11
 8007cb8:	d023      	beq.n	8007d02 <BUTTON_Callback+0x66>
 8007cba:	2b0e      	cmp	r3, #14
 8007cbc:	d033      	beq.n	8007d26 <BUTTON_Callback+0x8a>
 8007cbe:	e051      	b.n	8007d64 <BUTTON_Callback+0xc8>
 8007cc0:	2b28      	cmp	r3, #40	; 0x28
 8007cc2:	d048      	beq.n	8007d56 <BUTTON_Callback+0xba>
 8007cc4:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8007cc8:	d005      	beq.n	8007cd6 <BUTTON_Callback+0x3a>
 8007cca:	2b11      	cmp	r3, #17
 8007ccc:	d14a      	bne.n	8007d64 <BUTTON_Callback+0xc8>
 8007cce:	4b28      	ldr	r3, [pc, #160]	; (8007d70 <BUTTON_Callback+0xd4>)
 8007cd0:	681b      	ldr	r3, [r3, #0]
 8007cd2:	b913      	cbnz	r3, 8007cda <BUTTON_Callback+0x3e>
 8007cd4:	e049      	b.n	8007d6a <BUTTON_Callback+0xce>
 8007cd6:	4b27      	ldr	r3, [pc, #156]	; (8007d74 <BUTTON_Callback+0xd8>)
 8007cd8:	681b      	ldr	r3, [r3, #0]
 8007cda:	4620      	mov	r0, r4
 8007cdc:	4629      	mov	r1, r5
 8007cde:	4798      	blx	r3
 8007ce0:	e043      	b.n	8007d6a <BUTTON_Callback+0xce>
 8007ce2:	4620      	mov	r0, r4
 8007ce4:	f007 fbc2 	bl	800f46c <GUI_ALLOC_LockH>
 8007ce8:	ab02      	add	r3, sp, #8
 8007cea:	f843 0d04 	str.w	r0, [r3, #-4]!
 8007cee:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8007cf0:	6815      	ldr	r5, [r2, #0]
 8007cf2:	4618      	mov	r0, r3
 8007cf4:	f007 fbc8 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007cf8:	2d00      	cmp	r5, #0
 8007cfa:	d036      	beq.n	8007d6a <BUTTON_Callback+0xce>
 8007cfc:	4620      	mov	r0, r4
 8007cfe:	47a8      	blx	r5
 8007d00:	e033      	b.n	8007d6a <BUTTON_Callback+0xce>
 8007d02:	4620      	mov	r0, r4
 8007d04:	f007 fbb2 	bl	800f46c <GUI_ALLOC_LockH>
 8007d08:	ac02      	add	r4, sp, #8
 8007d0a:	9001      	str	r0, [sp, #4]
 8007d0c:	3068      	adds	r0, #104	; 0x68
 8007d0e:	f007 fe05 	bl	800f91c <GUI_ALLOC_FreePtr>
 8007d12:	f854 0d04 	ldr.w	r0, [r4, #-4]!
 8007d16:	2103      	movs	r1, #3
 8007d18:	306c      	adds	r0, #108	; 0x6c
 8007d1a:	f007 fe07 	bl	800f92c <GUI_ALLOC_FreePtrArray>
 8007d1e:	4620      	mov	r0, r4
 8007d20:	f007 fbb2 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007d24:	e01e      	b.n	8007d64 <BUTTON_Callback+0xc8>
 8007d26:	68ea      	ldr	r2, [r5, #12]
 8007d28:	ca0c      	ldmia	r2, {r2, r3}
 8007d2a:	2a0d      	cmp	r2, #13
 8007d2c:	d002      	beq.n	8007d34 <BUTTON_Callback+0x98>
 8007d2e:	2a20      	cmp	r2, #32
 8007d30:	d007      	beq.n	8007d42 <BUTTON_Callback+0xa6>
 8007d32:	e010      	b.n	8007d56 <BUTTON_Callback+0xba>
 8007d34:	2b00      	cmp	r3, #0
 8007d36:	dd0e      	ble.n	8007d56 <BUTTON_Callback+0xba>
 8007d38:	4620      	mov	r0, r4
 8007d3a:	f7ff ff57 	bl	8007bec <_OnButtonPressed>
 8007d3e:	4620      	mov	r0, r4
 8007d40:	e005      	b.n	8007d4e <BUTTON_Callback+0xb2>
 8007d42:	2b00      	cmp	r3, #0
 8007d44:	4620      	mov	r0, r4
 8007d46:	dd02      	ble.n	8007d4e <BUTTON_Callback+0xb2>
 8007d48:	f7ff ff50 	bl	8007bec <_OnButtonPressed>
 8007d4c:	e00d      	b.n	8007d6a <BUTTON_Callback+0xce>
 8007d4e:	2102      	movs	r1, #2
 8007d50:	f7ff ff64 	bl	8007c1c <_OnButtonReleased>
 8007d54:	e009      	b.n	8007d6a <BUTTON_Callback+0xce>
 8007d56:	68eb      	ldr	r3, [r5, #12]
 8007d58:	b923      	cbnz	r3, 8007d64 <BUTTON_Callback+0xc8>
 8007d5a:	4620      	mov	r0, r4
 8007d5c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8007d60:	f7fe fc61 	bl	8006626 <WIDGET_AndState>
 8007d64:	4628      	mov	r0, r5
 8007d66:	f001 fe63 	bl	8009a30 <WM_DefaultProc>
 8007d6a:	b003      	add	sp, #12
 8007d6c:	bd30      	pop	{r4, r5, pc}
 8007d6e:	bf00      	nop
 8007d70:	20019ccc 	.word	0x20019ccc
 8007d74:	20000214 	.word	0x20000214

08007d78 <BUTTON_CreateUser>:
 8007d78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007d7a:	b087      	sub	sp, #28
 8007d7c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8007d7e:	9400      	str	r4, [sp, #0]
 8007d80:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8007d82:	9401      	str	r4, [sp, #4]
 8007d84:	4c15      	ldr	r4, [pc, #84]	; (8007ddc <BUTTON_CreateUser+0x64>)
 8007d86:	9402      	str	r4, [sp, #8]
 8007d88:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8007d8a:	344c      	adds	r4, #76	; 0x4c
 8007d8c:	9403      	str	r4, [sp, #12]
 8007d8e:	f001 fa5f 	bl	8009250 <WM_CreateWindowAsChild>
 8007d92:	4607      	mov	r7, r0
 8007d94:	b1f8      	cbz	r0, 8007dd6 <BUTTON_CreateUser+0x5e>
 8007d96:	f007 fb69 	bl	800f46c <GUI_ALLOC_LockH>
 8007d9a:	4d11      	ldr	r5, [pc, #68]	; (8007de0 <BUTTON_CreateUser+0x68>)
 8007d9c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8007d9e:	9005      	str	r0, [sp, #20]
 8007da0:	2210      	movs	r2, #16
 8007da2:	f7fe fc55 	bl	8006650 <WIDGET__Init>
 8007da6:	ae06      	add	r6, sp, #24
 8007da8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007daa:	f856 ed04 	ldr.w	lr, [r6, #-4]!
 8007dae:	f10e 0434 	add.w	r4, lr, #52	; 0x34
 8007db2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007db4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007db6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007db8:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8007dbc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8007dc0:	4c08      	ldr	r4, [pc, #32]	; (8007de4 <BUTTON_CreateUser+0x6c>)
 8007dc2:	6823      	ldr	r3, [r4, #0]
 8007dc4:	f8ce 3064 	str.w	r3, [lr, #100]	; 0x64
 8007dc8:	4630      	mov	r0, r6
 8007dca:	f007 fb5d 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007dce:	6823      	ldr	r3, [r4, #0]
 8007dd0:	4638      	mov	r0, r7
 8007dd2:	685b      	ldr	r3, [r3, #4]
 8007dd4:	4798      	blx	r3
 8007dd6:	4638      	mov	r0, r7
 8007dd8:	b007      	add	sp, #28
 8007dda:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007ddc:	08007c9d 	.word	0x08007c9d
 8007de0:	20000218 	.word	0x20000218
 8007de4:	20000248 	.word	0x20000248

08007de8 <BUTTON_SetText>:
 8007de8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007dea:	460c      	mov	r4, r1
 8007dec:	4605      	mov	r5, r0
 8007dee:	b300      	cbz	r0, 8007e32 <BUTTON_SetText+0x4a>
 8007df0:	f007 fb3c 	bl	800f46c <GUI_ALLOC_LockH>
 8007df4:	6e86      	ldr	r6, [r0, #104]	; 0x68
 8007df6:	9000      	str	r0, [sp, #0]
 8007df8:	4668      	mov	r0, sp
 8007dfa:	9601      	str	r6, [sp, #4]
 8007dfc:	f007 fb44 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007e00:	4621      	mov	r1, r4
 8007e02:	a801      	add	r0, sp, #4
 8007e04:	f004 fd28 	bl	800c858 <GUI__SetText>
 8007e08:	f1d0 0401 	rsbs	r4, r0, #1
 8007e0c:	bf38      	it	cc
 8007e0e:	2400      	movcc	r4, #0
 8007e10:	b984      	cbnz	r4, 8007e34 <BUTTON_SetText+0x4c>
 8007e12:	9b01      	ldr	r3, [sp, #4]
 8007e14:	42b3      	cmp	r3, r6
 8007e16:	d008      	beq.n	8007e2a <BUTTON_SetText+0x42>
 8007e18:	4628      	mov	r0, r5
 8007e1a:	f007 fb27 	bl	800f46c <GUI_ALLOC_LockH>
 8007e1e:	9b01      	ldr	r3, [sp, #4]
 8007e20:	9000      	str	r0, [sp, #0]
 8007e22:	6683      	str	r3, [r0, #104]	; 0x68
 8007e24:	4668      	mov	r0, sp
 8007e26:	f007 fb2f 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007e2a:	4628      	mov	r0, r5
 8007e2c:	f001 f9cf 	bl	80091ce <WM_InvalidateWindow>
 8007e30:	e000      	b.n	8007e34 <BUTTON_SetText+0x4c>
 8007e32:	2401      	movs	r4, #1
 8007e34:	4620      	mov	r0, r4
 8007e36:	b002      	add	sp, #8
 8007e38:	bd70      	pop	{r4, r5, r6, pc}

08007e3a <WM__UpdateChildPositions>:
 8007e3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007e3e:	b087      	sub	sp, #28
 8007e40:	69c4      	ldr	r4, [r0, #28]
 8007e42:	9303      	str	r3, [sp, #12]
 8007e44:	468a      	mov	sl, r1
 8007e46:	4693      	mov	fp, r2
 8007e48:	2c00      	cmp	r4, #0
 8007e4a:	d06d      	beq.n	8007f28 <WM__UpdateChildPositions+0xee>
 8007e4c:	4620      	mov	r0, r4
 8007e4e:	f007 fb0d 	bl	800f46c <GUI_ALLOC_LockH>
 8007e52:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8007e54:	9005      	str	r0, [sp, #20]
 8007e56:	f401 7320 	and.w	r3, r1, #640	; 0x280
 8007e5a:	2b80      	cmp	r3, #128	; 0x80
 8007e5c:	f8b0 8000 	ldrh.w	r8, [r0]
 8007e60:	8842      	ldrh	r2, [r0, #2]
 8007e62:	8886      	ldrh	r6, [r0, #4]
 8007e64:	88c5      	ldrh	r5, [r0, #6]
 8007e66:	d008      	beq.n	8007e7a <WM__UpdateChildPositions+0x40>
 8007e68:	f5b3 7f20 	cmp.w	r3, #640	; 0x280
 8007e6c:	d108      	bne.n	8007e80 <WM__UpdateChildPositions+0x46>
 8007e6e:	eb08 090a 	add.w	r9, r8, sl
 8007e72:	fa1f f989 	uxth.w	r9, r9
 8007e76:	9b03      	ldr	r3, [sp, #12]
 8007e78:	e008      	b.n	8007e8c <WM__UpdateChildPositions+0x52>
 8007e7a:	9803      	ldr	r0, [sp, #12]
 8007e7c:	b283      	uxth	r3, r0
 8007e7e:	e001      	b.n	8007e84 <WM__UpdateChildPositions+0x4a>
 8007e80:	fa1f f38a 	uxth.w	r3, sl
 8007e84:	eb03 0908 	add.w	r9, r3, r8
 8007e88:	fa1f f989 	uxth.w	r9, r9
 8007e8c:	f401 61a0 	and.w	r1, r1, #1280	; 0x500
 8007e90:	4433      	add	r3, r6
 8007e92:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8007e96:	b29b      	uxth	r3, r3
 8007e98:	d008      	beq.n	8007eac <WM__UpdateChildPositions+0x72>
 8007e9a:	f5b1 6fa0 	cmp.w	r1, #1280	; 0x500
 8007e9e:	d108      	bne.n	8007eb2 <WM__UpdateChildPositions+0x78>
 8007ea0:	eb02 0c0b 	add.w	ip, r2, fp
 8007ea4:	fa1f fc8c 	uxth.w	ip, ip
 8007ea8:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8007eaa:	e008      	b.n	8007ebe <WM__UpdateChildPositions+0x84>
 8007eac:	9910      	ldr	r1, [sp, #64]	; 0x40
 8007eae:	b28f      	uxth	r7, r1
 8007eb0:	e001      	b.n	8007eb6 <WM__UpdateChildPositions+0x7c>
 8007eb2:	fa1f f78b 	uxth.w	r7, fp
 8007eb6:	eb07 0c02 	add.w	ip, r7, r2
 8007eba:	fa1f fc8c 	uxth.w	ip, ip
 8007ebe:	fa0f f989 	sxth.w	r9, r9
 8007ec2:	fa0f f888 	sxth.w	r8, r8
 8007ec6:	b212      	sxth	r2, r2
 8007ec8:	442f      	add	r7, r5
 8007eca:	fa0f fc8c 	sxth.w	ip, ip
 8007ece:	ebb9 0108 	subs.w	r1, r9, r8
 8007ed2:	9202      	str	r2, [sp, #8]
 8007ed4:	b2bf      	uxth	r7, r7
 8007ed6:	ebc2 020c 	rsb	r2, r2, ip
 8007eda:	d100      	bne.n	8007ede <WM__UpdateChildPositions+0xa4>
 8007edc:	b142      	cbz	r2, 8007ef0 <WM__UpdateChildPositions+0xb6>
 8007ede:	4620      	mov	r0, r4
 8007ee0:	9301      	str	r3, [sp, #4]
 8007ee2:	f8cd c000 	str.w	ip, [sp]
 8007ee6:	f000 fae4 	bl	80084b2 <WM_MoveWindow>
 8007eea:	f8dd c000 	ldr.w	ip, [sp]
 8007eee:	9b01      	ldr	r3, [sp, #4]
 8007ef0:	b21b      	sxth	r3, r3
 8007ef2:	ebc9 0903 	rsb	r9, r9, r3
 8007ef6:	b236      	sxth	r6, r6
 8007ef8:	9b02      	ldr	r3, [sp, #8]
 8007efa:	ebc6 0808 	rsb	r8, r6, r8
 8007efe:	b23f      	sxth	r7, r7
 8007f00:	b22d      	sxth	r5, r5
 8007f02:	ebcc 0c07 	rsb	ip, ip, r7
 8007f06:	1b5d      	subs	r5, r3, r5
 8007f08:	eb19 0108 	adds.w	r1, r9, r8
 8007f0c:	eb0c 0205 	add.w	r2, ip, r5
 8007f10:	d100      	bne.n	8007f14 <WM__UpdateChildPositions+0xda>
 8007f12:	b112      	cbz	r2, 8007f1a <WM__UpdateChildPositions+0xe0>
 8007f14:	4620      	mov	r0, r4
 8007f16:	f000 f9bd 	bl	8008294 <WM_ResizeWindow>
 8007f1a:	a806      	add	r0, sp, #24
 8007f1c:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8007f20:	6a1c      	ldr	r4, [r3, #32]
 8007f22:	f007 fab1 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007f26:	e78f      	b.n	8007e48 <WM__UpdateChildPositions+0xe>
 8007f28:	b007      	add	sp, #28
 8007f2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08007f2e <WM__Screen2Client>:
 8007f2e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8007f32:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8007f36:	4608      	mov	r0, r1
 8007f38:	4252      	negs	r2, r2
 8007f3a:	4259      	negs	r1, r3
 8007f3c:	f005 bf76 	b.w	800de2c <GUI_MoveRect>

08007f40 <WM__IsAncestor>:
 8007f40:	b510      	push	{r4, lr}
 8007f42:	460c      	mov	r4, r1
 8007f44:	b908      	cbnz	r0, 8007f4a <WM__IsAncestor+0xa>
 8007f46:	2000      	movs	r0, #0
 8007f48:	bd10      	pop	{r4, pc}
 8007f4a:	2900      	cmp	r1, #0
 8007f4c:	d0fb      	beq.n	8007f46 <WM__IsAncestor+0x6>
 8007f4e:	f007 fa83 	bl	800f458 <GUI_ALLOC_h2p>
 8007f52:	6980      	ldr	r0, [r0, #24]
 8007f54:	42a0      	cmp	r0, r4
 8007f56:	d002      	beq.n	8007f5e <WM__IsAncestor+0x1e>
 8007f58:	2800      	cmp	r0, #0
 8007f5a:	d1f8      	bne.n	8007f4e <WM__IsAncestor+0xe>
 8007f5c:	e7f3      	b.n	8007f46 <WM__IsAncestor+0x6>
 8007f5e:	2001      	movs	r0, #1
 8007f60:	bd10      	pop	{r4, pc}

08007f62 <WM__IsAncestorOrSelf>:
 8007f62:	4288      	cmp	r0, r1
 8007f64:	d001      	beq.n	8007f6a <WM__IsAncestorOrSelf+0x8>
 8007f66:	f7ff bfeb 	b.w	8007f40 <WM__IsAncestor>
 8007f6a:	2001      	movs	r0, #1
 8007f6c:	4770      	bx	lr

08007f6e <WM_InvalidateWindowAndDescs>:
 8007f6e:	b510      	push	{r4, lr}
 8007f70:	4604      	mov	r4, r0
 8007f72:	b170      	cbz	r0, 8007f92 <WM_InvalidateWindowAndDescs+0x24>
 8007f74:	f001 f92b 	bl	80091ce <WM_InvalidateWindow>
 8007f78:	4620      	mov	r0, r4
 8007f7a:	f000 fbda 	bl	8008732 <WM_GetFirstChild>
 8007f7e:	4604      	mov	r4, r0
 8007f80:	b13c      	cbz	r4, 8007f92 <WM_InvalidateWindowAndDescs+0x24>
 8007f82:	4620      	mov	r0, r4
 8007f84:	f7ff fff3 	bl	8007f6e <WM_InvalidateWindowAndDescs>
 8007f88:	4620      	mov	r0, r4
 8007f8a:	f007 fa65 	bl	800f458 <GUI_ALLOC_h2p>
 8007f8e:	6a04      	ldr	r4, [r0, #32]
 8007f90:	e7f6      	b.n	8007f80 <WM_InvalidateWindowAndDescs+0x12>
 8007f92:	bd10      	pop	{r4, pc}

08007f94 <WM_ShowWindow>:
 8007f94:	b513      	push	{r0, r1, r4, lr}
 8007f96:	4604      	mov	r4, r0
 8007f98:	b170      	cbz	r0, 8007fb8 <WM_ShowWindow+0x24>
 8007f9a:	f007 fa67 	bl	800f46c <GUI_ALLOC_LockH>
 8007f9e:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8007fa0:	9001      	str	r0, [sp, #4]
 8007fa2:	0793      	lsls	r3, r2, #30
 8007fa4:	d405      	bmi.n	8007fb2 <WM_ShowWindow+0x1e>
 8007fa6:	f042 0202 	orr.w	r2, r2, #2
 8007faa:	6282      	str	r2, [r0, #40]	; 0x28
 8007fac:	4620      	mov	r0, r4
 8007fae:	f7ff ffde 	bl	8007f6e <WM_InvalidateWindowAndDescs>
 8007fb2:	a801      	add	r0, sp, #4
 8007fb4:	f007 fa68 	bl	800f488 <GUI_ALLOC_UnlockH>
 8007fb8:	b002      	add	sp, #8
 8007fba:	bd10      	pop	{r4, pc}

08007fbc <WM_SetUserClipRect>:
 8007fbc:	4b04      	ldr	r3, [pc, #16]	; (8007fd0 <WM_SetUserClipRect+0x14>)
 8007fbe:	b510      	push	{r4, lr}
 8007fc0:	681b      	ldr	r3, [r3, #0]
 8007fc2:	6c5c      	ldr	r4, [r3, #68]	; 0x44
 8007fc4:	6458      	str	r0, [r3, #68]	; 0x44
 8007fc6:	f000 ff5b 	bl	8008e80 <WM__ActivateClipRect>
 8007fca:	4620      	mov	r0, r4
 8007fcc:	bd10      	pop	{r4, pc}
 8007fce:	bf00      	nop
 8007fd0:	20000274 	.word	0x20000274

08007fd4 <WM_SetHasTrans>:
 8007fd4:	b513      	push	{r0, r1, r4, lr}
 8007fd6:	4604      	mov	r4, r0
 8007fd8:	b1b8      	cbz	r0, 800800a <WM_SetHasTrans+0x36>
 8007fda:	f007 fa47 	bl	800f46c <GUI_ALLOC_LockH>
 8007fde:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8007fe0:	9001      	str	r0, [sp, #4]
 8007fe2:	07db      	lsls	r3, r3, #31
 8007fe4:	d40e      	bmi.n	8008004 <WM_SetHasTrans+0x30>
 8007fe6:	4620      	mov	r0, r4
 8007fe8:	f008 fec6 	bl	8010d78 <WM_ValidateWindow>
 8007fec:	9b01      	ldr	r3, [sp, #4]
 8007fee:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8007ff0:	f042 0201 	orr.w	r2, r2, #1
 8007ff4:	629a      	str	r2, [r3, #40]	; 0x28
 8007ff6:	4b06      	ldr	r3, [pc, #24]	; (8008010 <WM_SetHasTrans+0x3c>)
 8007ff8:	681a      	ldr	r2, [r3, #0]
 8007ffa:	4620      	mov	r0, r4
 8007ffc:	3201      	adds	r2, #1
 8007ffe:	601a      	str	r2, [r3, #0]
 8008000:	f001 f8e5 	bl	80091ce <WM_InvalidateWindow>
 8008004:	a801      	add	r0, sp, #4
 8008006:	f007 fa3f 	bl	800f488 <GUI_ALLOC_UnlockH>
 800800a:	b002      	add	sp, #8
 800800c:	bd10      	pop	{r4, pc}
 800800e:	bf00      	nop
 8008010:	2001ba00 	.word	0x2001ba00

08008014 <WM_GetHasTrans>:
 8008014:	b508      	push	{r3, lr}
 8008016:	b128      	cbz	r0, 8008024 <WM_GetHasTrans+0x10>
 8008018:	f007 fa1e 	bl	800f458 <GUI_ALLOC_h2p>
 800801c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800801e:	f000 0001 	and.w	r0, r0, #1
 8008022:	bd08      	pop	{r3, pc}
 8008024:	bd08      	pop	{r3, pc}

08008026 <_SetScrollbar>:
 8008026:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008028:	460d      	mov	r5, r1
 800802a:	4611      	mov	r1, r2
 800802c:	4606      	mov	r6, r0
 800802e:	461f      	mov	r7, r3
 8008030:	f000 fba4 	bl	800877c <WM_GetDialogItem>
 8008034:	4604      	mov	r4, r0
 8008036:	b1a5      	cbz	r5, 8008062 <_SetScrollbar+0x3c>
 8008038:	b920      	cbnz	r0, 8008044 <_SetScrollbar+0x1e>
 800803a:	4630      	mov	r0, r6
 800803c:	4639      	mov	r1, r7
 800803e:	f008 f91a 	bl	8010276 <SCROLLBAR_CreateAttached>
 8008042:	e014      	b.n	800806e <_SetScrollbar+0x48>
 8008044:	f007 fa12 	bl	800f46c <GUI_ALLOC_LockH>
 8008048:	ab02      	add	r3, sp, #8
 800804a:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800804c:	f843 0d04 	str.w	r0, [r3, #-4]!
 8008050:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8008054:	f042 0202 	orr.w	r2, r2, #2
 8008058:	6282      	str	r2, [r0, #40]	; 0x28
 800805a:	4618      	mov	r0, r3
 800805c:	f007 fa14 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008060:	e005      	b.n	800806e <_SetScrollbar+0x48>
 8008062:	b120      	cbz	r0, 800806e <_SetScrollbar+0x48>
 8008064:	f000 fa42 	bl	80084ec <WM_HideWindow>
 8008068:	4620      	mov	r0, r4
 800806a:	f001 fc13 	bl	8009894 <WM__DeleteSecure>
 800806e:	1c20      	adds	r0, r4, #0
 8008070:	bf18      	it	ne
 8008072:	2001      	movne	r0, #1
 8008074:	b003      	add	sp, #12
 8008076:	bdf0      	pop	{r4, r5, r6, r7, pc}

08008078 <WM__SetScrollbarV>:
 8008078:	22fe      	movs	r2, #254	; 0xfe
 800807a:	2308      	movs	r3, #8
 800807c:	f7ff bfd3 	b.w	8008026 <_SetScrollbar>

08008080 <WM__SetScrollbarH>:
 8008080:	22ff      	movs	r2, #255	; 0xff
 8008082:	2300      	movs	r3, #0
 8008084:	f7ff bfcf 	b.w	8008026 <_SetScrollbar>

08008088 <WM_SetScrollbarH>:
 8008088:	f7ff bffa 	b.w	8008080 <WM__SetScrollbarH>

0800808c <WM_SetScrollbarV>:
 800808c:	f7ff bff4 	b.w	8008078 <WM__SetScrollbarV>

08008090 <WM_SetScrollState>:
 8008090:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8008092:	b130      	cbz	r0, 80080a2 <WM_SetScrollState+0x12>
 8008094:	b129      	cbz	r1, 80080a2 <WM_SetScrollState+0x12>
 8008096:	2324      	movs	r3, #36	; 0x24
 8008098:	9103      	str	r1, [sp, #12]
 800809a:	4669      	mov	r1, sp
 800809c:	9300      	str	r3, [sp, #0]
 800809e:	f001 f83f 	bl	8009120 <WM_SendMessage>
 80080a2:	b005      	add	sp, #20
 80080a4:	f85d fb04 	ldr.w	pc, [sp], #4

080080a8 <_GetPrevChild>:
 80080a8:	b510      	push	{r4, lr}
 80080aa:	4604      	mov	r4, r0
 80080ac:	b918      	cbnz	r0, 80080b6 <_GetPrevChild+0xe>
 80080ae:	4620      	mov	r0, r4
 80080b0:	f008 fe3a 	bl	8010d28 <WM__GetLastSibling>
 80080b4:	e003      	b.n	80080be <_GetPrevChild+0x16>
 80080b6:	f008 fe24 	bl	8010d02 <WM__GetPrevSibling>
 80080ba:	2800      	cmp	r0, #0
 80080bc:	d0f7      	beq.n	80080ae <_GetPrevChild+0x6>
 80080be:	42a0      	cmp	r0, r4
 80080c0:	bf08      	it	eq
 80080c2:	2000      	moveq	r0, #0
 80080c4:	bd10      	pop	{r4, pc}

080080c6 <WM_SetFocusOnPrevChild>:
 80080c6:	b538      	push	{r3, r4, r5, lr}
 80080c8:	4604      	mov	r4, r0
 80080ca:	b1b0      	cbz	r0, 80080fa <WM_SetFocusOnPrevChild+0x34>
 80080cc:	f008 fe38 	bl	8010d40 <WM__GetFocussedChild>
 80080d0:	f7ff ffea 	bl	80080a8 <_GetPrevChild>
 80080d4:	4605      	mov	r5, r0
 80080d6:	4604      	mov	r4, r0
 80080d8:	4620      	mov	r0, r4
 80080da:	f000 f9ee 	bl	80084ba <WM_IsFocussable>
 80080de:	b930      	cbnz	r0, 80080ee <WM_SetFocusOnPrevChild+0x28>
 80080e0:	b12c      	cbz	r4, 80080ee <WM_SetFocusOnPrevChild+0x28>
 80080e2:	4620      	mov	r0, r4
 80080e4:	f7ff ffe0 	bl	80080a8 <_GetPrevChild>
 80080e8:	42a8      	cmp	r0, r5
 80080ea:	4604      	mov	r4, r0
 80080ec:	d1f4      	bne.n	80080d8 <WM_SetFocusOnPrevChild+0x12>
 80080ee:	4620      	mov	r0, r4
 80080f0:	f000 f84a 	bl	8008188 <WM_SetFocus>
 80080f4:	2800      	cmp	r0, #0
 80080f6:	bf18      	it	ne
 80080f8:	2400      	movne	r4, #0
 80080fa:	4620      	mov	r0, r4
 80080fc:	bd38      	pop	{r3, r4, r5, pc}

080080fe <_GetNextChild>:
 80080fe:	b538      	push	{r3, r4, r5, lr}
 8008100:	4605      	mov	r5, r0
 8008102:	460c      	mov	r4, r1
 8008104:	b921      	cbnz	r1, 8008110 <_GetNextChild+0x12>
 8008106:	4628      	mov	r0, r5
 8008108:	f007 f9a6 	bl	800f458 <GUI_ALLOC_h2p>
 800810c:	69c0      	ldr	r0, [r0, #28]
 800810e:	e005      	b.n	800811c <_GetNextChild+0x1e>
 8008110:	4608      	mov	r0, r1
 8008112:	f007 f9a1 	bl	800f458 <GUI_ALLOC_h2p>
 8008116:	6a00      	ldr	r0, [r0, #32]
 8008118:	2800      	cmp	r0, #0
 800811a:	d0f4      	beq.n	8008106 <_GetNextChild+0x8>
 800811c:	42a0      	cmp	r0, r4
 800811e:	bf08      	it	eq
 8008120:	2000      	moveq	r0, #0
 8008122:	bd38      	pop	{r3, r4, r5, pc}

08008124 <WM_SetFocusOnNextChild>:
 8008124:	b570      	push	{r4, r5, r6, lr}
 8008126:	4605      	mov	r5, r0
 8008128:	b340      	cbz	r0, 800817c <WM_SetFocusOnNextChild+0x58>
 800812a:	f008 fe09 	bl	8010d40 <WM__GetFocussedChild>
 800812e:	4601      	mov	r1, r0
 8008130:	4628      	mov	r0, r5
 8008132:	f7ff ffe4 	bl	80080fe <_GetNextChild>
 8008136:	4606      	mov	r6, r0
 8008138:	4604      	mov	r4, r0
 800813a:	4620      	mov	r0, r4
 800813c:	f000 f9bd 	bl	80084ba <WM_IsFocussable>
 8008140:	b938      	cbnz	r0, 8008152 <WM_SetFocusOnNextChild+0x2e>
 8008142:	b13c      	cbz	r4, 8008154 <WM_SetFocusOnNextChild+0x30>
 8008144:	4621      	mov	r1, r4
 8008146:	4628      	mov	r0, r5
 8008148:	f7ff ffd9 	bl	80080fe <_GetNextChild>
 800814c:	42b0      	cmp	r0, r6
 800814e:	4604      	mov	r4, r0
 8008150:	d1f3      	bne.n	800813a <WM_SetFocusOnNextChild+0x16>
 8008152:	b90c      	cbnz	r4, 8008158 <WM_SetFocusOnNextChild+0x34>
 8008154:	2400      	movs	r4, #0
 8008156:	e012      	b.n	800817e <WM_SetFocusOnNextChild+0x5a>
 8008158:	4d0a      	ldr	r5, [pc, #40]	; (8008184 <WM_SetFocusOnNextChild+0x60>)
 800815a:	4620      	mov	r0, r4
 800815c:	682e      	ldr	r6, [r5, #0]
 800815e:	f001 f839 	bl	80091d4 <WM__GetTopLevelLayer>
 8008162:	3001      	adds	r0, #1
 8008164:	d00b      	beq.n	800817e <WM_SetFocusOnNextChild+0x5a>
 8008166:	4620      	mov	r0, r4
 8008168:	f001 f834 	bl	80091d4 <WM__GetTopLevelLayer>
 800816c:	6028      	str	r0, [r5, #0]
 800816e:	4620      	mov	r0, r4
 8008170:	f000 f80a 	bl	8008188 <WM_SetFocus>
 8008174:	602e      	str	r6, [r5, #0]
 8008176:	2800      	cmp	r0, #0
 8008178:	d1ec      	bne.n	8008154 <WM_SetFocusOnNextChild+0x30>
 800817a:	e000      	b.n	800817e <WM_SetFocusOnNextChild+0x5a>
 800817c:	4604      	mov	r4, r0
 800817e:	4620      	mov	r0, r4
 8008180:	bd70      	pop	{r4, r5, r6, pc}
 8008182:	bf00      	nop
 8008184:	2001b9d8 	.word	0x2001b9d8

08008188 <WM_SetFocus>:
 8008188:	b5f0      	push	{r4, r5, r6, r7, lr}
 800818a:	b087      	sub	sp, #28
 800818c:	4604      	mov	r4, r0
 800818e:	2100      	movs	r1, #0
 8008190:	a802      	add	r0, sp, #8
 8008192:	2210      	movs	r2, #16
 8008194:	f00d f897 	bl	80152c6 <memset>
 8008198:	2c00      	cmp	r4, #0
 800819a:	d03a      	beq.n	8008212 <WM_SetFocus+0x8a>
 800819c:	4b1f      	ldr	r3, [pc, #124]	; (800821c <WM_SetFocus+0x94>)
 800819e:	4a20      	ldr	r2, [pc, #128]	; (8008220 <WM_SetFocus+0x98>)
 80081a0:	6819      	ldr	r1, [r3, #0]
 80081a2:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 80081a6:	4284      	cmp	r4, r0
 80081a8:	4616      	mov	r6, r2
 80081aa:	461f      	mov	r7, r3
 80081ac:	d031      	beq.n	8008212 <WM_SetFocus+0x8a>
 80081ae:	231e      	movs	r3, #30
 80081b0:	e88d 0011 	stmia.w	sp, {r0, r4}
 80081b4:	9302      	str	r3, [sp, #8]
 80081b6:	b110      	cbz	r0, 80081be <WM_SetFocus+0x36>
 80081b8:	a902      	add	r1, sp, #8
 80081ba:	f008 fd7b 	bl	8010cb4 <WM__SendMessage>
 80081be:	2301      	movs	r3, #1
 80081c0:	4620      	mov	r0, r4
 80081c2:	a902      	add	r1, sp, #8
 80081c4:	9305      	str	r3, [sp, #20]
 80081c6:	f008 fd75 	bl	8010cb4 <WM__SendMessage>
 80081ca:	9d05      	ldr	r5, [sp, #20]
 80081cc:	bb15      	cbnz	r5, 8008214 <WM_SetFocus+0x8c>
 80081ce:	683b      	ldr	r3, [r7, #0]
 80081d0:	f846 4023 	str.w	r4, [r6, r3, lsl #2]
 80081d4:	4620      	mov	r0, r4
 80081d6:	f000 fa03 	bl	80085e0 <WM_GetParent>
 80081da:	4604      	mov	r4, r0
 80081dc:	b138      	cbz	r0, 80081ee <WM_SetFocus+0x66>
 80081de:	2320      	movs	r3, #32
 80081e0:	9302      	str	r3, [sp, #8]
 80081e2:	a902      	add	r1, sp, #8
 80081e4:	ab00      	add	r3, sp, #0
 80081e6:	9305      	str	r3, [sp, #20]
 80081e8:	f008 fd64 	bl	8010cb4 <WM__SendMessage>
 80081ec:	e7f2      	b.n	80081d4 <WM_SetFocus+0x4c>
 80081ee:	9c00      	ldr	r4, [sp, #0]
 80081f0:	4620      	mov	r0, r4
 80081f2:	f000 f960 	bl	80084b6 <WM_IsWindow>
 80081f6:	b168      	cbz	r0, 8008214 <WM_SetFocus+0x8c>
 80081f8:	4620      	mov	r0, r4
 80081fa:	f000 f9f1 	bl	80085e0 <WM_GetParent>
 80081fe:	4604      	mov	r4, r0
 8008200:	b140      	cbz	r0, 8008214 <WM_SetFocus+0x8c>
 8008202:	2320      	movs	r3, #32
 8008204:	9302      	str	r3, [sp, #8]
 8008206:	a902      	add	r1, sp, #8
 8008208:	ab00      	add	r3, sp, #0
 800820a:	9305      	str	r3, [sp, #20]
 800820c:	f008 fd52 	bl	8010cb4 <WM__SendMessage>
 8008210:	e7f2      	b.n	80081f8 <WM_SetFocus+0x70>
 8008212:	2501      	movs	r5, #1
 8008214:	4628      	mov	r0, r5
 8008216:	b007      	add	sp, #28
 8008218:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800821a:	bf00      	nop
 800821c:	2001b9d8 	.word	0x2001b9d8
 8008220:	2001b9c8 	.word	0x2001b9c8

08008224 <WM__ReleaseCapture>:
 8008224:	b530      	push	{r4, r5, lr}
 8008226:	4d0a      	ldr	r5, [pc, #40]	; (8008250 <WM__ReleaseCapture+0x2c>)
 8008228:	4c0a      	ldr	r4, [pc, #40]	; (8008254 <WM__ReleaseCapture+0x30>)
 800822a:	682b      	ldr	r3, [r5, #0]
 800822c:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8008230:	b085      	sub	sp, #20
 8008232:	b150      	cbz	r0, 800824a <WM__ReleaseCapture+0x26>
 8008234:	a904      	add	r1, sp, #16
 8008236:	2318      	movs	r3, #24
 8008238:	f841 3d10 	str.w	r3, [r1, #-16]!
 800823c:	4669      	mov	r1, sp
 800823e:	f008 fd39 	bl	8010cb4 <WM__SendMessage>
 8008242:	682b      	ldr	r3, [r5, #0]
 8008244:	2200      	movs	r2, #0
 8008246:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
 800824a:	b005      	add	sp, #20
 800824c:	bd30      	pop	{r4, r5, pc}
 800824e:	bf00      	nop
 8008250:	2001b9d8 	.word	0x2001b9d8
 8008254:	2001b9f4 	.word	0x2001b9f4

08008258 <WM_SetCapture>:
 8008258:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800825a:	4b09      	ldr	r3, [pc, #36]	; (8008280 <WM_SetCapture+0x28>)
 800825c:	4a09      	ldr	r2, [pc, #36]	; (8008284 <WM_SetCapture+0x2c>)
 800825e:	4604      	mov	r4, r0
 8008260:	6818      	ldr	r0, [r3, #0]
 8008262:	460f      	mov	r7, r1
 8008264:	f852 1020 	ldr.w	r1, [r2, r0, lsl #2]
 8008268:	42a1      	cmp	r1, r4
 800826a:	4615      	mov	r5, r2
 800826c:	461e      	mov	r6, r3
 800826e:	d001      	beq.n	8008274 <WM_SetCapture+0x1c>
 8008270:	f7ff ffd8 	bl	8008224 <WM__ReleaseCapture>
 8008274:	6833      	ldr	r3, [r6, #0]
 8008276:	f845 4023 	str.w	r4, [r5, r3, lsl #2]
 800827a:	4b03      	ldr	r3, [pc, #12]	; (8008288 <WM_SetCapture+0x30>)
 800827c:	701f      	strb	r7, [r3, #0]
 800827e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008280:	2001b9d8 	.word	0x2001b9d8
 8008284:	2001b9f4 	.word	0x2001b9f4
 8008288:	2001b9dc 	.word	0x2001b9dc

0800828c <WM_ReleaseCapture>:
 800828c:	f7ff bfca 	b.w	8008224 <WM__ReleaseCapture>

08008290 <WM_SendMessageNoPara>:
 8008290:	f008 bcfc 	b.w	8010c8c <WM__SendMessageNoPara>

08008294 <WM_ResizeWindow>:
 8008294:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008298:	ea51 0302 	orrs.w	r3, r1, r2
 800829c:	b08a      	sub	sp, #40	; 0x28
 800829e:	4680      	mov	r8, r0
 80082a0:	460e      	mov	r6, r1
 80082a2:	4617      	mov	r7, r2
 80082a4:	d06e      	beq.n	8008384 <WM_ResizeWindow+0xf0>
 80082a6:	2800      	cmp	r0, #0
 80082a8:	d06c      	beq.n	8008384 <WM_ResizeWindow+0xf0>
 80082aa:	f007 f8df 	bl	800f46c <GUI_ALLOC_LockH>
 80082ae:	4603      	mov	r3, r0
 80082b0:	9003      	str	r0, [sp, #12]
 80082b2:	c803      	ldmia	r0, {r0, r1}
 80082b4:	ad04      	add	r5, sp, #16
 80082b6:	ac06      	add	r4, sp, #24
 80082b8:	e885 0003 	stmia.w	r5, {r0, r1}
 80082bc:	e884 0003 	stmia.w	r4, {r0, r1}
 80082c0:	b17e      	cbz	r6, 80082e2 <WM_ResizeWindow+0x4e>
 80082c2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80082c4:	f402 7220 	and.w	r2, r2, #640	; 0x280
 80082c8:	2a80      	cmp	r2, #128	; 0x80
 80082ca:	d105      	bne.n	80082d8 <WM_ResizeWindow+0x44>
 80082cc:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 80082d0:	1b96      	subs	r6, r2, r6
 80082d2:	f8ad 6018 	strh.w	r6, [sp, #24]
 80082d6:	e004      	b.n	80082e2 <WM_ResizeWindow+0x4e>
 80082d8:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 80082dc:	4416      	add	r6, r2
 80082de:	f8ad 601c 	strh.w	r6, [sp, #28]
 80082e2:	b187      	cbz	r7, 8008306 <WM_ResizeWindow+0x72>
 80082e4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80082e6:	f402 62a0 	and.w	r2, r2, #1280	; 0x500
 80082ea:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 80082ee:	d105      	bne.n	80082fc <WM_ResizeWindow+0x68>
 80082f0:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80082f4:	1bd7      	subs	r7, r2, r7
 80082f6:	f8ad 701a 	strh.w	r7, [sp, #26]
 80082fa:	e004      	b.n	8008306 <WM_ResizeWindow+0x72>
 80082fc:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8008300:	4417      	add	r7, r2
 8008302:	f8ad 701e 	strh.w	r7, [sp, #30]
 8008306:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008308:	03da      	lsls	r2, r3, #15
 800830a:	d502      	bpl.n	8008312 <WM_ResizeWindow+0x7e>
 800830c:	4640      	mov	r0, r8
 800830e:	f000 fdeb 	bl	8008ee8 <WM__InvalidateDrawAndDescs>
 8008312:	e894 0003 	ldmia.w	r4, {r0, r1}
 8008316:	9b03      	ldr	r3, [sp, #12]
 8008318:	e883 0003 	stmia.w	r3, {r0, r1}
 800831c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800831e:	079b      	lsls	r3, r3, #30
 8008320:	d50a      	bpl.n	8008338 <WM_ResizeWindow+0xa4>
 8008322:	a808      	add	r0, sp, #32
 8008324:	4629      	mov	r1, r5
 8008326:	4622      	mov	r2, r4
 8008328:	f005 fd90 	bl	800de4c <GUI_MergeRect>
 800832c:	9b03      	ldr	r3, [sp, #12]
 800832e:	a808      	add	r0, sp, #32
 8008330:	6999      	ldr	r1, [r3, #24]
 8008332:	6a1a      	ldr	r2, [r3, #32]
 8008334:	f000 fedc 	bl	80090f0 <WM__InvalidateRectEx>
 8008338:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 800833c:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8008340:	f9bd 701e 	ldrsh.w	r7, [sp, #30]
 8008344:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8008348:	f9bd 6018 	ldrsh.w	r6, [sp, #24]
 800834c:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 8008350:	f9bd 501a 	ldrsh.w	r5, [sp, #26]
 8008354:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8008358:	1ae3      	subs	r3, r4, r3
 800835a:	1a38      	subs	r0, r7, r0
 800835c:	ac0a      	add	r4, sp, #40	; 0x28
 800835e:	1aaa      	subs	r2, r5, r2
 8008360:	9000      	str	r0, [sp, #0]
 8008362:	1a71      	subs	r1, r6, r1
 8008364:	9803      	ldr	r0, [sp, #12]
 8008366:	f7ff fd68 	bl	8007e3a <WM__UpdateChildPositions>
 800836a:	f854 1d1c 	ldr.w	r1, [r4, #-28]!
 800836e:	f101 0008 	add.w	r0, r1, #8
 8008372:	f004 fb69 	bl	800ca48 <GUI__IntersectRect>
 8008376:	4640      	mov	r0, r8
 8008378:	2105      	movs	r1, #5
 800837a:	f000 fed5 	bl	8009128 <WM__SendMsgNoData>
 800837e:	4620      	mov	r0, r4
 8008380:	f007 f882 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008384:	b00a      	add	sp, #40	; 0x28
 8008386:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800838a <WM_NotifyParent>:
 800838a:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800838c:	2326      	movs	r3, #38	; 0x26
 800838e:	9103      	str	r1, [sp, #12]
 8008390:	4669      	mov	r1, sp
 8008392:	9300      	str	r3, [sp, #0]
 8008394:	f008 ffec 	bl	8011370 <WM_SendToParent>
 8008398:	b005      	add	sp, #20
 800839a:	f85d fb04 	ldr.w	pc, [sp], #4

0800839e <_MoveDescendents>:
 800839e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80083a2:	b088      	sub	sp, #32
 80083a4:	4606      	mov	r6, r0
 80083a6:	460c      	mov	r4, r1
 80083a8:	4615      	mov	r5, r2
 80083aa:	a804      	add	r0, sp, #16
 80083ac:	2100      	movs	r1, #0
 80083ae:	2210      	movs	r2, #16
 80083b0:	f00c ff89 	bl	80152c6 <memset>
 80083b4:	b336      	cbz	r6, 8008404 <_MoveDescendents+0x66>
 80083b6:	4630      	mov	r0, r6
 80083b8:	f007 f858 	bl	800f46c <GUI_ALLOC_LockH>
 80083bc:	4621      	mov	r1, r4
 80083be:	462a      	mov	r2, r5
 80083c0:	9001      	str	r0, [sp, #4]
 80083c2:	f005 fd33 	bl	800de2c <GUI_MoveRect>
 80083c6:	9801      	ldr	r0, [sp, #4]
 80083c8:	4621      	mov	r1, r4
 80083ca:	3008      	adds	r0, #8
 80083cc:	462a      	mov	r2, r5
 80083ce:	f005 fd2d 	bl	800de2c <GUI_MoveRect>
 80083d2:	a808      	add	r0, sp, #32
 80083d4:	f850 2d1c 	ldr.w	r2, [r0, #-28]!
 80083d8:	f8d2 801c 	ldr.w	r8, [r2, #28]
 80083dc:	6a17      	ldr	r7, [r2, #32]
 80083de:	f007 f853 	bl	800f488 <GUI_ALLOC_UnlockH>
 80083e2:	4640      	mov	r0, r8
 80083e4:	4621      	mov	r1, r4
 80083e6:	462a      	mov	r2, r5
 80083e8:	f7ff ffd9 	bl	800839e <_MoveDescendents>
 80083ec:	2303      	movs	r3, #3
 80083ee:	9304      	str	r3, [sp, #16]
 80083f0:	4630      	mov	r0, r6
 80083f2:	ab02      	add	r3, sp, #8
 80083f4:	a904      	add	r1, sp, #16
 80083f6:	9307      	str	r3, [sp, #28]
 80083f8:	9402      	str	r4, [sp, #8]
 80083fa:	9503      	str	r5, [sp, #12]
 80083fc:	463e      	mov	r6, r7
 80083fe:	f008 fc59 	bl	8010cb4 <WM__SendMessage>
 8008402:	e7d7      	b.n	80083b4 <_MoveDescendents+0x16>
 8008404:	b008      	add	sp, #32
 8008406:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800840a <WM__MoveWindow>:
 800840a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800840e:	b08b      	sub	sp, #44	; 0x2c
 8008410:	4606      	mov	r6, r0
 8008412:	460d      	mov	r5, r1
 8008414:	4614      	mov	r4, r2
 8008416:	a806      	add	r0, sp, #24
 8008418:	2100      	movs	r1, #0
 800841a:	2210      	movs	r2, #16
 800841c:	f00c ff53 	bl	80152c6 <memset>
 8008420:	2e00      	cmp	r6, #0
 8008422:	d043      	beq.n	80084ac <WM__MoveWindow+0xa2>
 8008424:	b90d      	cbnz	r5, 800842a <WM__MoveWindow+0x20>
 8008426:	2c00      	cmp	r4, #0
 8008428:	d040      	beq.n	80084ac <WM__MoveWindow+0xa2>
 800842a:	4630      	mov	r0, r6
 800842c:	f007 f81e 	bl	800f46c <GUI_ALLOC_LockH>
 8008430:	4603      	mov	r3, r0
 8008432:	9001      	str	r0, [sp, #4]
 8008434:	c803      	ldmia	r0, {r0, r1}
 8008436:	f10d 0808 	add.w	r8, sp, #8
 800843a:	e888 0003 	stmia.w	r8, {r0, r1}
 800843e:	4622      	mov	r2, r4
 8008440:	4618      	mov	r0, r3
 8008442:	4629      	mov	r1, r5
 8008444:	f005 fcf2 	bl	800de2c <GUI_MoveRect>
 8008448:	9801      	ldr	r0, [sp, #4]
 800844a:	af0a      	add	r7, sp, #40	; 0x28
 800844c:	4629      	mov	r1, r5
 800844e:	4622      	mov	r2, r4
 8008450:	3008      	adds	r0, #8
 8008452:	f005 fceb 	bl	800de2c <GUI_MoveRect>
 8008456:	f857 3d24 	ldr.w	r3, [r7, #-36]!
 800845a:	f8d3 901c 	ldr.w	r9, [r3, #28]
 800845e:	4638      	mov	r0, r7
 8008460:	f007 f812 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008464:	4622      	mov	r2, r4
 8008466:	4648      	mov	r0, r9
 8008468:	4629      	mov	r1, r5
 800846a:	f7ff ff98 	bl	800839e <_MoveDescendents>
 800846e:	4630      	mov	r0, r6
 8008470:	f006 fffc 	bl	800f46c <GUI_ALLOC_LockH>
 8008474:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8008476:	9001      	str	r0, [sp, #4]
 8008478:	0792      	lsls	r2, r2, #30
 800847a:	d50a      	bpl.n	8008492 <WM__MoveWindow+0x88>
 800847c:	6981      	ldr	r1, [r0, #24]
 800847e:	b141      	cbz	r1, 8008492 <WM__MoveWindow+0x88>
 8008480:	6a02      	ldr	r2, [r0, #32]
 8008482:	f000 fe20 	bl	80090c6 <WM__InvalidateParent>
 8008486:	9b01      	ldr	r3, [sp, #4]
 8008488:	4640      	mov	r0, r8
 800848a:	6999      	ldr	r1, [r3, #24]
 800848c:	6a1a      	ldr	r2, [r3, #32]
 800848e:	f000 fe1a 	bl	80090c6 <WM__InvalidateParent>
 8008492:	4638      	mov	r0, r7
 8008494:	f006 fff8 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008498:	2303      	movs	r3, #3
 800849a:	9306      	str	r3, [sp, #24]
 800849c:	4630      	mov	r0, r6
 800849e:	ab04      	add	r3, sp, #16
 80084a0:	a906      	add	r1, sp, #24
 80084a2:	9309      	str	r3, [sp, #36]	; 0x24
 80084a4:	9504      	str	r5, [sp, #16]
 80084a6:	9405      	str	r4, [sp, #20]
 80084a8:	f008 fc04 	bl	8010cb4 <WM__SendMessage>
 80084ac:	b00b      	add	sp, #44	; 0x2c
 80084ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080084b2 <WM_MoveWindow>:
 80084b2:	f7ff bfaa 	b.w	800840a <WM__MoveWindow>

080084b6 <WM_IsWindow>:
 80084b6:	f000 bd07 	b.w	8008ec8 <WM__IsWindow>

080084ba <WM_IsFocussable>:
 80084ba:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80084bc:	4604      	mov	r4, r0
 80084be:	b908      	cbnz	r0, 80084c4 <WM_IsFocussable+0xa>
 80084c0:	2000      	movs	r0, #0
 80084c2:	e011      	b.n	80084e8 <WM_IsFocussable+0x2e>
 80084c4:	f006 ffc8 	bl	800f458 <GUI_ALLOC_h2p>
 80084c8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80084ca:	079a      	lsls	r2, r3, #30
 80084cc:	d5f8      	bpl.n	80084c0 <WM_IsFocussable+0x6>
 80084ce:	f013 0310 	ands.w	r3, r3, #16
 80084d2:	d1f5      	bne.n	80084c0 <WM_IsFocussable+0x6>
 80084d4:	a904      	add	r1, sp, #16
 80084d6:	9303      	str	r3, [sp, #12]
 80084d8:	231f      	movs	r3, #31
 80084da:	f841 3d10 	str.w	r3, [r1, #-16]!
 80084de:	4620      	mov	r0, r4
 80084e0:	4669      	mov	r1, sp
 80084e2:	f000 fe1d 	bl	8009120 <WM_SendMessage>
 80084e6:	9803      	ldr	r0, [sp, #12]
 80084e8:	b004      	add	sp, #16
 80084ea:	bd10      	pop	{r4, pc}

080084ec <WM_HideWindow>:
 80084ec:	b513      	push	{r0, r1, r4, lr}
 80084ee:	b188      	cbz	r0, 8008514 <WM_HideWindow+0x28>
 80084f0:	f006 ffbc 	bl	800f46c <GUI_ALLOC_LockH>
 80084f4:	6a82      	ldr	r2, [r0, #40]	; 0x28
 80084f6:	ac02      	add	r4, sp, #8
 80084f8:	0791      	lsls	r1, r2, #30
 80084fa:	f844 0d04 	str.w	r0, [r4, #-4]!
 80084fe:	d506      	bpl.n	800850e <WM_HideWindow+0x22>
 8008500:	f022 0202 	bic.w	r2, r2, #2
 8008504:	6282      	str	r2, [r0, #40]	; 0x28
 8008506:	6981      	ldr	r1, [r0, #24]
 8008508:	6a02      	ldr	r2, [r0, #32]
 800850a:	f000 fdf1 	bl	80090f0 <WM__InvalidateRectEx>
 800850e:	4620      	mov	r0, r4
 8008510:	f006 ffba 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008514:	b002      	add	sp, #8
 8008516:	bd10      	pop	{r4, pc}

08008518 <WM_HasFocus>:
 8008518:	4b04      	ldr	r3, [pc, #16]	; (800852c <WM_HasFocus+0x14>)
 800851a:	681a      	ldr	r2, [r3, #0]
 800851c:	4b04      	ldr	r3, [pc, #16]	; (8008530 <WM_HasFocus+0x18>)
 800851e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008522:	1ac3      	subs	r3, r0, r3
 8008524:	4258      	negs	r0, r3
 8008526:	4158      	adcs	r0, r3
 8008528:	4770      	bx	lr
 800852a:	bf00      	nop
 800852c:	2001b9d8 	.word	0x2001b9d8
 8008530:	2001b9c8 	.word	0x2001b9c8

08008534 <WM_GetWindowSizeX>:
 8008534:	b513      	push	{r0, r1, r4, lr}
 8008536:	b908      	cbnz	r0, 800853c <WM_GetWindowSizeX+0x8>
 8008538:	f000 ffbe 	bl	80094b8 <WM_GetActiveWindow>
 800853c:	f006 ff96 	bl	800f46c <GUI_ALLOC_LockH>
 8008540:	ab02      	add	r3, sp, #8
 8008542:	f9b0 2000 	ldrsh.w	r2, [r0]
 8008546:	f843 0d04 	str.w	r0, [r3, #-4]!
 800854a:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800854e:	4618      	mov	r0, r3
 8008550:	1aa4      	subs	r4, r4, r2
 8008552:	f006 ff99 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008556:	3401      	adds	r4, #1
 8008558:	4620      	mov	r0, r4
 800855a:	b002      	add	sp, #8
 800855c:	bd10      	pop	{r4, pc}

0800855e <WM_GetWindowSizeY>:
 800855e:	b513      	push	{r0, r1, r4, lr}
 8008560:	b908      	cbnz	r0, 8008566 <WM_GetWindowSizeY+0x8>
 8008562:	f000 ffa9 	bl	80094b8 <WM_GetActiveWindow>
 8008566:	f006 ff81 	bl	800f46c <GUI_ALLOC_LockH>
 800856a:	ab02      	add	r3, sp, #8
 800856c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8008570:	f843 0d04 	str.w	r0, [r3, #-4]!
 8008574:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8008578:	4618      	mov	r0, r3
 800857a:	1aa4      	subs	r4, r4, r2
 800857c:	f006 ff84 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008580:	3401      	adds	r4, #1
 8008582:	4620      	mov	r0, r4
 8008584:	b002      	add	sp, #8
 8008586:	bd10      	pop	{r4, pc}

08008588 <_GetDialogItem>:
 8008588:	b570      	push	{r4, r5, r6, lr}
 800858a:	4606      	mov	r6, r0
 800858c:	460d      	mov	r5, r1
 800858e:	f006 ff63 	bl	800f458 <GUI_ALLOC_h2p>
 8008592:	69c4      	ldr	r4, [r0, #28]
 8008594:	b14c      	cbz	r4, 80085aa <_GetDialogItem+0x22>
 8008596:	4620      	mov	r0, r4
 8008598:	f000 f8aa 	bl	80086f0 <WM_GetId>
 800859c:	42a8      	cmp	r0, r5
 800859e:	4620      	mov	r0, r4
 80085a0:	d013      	beq.n	80085ca <_GetDialogItem+0x42>
 80085a2:	f006 ff59 	bl	800f458 <GUI_ALLOC_h2p>
 80085a6:	6a04      	ldr	r4, [r0, #32]
 80085a8:	e7f4      	b.n	8008594 <_GetDialogItem+0xc>
 80085aa:	4630      	mov	r0, r6
 80085ac:	f006 ff54 	bl	800f458 <GUI_ALLOC_h2p>
 80085b0:	69c4      	ldr	r4, [r0, #28]
 80085b2:	4620      	mov	r0, r4
 80085b4:	b144      	cbz	r4, 80085c8 <_GetDialogItem+0x40>
 80085b6:	4629      	mov	r1, r5
 80085b8:	f7ff ffe6 	bl	8008588 <_GetDialogItem>
 80085bc:	b928      	cbnz	r0, 80085ca <_GetDialogItem+0x42>
 80085be:	4620      	mov	r0, r4
 80085c0:	f006 ff4a 	bl	800f458 <GUI_ALLOC_h2p>
 80085c4:	6a04      	ldr	r4, [r0, #32]
 80085c6:	e7f4      	b.n	80085b2 <_GetDialogItem+0x2a>
 80085c8:	bd70      	pop	{r4, r5, r6, pc}
 80085ca:	bd70      	pop	{r4, r5, r6, pc}

080085cc <WM_GetScrollbarH>:
 80085cc:	b110      	cbz	r0, 80085d4 <WM_GetScrollbarH+0x8>
 80085ce:	21ff      	movs	r1, #255	; 0xff
 80085d0:	f7ff bfda 	b.w	8008588 <_GetDialogItem>
 80085d4:	4770      	bx	lr

080085d6 <WM_GetScrollbarV>:
 80085d6:	b110      	cbz	r0, 80085de <WM_GetScrollbarV+0x8>
 80085d8:	21fe      	movs	r1, #254	; 0xfe
 80085da:	f7ff bfd5 	b.w	8008588 <_GetDialogItem>
 80085de:	4770      	bx	lr

080085e0 <WM_GetParent>:
 80085e0:	b508      	push	{r3, lr}
 80085e2:	4603      	mov	r3, r0
 80085e4:	b110      	cbz	r0, 80085ec <WM_GetParent+0xc>
 80085e6:	f006 ff37 	bl	800f458 <GUI_ALLOC_h2p>
 80085ea:	6983      	ldr	r3, [r0, #24]
 80085ec:	4618      	mov	r0, r3
 80085ee:	bd08      	pop	{r3, pc}

080085f0 <WM_GetWindowOrgX>:
 80085f0:	b508      	push	{r3, lr}
 80085f2:	b120      	cbz	r0, 80085fe <WM_GetWindowOrgX+0xe>
 80085f4:	f006 ff30 	bl	800f458 <GUI_ALLOC_h2p>
 80085f8:	f9b0 0000 	ldrsh.w	r0, [r0]
 80085fc:	bd08      	pop	{r3, pc}
 80085fe:	bd08      	pop	{r3, pc}

08008600 <WM_GetWindowOrgY>:
 8008600:	b508      	push	{r3, lr}
 8008602:	b120      	cbz	r0, 800860e <WM_GetWindowOrgY+0xe>
 8008604:	f006 ff28 	bl	800f458 <GUI_ALLOC_h2p>
 8008608:	f9b0 0002 	ldrsh.w	r0, [r0, #2]
 800860c:	bd08      	pop	{r3, pc}
 800860e:	bd08      	pop	{r3, pc}

08008610 <WM_GetOrgX>:
 8008610:	4b02      	ldr	r3, [pc, #8]	; (800861c <WM_GetOrgX+0xc>)
 8008612:	681b      	ldr	r3, [r3, #0]
 8008614:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8008616:	f7ff bfeb 	b.w	80085f0 <WM_GetWindowOrgX>
 800861a:	bf00      	nop
 800861c:	20000274 	.word	0x20000274

08008620 <WM_GetOrgY>:
 8008620:	4b02      	ldr	r3, [pc, #8]	; (800862c <WM_GetOrgY+0xc>)
 8008622:	681b      	ldr	r3, [r3, #0]
 8008624:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8008626:	f7ff bfeb 	b.w	8008600 <WM_GetWindowOrgY>
 800862a:	bf00      	nop
 800862c:	20000274 	.word	0x20000274

08008630 <WM_GetInsideRectExScrollbar>:
 8008630:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008632:	460c      	mov	r4, r1
 8008634:	b087      	sub	sp, #28
 8008636:	4606      	mov	r6, r0
 8008638:	2800      	cmp	r0, #0
 800863a:	d04b      	beq.n	80086d4 <WM_GetInsideRectExScrollbar+0xa4>
 800863c:	2900      	cmp	r1, #0
 800863e:	d049      	beq.n	80086d4 <WM_GetInsideRectExScrollbar+0xa4>
 8008640:	21ff      	movs	r1, #255	; 0xff
 8008642:	f000 f89b 	bl	800877c <WM_GetDialogItem>
 8008646:	21fe      	movs	r1, #254	; 0xfe
 8008648:	4605      	mov	r5, r0
 800864a:	4630      	mov	r0, r6
 800864c:	f000 f896 	bl	800877c <WM_GetDialogItem>
 8008650:	4669      	mov	r1, sp
 8008652:	4607      	mov	r7, r0
 8008654:	4630      	mov	r0, r6
 8008656:	f008 ff19 	bl	801148c <WM_GetWindowRectEx>
 800865a:	4630      	mov	r0, r6
 800865c:	a902      	add	r1, sp, #8
 800865e:	f000 f83b 	bl	80086d8 <WM_GetInsideRectEx>
 8008662:	b1c7      	cbz	r7, 8008696 <WM_GetInsideRectExScrollbar+0x66>
 8008664:	4638      	mov	r0, r7
 8008666:	a904      	add	r1, sp, #16
 8008668:	f008 ff10 	bl	801148c <WM_GetWindowRectEx>
 800866c:	f9bd 1000 	ldrsh.w	r1, [sp]
 8008670:	f9bd 2002 	ldrsh.w	r2, [sp, #2]
 8008674:	a804      	add	r0, sp, #16
 8008676:	4249      	negs	r1, r1
 8008678:	4252      	negs	r2, r2
 800867a:	f005 fbd7 	bl	800de2c <GUI_MoveRect>
 800867e:	4638      	mov	r0, r7
 8008680:	f000 f850 	bl	8008724 <WM_GetFlags>
 8008684:	f000 0082 	and.w	r0, r0, #130	; 0x82
 8008688:	2882      	cmp	r0, #130	; 0x82
 800868a:	d104      	bne.n	8008696 <WM_GetInsideRectExScrollbar+0x66>
 800868c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8008690:	3b01      	subs	r3, #1
 8008692:	f8ad 300c 	strh.w	r3, [sp, #12]
 8008696:	b1cd      	cbz	r5, 80086cc <WM_GetInsideRectExScrollbar+0x9c>
 8008698:	4628      	mov	r0, r5
 800869a:	a904      	add	r1, sp, #16
 800869c:	f008 fef6 	bl	801148c <WM_GetWindowRectEx>
 80086a0:	f9bd 1000 	ldrsh.w	r1, [sp]
 80086a4:	f9bd 2002 	ldrsh.w	r2, [sp, #2]
 80086a8:	a804      	add	r0, sp, #16
 80086aa:	4249      	negs	r1, r1
 80086ac:	4252      	negs	r2, r2
 80086ae:	f005 fbbd 	bl	800de2c <GUI_MoveRect>
 80086b2:	4628      	mov	r0, r5
 80086b4:	f000 f836 	bl	8008724 <WM_GetFlags>
 80086b8:	f400 7081 	and.w	r0, r0, #258	; 0x102
 80086bc:	f5b0 7f81 	cmp.w	r0, #258	; 0x102
 80086c0:	d104      	bne.n	80086cc <WM_GetInsideRectExScrollbar+0x9c>
 80086c2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80086c6:	3b01      	subs	r3, #1
 80086c8:	f8ad 300e 	strh.w	r3, [sp, #14]
 80086cc:	ab02      	add	r3, sp, #8
 80086ce:	cb03      	ldmia	r3!, {r0, r1}
 80086d0:	6020      	str	r0, [r4, #0]
 80086d2:	6061      	str	r1, [r4, #4]
 80086d4:	b007      	add	sp, #28
 80086d6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080086d8 <WM_GetInsideRectEx>:
 80086d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80086da:	9103      	str	r1, [sp, #12]
 80086dc:	a904      	add	r1, sp, #16
 80086de:	2314      	movs	r3, #20
 80086e0:	f841 3d10 	str.w	r3, [r1, #-16]!
 80086e4:	4669      	mov	r1, sp
 80086e6:	f000 fd1b 	bl	8009120 <WM_SendMessage>
 80086ea:	b005      	add	sp, #20
 80086ec:	f85d fb04 	ldr.w	pc, [sp], #4

080086f0 <WM_GetId>:
 80086f0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80086f2:	4604      	mov	r4, r0
 80086f4:	2210      	movs	r2, #16
 80086f6:	4668      	mov	r0, sp
 80086f8:	2100      	movs	r1, #0
 80086fa:	f00c fde4 	bl	80152c6 <memset>
 80086fe:	2315      	movs	r3, #21
 8008700:	4620      	mov	r0, r4
 8008702:	4669      	mov	r1, sp
 8008704:	9300      	str	r3, [sp, #0]
 8008706:	f000 fd0b 	bl	8009120 <WM_SendMessage>
 800870a:	9803      	ldr	r0, [sp, #12]
 800870c:	b004      	add	sp, #16
 800870e:	bd10      	pop	{r4, pc}

08008710 <WM_GetFocussedWindow>:
 8008710:	4b02      	ldr	r3, [pc, #8]	; (800871c <WM_GetFocussedWindow+0xc>)
 8008712:	681a      	ldr	r2, [r3, #0]
 8008714:	4b02      	ldr	r3, [pc, #8]	; (8008720 <WM_GetFocussedWindow+0x10>)
 8008716:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800871a:	4770      	bx	lr
 800871c:	2001b9d8 	.word	0x2001b9d8
 8008720:	2001b9c8 	.word	0x2001b9c8

08008724 <WM_GetFlags>:
 8008724:	b508      	push	{r3, lr}
 8008726:	b118      	cbz	r0, 8008730 <WM_GetFlags+0xc>
 8008728:	f006 fe96 	bl	800f458 <GUI_ALLOC_h2p>
 800872c:	8d00      	ldrh	r0, [r0, #40]	; 0x28
 800872e:	bd08      	pop	{r3, pc}
 8008730:	bd08      	pop	{r3, pc}

08008732 <WM_GetFirstChild>:
 8008732:	b508      	push	{r3, lr}
 8008734:	4603      	mov	r3, r0
 8008736:	b110      	cbz	r0, 800873e <WM_GetFirstChild+0xc>
 8008738:	f006 fe8e 	bl	800f458 <GUI_ALLOC_h2p>
 800873c:	69c3      	ldr	r3, [r0, #28]
 800873e:	4618      	mov	r0, r3
 8008740:	bd08      	pop	{r3, pc}

08008742 <_GetDialogItem>:
 8008742:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008744:	460d      	mov	r5, r1
 8008746:	f006 fe91 	bl	800f46c <GUI_ALLOC_LockH>
 800874a:	ab02      	add	r3, sp, #8
 800874c:	69c4      	ldr	r4, [r0, #28]
 800874e:	f843 0d04 	str.w	r0, [r3, #-4]!
 8008752:	4618      	mov	r0, r3
 8008754:	f006 fe98 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008758:	4620      	mov	r0, r4
 800875a:	b16c      	cbz	r4, 8008778 <_GetDialogItem+0x36>
 800875c:	f7ff ffc8 	bl	80086f0 <WM_GetId>
 8008760:	42a8      	cmp	r0, r5
 8008762:	4620      	mov	r0, r4
 8008764:	d008      	beq.n	8008778 <_GetDialogItem+0x36>
 8008766:	4629      	mov	r1, r5
 8008768:	f7ff ffeb 	bl	8008742 <_GetDialogItem>
 800876c:	b920      	cbnz	r0, 8008778 <_GetDialogItem+0x36>
 800876e:	4620      	mov	r0, r4
 8008770:	f006 fe72 	bl	800f458 <GUI_ALLOC_h2p>
 8008774:	6a04      	ldr	r4, [r0, #32]
 8008776:	e7ef      	b.n	8008758 <_GetDialogItem+0x16>
 8008778:	b003      	add	sp, #12
 800877a:	bd30      	pop	{r4, r5, pc}

0800877c <WM_GetDialogItem>:
 800877c:	b108      	cbz	r0, 8008782 <WM_GetDialogItem+0x6>
 800877e:	f7ff bfe0 	b.w	8008742 <_GetDialogItem>
 8008782:	4770      	bx	lr

08008784 <WM_GetDesktopWindow>:
 8008784:	4b03      	ldr	r3, [pc, #12]	; (8008794 <WM_GetDesktopWindow+0x10>)
 8008786:	681b      	ldr	r3, [r3, #0]
 8008788:	7c5a      	ldrb	r2, [r3, #17]
 800878a:	4b03      	ldr	r3, [pc, #12]	; (8008798 <WM_GetDesktopWindow+0x14>)
 800878c:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8008790:	4770      	bx	lr
 8008792:	bf00      	nop
 8008794:	20000274 	.word	0x20000274
 8008798:	2001b9b8 	.word	0x2001b9b8

0800879c <WM_GetClientWindow>:
 800879c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800879e:	2300      	movs	r3, #0
 80087a0:	a904      	add	r1, sp, #16
 80087a2:	9303      	str	r3, [sp, #12]
 80087a4:	2317      	movs	r3, #23
 80087a6:	f841 3d10 	str.w	r3, [r1, #-16]!
 80087aa:	4669      	mov	r1, sp
 80087ac:	f000 fcb8 	bl	8009120 <WM_SendMessage>
 80087b0:	9803      	ldr	r0, [sp, #12]
 80087b2:	b005      	add	sp, #20
 80087b4:	f85d fb04 	ldr.w	pc, [sp], #4

080087b8 <WM__GetClientRectEx>:
 80087b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80087ba:	460d      	mov	r5, r1
 80087bc:	b158      	cbz	r0, 80087d6 <WM__GetClientRectEx+0x1e>
 80087be:	b151      	cbz	r1, 80087d6 <WM__GetClientRectEx+0x1e>
 80087c0:	f006 fe54 	bl	800f46c <GUI_ALLOC_LockH>
 80087c4:	ac02      	add	r4, sp, #8
 80087c6:	4629      	mov	r1, r5
 80087c8:	f844 0d04 	str.w	r0, [r4, #-4]!
 80087cc:	f000 fcb7 	bl	800913e <WM__GetClientRectWin>
 80087d0:	4620      	mov	r0, r4
 80087d2:	f006 fe59 	bl	800f488 <GUI_ALLOC_UnlockH>
 80087d6:	b003      	add	sp, #12
 80087d8:	bd30      	pop	{r4, r5, pc}

080087da <WM_GetClientRectEx>:
 80087da:	f7ff bfed 	b.w	80087b8 <WM__GetClientRectEx>
	...

080087e0 <WM_GetClientRect>:
 80087e0:	4b04      	ldr	r3, [pc, #16]	; (80087f4 <WM_GetClientRect+0x14>)
 80087e2:	4601      	mov	r1, r0
 80087e4:	6818      	ldr	r0, [r3, #0]
 80087e6:	b910      	cbnz	r0, 80087ee <WM_GetClientRect+0xe>
 80087e8:	4b03      	ldr	r3, [pc, #12]	; (80087f8 <WM_GetClientRect+0x18>)
 80087ea:	681b      	ldr	r3, [r3, #0]
 80087ec:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80087ee:	f7ff bfe3 	b.w	80087b8 <WM__GetClientRectEx>
 80087f2:	bf00      	nop
 80087f4:	2001b9b4 	.word	0x2001b9b4
 80087f8:	20000274 	.word	0x20000274

080087fc <WM_CheckScrollBounds>:
 80087fc:	6802      	ldr	r2, [r0, #0]
 80087fe:	6883      	ldr	r3, [r0, #8]
 8008800:	1ad3      	subs	r3, r2, r3
 8008802:	6842      	ldr	r2, [r0, #4]
 8008804:	2a00      	cmp	r2, #0
 8008806:	bfbc      	itt	lt
 8008808:	2200      	movlt	r2, #0
 800880a:	6042      	strlt	r2, [r0, #4]
 800880c:	6842      	ldr	r2, [r0, #4]
 800880e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8008812:	429a      	cmp	r2, r3
 8008814:	bfc8      	it	gt
 8008816:	6043      	strgt	r3, [r0, #4]
 8008818:	4770      	bx	lr

0800881a <_cbInvalidateOne>:
 800881a:	f000 bcd8 	b.w	80091ce <WM_InvalidateWindow>
	...

08008820 <WM_BringToTop>:
 8008820:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008822:	4605      	mov	r5, r0
 8008824:	2800      	cmp	r0, #0
 8008826:	d032      	beq.n	800888e <WM_BringToTop+0x6e>
 8008828:	f006 fe20 	bl	800f46c <GUI_ALLOC_LockH>
 800882c:	ac02      	add	r4, sp, #8
 800882e:	4603      	mov	r3, r0
 8008830:	f844 0d08 	str.w	r0, [r4, #-8]!
 8008834:	6a00      	ldr	r0, [r0, #32]
 8008836:	b908      	cbnz	r0, 800883c <WM_BringToTop+0x1c>
 8008838:	4668      	mov	r0, sp
 800883a:	e00e      	b.n	800885a <WM_BringToTop+0x3a>
 800883c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800883e:	071a      	lsls	r2, r3, #28
 8008840:	d411      	bmi.n	8008866 <WM_BringToTop+0x46>
 8008842:	f006 fe13 	bl	800f46c <GUI_ALLOC_LockH>
 8008846:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008848:	ae02      	add	r6, sp, #8
 800884a:	071b      	lsls	r3, r3, #28
 800884c:	f846 0d04 	str.w	r0, [r6, #-4]!
 8008850:	d506      	bpl.n	8008860 <WM_BringToTop+0x40>
 8008852:	4668      	mov	r0, sp
 8008854:	f006 fe18 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008858:	4630      	mov	r0, r6
 800885a:	f006 fe15 	bl	800f488 <GUI_ALLOC_UnlockH>
 800885e:	e016      	b.n	800888e <WM_BringToTop+0x6e>
 8008860:	4630      	mov	r0, r6
 8008862:	f006 fe11 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008866:	9b00      	ldr	r3, [sp, #0]
 8008868:	4668      	mov	r0, sp
 800886a:	699e      	ldr	r6, [r3, #24]
 800886c:	f006 fe0c 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008870:	4628      	mov	r0, r5
 8008872:	f000 fab7 	bl	8008de4 <WM__RemoveWindowFromList>
 8008876:	4631      	mov	r1, r6
 8008878:	4628      	mov	r0, r5
 800887a:	f000 fa61 	bl	8008d40 <WM__InsertWindowIntoList>
 800887e:	4628      	mov	r0, r5
 8008880:	f000 fca5 	bl	80091ce <WM_InvalidateWindow>
 8008884:	4628      	mov	r0, r5
 8008886:	4903      	ldr	r1, [pc, #12]	; (8008894 <WM_BringToTop+0x74>)
 8008888:	2200      	movs	r2, #0
 800888a:	f008 fe29 	bl	80114e0 <WM_ForEachDesc>
 800888e:	b002      	add	sp, #8
 8008890:	bd70      	pop	{r4, r5, r6, pc}
 8008892:	bf00      	nop
 8008894:	0800881b 	.word	0x0800881b

08008898 <_OnExit>:
 8008898:	4a0a      	ldr	r2, [pc, #40]	; (80088c4 <_OnExit+0x2c>)
 800889a:	490b      	ldr	r1, [pc, #44]	; (80088c8 <_OnExit+0x30>)
 800889c:	2300      	movs	r3, #0
 800889e:	7013      	strb	r3, [r2, #0]
 80088a0:	4a0a      	ldr	r2, [pc, #40]	; (80088cc <_OnExit+0x34>)
 80088a2:	600b      	str	r3, [r1, #0]
 80088a4:	6013      	str	r3, [r2, #0]
 80088a6:	4a0a      	ldr	r2, [pc, #40]	; (80088d0 <_OnExit+0x38>)
 80088a8:	604b      	str	r3, [r1, #4]
 80088aa:	6013      	str	r3, [r2, #0]
 80088ac:	4a09      	ldr	r2, [pc, #36]	; (80088d4 <_OnExit+0x3c>)
 80088ae:	6013      	str	r3, [r2, #0]
 80088b0:	6053      	str	r3, [r2, #4]
 80088b2:	4a09      	ldr	r2, [pc, #36]	; (80088d8 <_OnExit+0x40>)
 80088b4:	6013      	str	r3, [r2, #0]
 80088b6:	4a09      	ldr	r2, [pc, #36]	; (80088dc <_OnExit+0x44>)
 80088b8:	6013      	str	r3, [r2, #0]
 80088ba:	4a09      	ldr	r2, [pc, #36]	; (80088e0 <_OnExit+0x48>)
 80088bc:	6013      	str	r3, [r2, #0]
 80088be:	4a09      	ldr	r2, [pc, #36]	; (80088e4 <_OnExit+0x4c>)
 80088c0:	6013      	str	r3, [r2, #0]
 80088c2:	4770      	bx	lr
 80088c4:	20019cf8 	.word	0x20019cf8
 80088c8:	2001b9c8 	.word	0x2001b9c8
 80088cc:	20019cd0 	.word	0x20019cd0
 80088d0:	2001b9ec 	.word	0x2001b9ec
 80088d4:	2001b9f4 	.word	0x2001b9f4
 80088d8:	2001ba00 	.word	0x2001ba00
 80088dc:	2001b9b4 	.word	0x2001b9b4
 80088e0:	2001b9e0 	.word	0x2001b9e0
 80088e4:	2001b9f0 	.word	0x2001b9f0

080088e8 <_Paint1>:
 80088e8:	b510      	push	{r4, lr}
 80088ea:	4604      	mov	r4, r0
 80088ec:	f006 fdb4 	bl	800f458 <GUI_ALLOC_h2p>
 80088f0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80088f2:	4a04      	ldr	r2, [pc, #16]	; (8008904 <_Paint1+0x1c>)
 80088f4:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 80088f8:	4b03      	ldr	r3, [pc, #12]	; (8008908 <_Paint1+0x20>)
 80088fa:	4620      	mov	r0, r4
 80088fc:	bf08      	it	eq
 80088fe:	4613      	moveq	r3, r2
 8008900:	4798      	blx	r3
 8008902:	bd10      	pop	{r4, pc}
 8008904:	08009759 	.word	0x08009759
 8008908:	08009d45 	.word	0x08009d45

0800890c <_Findy1>:
 800890c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800890e:	4605      	mov	r5, r0
 8008910:	b085      	sub	sp, #20
 8008912:	460c      	mov	r4, r1
 8008914:	4616      	mov	r6, r2
 8008916:	2d00      	cmp	r5, #0
 8008918:	d04c      	beq.n	80089b4 <_Findy1+0xa8>
 800891a:	4628      	mov	r0, r5
 800891c:	f006 fda6 	bl	800f46c <GUI_ALLOC_LockH>
 8008920:	6a87      	ldr	r7, [r0, #40]	; 0x28
 8008922:	9001      	str	r0, [sp, #4]
 8008924:	07bb      	lsls	r3, r7, #30
 8008926:	4601      	mov	r1, r0
 8008928:	d53d      	bpl.n	80089a6 <_Findy1+0x9a>
 800892a:	ad02      	add	r5, sp, #8
 800892c:	b126      	cbz	r6, 8008938 <_Findy1+0x2c>
 800892e:	4628      	mov	r0, r5
 8008930:	4632      	mov	r2, r6
 8008932:	f004 f857 	bl	800c9e4 <GUI__IntersectRects>
 8008936:	e002      	b.n	800893e <_Findy1+0x32>
 8008938:	c803      	ldmia	r0, {r0, r1}
 800893a:	e885 0003 	stmia.w	r5, {r0, r1}
 800893e:	4620      	mov	r0, r4
 8008940:	4629      	mov	r1, r5
 8008942:	f005 f999 	bl	800dc78 <GUI_RectsIntersect>
 8008946:	b370      	cbz	r0, 80089a6 <_Findy1+0x9a>
 8008948:	f017 0f01 	tst.w	r7, #1
 800894c:	9b01      	ldr	r3, [sp, #4]
 800894e:	d11e      	bne.n	800898e <_Findy1+0x82>
 8008950:	b13e      	cbz	r6, 8008962 <_Findy1+0x56>
 8008952:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8008956:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800895a:	429a      	cmp	r2, r3
 800895c:	bfa8      	it	ge
 800895e:	4613      	movge	r3, r2
 8008960:	e001      	b.n	8008966 <_Findy1+0x5a>
 8008962:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8008966:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800896a:	4293      	cmp	r3, r2
 800896c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8008970:	dd06      	ble.n	8008980 <_Findy1+0x74>
 8008972:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8008976:	b219      	sxth	r1, r3
 8008978:	428a      	cmp	r2, r1
 800897a:	db14      	blt.n	80089a6 <_Findy1+0x9a>
 800897c:	3b01      	subs	r3, #1
 800897e:	e004      	b.n	800898a <_Findy1+0x7e>
 8008980:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8008984:	b219      	sxth	r1, r3
 8008986:	428a      	cmp	r2, r1
 8008988:	dd0d      	ble.n	80089a6 <_Findy1+0x9a>
 800898a:	80e3      	strh	r3, [r4, #6]
 800898c:	e00b      	b.n	80089a6 <_Findy1+0x9a>
 800898e:	69df      	ldr	r7, [r3, #28]
 8008990:	b14f      	cbz	r7, 80089a6 <_Findy1+0x9a>
 8008992:	4638      	mov	r0, r7
 8008994:	4621      	mov	r1, r4
 8008996:	462a      	mov	r2, r5
 8008998:	f7ff ffb8 	bl	800890c <_Findy1>
 800899c:	4638      	mov	r0, r7
 800899e:	f006 fd5b 	bl	800f458 <GUI_ALLOC_h2p>
 80089a2:	6a07      	ldr	r7, [r0, #32]
 80089a4:	e7f4      	b.n	8008990 <_Findy1+0x84>
 80089a6:	a804      	add	r0, sp, #16
 80089a8:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 80089ac:	6a1d      	ldr	r5, [r3, #32]
 80089ae:	f006 fd6b 	bl	800f488 <GUI_ALLOC_UnlockH>
 80089b2:	e7b0      	b.n	8008916 <_Findy1+0xa>
 80089b4:	b005      	add	sp, #20
 80089b6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080089b8 <_Findx0>:
 80089b8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80089bc:	4604      	mov	r4, r0
 80089be:	460f      	mov	r7, r1
 80089c0:	4690      	mov	r8, r2
 80089c2:	2500      	movs	r5, #0
 80089c4:	2c00      	cmp	r4, #0
 80089c6:	d037      	beq.n	8008a38 <_Findx0+0x80>
 80089c8:	4620      	mov	r0, r4
 80089ca:	f006 fd4f 	bl	800f46c <GUI_ALLOC_LockH>
 80089ce:	6a86      	ldr	r6, [r0, #40]	; 0x28
 80089d0:	9001      	str	r0, [sp, #4]
 80089d2:	07b2      	lsls	r2, r6, #30
 80089d4:	4601      	mov	r1, r0
 80089d6:	d528      	bpl.n	8008a2a <_Findx0+0x72>
 80089d8:	ac02      	add	r4, sp, #8
 80089da:	f1b8 0f00 	cmp.w	r8, #0
 80089de:	d004      	beq.n	80089ea <_Findx0+0x32>
 80089e0:	4620      	mov	r0, r4
 80089e2:	4642      	mov	r2, r8
 80089e4:	f003 fffe 	bl	800c9e4 <GUI__IntersectRects>
 80089e8:	e002      	b.n	80089f0 <_Findx0+0x38>
 80089ea:	c803      	ldmia	r0, {r0, r1}
 80089ec:	e884 0003 	stmia.w	r4, {r0, r1}
 80089f0:	4638      	mov	r0, r7
 80089f2:	4621      	mov	r1, r4
 80089f4:	f005 f940 	bl	800dc78 <GUI_RectsIntersect>
 80089f8:	b1b8      	cbz	r0, 8008a2a <_Findx0+0x72>
 80089fa:	07f3      	lsls	r3, r6, #31
 80089fc:	d405      	bmi.n	8008a0a <_Findx0+0x52>
 80089fe:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8008a02:	3301      	adds	r3, #1
 8008a04:	803b      	strh	r3, [r7, #0]
 8008a06:	2501      	movs	r5, #1
 8008a08:	e00f      	b.n	8008a2a <_Findx0+0x72>
 8008a0a:	9b01      	ldr	r3, [sp, #4]
 8008a0c:	69de      	ldr	r6, [r3, #28]
 8008a0e:	b166      	cbz	r6, 8008a2a <_Findx0+0x72>
 8008a10:	4630      	mov	r0, r6
 8008a12:	4639      	mov	r1, r7
 8008a14:	4622      	mov	r2, r4
 8008a16:	f7ff ffcf 	bl	80089b8 <_Findx0>
 8008a1a:	2800      	cmp	r0, #0
 8008a1c:	4630      	mov	r0, r6
 8008a1e:	bf18      	it	ne
 8008a20:	2501      	movne	r5, #1
 8008a22:	f006 fd19 	bl	800f458 <GUI_ALLOC_h2p>
 8008a26:	6a06      	ldr	r6, [r0, #32]
 8008a28:	e7f1      	b.n	8008a0e <_Findx0+0x56>
 8008a2a:	a804      	add	r0, sp, #16
 8008a2c:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 8008a30:	6a1c      	ldr	r4, [r3, #32]
 8008a32:	f006 fd29 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008a36:	e7c5      	b.n	80089c4 <_Findx0+0xc>
 8008a38:	4628      	mov	r0, r5
 8008a3a:	b004      	add	sp, #16
 8008a3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008a40 <_Findx1>:
 8008a40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008a42:	4604      	mov	r4, r0
 8008a44:	b085      	sub	sp, #20
 8008a46:	460e      	mov	r6, r1
 8008a48:	4617      	mov	r7, r2
 8008a4a:	2c00      	cmp	r4, #0
 8008a4c:	d031      	beq.n	8008ab2 <_Findx1+0x72>
 8008a4e:	4620      	mov	r0, r4
 8008a50:	f006 fd0c 	bl	800f46c <GUI_ALLOC_LockH>
 8008a54:	6a85      	ldr	r5, [r0, #40]	; 0x28
 8008a56:	9001      	str	r0, [sp, #4]
 8008a58:	07aa      	lsls	r2, r5, #30
 8008a5a:	4601      	mov	r1, r0
 8008a5c:	d522      	bpl.n	8008aa4 <_Findx1+0x64>
 8008a5e:	ac02      	add	r4, sp, #8
 8008a60:	b127      	cbz	r7, 8008a6c <_Findx1+0x2c>
 8008a62:	4620      	mov	r0, r4
 8008a64:	463a      	mov	r2, r7
 8008a66:	f003 ffbd 	bl	800c9e4 <GUI__IntersectRects>
 8008a6a:	e002      	b.n	8008a72 <_Findx1+0x32>
 8008a6c:	c803      	ldmia	r0, {r0, r1}
 8008a6e:	e884 0003 	stmia.w	r4, {r0, r1}
 8008a72:	4630      	mov	r0, r6
 8008a74:	4621      	mov	r1, r4
 8008a76:	f005 f8ff 	bl	800dc78 <GUI_RectsIntersect>
 8008a7a:	b198      	cbz	r0, 8008aa4 <_Findx1+0x64>
 8008a7c:	07eb      	lsls	r3, r5, #31
 8008a7e:	d404      	bmi.n	8008a8a <_Findx1+0x4a>
 8008a80:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8008a84:	3b01      	subs	r3, #1
 8008a86:	80b3      	strh	r3, [r6, #4]
 8008a88:	e00c      	b.n	8008aa4 <_Findx1+0x64>
 8008a8a:	9b01      	ldr	r3, [sp, #4]
 8008a8c:	69dd      	ldr	r5, [r3, #28]
 8008a8e:	b14d      	cbz	r5, 8008aa4 <_Findx1+0x64>
 8008a90:	4628      	mov	r0, r5
 8008a92:	4631      	mov	r1, r6
 8008a94:	4622      	mov	r2, r4
 8008a96:	f7ff ffd3 	bl	8008a40 <_Findx1>
 8008a9a:	4628      	mov	r0, r5
 8008a9c:	f006 fcdc 	bl	800f458 <GUI_ALLOC_h2p>
 8008aa0:	6a05      	ldr	r5, [r0, #32]
 8008aa2:	e7f4      	b.n	8008a8e <_Findx1+0x4e>
 8008aa4:	a804      	add	r0, sp, #16
 8008aa6:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 8008aaa:	6a1c      	ldr	r4, [r3, #32]
 8008aac:	f006 fcec 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008ab0:	e7cb      	b.n	8008a4a <_Findx1+0xa>
 8008ab2:	b005      	add	sp, #20
 8008ab4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08008ab8 <_Paint1Trans>:
 8008ab8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008abc:	4d21      	ldr	r5, [pc, #132]	; (8008b44 <_Paint1Trans+0x8c>)
 8008abe:	682b      	ldr	r3, [r5, #0]
 8008ac0:	4606      	mov	r6, r0
 8008ac2:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8008ac4:	f006 fcd2 	bl	800f46c <GUI_ALLOC_LockH>
 8008ac8:	9000      	str	r0, [sp, #0]
 8008aca:	4630      	mov	r0, r6
 8008acc:	f006 fcce 	bl	800f46c <GUI_ALLOC_LockH>
 8008ad0:	ac02      	add	r4, sp, #8
 8008ad2:	4601      	mov	r1, r0
 8008ad4:	9001      	str	r0, [sp, #4]
 8008ad6:	f854 0d08 	ldr.w	r0, [r4, #-8]!
 8008ada:	3008      	adds	r0, #8
 8008adc:	f005 f8cc 	bl	800dc78 <GUI_RectsIntersect>
 8008ae0:	4607      	mov	r7, r0
 8008ae2:	b328      	cbz	r0, 8008b30 <_Paint1Trans+0x78>
 8008ae4:	9901      	ldr	r1, [sp, #4]
 8008ae6:	9a00      	ldr	r2, [sp, #0]
 8008ae8:	682b      	ldr	r3, [r5, #0]
 8008aea:	4c17      	ldr	r4, [pc, #92]	; (8008b48 <_Paint1Trans+0x90>)
 8008aec:	6d1f      	ldr	r7, [r3, #80]	; 0x50
 8008aee:	f8d3 804c 	ldr.w	r8, [r3, #76]	; 0x4c
 8008af2:	f101 0008 	add.w	r0, r1, #8
 8008af6:	3208      	adds	r2, #8
 8008af8:	f003 ff74 	bl	800c9e4 <GUI__IntersectRects>
 8008afc:	4668      	mov	r0, sp
 8008afe:	f006 fcc3 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008b02:	9a01      	ldr	r2, [sp, #4]
 8008b04:	682b      	ldr	r3, [r5, #0]
 8008b06:	f9b2 1000 	ldrsh.w	r1, [r2]
 8008b0a:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 8008b0e:	64d9      	str	r1, [r3, #76]	; 0x4c
 8008b10:	651a      	str	r2, [r3, #80]	; 0x50
 8008b12:	a801      	add	r0, sp, #4
 8008b14:	6026      	str	r6, [r4, #0]
 8008b16:	f006 fcb7 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008b1a:	4630      	mov	r0, r6
 8008b1c:	f7ff fee4 	bl	80088e8 <_Paint1>
 8008b20:	2300      	movs	r3, #0
 8008b22:	6023      	str	r3, [r4, #0]
 8008b24:	682b      	ldr	r3, [r5, #0]
 8008b26:	651f      	str	r7, [r3, #80]	; 0x50
 8008b28:	f8c3 804c 	str.w	r8, [r3, #76]	; 0x4c
 8008b2c:	2701      	movs	r7, #1
 8008b2e:	e005      	b.n	8008b3c <_Paint1Trans+0x84>
 8008b30:	4668      	mov	r0, sp
 8008b32:	f006 fca9 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008b36:	a801      	add	r0, sp, #4
 8008b38:	f006 fca6 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008b3c:	4638      	mov	r0, r7
 8008b3e:	b002      	add	sp, #8
 8008b40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008b44:	20000274 	.word	0x20000274
 8008b48:	2001b9b4 	.word	0x2001b9b4

08008b4c <_PaintTransChildren>:
 8008b4c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8008b50:	4606      	mov	r6, r0
 8008b52:	f006 fc8b 	bl	800f46c <GUI_ALLOC_LockH>
 8008b56:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008b58:	9001      	str	r0, [sp, #4]
 8008b5a:	079b      	lsls	r3, r3, #30
 8008b5c:	d405      	bmi.n	8008b6a <_PaintTransChildren+0x1e>
 8008b5e:	a801      	add	r0, sp, #4
 8008b60:	f006 fc92 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008b64:	b002      	add	sp, #8
 8008b66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008b6a:	69c4      	ldr	r4, [r0, #28]
 8008b6c:	2c00      	cmp	r4, #0
 8008b6e:	d0f6      	beq.n	8008b5e <_PaintTransChildren+0x12>
 8008b70:	4620      	mov	r0, r4
 8008b72:	f006 fc7b 	bl	800f46c <GUI_ALLOC_LockH>
 8008b76:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008b78:	ad02      	add	r5, sp, #8
 8008b7a:	f003 0303 	and.w	r3, r3, #3
 8008b7e:	2b03      	cmp	r3, #3
 8008b80:	f845 0d08 	str.w	r0, [r5, #-8]!
 8008b84:	d137      	bne.n	8008bf6 <_PaintTransChildren+0xaa>
 8008b86:	9901      	ldr	r1, [sp, #4]
 8008b88:	3108      	adds	r1, #8
 8008b8a:	f005 f875 	bl	800dc78 <GUI_RectsIntersect>
 8008b8e:	2800      	cmp	r0, #0
 8008b90:	d031      	beq.n	8008bf6 <_PaintTransChildren+0xaa>
 8008b92:	a802      	add	r0, sp, #8
 8008b94:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8008b98:	f8b3 9008 	ldrh.w	r9, [r3, #8]
 8008b9c:	f8b3 800a 	ldrh.w	r8, [r3, #10]
 8008ba0:	899f      	ldrh	r7, [r3, #12]
 8008ba2:	f8b3 a00e 	ldrh.w	sl, [r3, #14]
 8008ba6:	f006 fc6f 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008baa:	4668      	mov	r0, sp
 8008bac:	f006 fc6c 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008bb0:	4620      	mov	r0, r4
 8008bb2:	f7ff ff81 	bl	8008ab8 <_Paint1Trans>
 8008bb6:	b170      	cbz	r0, 8008bd6 <_PaintTransChildren+0x8a>
 8008bb8:	4620      	mov	r0, r4
 8008bba:	f006 fc4d 	bl	800f458 <GUI_ALLOC_h2p>
 8008bbe:	9000      	str	r0, [sp, #0]
 8008bc0:	4620      	mov	r0, r4
 8008bc2:	f7ff ffc3 	bl	8008b4c <_PaintTransChildren>
 8008bc6:	4620      	mov	r0, r4
 8008bc8:	f006 fc46 	bl	800f458 <GUI_ALLOC_h2p>
 8008bcc:	9000      	str	r0, [sp, #0]
 8008bce:	4630      	mov	r0, r6
 8008bd0:	f006 fc42 	bl	800f458 <GUI_ALLOC_h2p>
 8008bd4:	9001      	str	r0, [sp, #4]
 8008bd6:	4630      	mov	r0, r6
 8008bd8:	f006 fc48 	bl	800f46c <GUI_ALLOC_LockH>
 8008bdc:	9001      	str	r0, [sp, #4]
 8008bde:	4620      	mov	r0, r4
 8008be0:	f006 fc44 	bl	800f46c <GUI_ALLOC_LockH>
 8008be4:	9b01      	ldr	r3, [sp, #4]
 8008be6:	9000      	str	r0, [sp, #0]
 8008be8:	f8a3 9008 	strh.w	r9, [r3, #8]
 8008bec:	f8a3 800a 	strh.w	r8, [r3, #10]
 8008bf0:	819f      	strh	r7, [r3, #12]
 8008bf2:	f8a3 a00e 	strh.w	sl, [r3, #14]
 8008bf6:	9b00      	ldr	r3, [sp, #0]
 8008bf8:	4668      	mov	r0, sp
 8008bfa:	6a1c      	ldr	r4, [r3, #32]
 8008bfc:	f006 fc44 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008c00:	e7b4      	b.n	8008b6c <_PaintTransChildren+0x20>
	...

08008c04 <WM__PaintWinAndOverlays>:
 8008c04:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008c06:	4604      	mov	r4, r0
 8008c08:	f006 fc30 	bl	800f46c <GUI_ALLOC_LockH>
 8008c0c:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8008c0e:	9001      	str	r0, [sp, #4]
 8008c10:	f640 0301 	movw	r3, #2049	; 0x801
 8008c14:	4013      	ands	r3, r2
 8008c16:	2b01      	cmp	r3, #1
 8008c18:	d005      	beq.n	8008c26 <WM__PaintWinAndOverlays+0x22>
 8008c1a:	a801      	add	r0, sp, #4
 8008c1c:	f006 fc34 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008c20:	4620      	mov	r0, r4
 8008c22:	f7ff fe61 	bl	80088e8 <_Paint1>
 8008c26:	4b14      	ldr	r3, [pc, #80]	; (8008c78 <WM__PaintWinAndOverlays+0x74>)
 8008c28:	681b      	ldr	r3, [r3, #0]
 8008c2a:	b313      	cbz	r3, 8008c72 <WM__PaintWinAndOverlays+0x6e>
 8008c2c:	4620      	mov	r0, r4
 8008c2e:	f7ff ff8d 	bl	8008b4c <_PaintTransChildren>
 8008c32:	4620      	mov	r0, r4
 8008c34:	f006 fc10 	bl	800f458 <GUI_ALLOC_h2p>
 8008c38:	6985      	ldr	r5, [r0, #24]
 8008c3a:	6a04      	ldr	r4, [r0, #32]
 8008c3c:	b1cd      	cbz	r5, 8008c72 <WM__PaintWinAndOverlays+0x6e>
 8008c3e:	b194      	cbz	r4, 8008c66 <WM__PaintWinAndOverlays+0x62>
 8008c40:	4620      	mov	r0, r4
 8008c42:	f006 fc09 	bl	800f458 <GUI_ALLOC_h2p>
 8008c46:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008c48:	f003 0303 	and.w	r3, r3, #3
 8008c4c:	2b03      	cmp	r3, #3
 8008c4e:	d102      	bne.n	8008c56 <WM__PaintWinAndOverlays+0x52>
 8008c50:	4620      	mov	r0, r4
 8008c52:	f7ff ff31 	bl	8008ab8 <_Paint1Trans>
 8008c56:	4620      	mov	r0, r4
 8008c58:	f7ff ff78 	bl	8008b4c <_PaintTransChildren>
 8008c5c:	4620      	mov	r0, r4
 8008c5e:	f006 fbfb 	bl	800f458 <GUI_ALLOC_h2p>
 8008c62:	6a04      	ldr	r4, [r0, #32]
 8008c64:	e7eb      	b.n	8008c3e <WM__PaintWinAndOverlays+0x3a>
 8008c66:	4628      	mov	r0, r5
 8008c68:	f006 fbf6 	bl	800f458 <GUI_ALLOC_h2p>
 8008c6c:	6a04      	ldr	r4, [r0, #32]
 8008c6e:	6985      	ldr	r5, [r0, #24]
 8008c70:	e7e4      	b.n	8008c3c <WM__PaintWinAndOverlays+0x38>
 8008c72:	b003      	add	sp, #12
 8008c74:	bd30      	pop	{r4, r5, pc}
 8008c76:	bf00      	nop
 8008c78:	2001ba00 	.word	0x2001ba00

08008c7c <_cbPaintMemDev>:
 8008c7c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8008c80:	4d17      	ldr	r5, [pc, #92]	; (8008ce0 <_cbPaintMemDev+0x64>)
 8008c82:	682b      	ldr	r3, [r5, #0]
 8008c84:	4606      	mov	r6, r0
 8008c86:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8008c88:	f006 fbf0 	bl	800f46c <GUI_ALLOC_LockH>
 8008c8c:	682a      	ldr	r2, [r5, #0]
 8008c8e:	f8b0 a008 	ldrh.w	sl, [r0, #8]
 8008c92:	f8b0 900a 	ldrh.w	r9, [r0, #10]
 8008c96:	f8b0 800c 	ldrh.w	r8, [r0, #12]
 8008c9a:	89c7      	ldrh	r7, [r0, #14]
 8008c9c:	ac02      	add	r4, sp, #8
 8008c9e:	3208      	adds	r2, #8
 8008ca0:	f844 0d04 	str.w	r0, [r4, #-4]!
 8008ca4:	f100 0308 	add.w	r3, r0, #8
 8008ca8:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008cac:	e883 0003 	stmia.w	r3, {r0, r1}
 8008cb0:	4620      	mov	r0, r4
 8008cb2:	f006 fbe9 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008cb6:	6830      	ldr	r0, [r6, #0]
 8008cb8:	f7ff ffa4 	bl	8008c04 <WM__PaintWinAndOverlays>
 8008cbc:	682b      	ldr	r3, [r5, #0]
 8008cbe:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8008cc0:	f006 fbd4 	bl	800f46c <GUI_ALLOC_LockH>
 8008cc4:	9001      	str	r0, [sp, #4]
 8008cc6:	f8a0 a008 	strh.w	sl, [r0, #8]
 8008cca:	f8a0 900a 	strh.w	r9, [r0, #10]
 8008cce:	f8a0 800c 	strh.w	r8, [r0, #12]
 8008cd2:	81c7      	strh	r7, [r0, #14]
 8008cd4:	4620      	mov	r0, r4
 8008cd6:	f006 fbd7 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008cda:	b002      	add	sp, #8
 8008cdc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008ce0:	20000274 	.word	0x20000274

08008ce4 <WM__ClipAtParentBorders>:
 8008ce4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008ce6:	4607      	mov	r7, r0
 8008ce8:	460d      	mov	r5, r1
 8008cea:	4628      	mov	r0, r5
 8008cec:	f006 fbbe 	bl	800f46c <GUI_ALLOC_LockH>
 8008cf0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008cf2:	ac02      	add	r4, sp, #8
 8008cf4:	f013 0602 	ands.w	r6, r3, #2
 8008cf8:	4601      	mov	r1, r0
 8008cfa:	f844 0d04 	str.w	r0, [r4, #-4]!
 8008cfe:	d104      	bne.n	8008d0a <WM__ClipAtParentBorders+0x26>
 8008d00:	4620      	mov	r0, r4
 8008d02:	f006 fbc1 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008d06:	4630      	mov	r0, r6
 8008d08:	e016      	b.n	8008d38 <WM__ClipAtParentBorders+0x54>
 8008d0a:	4638      	mov	r0, r7
 8008d0c:	f003 fe9c 	bl	800ca48 <GUI__IntersectRect>
 8008d10:	9b01      	ldr	r3, [sp, #4]
 8008d12:	699e      	ldr	r6, [r3, #24]
 8008d14:	4620      	mov	r0, r4
 8008d16:	b956      	cbnz	r6, 8008d2e <WM__ClipAtParentBorders+0x4a>
 8008d18:	f006 fbb6 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008d1c:	4b07      	ldr	r3, [pc, #28]	; (8008d3c <WM__ClipAtParentBorders+0x58>)
 8008d1e:	681a      	ldr	r2, [r3, #0]
 8008d20:	4295      	cmp	r5, r2
 8008d22:	d008      	beq.n	8008d36 <WM__ClipAtParentBorders+0x52>
 8008d24:	6858      	ldr	r0, [r3, #4]
 8008d26:	1a2b      	subs	r3, r5, r0
 8008d28:	4258      	negs	r0, r3
 8008d2a:	4158      	adcs	r0, r3
 8008d2c:	e004      	b.n	8008d38 <WM__ClipAtParentBorders+0x54>
 8008d2e:	f006 fbab 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008d32:	4635      	mov	r5, r6
 8008d34:	e7d9      	b.n	8008cea <WM__ClipAtParentBorders+0x6>
 8008d36:	2001      	movs	r0, #1
 8008d38:	b003      	add	sp, #12
 8008d3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008d3c:	2001b9b8 	.word	0x2001b9b8

08008d40 <WM__InsertWindowIntoList>:
 8008d40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008d42:	4604      	mov	r4, r0
 8008d44:	b085      	sub	sp, #20
 8008d46:	460d      	mov	r5, r1
 8008d48:	2900      	cmp	r1, #0
 8008d4a:	d049      	beq.n	8008de0 <WM__InsertWindowIntoList+0xa0>
 8008d4c:	f006 fb8e 	bl	800f46c <GUI_ALLOC_LockH>
 8008d50:	2300      	movs	r3, #0
 8008d52:	6203      	str	r3, [r0, #32]
 8008d54:	6185      	str	r5, [r0, #24]
 8008d56:	9001      	str	r0, [sp, #4]
 8008d58:	4628      	mov	r0, r5
 8008d5a:	f006 fb87 	bl	800f46c <GUI_ALLOC_LockH>
 8008d5e:	9b01      	ldr	r3, [sp, #4]
 8008d60:	69c5      	ldr	r5, [r0, #28]
 8008d62:	9002      	str	r0, [sp, #8]
 8008d64:	6a9f      	ldr	r7, [r3, #40]	; 0x28
 8008d66:	b92d      	cbnz	r5, 8008d74 <WM__InsertWindowIntoList+0x34>
 8008d68:	61c4      	str	r4, [r0, #28]
 8008d6a:	a801      	add	r0, sp, #4
 8008d6c:	f006 fb8c 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008d70:	a802      	add	r0, sp, #8
 8008d72:	e033      	b.n	8008ddc <WM__InsertWindowIntoList+0x9c>
 8008d74:	4628      	mov	r0, r5
 8008d76:	f006 fb79 	bl	800f46c <GUI_ALLOC_LockH>
 8008d7a:	ae04      	add	r6, sp, #16
 8008d7c:	f007 0708 	and.w	r7, r7, #8
 8008d80:	f846 0d04 	str.w	r0, [r6, #-4]!
 8008d84:	b977      	cbnz	r7, 8008da4 <WM__InsertWindowIntoList+0x64>
 8008d86:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008d88:	071a      	lsls	r2, r3, #28
 8008d8a:	d50b      	bpl.n	8008da4 <WM__InsertWindowIntoList+0x64>
 8008d8c:	9b01      	ldr	r3, [sp, #4]
 8008d8e:	621d      	str	r5, [r3, #32]
 8008d90:	9b02      	ldr	r3, [sp, #8]
 8008d92:	a801      	add	r0, sp, #4
 8008d94:	61dc      	str	r4, [r3, #28]
 8008d96:	f006 fb77 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008d9a:	a802      	add	r0, sp, #8
 8008d9c:	f006 fb74 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008da0:	4630      	mov	r0, r6
 8008da2:	e01b      	b.n	8008ddc <WM__InsertWindowIntoList+0x9c>
 8008da4:	a802      	add	r0, sp, #8
 8008da6:	f006 fb6f 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008daa:	4630      	mov	r0, r6
 8008dac:	f006 fb6c 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008db0:	4628      	mov	r0, r5
 8008db2:	f006 fb51 	bl	800f458 <GUI_ALLOC_h2p>
 8008db6:	9003      	str	r0, [sp, #12]
 8008db8:	9b03      	ldr	r3, [sp, #12]
 8008dba:	6a1d      	ldr	r5, [r3, #32]
 8008dbc:	b90d      	cbnz	r5, 8008dc2 <WM__InsertWindowIntoList+0x82>
 8008dbe:	621c      	str	r4, [r3, #32]
 8008dc0:	e00b      	b.n	8008dda <WM__InsertWindowIntoList+0x9a>
 8008dc2:	4628      	mov	r0, r5
 8008dc4:	f006 fb48 	bl	800f458 <GUI_ALLOC_h2p>
 8008dc8:	2f00      	cmp	r7, #0
 8008dca:	d1f4      	bne.n	8008db6 <WM__InsertWindowIntoList+0x76>
 8008dcc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008dce:	071b      	lsls	r3, r3, #28
 8008dd0:	d5f1      	bpl.n	8008db6 <WM__InsertWindowIntoList+0x76>
 8008dd2:	9b03      	ldr	r3, [sp, #12]
 8008dd4:	621c      	str	r4, [r3, #32]
 8008dd6:	9b01      	ldr	r3, [sp, #4]
 8008dd8:	621d      	str	r5, [r3, #32]
 8008dda:	a801      	add	r0, sp, #4
 8008ddc:	f006 fb54 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008de0:	b005      	add	sp, #20
 8008de2:	bdf0      	pop	{r4, r5, r6, r7, pc}

08008de4 <WM__RemoveWindowFromList>:
 8008de4:	b570      	push	{r4, r5, r6, lr}
 8008de6:	4604      	mov	r4, r0
 8008de8:	f006 fb36 	bl	800f458 <GUI_ALLOC_h2p>
 8008dec:	4605      	mov	r5, r0
 8008dee:	6980      	ldr	r0, [r0, #24]
 8008df0:	b1a8      	cbz	r0, 8008e1e <WM__RemoveWindowFromList+0x3a>
 8008df2:	f006 fb31 	bl	800f458 <GUI_ALLOC_h2p>
 8008df6:	69c3      	ldr	r3, [r0, #28]
 8008df8:	42a3      	cmp	r3, r4
 8008dfa:	4606      	mov	r6, r0
 8008dfc:	d105      	bne.n	8008e0a <WM__RemoveWindowFromList+0x26>
 8008dfe:	4618      	mov	r0, r3
 8008e00:	f006 fb2a 	bl	800f458 <GUI_ALLOC_h2p>
 8008e04:	6a03      	ldr	r3, [r0, #32]
 8008e06:	61f3      	str	r3, [r6, #28]
 8008e08:	bd70      	pop	{r4, r5, r6, pc}
 8008e0a:	b143      	cbz	r3, 8008e1e <WM__RemoveWindowFromList+0x3a>
 8008e0c:	4618      	mov	r0, r3
 8008e0e:	f006 fb23 	bl	800f458 <GUI_ALLOC_h2p>
 8008e12:	6a03      	ldr	r3, [r0, #32]
 8008e14:	42a3      	cmp	r3, r4
 8008e16:	d1f8      	bne.n	8008e0a <WM__RemoveWindowFromList+0x26>
 8008e18:	6a2b      	ldr	r3, [r5, #32]
 8008e1a:	6203      	str	r3, [r0, #32]
 8008e1c:	bd70      	pop	{r4, r5, r6, pc}
 8008e1e:	bd70      	pop	{r4, r5, r6, pc}

08008e20 <WM__Client2Screen>:
 8008e20:	4603      	mov	r3, r0
 8008e22:	4608      	mov	r0, r1
 8008e24:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8008e28:	f9b3 1000 	ldrsh.w	r1, [r3]
 8008e2c:	f004 bffe 	b.w	800de2c <GUI_MoveRect>

08008e30 <_SetClipRectUserIntersect>:
 8008e30:	4b11      	ldr	r3, [pc, #68]	; (8008e78 <_SetClipRectUserIntersect+0x48>)
 8008e32:	b530      	push	{r4, r5, lr}
 8008e34:	681c      	ldr	r4, [r3, #0]
 8008e36:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8008e38:	b085      	sub	sp, #20
 8008e3a:	4605      	mov	r5, r0
 8008e3c:	b1ba      	cbz	r2, 8008e6e <_SetClipRectUserIntersect+0x3e>
 8008e3e:	6810      	ldr	r0, [r2, #0]
 8008e40:	6851      	ldr	r1, [r2, #4]
 8008e42:	ab02      	add	r3, sp, #8
 8008e44:	c303      	stmia	r3!, {r0, r1}
 8008e46:	4b0d      	ldr	r3, [pc, #52]	; (8008e7c <_SetClipRectUserIntersect+0x4c>)
 8008e48:	6818      	ldr	r0, [r3, #0]
 8008e4a:	b900      	cbnz	r0, 8008e4e <_SetClipRectUserIntersect+0x1e>
 8008e4c:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8008e4e:	f006 fb0d 	bl	800f46c <GUI_ALLOC_LockH>
 8008e52:	ac04      	add	r4, sp, #16
 8008e54:	a902      	add	r1, sp, #8
 8008e56:	f844 0d0c 	str.w	r0, [r4, #-12]!
 8008e5a:	f7ff ffe1 	bl	8008e20 <WM__Client2Screen>
 8008e5e:	4620      	mov	r0, r4
 8008e60:	f006 fb12 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008e64:	a802      	add	r0, sp, #8
 8008e66:	4629      	mov	r1, r5
 8008e68:	f003 fdee 	bl	800ca48 <GUI__IntersectRect>
 8008e6c:	a802      	add	r0, sp, #8
 8008e6e:	f002 ffb1 	bl	800bdd4 <LCD_SetClipRectEx>
 8008e72:	b005      	add	sp, #20
 8008e74:	bd30      	pop	{r4, r5, pc}
 8008e76:	bf00      	nop
 8008e78:	20000274 	.word	0x20000274
 8008e7c:	2001b9b4 	.word	0x2001b9b4

08008e80 <WM__ActivateClipRect>:
 8008e80:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8008e82:	4b0e      	ldr	r3, [pc, #56]	; (8008ebc <WM__ActivateClipRect+0x3c>)
 8008e84:	681b      	ldr	r3, [r3, #0]
 8008e86:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 8008e8a:	b10a      	cbz	r2, 8008e90 <WM__ActivateClipRect+0x10>
 8008e8c:	480c      	ldr	r0, [pc, #48]	; (8008ec0 <WM__ActivateClipRect+0x40>)
 8008e8e:	e011      	b.n	8008eb4 <WM__ActivateClipRect+0x34>
 8008e90:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8008e92:	f006 faeb 	bl	800f46c <GUI_ALLOC_LockH>
 8008e96:	9001      	str	r0, [sp, #4]
 8008e98:	c803      	ldmia	r0, {r0, r1}
 8008e9a:	ac02      	add	r4, sp, #8
 8008e9c:	e884 0003 	stmia.w	r4, {r0, r1}
 8008ea0:	a801      	add	r0, sp, #4
 8008ea2:	f006 faf1 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008ea6:	4b07      	ldr	r3, [pc, #28]	; (8008ec4 <WM__ActivateClipRect+0x44>)
 8008ea8:	6819      	ldr	r1, [r3, #0]
 8008eaa:	b111      	cbz	r1, 8008eb2 <WM__ActivateClipRect+0x32>
 8008eac:	4620      	mov	r0, r4
 8008eae:	f7ff ff19 	bl	8008ce4 <WM__ClipAtParentBorders>
 8008eb2:	4620      	mov	r0, r4
 8008eb4:	f7ff ffbc 	bl	8008e30 <_SetClipRectUserIntersect>
 8008eb8:	b004      	add	sp, #16
 8008eba:	bd10      	pop	{r4, pc}
 8008ebc:	20000274 	.word	0x20000274
 8008ec0:	20019cdc 	.word	0x20019cdc
 8008ec4:	2001b9b4 	.word	0x2001b9b4

08008ec8 <WM__IsWindow>:
 8008ec8:	4b06      	ldr	r3, [pc, #24]	; (8008ee4 <WM__IsWindow+0x1c>)
 8008eca:	b510      	push	{r4, lr}
 8008ecc:	4604      	mov	r4, r0
 8008ece:	6818      	ldr	r0, [r3, #0]
 8008ed0:	b128      	cbz	r0, 8008ede <WM__IsWindow+0x16>
 8008ed2:	42a0      	cmp	r0, r4
 8008ed4:	d004      	beq.n	8008ee0 <WM__IsWindow+0x18>
 8008ed6:	f006 fabf 	bl	800f458 <GUI_ALLOC_h2p>
 8008eda:	6940      	ldr	r0, [r0, #20]
 8008edc:	e7f8      	b.n	8008ed0 <WM__IsWindow+0x8>
 8008ede:	bd10      	pop	{r4, pc}
 8008ee0:	2001      	movs	r0, #1
 8008ee2:	bd10      	pop	{r4, pc}
 8008ee4:	2001b9d4 	.word	0x2001b9d4

08008ee8 <WM__InvalidateDrawAndDescs>:
 8008ee8:	b513      	push	{r0, r1, r4, lr}
 8008eea:	4604      	mov	r4, r0
 8008eec:	b300      	cbz	r0, 8008f30 <WM__InvalidateDrawAndDescs+0x48>
 8008eee:	f006 fabd 	bl	800f46c <GUI_ALLOC_LockH>
 8008ef2:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8008ef4:	9001      	str	r0, [sp, #4]
 8008ef6:	0793      	lsls	r3, r2, #30
 8008ef8:	d517      	bpl.n	8008f2a <WM__InvalidateDrawAndDescs+0x42>
 8008efa:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8008efc:	b140      	cbz	r0, 8008f10 <WM__InvalidateDrawAndDescs+0x28>
 8008efe:	4b0d      	ldr	r3, [pc, #52]	; (8008f34 <WM__InvalidateDrawAndDescs+0x4c>)
 8008f00:	681b      	ldr	r3, [r3, #0]
 8008f02:	42a3      	cmp	r3, r4
 8008f04:	d004      	beq.n	8008f10 <WM__InvalidateDrawAndDescs+0x28>
 8008f06:	f001 fde5 	bl	800aad4 <GUI_MEMDEV_Delete>
 8008f0a:	9b01      	ldr	r3, [sp, #4]
 8008f0c:	2200      	movs	r2, #0
 8008f0e:	625a      	str	r2, [r3, #36]	; 0x24
 8008f10:	4620      	mov	r0, r4
 8008f12:	f7ff fc0e 	bl	8008732 <WM_GetFirstChild>
 8008f16:	4604      	mov	r4, r0
 8008f18:	b13c      	cbz	r4, 8008f2a <WM__InvalidateDrawAndDescs+0x42>
 8008f1a:	4620      	mov	r0, r4
 8008f1c:	f7ff ffe4 	bl	8008ee8 <WM__InvalidateDrawAndDescs>
 8008f20:	4620      	mov	r0, r4
 8008f22:	f006 fa99 	bl	800f458 <GUI_ALLOC_h2p>
 8008f26:	6a04      	ldr	r4, [r0, #32]
 8008f28:	e7f6      	b.n	8008f18 <WM__InvalidateDrawAndDescs+0x30>
 8008f2a:	a801      	add	r0, sp, #4
 8008f2c:	f006 faac 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008f30:	b002      	add	sp, #8
 8008f32:	bd10      	pop	{r4, pc}
 8008f34:	2001b9fc 	.word	0x2001b9fc

08008f38 <WM__RectIsNZ>:
 8008f38:	f9b0 2000 	ldrsh.w	r2, [r0]
 8008f3c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8008f40:	429a      	cmp	r2, r3
 8008f42:	dc08      	bgt.n	8008f56 <WM__RectIsNZ+0x1e>
 8008f44:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8008f48:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8008f4c:	429a      	cmp	r2, r3
 8008f4e:	bfcc      	ite	gt
 8008f50:	2000      	movgt	r0, #0
 8008f52:	2001      	movle	r0, #1
 8008f54:	4770      	bx	lr
 8008f56:	2000      	movs	r0, #0
 8008f58:	4770      	bx	lr
	...

08008f5c <_Invalidate1Abs>:
 8008f5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008f5e:	b085      	sub	sp, #20
 8008f60:	4606      	mov	r6, r0
 8008f62:	460d      	mov	r5, r1
 8008f64:	4617      	mov	r7, r2
 8008f66:	f006 fa77 	bl	800f458 <GUI_ALLOC_h2p>
 8008f6a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008f6c:	9001      	str	r0, [sp, #4]
 8008f6e:	07a3      	lsls	r3, r4, #30
 8008f70:	d534      	bpl.n	8008fdc <_Invalidate1Abs+0x80>
 8008f72:	4628      	mov	r0, r5
 8008f74:	f7ff ffe0 	bl	8008f38 <WM__RectIsNZ>
 8008f78:	2800      	cmp	r0, #0
 8008f7a:	d02f      	beq.n	8008fdc <_Invalidate1Abs+0x80>
 8008f7c:	f640 0301 	movw	r3, #2049	; 0x801
 8008f80:	4023      	ands	r3, r4
 8008f82:	2b01      	cmp	r3, #1
 8008f84:	d02a      	beq.n	8008fdc <_Invalidate1Abs+0x80>
 8008f86:	4630      	mov	r0, r6
 8008f88:	f006 fa70 	bl	800f46c <GUI_ALLOC_LockH>
 8008f8c:	ac02      	add	r4, sp, #8
 8008f8e:	4602      	mov	r2, r0
 8008f90:	9001      	str	r0, [sp, #4]
 8008f92:	4629      	mov	r1, r5
 8008f94:	4620      	mov	r0, r4
 8008f96:	f003 fd25 	bl	800c9e4 <GUI__IntersectRects>
 8008f9a:	4620      	mov	r0, r4
 8008f9c:	f7ff ffcc 	bl	8008f38 <WM__RectIsNZ>
 8008fa0:	b1c8      	cbz	r0, 8008fd6 <_Invalidate1Abs+0x7a>
 8008fa2:	9b01      	ldr	r3, [sp, #4]
 8008fa4:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 8008fa6:	f244 0120 	movw	r1, #16416	; 0x4020
 8008faa:	4031      	ands	r1, r6
 8008fac:	f103 0508 	add.w	r5, r3, #8
 8008fb0:	b129      	cbz	r1, 8008fbe <_Invalidate1Abs+0x62>
 8008fb2:	4628      	mov	r0, r5
 8008fb4:	4629      	mov	r1, r5
 8008fb6:	4622      	mov	r2, r4
 8008fb8:	f004 ff48 	bl	800de4c <GUI_MergeRect>
 8008fbc:	e00b      	b.n	8008fd6 <_Invalidate1Abs+0x7a>
 8008fbe:	e894 0003 	ldmia.w	r4, {r0, r1}
 8008fc2:	433e      	orrs	r6, r7
 8008fc4:	e885 0003 	stmia.w	r5, {r0, r1}
 8008fc8:	629e      	str	r6, [r3, #40]	; 0x28
 8008fca:	4b05      	ldr	r3, [pc, #20]	; (8008fe0 <_Invalidate1Abs+0x84>)
 8008fcc:	881a      	ldrh	r2, [r3, #0]
 8008fce:	3201      	adds	r2, #1
 8008fd0:	801a      	strh	r2, [r3, #0]
 8008fd2:	f003 feff 	bl	800cdd4 <GUI_SignalEvent>
 8008fd6:	a801      	add	r0, sp, #4
 8008fd8:	f006 fa56 	bl	800f488 <GUI_ALLOC_UnlockH>
 8008fdc:	b005      	add	sp, #20
 8008fde:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008fe0:	2001b9d0 	.word	0x2001b9d0

08008fe4 <WM__Invalidate1Abs>:
 8008fe4:	2220      	movs	r2, #32
 8008fe6:	f7ff bfb9 	b.w	8008f5c <_Invalidate1Abs>

08008fea <WM_InvalidateWindowAndDescsEx>:
 8008fea:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008fec:	460f      	mov	r7, r1
 8008fee:	b085      	sub	sp, #20
 8008ff0:	4615      	mov	r5, r2
 8008ff2:	4606      	mov	r6, r0
 8008ff4:	b348      	cbz	r0, 800904a <WM_InvalidateWindowAndDescsEx+0x60>
 8008ff6:	f006 fa39 	bl	800f46c <GUI_ALLOC_LockH>
 8008ffa:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008ffc:	ac04      	add	r4, sp, #16
 8008ffe:	079b      	lsls	r3, r3, #30
 8009000:	4602      	mov	r2, r0
 8009002:	f844 0d0c 	str.w	r0, [r4, #-12]!
 8009006:	d403      	bmi.n	8009010 <WM_InvalidateWindowAndDescsEx+0x26>
 8009008:	4620      	mov	r0, r4
 800900a:	f006 fa3d 	bl	800f488 <GUI_ALLOC_UnlockH>
 800900e:	e01c      	b.n	800904a <WM_InvalidateWindowAndDescsEx+0x60>
 8009010:	a802      	add	r0, sp, #8
 8009012:	4639      	mov	r1, r7
 8009014:	f003 fce6 	bl	800c9e4 <GUI__IntersectRects>
 8009018:	2800      	cmp	r0, #0
 800901a:	d0f5      	beq.n	8009008 <WM_InvalidateWindowAndDescsEx+0x1e>
 800901c:	4620      	mov	r0, r4
 800901e:	f006 fa33 	bl	800f488 <GUI_ALLOC_UnlockH>
 8009022:	4630      	mov	r0, r6
 8009024:	a902      	add	r1, sp, #8
 8009026:	462a      	mov	r2, r5
 8009028:	f7ff ff98 	bl	8008f5c <_Invalidate1Abs>
 800902c:	4630      	mov	r0, r6
 800902e:	f7ff fb80 	bl	8008732 <WM_GetFirstChild>
 8009032:	4604      	mov	r4, r0
 8009034:	b14c      	cbz	r4, 800904a <WM_InvalidateWindowAndDescsEx+0x60>
 8009036:	4620      	mov	r0, r4
 8009038:	a902      	add	r1, sp, #8
 800903a:	462a      	mov	r2, r5
 800903c:	f7ff ffd5 	bl	8008fea <WM_InvalidateWindowAndDescsEx>
 8009040:	4620      	mov	r0, r4
 8009042:	f006 fa09 	bl	800f458 <GUI_ALLOC_h2p>
 8009046:	6a04      	ldr	r4, [r0, #32]
 8009048:	e7f4      	b.n	8009034 <WM_InvalidateWindowAndDescsEx+0x4a>
 800904a:	b005      	add	sp, #20
 800904c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800904e <WM__InvalidateRect>:
 800904e:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009052:	4680      	mov	r8, r0
 8009054:	4617      	mov	r7, r2
 8009056:	461d      	mov	r5, r3
 8009058:	460c      	mov	r4, r1
 800905a:	2900      	cmp	r1, #0
 800905c:	d030      	beq.n	80090c0 <WM__InvalidateRect+0x72>
 800905e:	4608      	mov	r0, r1
 8009060:	f006 fa04 	bl	800f46c <GUI_ALLOC_LockH>
 8009064:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8009066:	9001      	str	r0, [sp, #4]
 8009068:	07b3      	lsls	r3, r6, #30
 800906a:	4602      	mov	r2, r0
 800906c:	d525      	bpl.n	80090ba <WM__InvalidateRect+0x6c>
 800906e:	a802      	add	r0, sp, #8
 8009070:	4641      	mov	r1, r8
 8009072:	f003 fcb7 	bl	800c9e4 <GUI__IntersectRects>
 8009076:	b300      	cbz	r0, 80090ba <WM__InvalidateRect+0x6c>
 8009078:	f640 0301 	movw	r3, #2049	; 0x801
 800907c:	4033      	ands	r3, r6
 800907e:	2b01      	cmp	r3, #1
 8009080:	d107      	bne.n	8009092 <WM__InvalidateRect+0x44>
 8009082:	9b01      	ldr	r3, [sp, #4]
 8009084:	a802      	add	r0, sp, #8
 8009086:	6999      	ldr	r1, [r3, #24]
 8009088:	6a1a      	ldr	r2, [r3, #32]
 800908a:	462b      	mov	r3, r5
 800908c:	f7ff ffdf 	bl	800904e <WM__InvalidateRect>
 8009090:	e004      	b.n	800909c <WM__InvalidateRect+0x4e>
 8009092:	4620      	mov	r0, r4
 8009094:	a902      	add	r1, sp, #8
 8009096:	462a      	mov	r2, r5
 8009098:	f7ff ff60 	bl	8008f5c <_Invalidate1Abs>
 800909c:	9b01      	ldr	r3, [sp, #4]
 800909e:	69dc      	ldr	r4, [r3, #28]
 80090a0:	b15c      	cbz	r4, 80090ba <WM__InvalidateRect+0x6c>
 80090a2:	42bc      	cmp	r4, r7
 80090a4:	d009      	beq.n	80090ba <WM__InvalidateRect+0x6c>
 80090a6:	4620      	mov	r0, r4
 80090a8:	a902      	add	r1, sp, #8
 80090aa:	462a      	mov	r2, r5
 80090ac:	f7ff ff9d 	bl	8008fea <WM_InvalidateWindowAndDescsEx>
 80090b0:	4620      	mov	r0, r4
 80090b2:	f006 f9d1 	bl	800f458 <GUI_ALLOC_h2p>
 80090b6:	6a04      	ldr	r4, [r0, #32]
 80090b8:	e7f2      	b.n	80090a0 <WM__InvalidateRect+0x52>
 80090ba:	a801      	add	r0, sp, #4
 80090bc:	f006 f9e4 	bl	800f488 <GUI_ALLOC_UnlockH>
 80090c0:	b004      	add	sp, #16
 80090c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080090c6 <WM__InvalidateParent>:
 80090c6:	b570      	push	{r4, r5, r6, lr}
 80090c8:	4605      	mov	r5, r0
 80090ca:	4608      	mov	r0, r1
 80090cc:	460c      	mov	r4, r1
 80090ce:	4616      	mov	r6, r2
 80090d0:	f006 f9c2 	bl	800f458 <GUI_ALLOC_h2p>
 80090d4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80090d6:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 80090da:	4628      	mov	r0, r5
 80090dc:	4621      	mov	r1, r4
 80090de:	4632      	mov	r2, r6
 80090e0:	bf0c      	ite	eq
 80090e2:	2320      	moveq	r3, #32
 80090e4:	f44f 4380 	movne.w	r3, #16384	; 0x4000
 80090e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80090ec:	f7ff bfaf 	b.w	800904e <WM__InvalidateRect>

080090f0 <WM__InvalidateRectEx>:
 80090f0:	2320      	movs	r3, #32
 80090f2:	f7ff bfac 	b.w	800904e <WM__InvalidateRect>

080090f6 <WM__DetachWindow>:
 80090f6:	b513      	push	{r0, r1, r4, lr}
 80090f8:	4604      	mov	r4, r0
 80090fa:	f006 f9b7 	bl	800f46c <GUI_ALLOC_LockH>
 80090fe:	6981      	ldr	r1, [r0, #24]
 8009100:	9001      	str	r0, [sp, #4]
 8009102:	b141      	cbz	r1, 8009116 <WM__DetachWindow+0x20>
 8009104:	6a02      	ldr	r2, [r0, #32]
 8009106:	f7ff fff3 	bl	80090f0 <WM__InvalidateRectEx>
 800910a:	4620      	mov	r0, r4
 800910c:	f7ff fe6a 	bl	8008de4 <WM__RemoveWindowFromList>
 8009110:	9b01      	ldr	r3, [sp, #4]
 8009112:	2200      	movs	r2, #0
 8009114:	619a      	str	r2, [r3, #24]
 8009116:	a801      	add	r0, sp, #4
 8009118:	f006 f9b6 	bl	800f488 <GUI_ALLOC_UnlockH>
 800911c:	b002      	add	sp, #8
 800911e:	bd10      	pop	{r4, pc}

08009120 <WM_SendMessage>:
 8009120:	b108      	cbz	r0, 8009126 <WM_SendMessage+0x6>
 8009122:	f007 bdc7 	b.w	8010cb4 <WM__SendMessage>
 8009126:	4770      	bx	lr

08009128 <WM__SendMsgNoData>:
 8009128:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800912a:	ab04      	add	r3, sp, #16
 800912c:	9001      	str	r0, [sp, #4]
 800912e:	f843 1d10 	str.w	r1, [r3, #-16]!
 8009132:	4669      	mov	r1, sp
 8009134:	f007 fdbe 	bl	8010cb4 <WM__SendMessage>
 8009138:	b005      	add	sp, #20
 800913a:	f85d fb04 	ldr.w	pc, [sp], #4

0800913e <WM__GetClientRectWin>:
 800913e:	2300      	movs	r3, #0
 8009140:	800b      	strh	r3, [r1, #0]
 8009142:	8882      	ldrh	r2, [r0, #4]
 8009144:	804b      	strh	r3, [r1, #2]
 8009146:	8803      	ldrh	r3, [r0, #0]
 8009148:	1ad3      	subs	r3, r2, r3
 800914a:	808b      	strh	r3, [r1, #4]
 800914c:	88c2      	ldrh	r2, [r0, #6]
 800914e:	8843      	ldrh	r3, [r0, #2]
 8009150:	1ad3      	subs	r3, r2, r3
 8009152:	80cb      	strh	r3, [r1, #6]
 8009154:	4770      	bx	lr

08009156 <WM_InvalidateRect>:
 8009156:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009158:	460f      	mov	r7, r1
 800915a:	b087      	sub	sp, #28
 800915c:	4605      	mov	r5, r0
 800915e:	2800      	cmp	r0, #0
 8009160:	d033      	beq.n	80091ca <WM_InvalidateRect+0x74>
 8009162:	f006 f983 	bl	800f46c <GUI_ALLOC_LockH>
 8009166:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8009168:	9001      	str	r0, [sp, #4]
 800916a:	07b2      	lsls	r2, r6, #30
 800916c:	d52a      	bpl.n	80091c4 <WM_InvalidateRect+0x6e>
 800916e:	c803      	ldmia	r0, {r0, r1}
 8009170:	ac04      	add	r4, sp, #16
 8009172:	03f3      	lsls	r3, r6, #15
 8009174:	e884 0003 	stmia.w	r4, {r0, r1}
 8009178:	d502      	bpl.n	8009180 <WM_InvalidateRect+0x2a>
 800917a:	4628      	mov	r0, r5
 800917c:	f7ff feb4 	bl	8008ee8 <WM__InvalidateDrawAndDescs>
 8009180:	b15f      	cbz	r7, 800919a <WM_InvalidateRect+0x44>
 8009182:	6838      	ldr	r0, [r7, #0]
 8009184:	6879      	ldr	r1, [r7, #4]
 8009186:	ab02      	add	r3, sp, #8
 8009188:	c303      	stmia	r3!, {r0, r1}
 800918a:	9801      	ldr	r0, [sp, #4]
 800918c:	a902      	add	r1, sp, #8
 800918e:	f7ff fe47 	bl	8008e20 <WM__Client2Screen>
 8009192:	4620      	mov	r0, r4
 8009194:	a902      	add	r1, sp, #8
 8009196:	f003 fc57 	bl	800ca48 <GUI__IntersectRect>
 800919a:	4620      	mov	r0, r4
 800919c:	4629      	mov	r1, r5
 800919e:	f7ff fda1 	bl	8008ce4 <WM__ClipAtParentBorders>
 80091a2:	b178      	cbz	r0, 80091c4 <WM_InvalidateRect+0x6e>
 80091a4:	f640 0301 	movw	r3, #2049	; 0x801
 80091a8:	4033      	ands	r3, r6
 80091aa:	2b01      	cmp	r3, #1
 80091ac:	d106      	bne.n	80091bc <WM_InvalidateRect+0x66>
 80091ae:	9b01      	ldr	r3, [sp, #4]
 80091b0:	4620      	mov	r0, r4
 80091b2:	6999      	ldr	r1, [r3, #24]
 80091b4:	6a1a      	ldr	r2, [r3, #32]
 80091b6:	f7ff ff9b 	bl	80090f0 <WM__InvalidateRectEx>
 80091ba:	e003      	b.n	80091c4 <WM_InvalidateRect+0x6e>
 80091bc:	4628      	mov	r0, r5
 80091be:	4621      	mov	r1, r4
 80091c0:	f7ff ff10 	bl	8008fe4 <WM__Invalidate1Abs>
 80091c4:	a801      	add	r0, sp, #4
 80091c6:	f006 f95f 	bl	800f488 <GUI_ALLOC_UnlockH>
 80091ca:	b007      	add	sp, #28
 80091cc:	bdf0      	pop	{r4, r5, r6, r7, pc}

080091ce <WM_InvalidateWindow>:
 80091ce:	2100      	movs	r1, #0
 80091d0:	f7ff bfc1 	b.w	8009156 <WM_InvalidateRect>

080091d4 <WM__GetTopLevelLayer>:
 80091d4:	b510      	push	{r4, lr}
 80091d6:	4604      	mov	r4, r0
 80091d8:	f006 f93e 	bl	800f458 <GUI_ALLOC_h2p>
 80091dc:	6980      	ldr	r0, [r0, #24]
 80091de:	2800      	cmp	r0, #0
 80091e0:	d1f9      	bne.n	80091d6 <WM__GetTopLevelLayer+0x2>
 80091e2:	4b05      	ldr	r3, [pc, #20]	; (80091f8 <WM__GetTopLevelLayer+0x24>)
 80091e4:	681a      	ldr	r2, [r3, #0]
 80091e6:	4294      	cmp	r4, r2
 80091e8:	d005      	beq.n	80091f6 <WM__GetTopLevelLayer+0x22>
 80091ea:	6858      	ldr	r0, [r3, #4]
 80091ec:	4284      	cmp	r4, r0
 80091ee:	bf14      	ite	ne
 80091f0:	f04f 30ff 	movne.w	r0, #4294967295
 80091f4:	2001      	moveq	r0, #1
 80091f6:	bd10      	pop	{r4, pc}
 80091f8:	2001b9b8 	.word	0x2001b9b8

080091fc <WM__SelectTopLevelLayer>:
 80091fc:	b508      	push	{r3, lr}
 80091fe:	f7ff ffe9 	bl	80091d4 <WM__GetTopLevelLayer>
 8009202:	2800      	cmp	r0, #0
 8009204:	db03      	blt.n	800920e <WM__SelectTopLevelLayer+0x12>
 8009206:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800920a:	f004 bcff 	b.w	800dc0c <GUI_SelectLayer>
 800920e:	bd08      	pop	{r3, pc}

08009210 <WM_SelectWindow>:
 8009210:	4a0d      	ldr	r2, [pc, #52]	; (8009248 <WM_SelectWindow+0x38>)
 8009212:	6813      	ldr	r3, [r2, #0]
 8009214:	b570      	push	{r4, r5, r6, lr}
 8009216:	6c9d      	ldr	r5, [r3, #72]	; 0x48
 8009218:	4604      	mov	r4, r0
 800921a:	4616      	mov	r6, r2
 800921c:	b908      	cbnz	r0, 8009222 <WM_SelectWindow+0x12>
 800921e:	4a0b      	ldr	r2, [pc, #44]	; (800924c <WM_SelectWindow+0x3c>)
 8009220:	6814      	ldr	r4, [r2, #0]
 8009222:	649c      	str	r4, [r3, #72]	; 0x48
 8009224:	4620      	mov	r0, r4
 8009226:	f7ff ffe9 	bl	80091fc <WM__SelectTopLevelLayer>
 800922a:	f003 f9fb 	bl	800c624 <LCD_SetClipRectMax>
 800922e:	4620      	mov	r0, r4
 8009230:	f006 f912 	bl	800f458 <GUI_ALLOC_h2p>
 8009234:	6833      	ldr	r3, [r6, #0]
 8009236:	f9b0 1000 	ldrsh.w	r1, [r0]
 800923a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800923e:	64d9      	str	r1, [r3, #76]	; 0x4c
 8009240:	651a      	str	r2, [r3, #80]	; 0x50
 8009242:	4628      	mov	r0, r5
 8009244:	bd70      	pop	{r4, r5, r6, pc}
 8009246:	bf00      	nop
 8009248:	20000274 	.word	0x20000274
 800924c:	2001b9d4 	.word	0x2001b9d4

08009250 <WM_CreateWindowAsChild>:
 8009250:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009254:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8009256:	469b      	mov	fp, r3
 8009258:	4b4b      	ldr	r3, [pc, #300]	; (8009388 <WM_CreateWindowAsChild+0x138>)
 800925a:	4607      	mov	r7, r0
 800925c:	4688      	mov	r8, r1
 800925e:	4692      	mov	sl, r2
 8009260:	681e      	ldr	r6, [r3, #0]
 8009262:	bb65      	cbnz	r5, 80092be <WM_CreateWindowAsChild+0x6e>
 8009264:	4b49      	ldr	r3, [pc, #292]	; (800938c <WM_CreateWindowAsChild+0x13c>)
 8009266:	881b      	ldrh	r3, [r3, #0]
 8009268:	b363      	cbz	r3, 80092c4 <WM_CreateWindowAsChild+0x74>
 800926a:	4b49      	ldr	r3, [pc, #292]	; (8009390 <WM_CreateWindowAsChild+0x140>)
 800926c:	681b      	ldr	r3, [r3, #0]
 800926e:	7c5a      	ldrb	r2, [r3, #17]
 8009270:	4b48      	ldr	r3, [pc, #288]	; (8009394 <WM_CreateWindowAsChild+0x144>)
 8009272:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009276:	1c5a      	adds	r2, r3, #1
 8009278:	d024      	beq.n	80092c4 <WM_CreateWindowAsChild+0x74>
 800927a:	b31b      	cbz	r3, 80092c4 <WM_CreateWindowAsChild+0x74>
 800927c:	461d      	mov	r5, r3
 800927e:	4628      	mov	r0, r5
 8009280:	f006 f8f4 	bl	800f46c <GUI_ALLOC_LockH>
 8009284:	f9b0 2000 	ldrsh.w	r2, [r0]
 8009288:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800928c:	9001      	str	r0, [sp, #4]
 800928e:	4417      	add	r7, r2
 8009290:	4498      	add	r8, r3
 8009292:	f1ba 0f00 	cmp.w	sl, #0
 8009296:	d105      	bne.n	80092a4 <WM_CreateWindowAsChild+0x54>
 8009298:	f9b0 a004 	ldrsh.w	sl, [r0, #4]
 800929c:	ebc2 0a0a 	rsb	sl, r2, sl
 80092a0:	f10a 0a01 	add.w	sl, sl, #1
 80092a4:	f1bb 0f00 	cmp.w	fp, #0
 80092a8:	d105      	bne.n	80092b6 <WM_CreateWindowAsChild+0x66>
 80092aa:	f9b0 b006 	ldrsh.w	fp, [r0, #6]
 80092ae:	ebc3 0b0b 	rsb	fp, r3, fp
 80092b2:	f10b 0b01 	add.w	fp, fp, #1
 80092b6:	a801      	add	r0, sp, #4
 80092b8:	f006 f8e6 	bl	800f488 <GUI_ALLOC_UnlockH>
 80092bc:	e002      	b.n	80092c4 <WM_CreateWindowAsChild+0x74>
 80092be:	1c6b      	adds	r3, r5, #1
 80092c0:	d1dd      	bne.n	800927e <WM_CreateWindowAsChild+0x2e>
 80092c2:	2500      	movs	r5, #0
 80092c4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80092c6:	302c      	adds	r0, #44	; 0x2c
 80092c8:	f006 fbb0 	bl	800fa2c <GUI_ALLOC_AllocZero>
 80092cc:	4604      	mov	r4, r0
 80092ce:	2800      	cmp	r0, #0
 80092d0:	d056      	beq.n	8009380 <WM_CreateWindowAsChild+0x130>
 80092d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80092d4:	431e      	orrs	r6, r3
 80092d6:	4b2d      	ldr	r3, [pc, #180]	; (800938c <WM_CreateWindowAsChild+0x13c>)
 80092d8:	881a      	ldrh	r2, [r3, #0]
 80092da:	3201      	adds	r2, #1
 80092dc:	801a      	strh	r2, [r3, #0]
 80092de:	f006 f8c5 	bl	800f46c <GUI_ALLOC_LockH>
 80092e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80092e4:	6103      	str	r3, [r0, #16]
 80092e6:	f10d 0908 	add.w	r9, sp, #8
 80092ea:	4b2b      	ldr	r3, [pc, #172]	; (8009398 <WM_CreateWindowAsChild+0x148>)
 80092ec:	6a82      	ldr	r2, [r0, #40]	; 0x28
 80092ee:	f849 0d08 	str.w	r0, [r9, #-8]!
 80092f2:	4033      	ands	r3, r6
 80092f4:	8007      	strh	r7, [r0, #0]
 80092f6:	f8a0 8002 	strh.w	r8, [r0, #2]
 80092fa:	4457      	add	r7, sl
 80092fc:	44d8      	add	r8, fp
 80092fe:	4313      	orrs	r3, r2
 8009300:	3f01      	subs	r7, #1
 8009302:	f108 38ff 	add.w	r8, r8, #4294967295
 8009306:	6283      	str	r3, [r0, #40]	; 0x28
 8009308:	8087      	strh	r7, [r0, #4]
 800930a:	f8a0 8006 	strh.w	r8, [r0, #6]
 800930e:	4668      	mov	r0, sp
 8009310:	f006 f8ba 	bl	800f488 <GUI_ALLOC_UnlockH>
 8009314:	4b21      	ldr	r3, [pc, #132]	; (800939c <WM_CreateWindowAsChild+0x14c>)
 8009316:	6818      	ldr	r0, [r3, #0]
 8009318:	b148      	cbz	r0, 800932e <WM_CreateWindowAsChild+0xde>
 800931a:	f006 f89d 	bl	800f458 <GUI_ALLOC_h2p>
 800931e:	4607      	mov	r7, r0
 8009320:	4620      	mov	r0, r4
 8009322:	f006 f899 	bl	800f458 <GUI_ALLOC_h2p>
 8009326:	697b      	ldr	r3, [r7, #20]
 8009328:	6143      	str	r3, [r0, #20]
 800932a:	617c      	str	r4, [r7, #20]
 800932c:	e000      	b.n	8009330 <WM_CreateWindowAsChild+0xe0>
 800932e:	601c      	str	r4, [r3, #0]
 8009330:	4629      	mov	r1, r5
 8009332:	4620      	mov	r0, r4
 8009334:	f7ff fd04 	bl	8008d40 <WM__InsertWindowIntoList>
 8009338:	06b5      	lsls	r5, r6, #26
 800933a:	d502      	bpl.n	8009342 <WM_CreateWindowAsChild+0xf2>
 800933c:	4620      	mov	r0, r4
 800933e:	f7ff ff67 	bl	8009210 <WM_SelectWindow>
 8009342:	07f0      	lsls	r0, r6, #31
 8009344:	d503      	bpl.n	800934e <WM_CreateWindowAsChild+0xfe>
 8009346:	4b16      	ldr	r3, [pc, #88]	; (80093a0 <WM_CreateWindowAsChild+0x150>)
 8009348:	681a      	ldr	r2, [r3, #0]
 800934a:	3201      	adds	r2, #1
 800934c:	601a      	str	r2, [r3, #0]
 800934e:	0671      	lsls	r1, r6, #25
 8009350:	d502      	bpl.n	8009358 <WM_CreateWindowAsChild+0x108>
 8009352:	4620      	mov	r0, r4
 8009354:	f008 f8e4 	bl	8011520 <WM_BringToBottom>
 8009358:	07b2      	lsls	r2, r6, #30
 800935a:	d50d      	bpl.n	8009378 <WM_CreateWindowAsChild+0x128>
 800935c:	4620      	mov	r0, r4
 800935e:	f006 f885 	bl	800f46c <GUI_ALLOC_LockH>
 8009362:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009364:	9000      	str	r0, [sp, #0]
 8009366:	f043 0302 	orr.w	r3, r3, #2
 800936a:	6283      	str	r3, [r0, #40]	; 0x28
 800936c:	4668      	mov	r0, sp
 800936e:	f006 f88b 	bl	800f488 <GUI_ALLOC_UnlockH>
 8009372:	4620      	mov	r0, r4
 8009374:	f7ff ff2b 	bl	80091ce <WM_InvalidateWindow>
 8009378:	4620      	mov	r0, r4
 800937a:	2101      	movs	r1, #1
 800937c:	f7ff fed4 	bl	8009128 <WM__SendMsgNoData>
 8009380:	4620      	mov	r0, r4
 8009382:	b003      	add	sp, #12
 8009384:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009388:	2001b9e0 	.word	0x2001b9e0
 800938c:	2001b9b0 	.word	0x2001b9b0
 8009390:	20000274 	.word	0x20000274
 8009394:	2001b9b8 	.word	0x2001b9b8
 8009398:	003f3f9f 	.word	0x003f3f9f
 800939c:	2001b9d4 	.word	0x2001b9d4
 80093a0:	2001ba00 	.word	0x2001ba00

080093a4 <WM_DeleteWindow>:
 80093a4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80093a6:	4604      	mov	r4, r0
 80093a8:	2800      	cmp	r0, #0
 80093aa:	d06e      	beq.n	800948a <WM_DeleteWindow+0xe6>
 80093ac:	f7ff fd8c 	bl	8008ec8 <WM__IsWindow>
 80093b0:	2800      	cmp	r0, #0
 80093b2:	d06a      	beq.n	800948a <WM_DeleteWindow+0xe6>
 80093b4:	4620      	mov	r0, r4
 80093b6:	f7ff ff0d 	bl	80091d4 <WM__GetTopLevelLayer>
 80093ba:	210b      	movs	r1, #11
 80093bc:	4605      	mov	r5, r0
 80093be:	4620      	mov	r0, r4
 80093c0:	f7ff feb2 	bl	8009128 <WM__SendMsgNoData>
 80093c4:	4620      	mov	r0, r4
 80093c6:	f007 ff44 	bl	8011252 <WM__DeleteAssocTimer>
 80093ca:	4620      	mov	r0, r4
 80093cc:	f006 f84e 	bl	800f46c <GUI_ALLOC_LockH>
 80093d0:	9001      	str	r0, [sp, #4]
 80093d2:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80093d4:	b108      	cbz	r0, 80093da <WM_DeleteWindow+0x36>
 80093d6:	f001 fb7d 	bl	800aad4 <GUI_MEMDEV_Delete>
 80093da:	4b2d      	ldr	r3, [pc, #180]	; (8009490 <WM_DeleteWindow+0xec>)
 80093dc:	4a2d      	ldr	r2, [pc, #180]	; (8009494 <WM_DeleteWindow+0xf0>)
 80093de:	2100      	movs	r1, #0
 80093e0:	6019      	str	r1, [r3, #0]
 80093e2:	4b2d      	ldr	r3, [pc, #180]	; (8009498 <WM_DeleteWindow+0xf4>)
 80093e4:	681b      	ldr	r3, [r3, #0]
 80093e6:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80093ea:	42a0      	cmp	r0, r4
 80093ec:	bf08      	it	eq
 80093ee:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 80093f2:	4a2a      	ldr	r2, [pc, #168]	; (800949c <WM_DeleteWindow+0xf8>)
 80093f4:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 80093f8:	42a1      	cmp	r1, r4
 80093fa:	bf04      	itt	eq
 80093fc:	2100      	moveq	r1, #0
 80093fe:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 8009402:	4b27      	ldr	r3, [pc, #156]	; (80094a0 <WM_DeleteWindow+0xfc>)
 8009404:	681b      	ldr	r3, [r3, #0]
 8009406:	b12b      	cbz	r3, 8009414 <WM_DeleteWindow+0x70>
 8009408:	685a      	ldr	r2, [r3, #4]
 800940a:	42a2      	cmp	r2, r4
 800940c:	bf04      	itt	eq
 800940e:	2200      	moveq	r2, #0
 8009410:	605a      	streq	r2, [r3, #4]
 8009412:	e7f7      	b.n	8009404 <WM_DeleteWindow+0x60>
 8009414:	4620      	mov	r0, r4
 8009416:	2107      	movs	r1, #7
 8009418:	f7fe ffb7 	bl	800838a <WM_NotifyParent>
 800941c:	9e01      	ldr	r6, [sp, #4]
 800941e:	69f0      	ldr	r0, [r6, #28]
 8009420:	f7ff ffc0 	bl	80093a4 <WM_DeleteWindow>
 8009424:	69f3      	ldr	r3, [r6, #28]
 8009426:	2b00      	cmp	r3, #0
 8009428:	d1f9      	bne.n	800941e <WM_DeleteWindow+0x7a>
 800942a:	4620      	mov	r0, r4
 800942c:	f7ff fe63 	bl	80090f6 <WM__DetachWindow>
 8009430:	4b1c      	ldr	r3, [pc, #112]	; (80094a4 <WM_DeleteWindow+0x100>)
 8009432:	6818      	ldr	r0, [r3, #0]
 8009434:	b150      	cbz	r0, 800944c <WM_DeleteWindow+0xa8>
 8009436:	f006 f80f 	bl	800f458 <GUI_ALLOC_h2p>
 800943a:	4606      	mov	r6, r0
 800943c:	6940      	ldr	r0, [r0, #20]
 800943e:	42a0      	cmp	r0, r4
 8009440:	d1f8      	bne.n	8009434 <WM_DeleteWindow+0x90>
 8009442:	4620      	mov	r0, r4
 8009444:	f006 f808 	bl	800f458 <GUI_ALLOC_h2p>
 8009448:	6943      	ldr	r3, [r0, #20]
 800944a:	6173      	str	r3, [r6, #20]
 800944c:	9b01      	ldr	r3, [sp, #4]
 800944e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009450:	07da      	lsls	r2, r3, #31
 8009452:	d503      	bpl.n	800945c <WM_DeleteWindow+0xb8>
 8009454:	4a14      	ldr	r2, [pc, #80]	; (80094a8 <WM_DeleteWindow+0x104>)
 8009456:	6811      	ldr	r1, [r2, #0]
 8009458:	3901      	subs	r1, #1
 800945a:	6011      	str	r1, [r2, #0]
 800945c:	069b      	lsls	r3, r3, #26
 800945e:	d503      	bpl.n	8009468 <WM_DeleteWindow+0xc4>
 8009460:	4b12      	ldr	r3, [pc, #72]	; (80094ac <WM_DeleteWindow+0x108>)
 8009462:	881a      	ldrh	r2, [r3, #0]
 8009464:	3a01      	subs	r2, #1
 8009466:	801a      	strh	r2, [r3, #0]
 8009468:	a801      	add	r0, sp, #4
 800946a:	f006 f80d 	bl	800f488 <GUI_ALLOC_UnlockH>
 800946e:	4b10      	ldr	r3, [pc, #64]	; (80094b0 <WM_DeleteWindow+0x10c>)
 8009470:	881a      	ldrh	r2, [r3, #0]
 8009472:	4620      	mov	r0, r4
 8009474:	3a01      	subs	r2, #1
 8009476:	801a      	strh	r2, [r3, #0]
 8009478:	f006 f832 	bl	800f4e0 <GUI_ALLOC_Free>
 800947c:	2d00      	cmp	r5, #0
 800947e:	db04      	blt.n	800948a <WM_DeleteWindow+0xe6>
 8009480:	4b0c      	ldr	r3, [pc, #48]	; (80094b4 <WM_DeleteWindow+0x110>)
 8009482:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8009486:	f7ff fec3 	bl	8009210 <WM_SelectWindow>
 800948a:	b002      	add	sp, #8
 800948c:	bd70      	pop	{r4, r5, r6, pc}
 800948e:	bf00      	nop
 8009490:	20019cec 	.word	0x20019cec
 8009494:	2001b9c8 	.word	0x2001b9c8
 8009498:	2001b9d8 	.word	0x2001b9d8
 800949c:	2001b9f4 	.word	0x2001b9f4
 80094a0:	2001b9ec 	.word	0x2001b9ec
 80094a4:	2001b9d4 	.word	0x2001b9d4
 80094a8:	2001ba00 	.word	0x2001ba00
 80094ac:	2001b9d0 	.word	0x2001b9d0
 80094b0:	2001b9b0 	.word	0x2001b9b0
 80094b4:	2001b9b8 	.word	0x2001b9b8

080094b8 <WM_GetActiveWindow>:
 80094b8:	4b01      	ldr	r3, [pc, #4]	; (80094c0 <WM_GetActiveWindow+0x8>)
 80094ba:	681b      	ldr	r3, [r3, #0]
 80094bc:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80094be:	4770      	bx	lr
 80094c0:	20000274 	.word	0x20000274

080094c4 <WM__GetNextIVR>:
 80094c4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80094c8:	4f5d      	ldr	r7, [pc, #372]	; (8009640 <WM__GetNextIVR+0x17c>)
 80094ca:	683b      	ldr	r3, [r7, #0]
 80094cc:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 80094d0:	2800      	cmp	r0, #0
 80094d2:	f000 80b2 	beq.w	800963a <WM__GetNextIVR+0x176>
 80094d6:	4b5b      	ldr	r3, [pc, #364]	; (8009644 <WM__GetNextIVR+0x180>)
 80094d8:	695a      	ldr	r2, [r3, #20]
 80094da:	2a01      	cmp	r2, #1
 80094dc:	461c      	mov	r4, r3
 80094de:	dd03      	ble.n	80094e8 <WM__GetNextIVR+0x24>
 80094e0:	3a01      	subs	r2, #1
 80094e2:	615a      	str	r2, [r3, #20]
 80094e4:	2000      	movs	r0, #0
 80094e6:	e0a8      	b.n	800963a <WM__GetNextIVR+0x176>
 80094e8:	f104 0608 	add.w	r6, r4, #8
 80094ec:	691b      	ldr	r3, [r3, #16]
 80094ee:	e896 0003 	ldmia.w	r6, {r0, r1}
 80094f2:	3301      	adds	r3, #1
 80094f4:	ad02      	add	r5, sp, #8
 80094f6:	6123      	str	r3, [r4, #16]
 80094f8:	e885 0003 	stmia.w	r5, {r0, r1}
 80094fc:	b923      	cbnz	r3, 8009508 <WM__GetNextIVR+0x44>
 80094fe:	8823      	ldrh	r3, [r4, #0]
 8009500:	f8ad 3008 	strh.w	r3, [sp, #8]
 8009504:	8863      	ldrh	r3, [r4, #2]
 8009506:	e011      	b.n	800952c <WM__GetNextIVR+0x68>
 8009508:	89a3      	ldrh	r3, [r4, #12]
 800950a:	8962      	ldrh	r2, [r4, #10]
 800950c:	f8ad 200a 	strh.w	r2, [sp, #10]
 8009510:	3301      	adds	r3, #1
 8009512:	b29b      	uxth	r3, r3
 8009514:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8009518:	f8ad 3008 	strh.w	r3, [sp, #8]
 800951c:	b21b      	sxth	r3, r3
 800951e:	429a      	cmp	r2, r3
 8009520:	da06      	bge.n	8009530 <WM__GetNextIVR+0x6c>
 8009522:	8823      	ldrh	r3, [r4, #0]
 8009524:	f8ad 3008 	strh.w	r3, [sp, #8]
 8009528:	89e3      	ldrh	r3, [r4, #14]
 800952a:	3301      	adds	r3, #1
 800952c:	f8ad 300a 	strh.w	r3, [sp, #10]
 8009530:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8009534:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8009538:	f8df 8108 	ldr.w	r8, [pc, #264]	; 8009644 <WM__GetNextIVR+0x180>
 800953c:	429a      	cmp	r2, r3
 800953e:	dd04      	ble.n	800954a <WM__GetNextIVR+0x86>
 8009540:	6963      	ldr	r3, [r4, #20]
 8009542:	3b01      	subs	r3, #1
 8009544:	2000      	movs	r0, #0
 8009546:	6163      	str	r3, [r4, #20]
 8009548:	e077      	b.n	800963a <WM__GetNextIVR+0x176>
 800954a:	683b      	ldr	r3, [r7, #0]
 800954c:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800954e:	f005 ff8d 	bl	800f46c <GUI_ALLOC_LockH>
 8009552:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8009556:	f9b8 3000 	ldrsh.w	r3, [r8]
 800955a:	9001      	str	r0, [sp, #4]
 800955c:	429a      	cmp	r2, r3
 800955e:	d11c      	bne.n	800959a <WM__GetNextIVR+0xd6>
 8009560:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8009564:	f8ad 300e 	strh.w	r3, [sp, #14]
 8009568:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 800956c:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009570:	4b33      	ldr	r3, [pc, #204]	; (8009640 <WM__GetNextIVR+0x17c>)
 8009572:	681b      	ldr	r3, [r3, #0]
 8009574:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8009576:	b15a      	cbz	r2, 8009590 <WM__GetNextIVR+0xcc>
 8009578:	4610      	mov	r0, r2
 800957a:	f005 ff6d 	bl	800f458 <GUI_ALLOC_h2p>
 800957e:	4680      	mov	r8, r0
 8009580:	2200      	movs	r2, #0
 8009582:	6a00      	ldr	r0, [r0, #32]
 8009584:	4629      	mov	r1, r5
 8009586:	f7ff f9c1 	bl	800890c <_Findy1>
 800958a:	f8d8 2018 	ldr.w	r2, [r8, #24]
 800958e:	e7f2      	b.n	8009576 <WM__GetNextIVR+0xb2>
 8009590:	9b01      	ldr	r3, [sp, #4]
 8009592:	4629      	mov	r1, r5
 8009594:	69d8      	ldr	r0, [r3, #28]
 8009596:	f7ff f9b9 	bl	800890c <_Findy1>
 800959a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800959e:	f8ad 300c 	strh.w	r3, [sp, #12]
 80095a2:	683b      	ldr	r3, [r7, #0]
 80095a4:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 80095a6:	b16a      	cbz	r2, 80095c4 <WM__GetNextIVR+0x100>
 80095a8:	4610      	mov	r0, r2
 80095aa:	f005 ff55 	bl	800f458 <GUI_ALLOC_h2p>
 80095ae:	4629      	mov	r1, r5
 80095b0:	4680      	mov	r8, r0
 80095b2:	2200      	movs	r2, #0
 80095b4:	6a00      	ldr	r0, [r0, #32]
 80095b6:	f7ff f9ff 	bl	80089b8 <_Findx0>
 80095ba:	2800      	cmp	r0, #0
 80095bc:	d1ed      	bne.n	800959a <WM__GetNextIVR+0xd6>
 80095be:	f8d8 2018 	ldr.w	r2, [r8, #24]
 80095c2:	e7f0      	b.n	80095a6 <WM__GetNextIVR+0xe2>
 80095c4:	9b01      	ldr	r3, [sp, #4]
 80095c6:	4629      	mov	r1, r5
 80095c8:	69d8      	ldr	r0, [r3, #28]
 80095ca:	f7ff f9f5 	bl	80089b8 <_Findx0>
 80095ce:	2800      	cmp	r0, #0
 80095d0:	d1e3      	bne.n	800959a <WM__GetNextIVR+0xd6>
 80095d2:	88a3      	ldrh	r3, [r4, #4]
 80095d4:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80095d8:	f8ad 300c 	strh.w	r3, [sp, #12]
 80095dc:	b21b      	sxth	r3, r3
 80095de:	429a      	cmp	r2, r3
 80095e0:	dd07      	ble.n	80095f2 <WM__GetNextIVR+0x12e>
 80095e2:	e895 0003 	ldmia.w	r5, {r0, r1}
 80095e6:	e886 0003 	stmia.w	r6, {r0, r1}
 80095ea:	a801      	add	r0, sp, #4
 80095ec:	f005 ff4c 	bl	800f488 <GUI_ALLOC_UnlockH>
 80095f0:	e797      	b.n	8009522 <WM__GetNextIVR+0x5e>
 80095f2:	683b      	ldr	r3, [r7, #0]
 80095f4:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 80095f6:	b152      	cbz	r2, 800960e <WM__GetNextIVR+0x14a>
 80095f8:	4610      	mov	r0, r2
 80095fa:	f005 ff2d 	bl	800f458 <GUI_ALLOC_h2p>
 80095fe:	4607      	mov	r7, r0
 8009600:	2200      	movs	r2, #0
 8009602:	6a00      	ldr	r0, [r0, #32]
 8009604:	4629      	mov	r1, r5
 8009606:	f7ff fa1b 	bl	8008a40 <_Findx1>
 800960a:	69ba      	ldr	r2, [r7, #24]
 800960c:	e7f3      	b.n	80095f6 <WM__GetNextIVR+0x132>
 800960e:	af04      	add	r7, sp, #16
 8009610:	4629      	mov	r1, r5
 8009612:	f857 3d0c 	ldr.w	r3, [r7, #-12]!
 8009616:	69d8      	ldr	r0, [r3, #28]
 8009618:	f7ff fa12 	bl	8008a40 <_Findx1>
 800961c:	4638      	mov	r0, r7
 800961e:	f005 ff33 	bl	800f488 <GUI_ALLOC_UnlockH>
 8009622:	6923      	ldr	r3, [r4, #16]
 8009624:	f644 6220 	movw	r2, #20000	; 0x4e20
 8009628:	4293      	cmp	r3, r2
 800962a:	dc89      	bgt.n	8009540 <WM__GetNextIVR+0x7c>
 800962c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8009630:	e886 0003 	stmia.w	r6, {r0, r1}
 8009634:	f7ff fc24 	bl	8008e80 <WM__ActivateClipRect>
 8009638:	2001      	movs	r0, #1
 800963a:	b004      	add	sp, #16
 800963c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009640:	20000274 	.word	0x20000274
 8009644:	20019cd4 	.word	0x20019cd4

08009648 <WM__InitIVRSearch>:
 8009648:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800964c:	4f39      	ldr	r7, [pc, #228]	; (8009734 <WM__InitIVRSearch+0xec>)
 800964e:	683b      	ldr	r3, [r7, #0]
 8009650:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 8009654:	b086      	sub	sp, #24
 8009656:	4606      	mov	r6, r0
 8009658:	b912      	cbnz	r2, 8009660 <WM__InitIVRSearch+0x18>
 800965a:	f7ff fc11 	bl	8008e80 <WM__ActivateClipRect>
 800965e:	e064      	b.n	800972a <WM__InitIVRSearch+0xe2>
 8009660:	4d35      	ldr	r5, [pc, #212]	; (8009738 <WM__InitIVRSearch+0xf0>)
 8009662:	696a      	ldr	r2, [r5, #20]
 8009664:	3201      	adds	r2, #1
 8009666:	2a01      	cmp	r2, #1
 8009668:	616a      	str	r2, [r5, #20]
 800966a:	462c      	mov	r4, r5
 800966c:	dc5d      	bgt.n	800972a <WM__InitIVRSearch+0xe2>
 800966e:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8009670:	f005 fefc 	bl	800f46c <GUI_ALLOC_LockH>
 8009674:	f04f 32ff 	mov.w	r2, #4294967295
 8009678:	612a      	str	r2, [r5, #16]
 800967a:	4a30      	ldr	r2, [pc, #192]	; (800973c <WM__InitIVRSearch+0xf4>)
 800967c:	9000      	str	r0, [sp, #0]
 800967e:	7812      	ldrb	r2, [r2, #0]
 8009680:	b12a      	cbz	r2, 800968e <WM__InitIVRSearch+0x46>
 8009682:	f100 0308 	add.w	r3, r0, #8
 8009686:	aa02      	add	r2, sp, #8
 8009688:	e893 0003 	ldmia.w	r3, {r0, r1}
 800968c:	e005      	b.n	800969a <WM__InitIVRSearch+0x52>
 800968e:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8009690:	f012 0802 	ands.w	r8, r2, #2
 8009694:	d00a      	beq.n	80096ac <WM__InitIVRSearch+0x64>
 8009696:	c803      	ldmia	r0, {r0, r1}
 8009698:	aa02      	add	r2, sp, #8
 800969a:	e882 0003 	stmia.w	r2, {r0, r1}
 800969e:	ad02      	add	r5, sp, #8
 80096a0:	b166      	cbz	r6, 80096bc <WM__InitIVRSearch+0x74>
 80096a2:	4628      	mov	r0, r5
 80096a4:	4631      	mov	r1, r6
 80096a6:	f003 f9cf 	bl	800ca48 <GUI__IntersectRect>
 80096aa:	e007      	b.n	80096bc <WM__InitIVRSearch+0x74>
 80096ac:	696b      	ldr	r3, [r5, #20]
 80096ae:	4668      	mov	r0, sp
 80096b0:	3b01      	subs	r3, #1
 80096b2:	616b      	str	r3, [r5, #20]
 80096b4:	f005 fee8 	bl	800f488 <GUI_ALLOC_UnlockH>
 80096b8:	4640      	mov	r0, r8
 80096ba:	e037      	b.n	800972c <WM__InitIVRSearch+0xe4>
 80096bc:	683b      	ldr	r3, [r7, #0]
 80096be:	4e20      	ldr	r6, [pc, #128]	; (8009740 <WM__InitIVRSearch+0xf8>)
 80096c0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80096c2:	b1c2      	cbz	r2, 80096f6 <WM__InitIVRSearch+0xae>
 80096c4:	9b00      	ldr	r3, [sp, #0]
 80096c6:	6810      	ldr	r0, [r2, #0]
 80096c8:	6851      	ldr	r1, [r2, #4]
 80096ca:	9301      	str	r3, [sp, #4]
 80096cc:	ab04      	add	r3, sp, #16
 80096ce:	c303      	stmia	r3!, {r0, r1}
 80096d0:	6833      	ldr	r3, [r6, #0]
 80096d2:	b133      	cbz	r3, 80096e2 <WM__InitIVRSearch+0x9a>
 80096d4:	a801      	add	r0, sp, #4
 80096d6:	f005 fed7 	bl	800f488 <GUI_ALLOC_UnlockH>
 80096da:	6830      	ldr	r0, [r6, #0]
 80096dc:	f005 fec6 	bl	800f46c <GUI_ALLOC_LockH>
 80096e0:	9001      	str	r0, [sp, #4]
 80096e2:	9801      	ldr	r0, [sp, #4]
 80096e4:	a904      	add	r1, sp, #16
 80096e6:	f7ff fb9b 	bl	8008e20 <WM__Client2Screen>
 80096ea:	4628      	mov	r0, r5
 80096ec:	a904      	add	r1, sp, #16
 80096ee:	f003 f9ab 	bl	800ca48 <GUI__IntersectRect>
 80096f2:	a801      	add	r0, sp, #4
 80096f4:	e000      	b.n	80096f8 <WM__InitIVRSearch+0xb0>
 80096f6:	4668      	mov	r0, sp
 80096f8:	f005 fec6 	bl	800f488 <GUI_ALLOC_UnlockH>
 80096fc:	6831      	ldr	r1, [r6, #0]
 80096fe:	b119      	cbz	r1, 8009708 <WM__InitIVRSearch+0xc0>
 8009700:	4628      	mov	r0, r5
 8009702:	f7ff faef 	bl	8008ce4 <WM__ClipAtParentBorders>
 8009706:	b128      	cbz	r0, 8009714 <WM__InitIVRSearch+0xcc>
 8009708:	683b      	ldr	r3, [r7, #0]
 800970a:	4628      	mov	r0, r5
 800970c:	6c99      	ldr	r1, [r3, #72]	; 0x48
 800970e:	f7ff fae9 	bl	8008ce4 <WM__ClipAtParentBorders>
 8009712:	b918      	cbnz	r0, 800971c <WM__InitIVRSearch+0xd4>
 8009714:	6963      	ldr	r3, [r4, #20]
 8009716:	3b01      	subs	r3, #1
 8009718:	6163      	str	r3, [r4, #20]
 800971a:	e007      	b.n	800972c <WM__InitIVRSearch+0xe4>
 800971c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8009720:	e884 0003 	stmia.w	r4, {r0, r1}
 8009724:	f7ff fece 	bl	80094c4 <WM__GetNextIVR>
 8009728:	e000      	b.n	800972c <WM__InitIVRSearch+0xe4>
 800972a:	2001      	movs	r0, #1
 800972c:	b006      	add	sp, #24
 800972e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009732:	bf00      	nop
 8009734:	20000274 	.word	0x20000274
 8009738:	20019cd4 	.word	0x20019cd4
 800973c:	2001b9dd 	.word	0x2001b9dd
 8009740:	2001b9b4 	.word	0x2001b9b4

08009744 <WM_SetDefault>:
 8009744:	b508      	push	{r3, lr}
 8009746:	f004 fa17 	bl	800db78 <GL_SetDefault>
 800974a:	4b02      	ldr	r3, [pc, #8]	; (8009754 <WM_SetDefault+0x10>)
 800974c:	681b      	ldr	r3, [r3, #0]
 800974e:	2200      	movs	r2, #0
 8009750:	645a      	str	r2, [r3, #68]	; 0x44
 8009752:	bd08      	pop	{r3, pc}
 8009754:	20000274 	.word	0x20000274

08009758 <WM__Paint1>:
 8009758:	b5f0      	push	{r4, r5, r6, r7, lr}
 800975a:	b089      	sub	sp, #36	; 0x24
 800975c:	4604      	mov	r4, r0
 800975e:	f005 fe85 	bl	800f46c <GUI_ALLOC_LockH>
 8009762:	6907      	ldr	r7, [r0, #16]
 8009764:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8009766:	9001      	str	r0, [sp, #4]
 8009768:	3008      	adds	r0, #8
 800976a:	c803      	ldmia	r0, {r0, r1}
 800976c:	ad02      	add	r5, sp, #8
 800976e:	e885 0003 	stmia.w	r5, {r0, r1}
 8009772:	a801      	add	r0, sp, #4
 8009774:	f005 fe88 	bl	800f488 <GUI_ALLOC_UnlockH>
 8009778:	2f00      	cmp	r7, #0
 800977a:	d031      	beq.n	80097e0 <WM__Paint1+0x88>
 800977c:	07b3      	lsls	r3, r6, #30
 800977e:	d52f      	bpl.n	80097e0 <WM__Paint1+0x88>
 8009780:	4620      	mov	r0, r4
 8009782:	212e      	movs	r1, #46	; 0x2e
 8009784:	f7fe fd84 	bl	8008290 <WM_SendMessageNoPara>
 8009788:	4b16      	ldr	r3, [pc, #88]	; (80097e4 <WM__Paint1+0x8c>)
 800978a:	781a      	ldrb	r2, [r3, #0]
 800978c:	f416 5f80 	tst.w	r6, #4096	; 0x1000
 8009790:	f102 0201 	add.w	r2, r2, #1
 8009794:	701a      	strb	r2, [r3, #0]
 8009796:	461e      	mov	r6, r3
 8009798:	d00a      	beq.n	80097b0 <WM__Paint1+0x58>
 800979a:	230f      	movs	r3, #15
 800979c:	9405      	str	r4, [sp, #20]
 800979e:	9304      	str	r3, [sp, #16]
 80097a0:	9507      	str	r5, [sp, #28]
 80097a2:	f7ff ffcf 	bl	8009744 <WM_SetDefault>
 80097a6:	4620      	mov	r0, r4
 80097a8:	a904      	add	r1, sp, #16
 80097aa:	f007 fa83 	bl	8010cb4 <WM__SendMessage>
 80097ae:	e010      	b.n	80097d2 <WM__Paint1+0x7a>
 80097b0:	4628      	mov	r0, r5
 80097b2:	f7ff ff49 	bl	8009648 <WM__InitIVRSearch>
 80097b6:	b160      	cbz	r0, 80097d2 <WM__Paint1+0x7a>
 80097b8:	230f      	movs	r3, #15
 80097ba:	9304      	str	r3, [sp, #16]
 80097bc:	9405      	str	r4, [sp, #20]
 80097be:	9507      	str	r5, [sp, #28]
 80097c0:	f7ff ffc0 	bl	8009744 <WM_SetDefault>
 80097c4:	4620      	mov	r0, r4
 80097c6:	a904      	add	r1, sp, #16
 80097c8:	f007 fa74 	bl	8010cb4 <WM__SendMessage>
 80097cc:	f7ff fe7a 	bl	80094c4 <WM__GetNextIVR>
 80097d0:	e7f1      	b.n	80097b6 <WM__Paint1+0x5e>
 80097d2:	7833      	ldrb	r3, [r6, #0]
 80097d4:	4620      	mov	r0, r4
 80097d6:	3b01      	subs	r3, #1
 80097d8:	212f      	movs	r1, #47	; 0x2f
 80097da:	7033      	strb	r3, [r6, #0]
 80097dc:	f7fe fd58 	bl	8008290 <WM_SendMessageNoPara>
 80097e0:	b009      	add	sp, #36	; 0x24
 80097e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80097e4:	2001b9dd 	.word	0x2001b9dd

080097e8 <WM__Paint>:
 80097e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80097ea:	b089      	sub	sp, #36	; 0x24
 80097ec:	ac06      	add	r4, sp, #24
 80097ee:	9003      	str	r0, [sp, #12]
 80097f0:	f005 fe3c 	bl	800f46c <GUI_ALLOC_LockH>
 80097f4:	f100 0208 	add.w	r2, r0, #8
 80097f8:	4603      	mov	r3, r0
 80097fa:	9005      	str	r0, [sp, #20]
 80097fc:	e892 0003 	ldmia.w	r2, {r0, r1}
 8009800:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 8009802:	699e      	ldr	r6, [r3, #24]
 8009804:	691f      	ldr	r7, [r3, #16]
 8009806:	e884 0003 	stmia.w	r4, {r0, r1}
 800980a:	a805      	add	r0, sp, #20
 800980c:	f005 fe3c 	bl	800f488 <GUI_ALLOC_UnlockH>
 8009810:	f244 0320 	movw	r3, #16416	; 0x4020
 8009814:	402b      	ands	r3, r5
 8009816:	2b00      	cmp	r3, #0
 8009818:	d034      	beq.n	8009884 <WM__Paint+0x9c>
 800981a:	b1bf      	cbz	r7, 800984c <WM__Paint+0x64>
 800981c:	4620      	mov	r0, r4
 800981e:	9903      	ldr	r1, [sp, #12]
 8009820:	f7ff fa60 	bl	8008ce4 <WM__ClipAtParentBorders>
 8009824:	b190      	cbz	r0, 800984c <WM__Paint+0x64>
 8009826:	9803      	ldr	r0, [sp, #12]
 8009828:	f7ff fcf2 	bl	8009210 <WM_SelectWindow>
 800982c:	0769      	lsls	r1, r5, #29
 800982e:	d50f      	bpl.n	8009850 <WM__Paint+0x68>
 8009830:	b126      	cbz	r6, 800983c <WM__Paint+0x54>
 8009832:	f005 0501 	and.w	r5, r5, #1
 8009836:	f085 0501 	eor.w	r5, r5, #1
 800983a:	e000      	b.n	800983e <WM__Paint+0x56>
 800983c:	2501      	movs	r5, #1
 800983e:	9500      	str	r5, [sp, #0]
 8009840:	4620      	mov	r0, r4
 8009842:	4912      	ldr	r1, [pc, #72]	; (800988c <WM__Paint+0xa4>)
 8009844:	aa03      	add	r2, sp, #12
 8009846:	2300      	movs	r3, #0
 8009848:	f000 fada 	bl	8009e00 <GUI_MEMDEV_Draw>
 800984c:	2400      	movs	r4, #0
 800984e:	e003      	b.n	8009858 <WM__Paint+0x70>
 8009850:	9803      	ldr	r0, [sp, #12]
 8009852:	f7ff f9d7 	bl	8008c04 <WM__PaintWinAndOverlays>
 8009856:	2401      	movs	r4, #1
 8009858:	9803      	ldr	r0, [sp, #12]
 800985a:	f005 fe07 	bl	800f46c <GUI_ALLOC_LockH>
 800985e:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8009860:	9005      	str	r0, [sp, #20]
 8009862:	f422 4380 	bic.w	r3, r2, #16384	; 0x4000
 8009866:	f023 0320 	bic.w	r3, r3, #32
 800986a:	0492      	lsls	r2, r2, #18
 800986c:	bf48      	it	mi
 800986e:	f043 0304 	orrmi.w	r3, r3, #4
 8009872:	6283      	str	r3, [r0, #40]	; 0x28
 8009874:	a805      	add	r0, sp, #20
 8009876:	f005 fe07 	bl	800f488 <GUI_ALLOC_UnlockH>
 800987a:	4b05      	ldr	r3, [pc, #20]	; (8009890 <WM__Paint+0xa8>)
 800987c:	881a      	ldrh	r2, [r3, #0]
 800987e:	3a01      	subs	r2, #1
 8009880:	801a      	strh	r2, [r3, #0]
 8009882:	e000      	b.n	8009886 <WM__Paint+0x9e>
 8009884:	461c      	mov	r4, r3
 8009886:	4620      	mov	r0, r4
 8009888:	b009      	add	sp, #36	; 0x24
 800988a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800988c:	08008c7d 	.word	0x08008c7d
 8009890:	2001b9d0 	.word	0x2001b9d0

08009894 <WM__DeleteSecure>:
 8009894:	b508      	push	{r3, lr}
 8009896:	f005 fddf 	bl	800f458 <GUI_ALLOC_h2p>
 800989a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800989c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80098a0:	6283      	str	r3, [r0, #40]	; 0x28
 80098a2:	4b02      	ldr	r3, [pc, #8]	; (80098ac <WM__DeleteSecure+0x18>)
 80098a4:	2201      	movs	r2, #1
 80098a6:	601a      	str	r2, [r3, #0]
 80098a8:	bd08      	pop	{r3, pc}
 80098aa:	bf00      	nop
 80098ac:	20019cd0 	.word	0x20019cd0

080098b0 <WM_Exec>:
 80098b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80098b4:	4b4c      	ldr	r3, [pc, #304]	; (80099e8 <WM_Exec+0x138>)
 80098b6:	681b      	ldr	r3, [r3, #0]
 80098b8:	b09f      	sub	sp, #124	; 0x7c
 80098ba:	b103      	cbz	r3, 80098be <WM_Exec+0xe>
 80098bc:	4798      	blx	r3
 80098be:	2600      	movs	r6, #0
 80098c0:	4d4a      	ldr	r5, [pc, #296]	; (80099ec <WM_Exec+0x13c>)
 80098c2:	682b      	ldr	r3, [r5, #0]
 80098c4:	b1db      	cbz	r3, 80098fe <WM_Exec+0x4e>
 80098c6:	4b4a      	ldr	r3, [pc, #296]	; (80099f0 <WM_Exec+0x140>)
 80098c8:	681c      	ldr	r4, [r3, #0]
 80098ca:	b1bc      	cbz	r4, 80098fc <WM_Exec+0x4c>
 80098cc:	4620      	mov	r0, r4
 80098ce:	f005 fdcd 	bl	800f46c <GUI_ALLOC_LockH>
 80098d2:	6a82      	ldr	r2, [r0, #40]	; 0x28
 80098d4:	6947      	ldr	r7, [r0, #20]
 80098d6:	ab1e      	add	r3, sp, #120	; 0x78
 80098d8:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 80098dc:	f843 0d70 	str.w	r0, [r3, #-112]!
 80098e0:	d007      	beq.n	80098f2 <WM_Exec+0x42>
 80098e2:	4618      	mov	r0, r3
 80098e4:	f005 fdd0 	bl	800f488 <GUI_ALLOC_UnlockH>
 80098e8:	4620      	mov	r0, r4
 80098ea:	f7ff fd5b 	bl	80093a4 <WM_DeleteWindow>
 80098ee:	463c      	mov	r4, r7
 80098f0:	e7eb      	b.n	80098ca <WM_Exec+0x1a>
 80098f2:	4618      	mov	r0, r3
 80098f4:	463c      	mov	r4, r7
 80098f6:	f005 fdc7 	bl	800f488 <GUI_ALLOC_UnlockH>
 80098fa:	e7e6      	b.n	80098ca <WM_Exec+0x1a>
 80098fc:	602c      	str	r4, [r5, #0]
 80098fe:	4b3d      	ldr	r3, [pc, #244]	; (80099f4 <WM_Exec+0x144>)
 8009900:	681b      	ldr	r3, [r3, #0]
 8009902:	b103      	cbz	r3, 8009906 <WM_Exec+0x56>
 8009904:	4798      	blx	r3
 8009906:	4b3c      	ldr	r3, [pc, #240]	; (80099f8 <WM_Exec+0x148>)
 8009908:	681b      	ldr	r3, [r3, #0]
 800990a:	b92b      	cbnz	r3, 8009918 <WM_Exec+0x68>
 800990c:	4f3b      	ldr	r7, [pc, #236]	; (80099fc <WM_Exec+0x14c>)
 800990e:	683b      	ldr	r3, [r7, #0]
 8009910:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 8009914:	b143      	cbz	r3, 8009928 <WM_Exec+0x78>
 8009916:	e003      	b.n	8009920 <WM_Exec+0x70>
 8009918:	4798      	blx	r3
 800991a:	2800      	cmp	r0, #0
 800991c:	d0f6      	beq.n	800990c <WM_Exec+0x5c>
 800991e:	e058      	b.n	80099d2 <WM_Exec+0x122>
 8009920:	f004 fa68 	bl	800ddf4 <GUI_PollKeyMsg>
 8009924:	2800      	cmp	r0, #0
 8009926:	d154      	bne.n	80099d2 <WM_Exec+0x122>
 8009928:	683b      	ldr	r3, [r7, #0]
 800992a:	f893 5054 	ldrb.w	r5, [r3, #84]	; 0x54
 800992e:	b14d      	cbz	r5, 8009944 <WM_Exec+0x94>
 8009930:	4b33      	ldr	r3, [pc, #204]	; (8009a00 <WM_Exec+0x150>)
 8009932:	881d      	ldrh	r5, [r3, #0]
 8009934:	b135      	cbz	r5, 8009944 <WM_Exec+0x94>
 8009936:	4b33      	ldr	r3, [pc, #204]	; (8009a04 <WM_Exec+0x154>)
 8009938:	681b      	ldr	r3, [r3, #0]
 800993a:	2b00      	cmp	r3, #0
 800993c:	d04b      	beq.n	80099d6 <WM_Exec+0x126>
 800993e:	681b      	ldr	r3, [r3, #0]
 8009940:	4798      	blx	r3
 8009942:	2501      	movs	r5, #1
 8009944:	683b      	ldr	r3, [r7, #0]
 8009946:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 800994a:	b913      	cbnz	r3, 8009952 <WM_Exec+0xa2>
 800994c:	2d00      	cmp	r5, #0
 800994e:	d137      	bne.n	80099c0 <WM_Exec+0x110>
 8009950:	e045      	b.n	80099de <WM_Exec+0x12e>
 8009952:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 8009a00 <WM_Exec+0x150>
 8009956:	f8b8 3000 	ldrh.w	r3, [r8]
 800995a:	2b00      	cmp	r3, #0
 800995c:	d0f6      	beq.n	800994c <WM_Exec+0x9c>
 800995e:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 8009a08 <WM_Exec+0x158>
 8009962:	f8d9 4000 	ldr.w	r4, [r9]
 8009966:	b90c      	cbnz	r4, 800996c <WM_Exec+0xbc>
 8009968:	4b21      	ldr	r3, [pc, #132]	; (80099f0 <WM_Exec+0x140>)
 800996a:	681c      	ldr	r4, [r3, #0]
 800996c:	a802      	add	r0, sp, #8
 800996e:	f004 f96f 	bl	800dc50 <GUI_SaveContext_W>
 8009972:	683b      	ldr	r3, [r7, #0]
 8009974:	f8d3 b030 	ldr.w	fp, [r3, #48]	; 0x30
 8009978:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 800997c:	b914      	cbnz	r4, 8009984 <WM_Exec+0xd4>
 800997e:	2400      	movs	r4, #0
 8009980:	e00d      	b.n	800999e <WM_Exec+0xee>
 8009982:	b963      	cbnz	r3, 800999e <WM_Exec+0xee>
 8009984:	4620      	mov	r0, r4
 8009986:	f7ff ff2f 	bl	80097e8 <WM__Paint>
 800998a:	4603      	mov	r3, r0
 800998c:	4620      	mov	r0, r4
 800998e:	9301      	str	r3, [sp, #4]
 8009990:	f005 fd62 	bl	800f458 <GUI_ALLOC_h2p>
 8009994:	6944      	ldr	r4, [r0, #20]
 8009996:	9b01      	ldr	r3, [sp, #4]
 8009998:	2c00      	cmp	r4, #0
 800999a:	d1f2      	bne.n	8009982 <WM_Exec+0xd2>
 800999c:	e7ef      	b.n	800997e <WM_Exec+0xce>
 800999e:	4658      	mov	r0, fp
 80099a0:	f8c9 4000 	str.w	r4, [r9]
 80099a4:	f004 f90a 	bl	800dbbc <GUI_SetColor>
 80099a8:	4650      	mov	r0, sl
 80099aa:	f004 f905 	bl	800dbb8 <GUI_SetBkColor>
 80099ae:	a802      	add	r0, sp, #8
 80099b0:	f004 f958 	bl	800dc64 <GUI_RestoreContext>
 80099b4:	f8b8 3000 	ldrh.w	r3, [r8]
 80099b8:	2b00      	cmp	r3, #0
 80099ba:	d0c7      	beq.n	800994c <WM_Exec+0x9c>
 80099bc:	2601      	movs	r6, #1
 80099be:	e7c1      	b.n	8009944 <WM_Exec+0x94>
 80099c0:	4b10      	ldr	r3, [pc, #64]	; (8009a04 <WM_Exec+0x154>)
 80099c2:	6818      	ldr	r0, [r3, #0]
 80099c4:	b110      	cbz	r0, 80099cc <WM_Exec+0x11c>
 80099c6:	6843      	ldr	r3, [r0, #4]
 80099c8:	4798      	blx	r3
 80099ca:	e008      	b.n	80099de <WM_Exec+0x12e>
 80099cc:	f003 f802 	bl	800c9d4 <GUI__ManageCache>
 80099d0:	e005      	b.n	80099de <WM_Exec+0x12e>
 80099d2:	2601      	movs	r6, #1
 80099d4:	e774      	b.n	80098c0 <WM_Exec+0x10>
 80099d6:	2001      	movs	r0, #1
 80099d8:	f002 fffc 	bl	800c9d4 <GUI__ManageCache>
 80099dc:	e7b1      	b.n	8009942 <WM_Exec+0x92>
 80099de:	4630      	mov	r0, r6
 80099e0:	b01f      	add	sp, #124	; 0x7c
 80099e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80099e6:	bf00      	nop
 80099e8:	2001b9c4 	.word	0x2001b9c4
 80099ec:	20019cd0 	.word	0x20019cd0
 80099f0:	2001b9d4 	.word	0x2001b9d4
 80099f4:	2001b9c0 	.word	0x2001b9c0
 80099f8:	2001ba40 	.word	0x2001ba40
 80099fc:	20000274 	.word	0x20000274
 8009a00:	2001b9d0 	.word	0x2001b9d0
 8009a04:	2001b9f0 	.word	0x2001b9f0
 8009a08:	20019cec 	.word	0x20019cec

08009a0c <WM_Activate>:
 8009a0c:	4b02      	ldr	r3, [pc, #8]	; (8009a18 <WM_Activate+0xc>)
 8009a0e:	681b      	ldr	r3, [r3, #0]
 8009a10:	2201      	movs	r2, #1
 8009a12:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8009a16:	4770      	bx	lr
 8009a18:	20000274 	.word	0x20000274

08009a1c <WM_Deactivate>:
 8009a1c:	4b03      	ldr	r3, [pc, #12]	; (8009a2c <WM_Deactivate+0x10>)
 8009a1e:	681b      	ldr	r3, [r3, #0]
 8009a20:	2200      	movs	r2, #0
 8009a22:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8009a26:	f002 bdfd 	b.w	800c624 <LCD_SetClipRectMax>
 8009a2a:	bf00      	nop
 8009a2c:	20000274 	.word	0x20000274

08009a30 <WM_DefaultProc>:
 8009a30:	b510      	push	{r4, lr}
 8009a32:	4604      	mov	r4, r0
 8009a34:	6840      	ldr	r0, [r0, #4]
 8009a36:	6823      	ldr	r3, [r4, #0]
 8009a38:	68e1      	ldr	r1, [r4, #12]
 8009a3a:	2b17      	cmp	r3, #23
 8009a3c:	d00f      	beq.n	8009a5e <WM_DefaultProc+0x2e>
 8009a3e:	dc06      	bgt.n	8009a4e <WM_DefaultProc+0x1e>
 8009a40:	2b0e      	cmp	r3, #14
 8009a42:	d00e      	beq.n	8009a62 <WM_DefaultProc+0x32>
 8009a44:	2b14      	cmp	r3, #20
 8009a46:	d114      	bne.n	8009a72 <WM_DefaultProc+0x42>
 8009a48:	f7fe feb6 	bl	80087b8 <WM__GetClientRectEx>
 8009a4c:	e011      	b.n	8009a72 <WM_DefaultProc+0x42>
 8009a4e:	2b22      	cmp	r3, #34	; 0x22
 8009a50:	d00c      	beq.n	8009a6c <WM_DefaultProc+0x3c>
 8009a52:	2b28      	cmp	r3, #40	; 0x28
 8009a54:	d10d      	bne.n	8009a72 <WM_DefaultProc+0x42>
 8009a56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009a5a:	f7ff bbb8 	b.w	80091ce <WM_InvalidateWindow>
 8009a5e:	60e0      	str	r0, [r4, #12]
 8009a60:	bd10      	pop	{r4, pc}
 8009a62:	4621      	mov	r1, r4
 8009a64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009a68:	f007 bc82 	b.w	8011370 <WM_SendToParent>
 8009a6c:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8009a70:	e000      	b.n	8009a74 <WM_DefaultProc+0x44>
 8009a72:	2300      	movs	r3, #0
 8009a74:	60e3      	str	r3, [r4, #12]
 8009a76:	bd10      	pop	{r4, pc}

08009a78 <_cbBackWin>:
 8009a78:	6803      	ldr	r3, [r0, #0]
 8009a7a:	2b0e      	cmp	r3, #14
 8009a7c:	b510      	push	{r4, lr}
 8009a7e:	4604      	mov	r4, r0
 8009a80:	d002      	beq.n	8009a88 <_cbBackWin+0x10>
 8009a82:	2b0f      	cmp	r3, #15
 8009a84:	d009      	beq.n	8009a9a <_cbBackWin+0x22>
 8009a86:	e020      	b.n	8009aca <_cbBackWin+0x52>
 8009a88:	68c3      	ldr	r3, [r0, #12]
 8009a8a:	685a      	ldr	r2, [r3, #4]
 8009a8c:	2a01      	cmp	r2, #1
 8009a8e:	d121      	bne.n	8009ad4 <_cbBackWin+0x5c>
 8009a90:	6818      	ldr	r0, [r3, #0]
 8009a92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009a96:	f004 b9a5 	b.w	800dde4 <GUI_StoreKey>
 8009a9a:	4a0f      	ldr	r2, [pc, #60]	; (8009ad8 <_cbBackWin+0x60>)
 8009a9c:	6843      	ldr	r3, [r0, #4]
 8009a9e:	6811      	ldr	r1, [r2, #0]
 8009aa0:	428b      	cmp	r3, r1
 8009aa2:	d006      	beq.n	8009ab2 <_cbBackWin+0x3a>
 8009aa4:	6852      	ldr	r2, [r2, #4]
 8009aa6:	4293      	cmp	r3, r2
 8009aa8:	bf14      	ite	ne
 8009aaa:	f04f 33ff 	movne.w	r3, #4294967295
 8009aae:	2301      	moveq	r3, #1
 8009ab0:	e000      	b.n	8009ab4 <_cbBackWin+0x3c>
 8009ab2:	2300      	movs	r3, #0
 8009ab4:	4a09      	ldr	r2, [pc, #36]	; (8009adc <_cbBackWin+0x64>)
 8009ab6:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8009aba:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8009abe:	4298      	cmp	r0, r3
 8009ac0:	d003      	beq.n	8009aca <_cbBackWin+0x52>
 8009ac2:	f004 f879 	bl	800dbb8 <GUI_SetBkColor>
 8009ac6:	f005 f8a1 	bl	800ec0c <GUI_Clear>
 8009aca:	4620      	mov	r0, r4
 8009acc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009ad0:	f7ff bfae 	b.w	8009a30 <WM_DefaultProc>
 8009ad4:	bd10      	pop	{r4, pc}
 8009ad6:	bf00      	nop
 8009ad8:	2001b9b8 	.word	0x2001b9b8
 8009adc:	2001b9e4 	.word	0x2001b9e4

08009ae0 <WM_Init>:
 8009ae0:	b530      	push	{r4, r5, lr}
 8009ae2:	4b2b      	ldr	r3, [pc, #172]	; (8009b90 <WM_Init+0xb0>)
 8009ae4:	7818      	ldrb	r0, [r3, #0]
 8009ae6:	b085      	sub	sp, #20
 8009ae8:	461d      	mov	r5, r3
 8009aea:	2800      	cmp	r0, #0
 8009aec:	d14d      	bne.n	8009b8a <WM_Init+0xaa>
 8009aee:	4b29      	ldr	r3, [pc, #164]	; (8009b94 <WM_Init+0xb4>)
 8009af0:	6018      	str	r0, [r3, #0]
 8009af2:	4b29      	ldr	r3, [pc, #164]	; (8009b98 <WM_Init+0xb8>)
 8009af4:	6018      	str	r0, [r3, #0]
 8009af6:	4b29      	ldr	r3, [pc, #164]	; (8009b9c <WM_Init+0xbc>)
 8009af8:	681b      	ldr	r3, [r3, #0]
 8009afa:	6458      	str	r0, [r3, #68]	; 0x44
 8009afc:	4b28      	ldr	r3, [pc, #160]	; (8009ba0 <WM_Init+0xc0>)
 8009afe:	8018      	strh	r0, [r3, #0]
 8009b00:	4b28      	ldr	r3, [pc, #160]	; (8009ba4 <WM_Init+0xc4>)
 8009b02:	4604      	mov	r4, r0
 8009b04:	8018      	strh	r0, [r3, #0]
 8009b06:	4620      	mov	r0, r4
 8009b08:	f004 ff56 	bl	800e9b8 <GUI_DEVICE__GetpDriver>
 8009b0c:	b1c0      	cbz	r0, 8009b40 <WM_Init+0x60>
 8009b0e:	f04f 32ff 	mov.w	r2, #4294967295
 8009b12:	2302      	movs	r3, #2
 8009b14:	e88d 000c 	stmia.w	sp, {r2, r3}
 8009b18:	2000      	movs	r0, #0
 8009b1a:	f643 72ff 	movw	r2, #16383	; 0x3fff
 8009b1e:	4b22      	ldr	r3, [pc, #136]	; (8009ba8 <WM_Init+0xc8>)
 8009b20:	9302      	str	r3, [sp, #8]
 8009b22:	9003      	str	r0, [sp, #12]
 8009b24:	4613      	mov	r3, r2
 8009b26:	4601      	mov	r1, r0
 8009b28:	f7ff fb92 	bl	8009250 <WM_CreateWindowAsChild>
 8009b2c:	4b1f      	ldr	r3, [pc, #124]	; (8009bac <WM_Init+0xcc>)
 8009b2e:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8009b32:	4b1f      	ldr	r3, [pc, #124]	; (8009bb0 <WM_Init+0xd0>)
 8009b34:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 8009b38:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8009b3c:	f7ff fb47 	bl	80091ce <WM_InvalidateWindow>
 8009b40:	3401      	adds	r4, #1
 8009b42:	2c02      	cmp	r4, #2
 8009b44:	d1df      	bne.n	8009b06 <WM_Init+0x26>
 8009b46:	481b      	ldr	r0, [pc, #108]	; (8009bb4 <WM_Init+0xd4>)
 8009b48:	f007 fccc 	bl	80114e4 <WM__AddCriticalHandle>
 8009b4c:	481a      	ldr	r0, [pc, #104]	; (8009bb8 <WM_Init+0xd8>)
 8009b4e:	f007 fcc9 	bl	80114e4 <WM__AddCriticalHandle>
 8009b52:	481a      	ldr	r0, [pc, #104]	; (8009bbc <WM_Init+0xdc>)
 8009b54:	f007 fcc6 	bl	80114e4 <WM__AddCriticalHandle>
 8009b58:	4819      	ldr	r0, [pc, #100]	; (8009bc0 <WM_Init+0xe0>)
 8009b5a:	f007 fcc3 	bl	80114e4 <WM__AddCriticalHandle>
 8009b5e:	4819      	ldr	r0, [pc, #100]	; (8009bc4 <WM_Init+0xe4>)
 8009b60:	f007 fcc0 	bl	80114e4 <WM__AddCriticalHandle>
 8009b64:	4818      	ldr	r0, [pc, #96]	; (8009bc8 <WM_Init+0xe8>)
 8009b66:	f007 fcbd 	bl	80114e4 <WM__AddCriticalHandle>
 8009b6a:	4b10      	ldr	r3, [pc, #64]	; (8009bac <WM_Init+0xcc>)
 8009b6c:	6818      	ldr	r0, [r3, #0]
 8009b6e:	f7ff fb4f 	bl	8009210 <WM_SelectWindow>
 8009b72:	f7ff ff4b 	bl	8009a0c <WM_Activate>
 8009b76:	2301      	movs	r3, #1
 8009b78:	702b      	strb	r3, [r5, #0]
 8009b7a:	4814      	ldr	r0, [pc, #80]	; (8009bcc <WM_Init+0xec>)
 8009b7c:	4b14      	ldr	r3, [pc, #80]	; (8009bd0 <WM_Init+0xf0>)
 8009b7e:	6003      	str	r3, [r0, #0]
 8009b80:	b005      	add	sp, #20
 8009b82:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8009b86:	f005 b851 	b.w	800ec2c <GUI__RegisterExit>
 8009b8a:	b005      	add	sp, #20
 8009b8c:	bd30      	pop	{r4, r5, pc}
 8009b8e:	bf00      	nop
 8009b90:	20019cf8 	.word	0x20019cf8
 8009b94:	2001b9d4 	.word	0x2001b9d4
 8009b98:	20019cec 	.word	0x20019cec
 8009b9c:	20000274 	.word	0x20000274
 8009ba0:	2001b9d0 	.word	0x2001b9d0
 8009ba4:	2001b9b0 	.word	0x2001b9b0
 8009ba8:	08009a79 	.word	0x08009a79
 8009bac:	2001b9b8 	.word	0x2001b9b8
 8009bb0:	2001b9e4 	.word	0x2001b9e4
 8009bb4:	2001bb24 	.word	0x2001bb24
 8009bb8:	2001bb14 	.word	0x2001bb14
 8009bbc:	2001bb04 	.word	0x2001bb04
 8009bc0:	2001bb2c 	.word	0x2001bb2c
 8009bc4:	2001bb1c 	.word	0x2001bb1c
 8009bc8:	2001bb0c 	.word	0x2001bb0c
 8009bcc:	20019cf0 	.word	0x20019cf0
 8009bd0:	08008899 	.word	0x08008899

08009bd4 <_CreateStaticDevice>:
 8009bd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009bd8:	b087      	sub	sp, #28
 8009bda:	4604      	mov	r4, r0
 8009bdc:	f005 fc46 	bl	800f46c <GUI_ALLOC_LockH>
 8009be0:	af06      	add	r7, sp, #24
 8009be2:	f8b0 8000 	ldrh.w	r8, [r0]
 8009be6:	8886      	ldrh	r6, [r0, #4]
 8009be8:	f8b0 9002 	ldrh.w	r9, [r0, #2]
 8009bec:	f8b0 b006 	ldrh.w	fp, [r0, #6]
 8009bf0:	f847 0d04 	str.w	r0, [r7, #-4]!
 8009bf4:	fa0f f888 	sxth.w	r8, r8
 8009bf8:	b236      	sxth	r6, r6
 8009bfa:	ebc8 0606 	rsb	r6, r8, r6
 8009bfe:	f8d0 a024 	ldr.w	sl, [r0, #36]	; 0x24
 8009c02:	3601      	adds	r6, #1
 8009c04:	4638      	mov	r0, r7
 8009c06:	fa0f f989 	sxth.w	r9, r9
 8009c0a:	fa0f f58b 	sxth.w	r5, fp
 8009c0e:	f005 fc3b 	bl	800f488 <GUI_ALLOC_UnlockH>
 8009c12:	ebc9 0505 	rsb	r5, r9, r5
 8009c16:	2e00      	cmp	r6, #0
 8009c18:	f105 0501 	add.w	r5, r5, #1
 8009c1c:	dd4d      	ble.n	8009cba <_CreateStaticDevice+0xe6>
 8009c1e:	2d00      	cmp	r5, #0
 8009c20:	dd4b      	ble.n	8009cba <_CreateStaticDevice+0xe6>
 8009c22:	f1ba 0f00 	cmp.w	sl, #0
 8009c26:	d04a      	beq.n	8009cbe <_CreateStaticDevice+0xea>
 8009c28:	4650      	mov	r0, sl
 8009c2a:	f005 fc1f 	bl	800f46c <GUI_ALLOC_LockH>
 8009c2e:	ab06      	add	r3, sp, #24
 8009c30:	8886      	ldrh	r6, [r0, #4]
 8009c32:	f843 0d08 	str.w	r0, [r3, #-8]!
 8009c36:	88c5      	ldrh	r5, [r0, #6]
 8009c38:	b236      	sxth	r6, r6
 8009c3a:	4618      	mov	r0, r3
 8009c3c:	f005 fc24 	bl	800f488 <GUI_ALLOC_UnlockH>
 8009c40:	4546      	cmp	r6, r8
 8009c42:	d102      	bne.n	8009c4a <_CreateStaticDevice+0x76>
 8009c44:	b22d      	sxth	r5, r5
 8009c46:	454d      	cmp	r5, r9
 8009c48:	d032      	beq.n	8009cb0 <_CreateStaticDevice+0xdc>
 8009c4a:	4650      	mov	r0, sl
 8009c4c:	4641      	mov	r1, r8
 8009c4e:	464a      	mov	r2, r9
 8009c50:	f000 f886 	bl	8009d60 <GUI_MEMDEV_SetOrg>
 8009c54:	e02c      	b.n	8009cb0 <_CreateStaticDevice+0xdc>
 8009c56:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009c58:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009c5c:	6283      	str	r3, [r0, #40]	; 0x28
 8009c5e:	4638      	mov	r0, r7
 8009c60:	f005 fc12 	bl	800f488 <GUI_ALLOC_UnlockH>
 8009c64:	4640      	mov	r0, r8
 8009c66:	f000 ff93 	bl	800ab90 <GUI_MEMDEV_Select>
 8009c6a:	4607      	mov	r7, r0
 8009c6c:	4650      	mov	r0, sl
 8009c6e:	f003 ffa7 	bl	800dbc0 <GUI__AlphaPreserveTrans>
 8009c72:	4640      	mov	r0, r8
 8009c74:	f000 f8b4 	bl	8009de0 <GUI_MEMDEV_GetDataPtr>
 8009c78:	4b2d      	ldr	r3, [pc, #180]	; (8009d30 <_CreateStaticDevice+0x15c>)
 8009c7a:	fb05 f206 	mul.w	r2, r5, r6
 8009c7e:	7819      	ldrb	r1, [r3, #0]
 8009c80:	4d2c      	ldr	r5, [pc, #176]	; (8009d34 <_CreateStaticDevice+0x160>)
 8009c82:	4e2d      	ldr	r6, [pc, #180]	; (8009d38 <_CreateStaticDevice+0x164>)
 8009c84:	0092      	lsls	r2, r2, #2
 8009c86:	f002 fdbd 	bl	800c804 <GUI__memset>
 8009c8a:	4620      	mov	r0, r4
 8009c8c:	f8d5 8000 	ldr.w	r8, [r5]
 8009c90:	6034      	str	r4, [r6, #0]
 8009c92:	f7fe fcad 	bl	80085f0 <WM_GetWindowOrgX>
 8009c96:	6028      	str	r0, [r5, #0]
 8009c98:	4620      	mov	r0, r4
 8009c9a:	f7ff fd5d 	bl	8009758 <WM__Paint1>
 8009c9e:	2000      	movs	r0, #0
 8009ca0:	f8c5 8000 	str.w	r8, [r5]
 8009ca4:	6030      	str	r0, [r6, #0]
 8009ca6:	f003 ff8b 	bl	800dbc0 <GUI__AlphaPreserveTrans>
 8009caa:	4638      	mov	r0, r7
 8009cac:	f000 ff70 	bl	800ab90 <GUI_MEMDEV_Select>
 8009cb0:	4620      	mov	r0, r4
 8009cb2:	f005 fbd1 	bl	800f458 <GUI_ALLOC_h2p>
 8009cb6:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8009cb8:	e037      	b.n	8009d2a <_CreateStaticDevice+0x156>
 8009cba:	2000      	movs	r0, #0
 8009cbc:	e035      	b.n	8009d2a <_CreateStaticDevice+0x156>
 8009cbe:	f7fe fd61 	bl	8008784 <WM_GetDesktopWindow>
 8009cc2:	4284      	cmp	r4, r0
 8009cc4:	d112      	bne.n	8009cec <_CreateStaticDevice+0x118>
 8009cc6:	f002 f947 	bl	800bf58 <LCD_GetXSize>
 8009cca:	4682      	mov	sl, r0
 8009ccc:	f002 f94c 	bl	800bf68 <LCD_GetYSize>
 8009cd0:	4556      	cmp	r6, sl
 8009cd2:	dc02      	bgt.n	8009cda <_CreateStaticDevice+0x106>
 8009cd4:	4285      	cmp	r5, r0
 8009cd6:	dd09      	ble.n	8009cec <_CreateStaticDevice+0x118>
 8009cd8:	e000      	b.n	8009cdc <_CreateStaticDevice+0x108>
 8009cda:	4656      	mov	r6, sl
 8009cdc:	4285      	cmp	r5, r0
 8009cde:	bfa8      	it	ge
 8009ce0:	4605      	movge	r5, r0
 8009ce2:	4631      	mov	r1, r6
 8009ce4:	4620      	mov	r0, r4
 8009ce6:	462a      	mov	r2, r5
 8009ce8:	f007 fb1e 	bl	8011328 <WM_SetSize>
 8009cec:	4b13      	ldr	r3, [pc, #76]	; (8009d3c <_CreateStaticDevice+0x168>)
 8009cee:	9301      	str	r3, [sp, #4]
 8009cf0:	f04f 0a01 	mov.w	sl, #1
 8009cf4:	4b12      	ldr	r3, [pc, #72]	; (8009d40 <_CreateStaticDevice+0x16c>)
 8009cf6:	9302      	str	r3, [sp, #8]
 8009cf8:	4640      	mov	r0, r8
 8009cfa:	4649      	mov	r1, r9
 8009cfc:	4632      	mov	r2, r6
 8009cfe:	462b      	mov	r3, r5
 8009d00:	f8cd a000 	str.w	sl, [sp]
 8009d04:	f000 fe4e 	bl	800a9a4 <GUI_MEMDEV__CreateFixed>
 8009d08:	4680      	mov	r8, r0
 8009d0a:	4620      	mov	r0, r4
 8009d0c:	f005 fbae 	bl	800f46c <GUI_ALLOC_LockH>
 8009d10:	9005      	str	r0, [sp, #20]
 8009d12:	f8c0 8024 	str.w	r8, [r0, #36]	; 0x24
 8009d16:	f1b8 0f00 	cmp.w	r8, #0
 8009d1a:	d19c      	bne.n	8009c56 <_CreateStaticDevice+0x82>
 8009d1c:	4638      	mov	r0, r7
 8009d1e:	f005 fbb3 	bl	800f488 <GUI_ALLOC_UnlockH>
 8009d22:	4620      	mov	r0, r4
 8009d24:	f7ff fd18 	bl	8009758 <WM__Paint1>
 8009d28:	4640      	mov	r0, r8
 8009d2a:	b007      	add	sp, #28
 8009d2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009d30:	2000024c 	.word	0x2000024c
 8009d34:	2001ba0c 	.word	0x2001ba0c
 8009d38:	2001b9fc 	.word	0x2001b9fc
 8009d3c:	08016190 	.word	0x08016190
 8009d40:	08017318 	.word	0x08017318

08009d44 <GUI_MEMDEV_Paint1Static>:
 8009d44:	b538      	push	{r3, r4, r5, lr}
 8009d46:	4605      	mov	r5, r0
 8009d48:	2405      	movs	r4, #5
 8009d4a:	4628      	mov	r0, r5
 8009d4c:	f7ff ff42 	bl	8009bd4 <_CreateStaticDevice>
 8009d50:	b910      	cbnz	r0, 8009d58 <GUI_MEMDEV_Paint1Static+0x14>
 8009d52:	3c01      	subs	r4, #1
 8009d54:	d1f9      	bne.n	8009d4a <GUI_MEMDEV_Paint1Static+0x6>
 8009d56:	bd38      	pop	{r3, r4, r5, pc}
 8009d58:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009d5c:	f008 b8ee 	b.w	8011f3c <GUI_MEMDEV_Write>

08009d60 <GUI_MEMDEV_SetOrg>:
 8009d60:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009d62:	460d      	mov	r5, r1
 8009d64:	4614      	mov	r4, r2
 8009d66:	b918      	cbnz	r0, 8009d70 <GUI_MEMDEV_SetOrg+0x10>
 8009d68:	4b11      	ldr	r3, [pc, #68]	; (8009db0 <GUI_MEMDEV_SetOrg+0x50>)
 8009d6a:	681b      	ldr	r3, [r3, #0]
 8009d6c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8009d6e:	b1e8      	cbz	r0, 8009dac <GUI_MEMDEV_SetOrg+0x4c>
 8009d70:	f005 fb7c 	bl	800f46c <GUI_ALLOC_LockH>
 8009d74:	b2a4      	uxth	r4, r4
 8009d76:	b2ad      	uxth	r5, r5
 8009d78:	80c4      	strh	r4, [r0, #6]
 8009d7a:	8085      	strh	r5, [r0, #4]
 8009d7c:	9000      	str	r0, [sp, #0]
 8009d7e:	f002 fc51 	bl	800c624 <LCD_SetClipRectMax>
 8009d82:	9b00      	ldr	r3, [sp, #0]
 8009d84:	6958      	ldr	r0, [r3, #20]
 8009d86:	b170      	cbz	r0, 8009da6 <GUI_MEMDEV_SetOrg+0x46>
 8009d88:	f005 fb70 	bl	800f46c <GUI_ALLOC_LockH>
 8009d8c:	9b00      	ldr	r3, [sp, #0]
 8009d8e:	9001      	str	r0, [sp, #4]
 8009d90:	891a      	ldrh	r2, [r3, #8]
 8009d92:	895b      	ldrh	r3, [r3, #10]
 8009d94:	8082      	strh	r2, [r0, #4]
 8009d96:	80c3      	strh	r3, [r0, #6]
 8009d98:	b112      	cbz	r2, 8009da0 <GUI_MEMDEV_SetOrg+0x40>
 8009d9a:	b10b      	cbz	r3, 8009da0 <GUI_MEMDEV_SetOrg+0x40>
 8009d9c:	8005      	strh	r5, [r0, #0]
 8009d9e:	8044      	strh	r4, [r0, #2]
 8009da0:	a801      	add	r0, sp, #4
 8009da2:	f005 fb71 	bl	800f488 <GUI_ALLOC_UnlockH>
 8009da6:	4668      	mov	r0, sp
 8009da8:	f005 fb6e 	bl	800f488 <GUI_ALLOC_UnlockH>
 8009dac:	b003      	add	sp, #12
 8009dae:	bd30      	pop	{r4, r5, pc}
 8009db0:	20000274 	.word	0x20000274

08009db4 <GUI_MEMDEV_GetYSize>:
 8009db4:	b513      	push	{r0, r1, r4, lr}
 8009db6:	b920      	cbnz	r0, 8009dc2 <GUI_MEMDEV_GetYSize+0xe>
 8009db8:	4b08      	ldr	r3, [pc, #32]	; (8009ddc <GUI_MEMDEV_GetYSize+0x28>)
 8009dba:	681b      	ldr	r3, [r3, #0]
 8009dbc:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8009dbe:	4604      	mov	r4, r0
 8009dc0:	b148      	cbz	r0, 8009dd6 <GUI_MEMDEV_GetYSize+0x22>
 8009dc2:	f005 fb53 	bl	800f46c <GUI_ALLOC_LockH>
 8009dc6:	ab02      	add	r3, sp, #8
 8009dc8:	f9b0 400a 	ldrsh.w	r4, [r0, #10]
 8009dcc:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009dd0:	4618      	mov	r0, r3
 8009dd2:	f005 fb59 	bl	800f488 <GUI_ALLOC_UnlockH>
 8009dd6:	4620      	mov	r0, r4
 8009dd8:	b002      	add	sp, #8
 8009dda:	bd10      	pop	{r4, pc}
 8009ddc:	20000274 	.word	0x20000274

08009de0 <GUI_MEMDEV_GetDataPtr>:
 8009de0:	b513      	push	{r0, r1, r4, lr}
 8009de2:	b150      	cbz	r0, 8009dfa <GUI_MEMDEV_GetDataPtr+0x1a>
 8009de4:	f005 fb42 	bl	800f46c <GUI_ALLOC_LockH>
 8009de8:	4604      	mov	r4, r0
 8009dea:	a802      	add	r0, sp, #8
 8009dec:	f840 4d04 	str.w	r4, [r0, #-4]!
 8009df0:	f005 fb4a 	bl	800f488 <GUI_ALLOC_UnlockH>
 8009df4:	f104 0018 	add.w	r0, r4, #24
 8009df8:	e7ff      	b.n	8009dfa <GUI_MEMDEV_GetDataPtr+0x1a>
 8009dfa:	b002      	add	sp, #8
 8009dfc:	bd10      	pop	{r4, pc}
	...

08009e00 <GUI_MEMDEV_Draw>:
 8009e00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009e04:	461e      	mov	r6, r3
 8009e06:	b089      	sub	sp, #36	; 0x24
 8009e08:	4b4e      	ldr	r3, [pc, #312]	; (8009f44 <GUI_MEMDEV_Draw+0x144>)
 8009e0a:	9204      	str	r2, [sp, #16]
 8009e0c:	681a      	ldr	r2, [r3, #0]
 8009e0e:	9103      	str	r1, [sp, #12]
 8009e10:	7c54      	ldrb	r4, [r2, #17]
 8009e12:	4a4d      	ldr	r2, [pc, #308]	; (8009f48 <GUI_MEMDEV_Draw+0x148>)
 8009e14:	5712      	ldrsb	r2, [r2, r4]
 8009e16:	2a01      	cmp	r2, #1
 8009e18:	4605      	mov	r5, r0
 8009e1a:	469b      	mov	fp, r3
 8009e1c:	4620      	mov	r0, r4
 8009e1e:	dd06      	ble.n	8009e2e <GUI_MEMDEV_Draw+0x2e>
 8009e20:	f002 f888 	bl	800bf34 <LCD_GetXSizeEx>
 8009e24:	4607      	mov	r7, r0
 8009e26:	4620      	mov	r0, r4
 8009e28:	f002 f887 	bl	800bf3a <LCD_GetYSizeEx>
 8009e2c:	e005      	b.n	8009e3a <GUI_MEMDEV_Draw+0x3a>
 8009e2e:	f002 f887 	bl	800bf40 <LCD_GetVXSizeEx>
 8009e32:	4607      	mov	r7, r0
 8009e34:	4620      	mov	r0, r4
 8009e36:	f002 f886 	bl	800bf46 <LCD_GetVYSizeEx>
 8009e3a:	4604      	mov	r4, r0
 8009e3c:	b325      	cbz	r5, 8009e88 <GUI_MEMDEV_Draw+0x88>
 8009e3e:	a806      	add	r0, sp, #24
 8009e40:	a907      	add	r1, sp, #28
 8009e42:	f004 f837 	bl	800deb4 <GUI_GetOrg>
 8009e46:	9b06      	ldr	r3, [sp, #24]
 8009e48:	f9b5 a000 	ldrsh.w	sl, [r5]
 8009e4c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8009e50:	f9b5 8002 	ldrsh.w	r8, [r5, #2]
 8009e54:	441f      	add	r7, r3
 8009e56:	9b07      	ldr	r3, [sp, #28]
 8009e58:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8009e5c:	3f01      	subs	r7, #1
 8009e5e:	4297      	cmp	r7, r2
 8009e60:	bfd4      	ite	le
 8009e62:	ebca 0707 	rsble	r7, sl, r7
 8009e66:	ebca 0702 	rsbgt	r7, sl, r2
 8009e6a:	441c      	add	r4, r3
 8009e6c:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 8009e70:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
 8009e74:	3c01      	subs	r4, #1
 8009e76:	4294      	cmp	r4, r2
 8009e78:	bfd4      	ite	le
 8009e7a:	ebc8 0404 	rsble	r4, r8, r4
 8009e7e:	ebc8 0402 	rsbgt	r4, r8, r2
 8009e82:	3701      	adds	r7, #1
 8009e84:	3401      	adds	r4, #1
 8009e86:	e001      	b.n	8009e8c <GUI_MEMDEV_Draw+0x8c>
 8009e88:	46a8      	mov	r8, r5
 8009e8a:	46aa      	mov	sl, r5
 8009e8c:	b906      	cbnz	r6, 8009e90 <GUI_MEMDEV_Draw+0x90>
 8009e8e:	4266      	negs	r6, r4
 8009e90:	2f00      	cmp	r7, #0
 8009e92:	dd52      	ble.n	8009f3a <GUI_MEMDEV_Draw+0x13a>
 8009e94:	2c00      	cmp	r4, #0
 8009e96:	dd50      	ble.n	8009f3a <GUI_MEMDEV_Draw+0x13a>
 8009e98:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8009e9a:	9300      	str	r3, [sp, #0]
 8009e9c:	4650      	mov	r0, sl
 8009e9e:	4641      	mov	r1, r8
 8009ea0:	463a      	mov	r2, r7
 8009ea2:	4633      	mov	r3, r6
 8009ea4:	f000 fe38 	bl	800ab18 <GUI_MEMDEV_CreateEx>
 8009ea8:	4605      	mov	r5, r0
 8009eaa:	b920      	cbnz	r0, 8009eb6 <GUI_MEMDEV_Draw+0xb6>
 8009eac:	9804      	ldr	r0, [sp, #16]
 8009eae:	9b03      	ldr	r3, [sp, #12]
 8009eb0:	4798      	blx	r3
 8009eb2:	2001      	movs	r0, #1
 8009eb4:	e042      	b.n	8009f3c <GUI_MEMDEV_Draw+0x13c>
 8009eb6:	f7ff ff7d 	bl	8009db4 <GUI_MEMDEV_GetYSize>
 8009eba:	42a0      	cmp	r0, r4
 8009ebc:	4606      	mov	r6, r0
 8009ebe:	d006      	beq.n	8009ece <GUI_MEMDEV_Draw+0xce>
 8009ec0:	f8db 3000 	ldr.w	r3, [fp]
 8009ec4:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8009ec6:	b110      	cbz	r0, 8009ece <GUI_MEMDEV_Draw+0xce>
 8009ec8:	2132      	movs	r1, #50	; 0x32
 8009eca:	f006 fedf 	bl	8010c8c <WM__SendMessageNoPara>
 8009ece:	4628      	mov	r0, r5
 8009ed0:	f000 fe5e 	bl	800ab90 <GUI_MEMDEV_Select>
 8009ed4:	4273      	negs	r3, r6
 8009ed6:	9305      	str	r3, [sp, #20]
 8009ed8:	46a1      	mov	r9, r4
 8009eda:	2700      	movs	r7, #0
 8009edc:	45b1      	cmp	r9, r6
 8009ede:	da03      	bge.n	8009ee8 <GUI_MEMDEV_Draw+0xe8>
 8009ee0:	4628      	mov	r0, r5
 8009ee2:	4649      	mov	r1, r9
 8009ee4:	f008 f92a 	bl	801213c <GUI_MEMDEV_ReduceYSize>
 8009ee8:	b147      	cbz	r7, 8009efc <GUI_MEMDEV_Draw+0xfc>
 8009eea:	4628      	mov	r0, r5
 8009eec:	4651      	mov	r1, sl
 8009eee:	eb07 0208 	add.w	r2, r7, r8
 8009ef2:	f7ff ff35 	bl	8009d60 <GUI_MEMDEV_SetOrg>
 8009ef6:	4628      	mov	r0, r5
 8009ef8:	f008 f936 	bl	8012168 <GUI_MEMDEV_Clear>
 8009efc:	9b03      	ldr	r3, [sp, #12]
 8009efe:	9804      	ldr	r0, [sp, #16]
 8009f00:	4798      	blx	r3
 8009f02:	4b12      	ldr	r3, [pc, #72]	; (8009f4c <GUI_MEMDEV_Draw+0x14c>)
 8009f04:	681b      	ldr	r3, [r3, #0]
 8009f06:	b10b      	cbz	r3, 8009f0c <GUI_MEMDEV_Draw+0x10c>
 8009f08:	2000      	movs	r0, #0
 8009f0a:	4798      	blx	r3
 8009f0c:	4628      	mov	r0, r5
 8009f0e:	f000 feb7 	bl	800ac80 <GUI_MEMDEV_CopyToLCD>
 8009f12:	4437      	add	r7, r6
 8009f14:	9b05      	ldr	r3, [sp, #20]
 8009f16:	42a7      	cmp	r7, r4
 8009f18:	4499      	add	r9, r3
 8009f1a:	dbdf      	blt.n	8009edc <GUI_MEMDEV_Draw+0xdc>
 8009f1c:	4628      	mov	r0, r5
 8009f1e:	f000 fdd9 	bl	800aad4 <GUI_MEMDEV_Delete>
 8009f22:	2000      	movs	r0, #0
 8009f24:	f000 fe34 	bl	800ab90 <GUI_MEMDEV_Select>
 8009f28:	42a6      	cmp	r6, r4
 8009f2a:	d006      	beq.n	8009f3a <GUI_MEMDEV_Draw+0x13a>
 8009f2c:	f8db 3000 	ldr.w	r3, [fp]
 8009f30:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8009f32:	b110      	cbz	r0, 8009f3a <GUI_MEMDEV_Draw+0x13a>
 8009f34:	2133      	movs	r1, #51	; 0x33
 8009f36:	f006 fea9 	bl	8010c8c <WM__SendMessageNoPara>
 8009f3a:	2000      	movs	r0, #0
 8009f3c:	b009      	add	sp, #36	; 0x24
 8009f3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009f42:	bf00      	nop
 8009f44:	20000274 	.word	0x20000274
 8009f48:	2001ba04 	.word	0x2001ba04
 8009f4c:	20019cfc 	.word	0x20019cfc

08009f50 <_GetDevData>:
 8009f50:	4802      	ldr	r0, [pc, #8]	; (8009f5c <_GetDevData+0xc>)
 8009f52:	2901      	cmp	r1, #1
 8009f54:	bf18      	it	ne
 8009f56:	2000      	movne	r0, #0
 8009f58:	4770      	bx	lr
 8009f5a:	bf00      	nop
 8009f5c:	08016190 	.word	0x08016190

08009f60 <_GetDevFunc>:
 8009f60:	4802      	ldr	r0, [pc, #8]	; (8009f6c <_GetDevFunc+0xc>)
 8009f62:	2916      	cmp	r1, #22
 8009f64:	bf18      	it	ne
 8009f66:	2000      	movne	r0, #0
 8009f68:	4770      	bx	lr
 8009f6a:	bf00      	nop
 8009f6c:	08011d4d 	.word	0x08011d4d

08009f70 <_GetDevProp>:
 8009f70:	2908      	cmp	r1, #8
 8009f72:	bf0c      	ite	eq
 8009f74:	2020      	moveq	r0, #32
 8009f76:	2000      	movne	r0, #0
 8009f78:	4770      	bx	lr

08009f7a <_SetOrg>:
 8009f7a:	b508      	push	{r3, lr}
 8009f7c:	6800      	ldr	r0, [r0, #0]
 8009f7e:	68c3      	ldr	r3, [r0, #12]
 8009f80:	6a1b      	ldr	r3, [r3, #32]
 8009f82:	4798      	blx	r3
 8009f84:	bd08      	pop	{r3, pc}

08009f86 <_GetRect>:
 8009f86:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009f88:	6880      	ldr	r0, [r0, #8]
 8009f8a:	460c      	mov	r4, r1
 8009f8c:	f005 fa6e 	bl	800f46c <GUI_ALLOC_LockH>
 8009f90:	4603      	mov	r3, r0
 8009f92:	a802      	add	r0, sp, #8
 8009f94:	8899      	ldrh	r1, [r3, #4]
 8009f96:	88da      	ldrh	r2, [r3, #6]
 8009f98:	891d      	ldrh	r5, [r3, #8]
 8009f9a:	f840 3d04 	str.w	r3, [r0, #-4]!
 8009f9e:	895b      	ldrh	r3, [r3, #10]
 8009fa0:	8021      	strh	r1, [r4, #0]
 8009fa2:	8062      	strh	r2, [r4, #2]
 8009fa4:	4429      	add	r1, r5
 8009fa6:	441a      	add	r2, r3
 8009fa8:	3901      	subs	r1, #1
 8009faa:	3a01      	subs	r2, #1
 8009fac:	80a1      	strh	r1, [r4, #4]
 8009fae:	80e2      	strh	r2, [r4, #6]
 8009fb0:	f005 fa6a 	bl	800f488 <GUI_ALLOC_UnlockH>
 8009fb4:	b003      	add	sp, #12
 8009fb6:	bd30      	pop	{r4, r5, pc}

08009fb8 <_XY2PTR>:
 8009fb8:	4b0e      	ldr	r3, [pc, #56]	; (8009ff4 <_XY2PTR+0x3c>)
 8009fba:	681b      	ldr	r3, [r3, #0]
 8009fbc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009fbe:	4605      	mov	r5, r0
 8009fc0:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8009fc2:	460e      	mov	r6, r1
 8009fc4:	f005 fa52 	bl	800f46c <GUI_ALLOC_LockH>
 8009fc8:	4603      	mov	r3, r0
 8009fca:	a802      	add	r0, sp, #8
 8009fcc:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 8009fd0:	f840 3d04 	str.w	r3, [r0, #-4]!
 8009fd4:	f103 0118 	add.w	r1, r3, #24
 8009fd8:	1b36      	subs	r6, r6, r4
 8009fda:	68dc      	ldr	r4, [r3, #12]
 8009fdc:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8009fe0:	fb04 1406 	mla	r4, r4, r6, r1
 8009fe4:	1aed      	subs	r5, r5, r3
 8009fe6:	f005 fa4f 	bl	800f488 <GUI_ALLOC_UnlockH>
 8009fea:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 8009fee:	4620      	mov	r0, r4
 8009ff0:	b002      	add	sp, #8
 8009ff2:	bd70      	pop	{r4, r5, r6, pc}
 8009ff4:	20000274 	.word	0x20000274

08009ff8 <_GetPixelIndex>:
 8009ff8:	b508      	push	{r3, lr}
 8009ffa:	4608      	mov	r0, r1
 8009ffc:	4611      	mov	r1, r2
 8009ffe:	f7ff ffdb 	bl	8009fb8 <_XY2PTR>
 800a002:	6800      	ldr	r0, [r0, #0]
 800a004:	bd08      	pop	{r3, pc}
	...

0800a008 <_XorPixel>:
 800a008:	4b15      	ldr	r3, [pc, #84]	; (800a060 <_XorPixel+0x58>)
 800a00a:	681b      	ldr	r3, [r3, #0]
 800a00c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a00e:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800a010:	4615      	mov	r5, r2
 800a012:	460e      	mov	r6, r1
 800a014:	f005 fa2a 	bl	800f46c <GUI_ALLOC_LockH>
 800a018:	4629      	mov	r1, r5
 800a01a:	9000      	str	r0, [sp, #0]
 800a01c:	4630      	mov	r0, r6
 800a01e:	f7ff ffcb 	bl	8009fb8 <_XY2PTR>
 800a022:	9b00      	ldr	r3, [sp, #0]
 800a024:	681b      	ldr	r3, [r3, #0]
 800a026:	691b      	ldr	r3, [r3, #16]
 800a028:	4604      	mov	r4, r0
 800a02a:	689b      	ldr	r3, [r3, #8]
 800a02c:	4798      	blx	r3
 800a02e:	6823      	ldr	r3, [r4, #0]
 800a030:	4058      	eors	r0, r3
 800a032:	9b00      	ldr	r3, [sp, #0]
 800a034:	6020      	str	r0, [r4, #0]
 800a036:	6958      	ldr	r0, [r3, #20]
 800a038:	b160      	cbz	r0, 800a054 <_XorPixel+0x4c>
 800a03a:	f005 fa17 	bl	800f46c <GUI_ALLOC_LockH>
 800a03e:	ac02      	add	r4, sp, #8
 800a040:	6883      	ldr	r3, [r0, #8]
 800a042:	f844 0d04 	str.w	r0, [r4, #-4]!
 800a046:	681b      	ldr	r3, [r3, #0]
 800a048:	4631      	mov	r1, r6
 800a04a:	462a      	mov	r2, r5
 800a04c:	4798      	blx	r3
 800a04e:	4620      	mov	r0, r4
 800a050:	f005 fa1a 	bl	800f488 <GUI_ALLOC_UnlockH>
 800a054:	4668      	mov	r0, sp
 800a056:	f005 fa17 	bl	800f488 <GUI_ALLOC_UnlockH>
 800a05a:	b002      	add	sp, #8
 800a05c:	bd70      	pop	{r4, r5, r6, pc}
 800a05e:	bf00      	nop
 800a060:	20000274 	.word	0x20000274

0800a064 <_SetPixelIndex>:
 800a064:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a066:	461c      	mov	r4, r3
 800a068:	4b10      	ldr	r3, [pc, #64]	; (800a0ac <_SetPixelIndex+0x48>)
 800a06a:	681b      	ldr	r3, [r3, #0]
 800a06c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800a06e:	460e      	mov	r6, r1
 800a070:	4615      	mov	r5, r2
 800a072:	f005 f9fb 	bl	800f46c <GUI_ALLOC_LockH>
 800a076:	4629      	mov	r1, r5
 800a078:	9000      	str	r0, [sp, #0]
 800a07a:	4630      	mov	r0, r6
 800a07c:	f7ff ff9c 	bl	8009fb8 <_XY2PTR>
 800a080:	9b00      	ldr	r3, [sp, #0]
 800a082:	6004      	str	r4, [r0, #0]
 800a084:	6958      	ldr	r0, [r3, #20]
 800a086:	b160      	cbz	r0, 800a0a2 <_SetPixelIndex+0x3e>
 800a088:	f005 f9f0 	bl	800f46c <GUI_ALLOC_LockH>
 800a08c:	ac02      	add	r4, sp, #8
 800a08e:	6883      	ldr	r3, [r0, #8]
 800a090:	f844 0d04 	str.w	r0, [r4, #-4]!
 800a094:	681b      	ldr	r3, [r3, #0]
 800a096:	4631      	mov	r1, r6
 800a098:	462a      	mov	r2, r5
 800a09a:	4798      	blx	r3
 800a09c:	4620      	mov	r0, r4
 800a09e:	f005 f9f3 	bl	800f488 <GUI_ALLOC_UnlockH>
 800a0a2:	4668      	mov	r0, sp
 800a0a4:	f005 f9f0 	bl	800f488 <GUI_ALLOC_UnlockH>
 800a0a8:	b002      	add	sp, #8
 800a0aa:	bd70      	pop	{r4, r5, r6, pc}
 800a0ac:	20000274 	.word	0x20000274

0800a0b0 <_DrawVLine>:
 800a0b0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a0b4:	4d2c      	ldr	r5, [pc, #176]	; (800a168 <_DrawVLine+0xb8>)
 800a0b6:	461e      	mov	r6, r3
 800a0b8:	682b      	ldr	r3, [r5, #0]
 800a0ba:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800a0bc:	460f      	mov	r7, r1
 800a0be:	4614      	mov	r4, r2
 800a0c0:	f005 f9d4 	bl	800f46c <GUI_ALLOC_LockH>
 800a0c4:	9000      	str	r0, [sp, #0]
 800a0c6:	6940      	ldr	r0, [r0, #20]
 800a0c8:	46a9      	mov	r9, r5
 800a0ca:	b108      	cbz	r0, 800a0d0 <_DrawVLine+0x20>
 800a0cc:	f005 f9ce 	bl	800f46c <GUI_ALLOC_LockH>
 800a0d0:	9001      	str	r0, [sp, #4]
 800a0d2:	4621      	mov	r1, r4
 800a0d4:	4638      	mov	r0, r7
 800a0d6:	f7ff ff6f 	bl	8009fb8 <_XY2PTR>
 800a0da:	f8d9 2000 	ldr.w	r2, [r9]
 800a0de:	9b00      	ldr	r3, [sp, #0]
 800a0e0:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
 800a0e2:	7c12      	ldrb	r2, [r2, #16]
 800a0e4:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800a0e8:	f8d1 9000 	ldr.w	r9, [r1]
 800a0ec:	07d2      	lsls	r2, r2, #31
 800a0ee:	4605      	mov	r5, r0
 800a0f0:	d51f      	bpl.n	800a132 <_DrawVLine+0x82>
 800a0f2:	681b      	ldr	r3, [r3, #0]
 800a0f4:	691b      	ldr	r3, [r3, #16]
 800a0f6:	689b      	ldr	r3, [r3, #8]
 800a0f8:	4798      	blx	r3
 800a0fa:	4680      	mov	r8, r0
 800a0fc:	9801      	ldr	r0, [sp, #4]
 800a0fe:	b128      	cbz	r0, 800a10c <_DrawVLine+0x5c>
 800a100:	6882      	ldr	r2, [r0, #8]
 800a102:	4639      	mov	r1, r7
 800a104:	f8d2 c000 	ldr.w	ip, [r2]
 800a108:	4622      	mov	r2, r4
 800a10a:	47e0      	blx	ip
 800a10c:	682b      	ldr	r3, [r5, #0]
 800a10e:	ea83 0308 	eor.w	r3, r3, r8
 800a112:	602b      	str	r3, [r5, #0]
 800a114:	9b00      	ldr	r3, [sp, #0]
 800a116:	3401      	adds	r4, #1
 800a118:	68db      	ldr	r3, [r3, #12]
 800a11a:	42b4      	cmp	r4, r6
 800a11c:	441d      	add	r5, r3
 800a11e:	dded      	ble.n	800a0fc <_DrawVLine+0x4c>
 800a120:	4668      	mov	r0, sp
 800a122:	f005 f9b1 	bl	800f488 <GUI_ALLOC_UnlockH>
 800a126:	9b01      	ldr	r3, [sp, #4]
 800a128:	b1d3      	cbz	r3, 800a160 <_DrawVLine+0xb0>
 800a12a:	a801      	add	r0, sp, #4
 800a12c:	f005 f9ac 	bl	800f488 <GUI_ALLOC_UnlockH>
 800a130:	e016      	b.n	800a160 <_DrawVLine+0xb0>
 800a132:	9b01      	ldr	r3, [sp, #4]
 800a134:	b163      	cbz	r3, 800a150 <_DrawVLine+0xa0>
 800a136:	9801      	ldr	r0, [sp, #4]
 800a138:	6883      	ldr	r3, [r0, #8]
 800a13a:	4622      	mov	r2, r4
 800a13c:	681b      	ldr	r3, [r3, #0]
 800a13e:	4639      	mov	r1, r7
 800a140:	3401      	adds	r4, #1
 800a142:	4798      	blx	r3
 800a144:	42b4      	cmp	r4, r6
 800a146:	f8c5 9000 	str.w	r9, [r5]
 800a14a:	4445      	add	r5, r8
 800a14c:	ddf3      	ble.n	800a136 <_DrawVLine+0x86>
 800a14e:	e7e7      	b.n	800a120 <_DrawVLine+0x70>
 800a150:	1b34      	subs	r4, r6, r4
 800a152:	3401      	adds	r4, #1
 800a154:	3c01      	subs	r4, #1
 800a156:	f8c5 9000 	str.w	r9, [r5]
 800a15a:	4445      	add	r5, r8
 800a15c:	d1fa      	bne.n	800a154 <_DrawVLine+0xa4>
 800a15e:	e7df      	b.n	800a120 <_DrawVLine+0x70>
 800a160:	b003      	add	sp, #12
 800a162:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a166:	bf00      	nop
 800a168:	20000274 	.word	0x20000274

0800a16c <_FillRect>:
 800a16c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a170:	f8df b0ac 	ldr.w	fp, [pc, #172]	; 800a220 <_FillRect+0xb4>
 800a174:	4614      	mov	r4, r2
 800a176:	f8db 2000 	ldr.w	r2, [fp]
 800a17a:	b085      	sub	sp, #20
 800a17c:	6e10      	ldr	r0, [r2, #96]	; 0x60
 800a17e:	460f      	mov	r7, r1
 800a180:	461d      	mov	r5, r3
 800a182:	f005 f973 	bl	800f46c <GUI_ALLOC_LockH>
 800a186:	4621      	mov	r1, r4
 800a188:	9002      	str	r0, [sp, #8]
 800a18a:	4638      	mov	r0, r7
 800a18c:	f7ff ff14 	bl	8009fb8 <_XY2PTR>
 800a190:	9a02      	ldr	r2, [sp, #8]
 800a192:	f8db 3000 	ldr.w	r3, [fp]
 800a196:	f8d2 900c 	ldr.w	r9, [r2, #12]
 800a19a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a19c:	4606      	mov	r6, r0
 800a19e:	6950      	ldr	r0, [r2, #20]
 800a1a0:	f8d3 a000 	ldr.w	sl, [r3]
 800a1a4:	1bed      	subs	r5, r5, r7
 800a1a6:	3501      	adds	r5, #1
 800a1a8:	b338      	cbz	r0, 800a1fa <_FillRect+0x8e>
 800a1aa:	f005 f95f 	bl	800f46c <GUI_ALLOC_LockH>
 800a1ae:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800a1b0:	f10d 0810 	add.w	r8, sp, #16
 800a1b4:	1b13      	subs	r3, r2, r4
 800a1b6:	f848 0d04 	str.w	r0, [r8, #-4]!
 800a1ba:	3301      	adds	r3, #1
 800a1bc:	9300      	str	r3, [sp, #0]
 800a1be:	4639      	mov	r1, r7
 800a1c0:	4622      	mov	r2, r4
 800a1c2:	462b      	mov	r3, r5
 800a1c4:	f007 ffa4 	bl	8012110 <GUI_USAGE_AddRect>
 800a1c8:	4640      	mov	r0, r8
 800a1ca:	f005 f95d 	bl	800f488 <GUI_ALLOC_UnlockH>
 800a1ce:	e014      	b.n	800a1fa <_FillRect+0x8e>
 800a1d0:	f8db 3000 	ldr.w	r3, [fp]
 800a1d4:	7c1b      	ldrb	r3, [r3, #16]
 800a1d6:	07db      	lsls	r3, r3, #31
 800a1d8:	d513      	bpl.n	800a202 <_FillRect+0x96>
 800a1da:	9b02      	ldr	r3, [sp, #8]
 800a1dc:	681b      	ldr	r3, [r3, #0]
 800a1de:	691b      	ldr	r3, [r3, #16]
 800a1e0:	689b      	ldr	r3, [r3, #8]
 800a1e2:	4798      	blx	r3
 800a1e4:	4632      	mov	r2, r6
 800a1e6:	462b      	mov	r3, r5
 800a1e8:	6811      	ldr	r1, [r2, #0]
 800a1ea:	3b01      	subs	r3, #1
 800a1ec:	ea81 0100 	eor.w	r1, r1, r0
 800a1f0:	f842 1b04 	str.w	r1, [r2], #4
 800a1f4:	d1f8      	bne.n	800a1e8 <_FillRect+0x7c>
 800a1f6:	444e      	add	r6, r9
 800a1f8:	3401      	adds	r4, #1
 800a1fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800a1fc:	429c      	cmp	r4, r3
 800a1fe:	dde7      	ble.n	800a1d0 <_FillRect+0x64>
 800a200:	e008      	b.n	800a214 <_FillRect+0xa8>
 800a202:	2d00      	cmp	r5, #0
 800a204:	ddf7      	ble.n	800a1f6 <_FillRect+0x8a>
 800a206:	462b      	mov	r3, r5
 800a208:	4632      	mov	r2, r6
 800a20a:	3b01      	subs	r3, #1
 800a20c:	f842 ab04 	str.w	sl, [r2], #4
 800a210:	d1fb      	bne.n	800a20a <_FillRect+0x9e>
 800a212:	e7f0      	b.n	800a1f6 <_FillRect+0x8a>
 800a214:	a802      	add	r0, sp, #8
 800a216:	f005 f937 	bl	800f488 <GUI_ALLOC_UnlockH>
 800a21a:	b005      	add	sp, #20
 800a21c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a220:	20000274 	.word	0x20000274

0800a224 <_DrawHLine>:
 800a224:	b507      	push	{r0, r1, r2, lr}
 800a226:	9200      	str	r2, [sp, #0]
 800a228:	f7ff ffa0 	bl	800a16c <_FillRect>
 800a22c:	b003      	add	sp, #12
 800a22e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800a234 <_DrawBitmap>:
 800a234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a238:	4c9d      	ldr	r4, [pc, #628]	; (800a4b0 <_DrawBitmap+0x27c>)
 800a23a:	469a      	mov	sl, r3
 800a23c:	6823      	ldr	r3, [r4, #0]
 800a23e:	b091      	sub	sp, #68	; 0x44
 800a240:	4680      	mov	r8, r0
 800a242:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800a244:	9207      	str	r2, [sp, #28]
 800a246:	460e      	mov	r6, r1
 800a248:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
 800a24c:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 800a24e:	2800      	cmp	r0, #0
 800a250:	f000 8387 	beq.w	800a962 <_DrawBitmap+0x72e>
 800a254:	f005 f90a 	bl	800f46c <GUI_ALLOC_LockH>
 800a258:	900e      	str	r0, [sp, #56]	; 0x38
 800a25a:	6940      	ldr	r0, [r0, #20]
 800a25c:	b108      	cbz	r0, 800a262 <_DrawBitmap+0x2e>
 800a25e:	f005 f905 	bl	800f46c <GUI_ALLOC_LockH>
 800a262:	900f      	str	r0, [sp, #60]	; 0x3c
 800a264:	a810      	add	r0, sp, #64	; 0x40
 800a266:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 800a26a:	68db      	ldr	r3, [r3, #12]
 800a26c:	930a      	str	r3, [sp, #40]	; 0x28
 800a26e:	f005 f90b 	bl	800f488 <GUI_ALLOC_UnlockH>
 800a272:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800a274:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800a276:	4437      	add	r7, r6
 800a278:	9704      	str	r7, [sp, #16]
 800a27a:	b150      	cbz	r0, 800a292 <_DrawBitmap+0x5e>
 800a27c:	6823      	ldr	r3, [r4, #0]
 800a27e:	7c1b      	ldrb	r3, [r3, #16]
 800a280:	079c      	lsls	r4, r3, #30
 800a282:	d406      	bmi.n	800a292 <_DrawBitmap+0x5e>
 800a284:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800a286:	9700      	str	r7, [sp, #0]
 800a288:	9904      	ldr	r1, [sp, #16]
 800a28a:	9a07      	ldr	r2, [sp, #28]
 800a28c:	4653      	mov	r3, sl
 800a28e:	f007 ff3f 	bl	8012110 <GUI_USAGE_AddRect>
 800a292:	9804      	ldr	r0, [sp, #16]
 800a294:	9907      	ldr	r1, [sp, #28]
 800a296:	f7ff fe8f 	bl	8009fb8 <_XY2PTR>
 800a29a:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800a29c:	2f17      	cmp	r7, #23
 800a29e:	4606      	mov	r6, r0
 800a2a0:	dd64      	ble.n	800a36c <_DrawBitmap+0x138>
 800a2a2:	ea4f 078a 	mov.w	r7, sl, lsl #2
 800a2a6:	9706      	str	r7, [sp, #24]
 800a2a8:	f04f 0900 	mov.w	r9, #0
 800a2ac:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800a2ae:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800a2b0:	45b9      	cmp	r9, r7
 800a2b2:	da57      	bge.n	800a364 <_DrawBitmap+0x130>
 800a2b4:	b130      	cbz	r0, 800a2c4 <_DrawBitmap+0x90>
 800a2b6:	6883      	ldr	r3, [r0, #8]
 800a2b8:	9a07      	ldr	r2, [sp, #28]
 800a2ba:	685c      	ldr	r4, [r3, #4]
 800a2bc:	9904      	ldr	r1, [sp, #16]
 800a2be:	444a      	add	r2, r9
 800a2c0:	4653      	mov	r3, sl
 800a2c2:	47a0      	blx	r4
 800a2c4:	f8d8 3010 	ldr.w	r3, [r8, #16]
 800a2c8:	68d8      	ldr	r0, [r3, #12]
 800a2ca:	b128      	cbz	r0, 800a2d8 <_DrawBitmap+0xa4>
 800a2cc:	4630      	mov	r0, r6
 800a2ce:	4659      	mov	r1, fp
 800a2d0:	9a06      	ldr	r2, [sp, #24]
 800a2d2:	f00a ffd4 	bl	801527e <memcpy>
 800a2d6:	e03e      	b.n	800a356 <_DrawBitmap+0x122>
 800a2d8:	685b      	ldr	r3, [r3, #4]
 800a2da:	4798      	blx	r3
 800a2dc:	0e00      	lsrs	r0, r0, #24
 800a2de:	9005      	str	r0, [sp, #20]
 800a2e0:	4635      	mov	r5, r6
 800a2e2:	4657      	mov	r7, sl
 800a2e4:	465c      	mov	r4, fp
 800a2e6:	463b      	mov	r3, r7
 800a2e8:	4622      	mov	r2, r4
 800a2ea:	f04f 0c00 	mov.w	ip, #0
 800a2ee:	f852 1b04 	ldr.w	r1, [r2], #4
 800a2f2:	9805      	ldr	r0, [sp, #20]
 800a2f4:	0e09      	lsrs	r1, r1, #24
 800a2f6:	4281      	cmp	r1, r0
 800a2f8:	9805      	ldr	r0, [sp, #20]
 800a2fa:	bf08      	it	eq
 800a2fc:	f10c 0c01 	addeq.w	ip, ip, #1
 800a300:	4281      	cmp	r1, r0
 800a302:	f103 33ff 	add.w	r3, r3, #4294967295
 800a306:	d014      	beq.n	800a332 <_DrawBitmap+0xfe>
 800a308:	f1bc 0f00 	cmp.w	ip, #0
 800a30c:	d014      	beq.n	800a338 <_DrawBitmap+0x104>
 800a30e:	ea4f 038c 	mov.w	r3, ip, lsl #2
 800a312:	4628      	mov	r0, r5
 800a314:	4621      	mov	r1, r4
 800a316:	461a      	mov	r2, r3
 800a318:	9303      	str	r3, [sp, #12]
 800a31a:	f8cd c008 	str.w	ip, [sp, #8]
 800a31e:	f00a ffae 	bl	801527e <memcpy>
 800a322:	9b03      	ldr	r3, [sp, #12]
 800a324:	f8dd c008 	ldr.w	ip, [sp, #8]
 800a328:	441d      	add	r5, r3
 800a32a:	441c      	add	r4, r3
 800a32c:	ebcc 0707 	rsb	r7, ip, r7
 800a330:	e00f      	b.n	800a352 <_DrawBitmap+0x11e>
 800a332:	2b00      	cmp	r3, #0
 800a334:	d1db      	bne.n	800a2ee <_DrawBitmap+0xba>
 800a336:	e7e7      	b.n	800a308 <_DrawBitmap+0xd4>
 800a338:	6820      	ldr	r0, [r4, #0]
 800a33a:	0e02      	lsrs	r2, r0, #24
 800a33c:	2aff      	cmp	r2, #255	; 0xff
 800a33e:	d005      	beq.n	800a34c <_DrawBitmap+0x118>
 800a340:	43d2      	mvns	r2, r2
 800a342:	6829      	ldr	r1, [r5, #0]
 800a344:	b2d2      	uxtb	r2, r2
 800a346:	f002 fb9d 	bl	800ca84 <GUI__MixColors>
 800a34a:	6028      	str	r0, [r5, #0]
 800a34c:	3504      	adds	r5, #4
 800a34e:	3404      	adds	r4, #4
 800a350:	3f01      	subs	r7, #1
 800a352:	2f00      	cmp	r7, #0
 800a354:	d1c7      	bne.n	800a2e6 <_DrawBitmap+0xb2>
 800a356:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800a358:	44bb      	add	fp, r7
 800a35a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800a35c:	f109 0901 	add.w	r9, r9, #1
 800a360:	443e      	add	r6, r7
 800a362:	e7a3      	b.n	800a2ac <_DrawBitmap+0x78>
 800a364:	2800      	cmp	r0, #0
 800a366:	f040 82f9 	bne.w	800a95c <_DrawBitmap+0x728>
 800a36a:	e2fa      	b.n	800a962 <_DrawBitmap+0x72e>
 800a36c:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800a36e:	2f10      	cmp	r7, #16
 800a370:	d137      	bne.n	800a3e2 <_DrawBitmap+0x1ae>
 800a372:	1f06      	subs	r6, r0, #4
 800a374:	2500      	movs	r5, #0
 800a376:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800a378:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800a37a:	42bd      	cmp	r5, r7
 800a37c:	f280 80a0 	bge.w	800a4c0 <_DrawBitmap+0x28c>
 800a380:	9f07      	ldr	r7, [sp, #28]
 800a382:	442f      	add	r7, r5
 800a384:	b13c      	cbz	r4, 800a396 <_DrawBitmap+0x162>
 800a386:	68a3      	ldr	r3, [r4, #8]
 800a388:	9904      	ldr	r1, [sp, #16]
 800a38a:	f8d3 c004 	ldr.w	ip, [r3, #4]
 800a38e:	4620      	mov	r0, r4
 800a390:	463a      	mov	r2, r7
 800a392:	4653      	mov	r3, sl
 800a394:	47e0      	blx	ip
 800a396:	f1ab 0302 	sub.w	r3, fp, #2
 800a39a:	9306      	str	r3, [sp, #24]
 800a39c:	9605      	str	r6, [sp, #20]
 800a39e:	46d1      	mov	r9, sl
 800a3a0:	9904      	ldr	r1, [sp, #16]
 800a3a2:	f8d8 3010 	ldr.w	r3, [r8, #16]
 800a3a6:	9a06      	ldr	r2, [sp, #24]
 800a3a8:	685b      	ldr	r3, [r3, #4]
 800a3aa:	f832 0f02 	ldrh.w	r0, [r2, #2]!
 800a3ae:	9206      	str	r2, [sp, #24]
 800a3b0:	4451      	add	r1, sl
 800a3b2:	ebc9 0101 	rsb	r1, r9, r1
 800a3b6:	9103      	str	r1, [sp, #12]
 800a3b8:	4798      	blx	r3
 800a3ba:	9b05      	ldr	r3, [sp, #20]
 800a3bc:	9903      	ldr	r1, [sp, #12]
 800a3be:	f843 0f04 	str.w	r0, [r3, #4]!
 800a3c2:	9305      	str	r3, [sp, #20]
 800a3c4:	b124      	cbz	r4, 800a3d0 <_DrawBitmap+0x19c>
 800a3c6:	68a3      	ldr	r3, [r4, #8]
 800a3c8:	4620      	mov	r0, r4
 800a3ca:	681b      	ldr	r3, [r3, #0]
 800a3cc:	463a      	mov	r2, r7
 800a3ce:	4798      	blx	r3
 800a3d0:	f1b9 0901 	subs.w	r9, r9, #1
 800a3d4:	d1e4      	bne.n	800a3a0 <_DrawBitmap+0x16c>
 800a3d6:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800a3d8:	44bb      	add	fp, r7
 800a3da:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800a3dc:	3501      	adds	r5, #1
 800a3de:	443e      	add	r6, r7
 800a3e0:	e7c9      	b.n	800a376 <_DrawBitmap+0x142>
 800a3e2:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800a3e4:	2f08      	cmp	r7, #8
 800a3e6:	f100 0604 	add.w	r6, r0, #4
 800a3ea:	d16d      	bne.n	800a4c8 <_DrawBitmap+0x294>
 800a3ec:	9f07      	ldr	r7, [sp, #28]
 800a3ee:	9907      	ldr	r1, [sp, #28]
 800a3f0:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800a3f2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800a3f4:	1a7b      	subs	r3, r7, r1
 800a3f6:	4293      	cmp	r3, r2
 800a3f8:	f1a6 0004 	sub.w	r0, r6, #4
 800a3fc:	da60      	bge.n	800a4c0 <_DrawBitmap+0x28c>
 800a3fe:	4b2c      	ldr	r3, [pc, #176]	; (800a4b0 <_DrawBitmap+0x27c>)
 800a400:	681b      	ldr	r3, [r3, #0]
 800a402:	7c1b      	ldrb	r3, [r3, #16]
 800a404:	b36d      	cbz	r5, 800a462 <_DrawBitmap+0x22e>
 800a406:	f013 0303 	ands.w	r3, r3, #3
 800a40a:	d005      	beq.n	800a418 <_DrawBitmap+0x1e4>
 800a40c:	2b02      	cmp	r3, #2
 800a40e:	d151      	bne.n	800a4b4 <_DrawBitmap+0x280>
 800a410:	46b1      	mov	r9, r6
 800a412:	f8dd 8010 	ldr.w	r8, [sp, #16]
 800a416:	e01c      	b.n	800a452 <_DrawBitmap+0x21e>
 800a418:	f81b 2003 	ldrb.w	r2, [fp, r3]
 800a41c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 800a420:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 800a424:	3301      	adds	r3, #1
 800a426:	4553      	cmp	r3, sl
 800a428:	d1f6      	bne.n	800a418 <_DrawBitmap+0x1e4>
 800a42a:	e043      	b.n	800a4b4 <_DrawBitmap+0x280>
 800a42c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800a430:	f849 3c04 	str.w	r3, [r9, #-4]
 800a434:	b12c      	cbz	r4, 800a442 <_DrawBitmap+0x20e>
 800a436:	68a3      	ldr	r3, [r4, #8]
 800a438:	4620      	mov	r0, r4
 800a43a:	681b      	ldr	r3, [r3, #0]
 800a43c:	4641      	mov	r1, r8
 800a43e:	463a      	mov	r2, r7
 800a440:	4798      	blx	r3
 800a442:	9b04      	ldr	r3, [sp, #16]
 800a444:	f108 0801 	add.w	r8, r8, #1
 800a448:	4453      	add	r3, sl
 800a44a:	4543      	cmp	r3, r8
 800a44c:	f109 0904 	add.w	r9, r9, #4
 800a450:	d030      	beq.n	800a4b4 <_DrawBitmap+0x280>
 800a452:	9804      	ldr	r0, [sp, #16]
 800a454:	ebc0 030b 	rsb	r3, r0, fp
 800a458:	f813 3008 	ldrb.w	r3, [r3, r8]
 800a45c:	2b00      	cmp	r3, #0
 800a45e:	d0f0      	beq.n	800a442 <_DrawBitmap+0x20e>
 800a460:	e7e4      	b.n	800a42c <_DrawBitmap+0x1f8>
 800a462:	f013 0303 	ands.w	r3, r3, #3
 800a466:	d005      	beq.n	800a474 <_DrawBitmap+0x240>
 800a468:	2b02      	cmp	r3, #2
 800a46a:	d123      	bne.n	800a4b4 <_DrawBitmap+0x280>
 800a46c:	46b1      	mov	r9, r6
 800a46e:	f8dd 8010 	ldr.w	r8, [sp, #16]
 800a472:	e015      	b.n	800a4a0 <_DrawBitmap+0x26c>
 800a474:	4659      	mov	r1, fp
 800a476:	4652      	mov	r2, sl
 800a478:	f00a ff01 	bl	801527e <memcpy>
 800a47c:	e01a      	b.n	800a4b4 <_DrawBitmap+0x280>
 800a47e:	f849 3c04 	str.w	r3, [r9, #-4]
 800a482:	b12c      	cbz	r4, 800a490 <_DrawBitmap+0x25c>
 800a484:	68a3      	ldr	r3, [r4, #8]
 800a486:	4620      	mov	r0, r4
 800a488:	681b      	ldr	r3, [r3, #0]
 800a48a:	4641      	mov	r1, r8
 800a48c:	463a      	mov	r2, r7
 800a48e:	4798      	blx	r3
 800a490:	9b04      	ldr	r3, [sp, #16]
 800a492:	f108 0801 	add.w	r8, r8, #1
 800a496:	4453      	add	r3, sl
 800a498:	4543      	cmp	r3, r8
 800a49a:	f109 0904 	add.w	r9, r9, #4
 800a49e:	d009      	beq.n	800a4b4 <_DrawBitmap+0x280>
 800a4a0:	9904      	ldr	r1, [sp, #16]
 800a4a2:	ebc1 030b 	rsb	r3, r1, fp
 800a4a6:	f813 3008 	ldrb.w	r3, [r3, r8]
 800a4aa:	2b00      	cmp	r3, #0
 800a4ac:	d0f0      	beq.n	800a490 <_DrawBitmap+0x25c>
 800a4ae:	e7e6      	b.n	800a47e <_DrawBitmap+0x24a>
 800a4b0:	20000274 	.word	0x20000274
 800a4b4:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800a4b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a4b8:	4493      	add	fp, r2
 800a4ba:	3701      	adds	r7, #1
 800a4bc:	441e      	add	r6, r3
 800a4be:	e796      	b.n	800a3ee <_DrawBitmap+0x1ba>
 800a4c0:	2c00      	cmp	r4, #0
 800a4c2:	f040 824b 	bne.w	800a95c <_DrawBitmap+0x728>
 800a4c6:	e24c      	b.n	800a962 <_DrawBitmap+0x72e>
 800a4c8:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800a4ca:	4bb2      	ldr	r3, [pc, #712]	; (800a794 <_DrawBitmap+0x560>)
 800a4cc:	9609      	str	r6, [sp, #36]	; 0x24
 800a4ce:	007f      	lsls	r7, r7, #1
 800a4d0:	970c      	str	r7, [sp, #48]	; 0x30
 800a4d2:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800a4d4:	00bf      	lsls	r7, r7, #2
 800a4d6:	970d      	str	r7, [sp, #52]	; 0x34
 800a4d8:	9f07      	ldr	r7, [sp, #28]
 800a4da:	9705      	str	r7, [sp, #20]
 800a4dc:	2d00      	cmp	r5, #0
 800a4de:	bf08      	it	eq
 800a4e0:	461d      	moveq	r5, r3
 800a4e2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800a4e4:	9807      	ldr	r0, [sp, #28]
 800a4e6:	1f3c      	subs	r4, r7, #4
 800a4e8:	9f05      	ldr	r7, [sp, #20]
 800a4ea:	1a3b      	subs	r3, r7, r0
 800a4ec:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800a4ee:	42bb      	cmp	r3, r7
 800a4f0:	f280 8232 	bge.w	800a958 <_DrawBitmap+0x724>
 800a4f4:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800a4f6:	2f02      	cmp	r7, #2
 800a4f8:	f000 80ad 	beq.w	800a656 <_DrawBitmap+0x422>
 800a4fc:	2f04      	cmp	r7, #4
 800a4fe:	f000 814f 	beq.w	800a7a0 <_DrawBitmap+0x56c>
 800a502:	2f01      	cmp	r7, #1
 800a504:	f040 821e 	bne.w	800a944 <_DrawBitmap+0x710>
 800a508:	f8df 9290 	ldr.w	r9, [pc, #656]	; 800a79c <_DrawBitmap+0x568>
 800a50c:	f8d9 3000 	ldr.w	r3, [r9]
 800a510:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800a512:	f004 ffab 	bl	800f46c <GUI_ALLOC_LockH>
 800a516:	f89b 3000 	ldrb.w	r3, [fp]
 800a51a:	4a9f      	ldr	r2, [pc, #636]	; (800a798 <_DrawBitmap+0x564>)
 800a51c:	991e      	ldr	r1, [sp, #120]	; 0x78
 800a51e:	5cd6      	ldrb	r6, [r2, r3]
 800a520:	f8d9 3000 	ldr.w	r3, [r9]
 800a524:	900e      	str	r0, [sp, #56]	; 0x38
 800a526:	7c1b      	ldrb	r3, [r3, #16]
 800a528:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 800a52c:	f003 0303 	and.w	r3, r3, #3
 800a530:	2b02      	cmp	r3, #2
 800a532:	4657      	mov	r7, sl
 800a534:	f1c1 0808 	rsb	r8, r1, #8
 800a538:	fa46 f601 	asr.w	r6, r6, r1
 800a53c:	d020      	beq.n	800a580 <_DrawBitmap+0x34c>
 800a53e:	2b03      	cmp	r3, #3
 800a540:	d061      	beq.n	800a606 <_DrawBitmap+0x3d2>
 800a542:	2b01      	cmp	r3, #1
 800a544:	d05f      	beq.n	800a606 <_DrawBitmap+0x3d2>
 800a546:	465a      	mov	r2, fp
 800a548:	4547      	cmp	r7, r8
 800a54a:	bf38      	it	cc
 800a54c:	46b8      	movcc	r8, r7
 800a54e:	ebc8 0707 	rsb	r7, r8, r7
 800a552:	4643      	mov	r3, r8
 800a554:	4621      	mov	r1, r4
 800a556:	f006 0001 	and.w	r0, r6, #1
 800a55a:	3b01      	subs	r3, #1
 800a55c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800a560:	f841 0b04 	str.w	r0, [r1], #4
 800a564:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800a568:	d1f5      	bne.n	800a556 <_DrawBitmap+0x322>
 800a56a:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 800a56e:	2f00      	cmp	r7, #0
 800a570:	d06d      	beq.n	800a64e <_DrawBitmap+0x41a>
 800a572:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800a576:	4988      	ldr	r1, [pc, #544]	; (800a798 <_DrawBitmap+0x564>)
 800a578:	f04f 0808 	mov.w	r8, #8
 800a57c:	5cce      	ldrb	r6, [r1, r3]
 800a57e:	e7e3      	b.n	800a548 <_DrawBitmap+0x314>
 800a580:	686b      	ldr	r3, [r5, #4]
 800a582:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800a586:	930b      	str	r3, [sp, #44]	; 0x2c
 800a588:	f8cd b020 	str.w	fp, [sp, #32]
 800a58c:	4547      	cmp	r7, r8
 800a58e:	bf38      	it	cc
 800a590:	46b8      	movcc	r8, r7
 800a592:	ebc8 0707 	rsb	r7, r8, r7
 800a596:	f1bc 0f00 	cmp.w	ip, #0
 800a59a:	d026      	beq.n	800a5ea <_DrawBitmap+0x3b6>
 800a59c:	b91e      	cbnz	r6, 800a5a6 <_DrawBitmap+0x372>
 800a59e:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 800a5a2:	44c1      	add	r9, r8
 800a5a4:	e025      	b.n	800a5f2 <_DrawBitmap+0x3be>
 800a5a6:	07f0      	lsls	r0, r6, #31
 800a5a8:	d50c      	bpl.n	800a5c4 <_DrawBitmap+0x390>
 800a5aa:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800a5ae:	9a05      	ldr	r2, [sp, #20]
 800a5b0:	681b      	ldr	r3, [r3, #0]
 800a5b2:	f8cd c008 	str.w	ip, [sp, #8]
 800a5b6:	4660      	mov	r0, ip
 800a5b8:	4649      	mov	r1, r9
 800a5ba:	4798      	blx	r3
 800a5bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a5be:	f8dd c008 	ldr.w	ip, [sp, #8]
 800a5c2:	6023      	str	r3, [r4, #0]
 800a5c4:	f1b8 0801 	subs.w	r8, r8, #1
 800a5c8:	f109 0901 	add.w	r9, r9, #1
 800a5cc:	f104 0404 	add.w	r4, r4, #4
 800a5d0:	d00f      	beq.n	800a5f2 <_DrawBitmap+0x3be>
 800a5d2:	0876      	lsrs	r6, r6, #1
 800a5d4:	e7e2      	b.n	800a59c <_DrawBitmap+0x368>
 800a5d6:	07f1      	lsls	r1, r6, #31
 800a5d8:	bf44      	itt	mi
 800a5da:	9b0b      	ldrmi	r3, [sp, #44]	; 0x2c
 800a5dc:	6023      	strmi	r3, [r4, #0]
 800a5de:	f1b8 0801 	subs.w	r8, r8, #1
 800a5e2:	f104 0404 	add.w	r4, r4, #4
 800a5e6:	d004      	beq.n	800a5f2 <_DrawBitmap+0x3be>
 800a5e8:	0876      	lsrs	r6, r6, #1
 800a5ea:	2e00      	cmp	r6, #0
 800a5ec:	d1f3      	bne.n	800a5d6 <_DrawBitmap+0x3a2>
 800a5ee:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 800a5f2:	b367      	cbz	r7, 800a64e <_DrawBitmap+0x41a>
 800a5f4:	9808      	ldr	r0, [sp, #32]
 800a5f6:	4a68      	ldr	r2, [pc, #416]	; (800a798 <_DrawBitmap+0x564>)
 800a5f8:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800a5fc:	9008      	str	r0, [sp, #32]
 800a5fe:	5cd6      	ldrb	r6, [r2, r3]
 800a600:	f04f 0808 	mov.w	r8, #8
 800a604:	e7c2      	b.n	800a58c <_DrawBitmap+0x358>
 800a606:	6803      	ldr	r3, [r0, #0]
 800a608:	691b      	ldr	r3, [r3, #16]
 800a60a:	689b      	ldr	r3, [r3, #8]
 800a60c:	4798      	blx	r3
 800a60e:	4659      	mov	r1, fp
 800a610:	4547      	cmp	r7, r8
 800a612:	bf38      	it	cc
 800a614:	46b8      	movcc	r8, r7
 800a616:	ebc8 0707 	rsb	r7, r8, r7
 800a61a:	1d23      	adds	r3, r4, #4
 800a61c:	46c6      	mov	lr, r8
 800a61e:	07f2      	lsls	r2, r6, #31
 800a620:	d504      	bpl.n	800a62c <_DrawBitmap+0x3f8>
 800a622:	f853 2c04 	ldr.w	r2, [r3, #-4]
 800a626:	4042      	eors	r2, r0
 800a628:	f843 2c04 	str.w	r2, [r3, #-4]
 800a62c:	f1be 0e01 	subs.w	lr, lr, #1
 800a630:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800a634:	f103 0304 	add.w	r3, r3, #4
 800a638:	d1f1      	bne.n	800a61e <_DrawBitmap+0x3ea>
 800a63a:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 800a63e:	b137      	cbz	r7, 800a64e <_DrawBitmap+0x41a>
 800a640:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a644:	4a54      	ldr	r2, [pc, #336]	; (800a798 <_DrawBitmap+0x564>)
 800a646:	f04f 0808 	mov.w	r8, #8
 800a64a:	5cd6      	ldrb	r6, [r2, r3]
 800a64c:	e7e0      	b.n	800a610 <_DrawBitmap+0x3dc>
 800a64e:	a80e      	add	r0, sp, #56	; 0x38
 800a650:	f004 ff1a 	bl	800f488 <GUI_ALLOC_UnlockH>
 800a654:	e176      	b.n	800a944 <_DrawBitmap+0x710>
 800a656:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800a658:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a65a:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 800a65e:	f1c7 0604 	rsb	r6, r7, #4
 800a662:	f89b 7000 	ldrb.w	r7, [fp]
 800a666:	409f      	lsls	r7, r3
 800a668:	4b4c      	ldr	r3, [pc, #304]	; (800a79c <_DrawBitmap+0x568>)
 800a66a:	681b      	ldr	r3, [r3, #0]
 800a66c:	7c1b      	ldrb	r3, [r3, #16]
 800a66e:	f003 0303 	and.w	r3, r3, #3
 800a672:	2b01      	cmp	r3, #1
 800a674:	b2f6      	uxtb	r6, r6
 800a676:	b2ff      	uxtb	r7, r7
 800a678:	d066      	beq.n	800a748 <_DrawBitmap+0x514>
 800a67a:	d308      	bcc.n	800a68e <_DrawBitmap+0x45a>
 800a67c:	2b02      	cmp	r3, #2
 800a67e:	f040 8161 	bne.w	800a944 <_DrawBitmap+0x710>
 800a682:	9804      	ldr	r0, [sp, #16]
 800a684:	f8cd b020 	str.w	fp, [sp, #32]
 800a688:	46d0      	mov	r8, sl
 800a68a:	9006      	str	r0, [sp, #24]
 800a68c:	e03e      	b.n	800a70c <_DrawBitmap+0x4d8>
 800a68e:	465a      	mov	r2, fp
 800a690:	4653      	mov	r3, sl
 800a692:	429e      	cmp	r6, r3
 800a694:	bfc8      	it	gt
 800a696:	b2de      	uxtbgt	r6, r3
 800a698:	1b9b      	subs	r3, r3, r6
 800a69a:	4631      	mov	r1, r6
 800a69c:	4620      	mov	r0, r4
 800a69e:	ea4f 1c97 	mov.w	ip, r7, lsr #6
 800a6a2:	3901      	subs	r1, #1
 800a6a4:	f855 c02c 	ldr.w	ip, [r5, ip, lsl #2]
 800a6a8:	f840 cb04 	str.w	ip, [r0], #4
 800a6ac:	00bf      	lsls	r7, r7, #2
 800a6ae:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 800a6b2:	b2ff      	uxtb	r7, r7
 800a6b4:	d1f3      	bne.n	800a69e <_DrawBitmap+0x46a>
 800a6b6:	3e01      	subs	r6, #1
 800a6b8:	b2f6      	uxtb	r6, r6
 800a6ba:	3601      	adds	r6, #1
 800a6bc:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 800a6c0:	2b00      	cmp	r3, #0
 800a6c2:	f000 813f 	beq.w	800a944 <_DrawBitmap+0x710>
 800a6c6:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 800a6ca:	2604      	movs	r6, #4
 800a6cc:	e7e1      	b.n	800a692 <_DrawBitmap+0x45e>
 800a6ce:	9906      	ldr	r1, [sp, #24]
 800a6d0:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 800a6d4:	4449      	add	r1, r9
 800a6d6:	d122      	bne.n	800a71e <_DrawBitmap+0x4ea>
 800a6d8:	f109 0901 	add.w	r9, r9, #1
 800a6dc:	fa5f f289 	uxtb.w	r2, r9
 800a6e0:	00bf      	lsls	r7, r7, #2
 800a6e2:	4296      	cmp	r6, r2
 800a6e4:	b2ff      	uxtb	r7, r7
 800a6e6:	d1f2      	bne.n	800a6ce <_DrawBitmap+0x49a>
 800a6e8:	9f06      	ldr	r7, [sp, #24]
 800a6ea:	3e01      	subs	r6, #1
 800a6ec:	b2f6      	uxtb	r6, r6
 800a6ee:	1c7b      	adds	r3, r7, #1
 800a6f0:	1c72      	adds	r2, r6, #1
 800a6f2:	199e      	adds	r6, r3, r6
 800a6f4:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 800a6f8:	9606      	str	r6, [sp, #24]
 800a6fa:	f1b8 0f00 	cmp.w	r8, #0
 800a6fe:	f000 8121 	beq.w	800a944 <_DrawBitmap+0x710>
 800a702:	9b08      	ldr	r3, [sp, #32]
 800a704:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 800a708:	9308      	str	r3, [sp, #32]
 800a70a:	2604      	movs	r6, #4
 800a70c:	4546      	cmp	r6, r8
 800a70e:	bfc8      	it	gt
 800a710:	fa5f f688 	uxtbgt.w	r6, r8
 800a714:	ebc6 0808 	rsb	r8, r6, r8
 800a718:	f04f 0900 	mov.w	r9, #0
 800a71c:	e7d7      	b.n	800a6ce <_DrawBitmap+0x49a>
 800a71e:	09ba      	lsrs	r2, r7, #6
 800a720:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 800a724:	f844 2029 	str.w	r2, [r4, r9, lsl #2]
 800a728:	f1bc 0f00 	cmp.w	ip, #0
 800a72c:	d0d4      	beq.n	800a6d8 <_DrawBitmap+0x4a4>
 800a72e:	f8dc 2008 	ldr.w	r2, [ip, #8]
 800a732:	6812      	ldr	r2, [r2, #0]
 800a734:	920b      	str	r2, [sp, #44]	; 0x2c
 800a736:	4660      	mov	r0, ip
 800a738:	f8cd c008 	str.w	ip, [sp, #8]
 800a73c:	9a05      	ldr	r2, [sp, #20]
 800a73e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a740:	4798      	blx	r3
 800a742:	f8dd c008 	ldr.w	ip, [sp, #8]
 800a746:	e7c7      	b.n	800a6d8 <_DrawBitmap+0x4a4>
 800a748:	4658      	mov	r0, fp
 800a74a:	4653      	mov	r3, sl
 800a74c:	429e      	cmp	r6, r3
 800a74e:	bfc8      	it	gt
 800a750:	b2de      	uxtbgt	r6, r3
 800a752:	1b9b      	subs	r3, r3, r6
 800a754:	1d22      	adds	r2, r4, #4
 800a756:	46b4      	mov	ip, r6
 800a758:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 800a75c:	d005      	beq.n	800a76a <_DrawBitmap+0x536>
 800a75e:	f852 1c04 	ldr.w	r1, [r2, #-4]
 800a762:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 800a766:	f842 1c04 	str.w	r1, [r2, #-4]
 800a76a:	f10c 3cff 	add.w	ip, ip, #4294967295
 800a76e:	00bf      	lsls	r7, r7, #2
 800a770:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 800a774:	b2ff      	uxtb	r7, r7
 800a776:	f102 0204 	add.w	r2, r2, #4
 800a77a:	d1ed      	bne.n	800a758 <_DrawBitmap+0x524>
 800a77c:	3e01      	subs	r6, #1
 800a77e:	b2f6      	uxtb	r6, r6
 800a780:	3601      	adds	r6, #1
 800a782:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 800a786:	2b00      	cmp	r3, #0
 800a788:	f000 80dc 	beq.w	800a944 <_DrawBitmap+0x710>
 800a78c:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 800a790:	2604      	movs	r6, #4
 800a792:	e7db      	b.n	800a74c <_DrawBitmap+0x518>
 800a794:	08016150 	.word	0x08016150
 800a798:	08017180 	.word	0x08017180
 800a79c:	20000274 	.word	0x20000274
 800a7a0:	4a71      	ldr	r2, [pc, #452]	; (800a968 <_DrawBitmap+0x734>)
 800a7a2:	f89b 3000 	ldrb.w	r3, [fp]
 800a7a6:	6812      	ldr	r2, [r2, #0]
 800a7a8:	980d      	ldr	r0, [sp, #52]	; 0x34
 800a7aa:	7c12      	ldrb	r2, [r2, #16]
 800a7ac:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800a7ae:	f002 0203 	and.w	r2, r2, #3
 800a7b2:	4083      	lsls	r3, r0
 800a7b4:	2a01      	cmp	r2, #1
 800a7b6:	b2de      	uxtb	r6, r3
 800a7b8:	f000 809c 	beq.w	800a8f4 <_DrawBitmap+0x6c0>
 800a7bc:	d302      	bcc.n	800a7c4 <_DrawBitmap+0x590>
 800a7be:	2a02      	cmp	r2, #2
 800a7c0:	d035      	beq.n	800a82e <_DrawBitmap+0x5fa>
 800a7c2:	e0bf      	b.n	800a944 <_DrawBitmap+0x710>
 800a7c4:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800a7c6:	b15f      	cbz	r7, 800a7e0 <_DrawBitmap+0x5ac>
 800a7c8:	0936      	lsrs	r6, r6, #4
 800a7ca:	f10b 0201 	add.w	r2, fp, #1
 800a7ce:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800a7d2:	6023      	str	r3, [r4, #0]
 800a7d4:	f89b 6001 	ldrb.w	r6, [fp, #1]
 800a7d8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800a7da:	f10a 33ff 	add.w	r3, sl, #4294967295
 800a7de:	e001      	b.n	800a7e4 <_DrawBitmap+0x5b0>
 800a7e0:	4653      	mov	r3, sl
 800a7e2:	465a      	mov	r2, fp
 800a7e4:	2b01      	cmp	r3, #1
 800a7e6:	dd1a      	ble.n	800a81e <_DrawBitmap+0x5ea>
 800a7e8:	1058      	asrs	r0, r3, #1
 800a7ea:	f104 0108 	add.w	r1, r4, #8
 800a7ee:	f003 0301 	and.w	r3, r3, #1
 800a7f2:	eb02 0800 	add.w	r8, r2, r0
 800a7f6:	ea4f 1c16 	mov.w	ip, r6, lsr #4
 800a7fa:	f006 060f 	and.w	r6, r6, #15
 800a7fe:	f855 702c 	ldr.w	r7, [r5, ip, lsl #2]
 800a802:	f841 7c08 	str.w	r7, [r1, #-8]
 800a806:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 800a80a:	f841 6c04 	str.w	r6, [r1, #-4]
 800a80e:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800a812:	4542      	cmp	r2, r8
 800a814:	f101 0108 	add.w	r1, r1, #8
 800a818:	d1ed      	bne.n	800a7f6 <_DrawBitmap+0x5c2>
 800a81a:	eb04 04c0 	add.w	r4, r4, r0, lsl #3
 800a81e:	2b00      	cmp	r3, #0
 800a820:	f000 8090 	beq.w	800a944 <_DrawBitmap+0x710>
 800a824:	0936      	lsrs	r6, r6, #4
 800a826:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800a82a:	6023      	str	r3, [r4, #0]
 800a82c:	e08a      	b.n	800a944 <_DrawBitmap+0x710>
 800a82e:	981e      	ldr	r0, [sp, #120]	; 0x78
 800a830:	b1c0      	cbz	r0, 800a864 <_DrawBitmap+0x630>
 800a832:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 800a836:	d00a      	beq.n	800a84e <_DrawBitmap+0x61a>
 800a838:	0936      	lsrs	r6, r6, #4
 800a83a:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800a83e:	6023      	str	r3, [r4, #0]
 800a840:	b12f      	cbz	r7, 800a84e <_DrawBitmap+0x61a>
 800a842:	68bb      	ldr	r3, [r7, #8]
 800a844:	9904      	ldr	r1, [sp, #16]
 800a846:	681b      	ldr	r3, [r3, #0]
 800a848:	9a05      	ldr	r2, [sp, #20]
 800a84a:	4638      	mov	r0, r7
 800a84c:	4798      	blx	r3
 800a84e:	9904      	ldr	r1, [sp, #16]
 800a850:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800a852:	f89b 6001 	ldrb.w	r6, [fp, #1]
 800a856:	f101 0801 	add.w	r8, r1, #1
 800a85a:	f10a 3cff 	add.w	ip, sl, #4294967295
 800a85e:	f10b 0901 	add.w	r9, fp, #1
 800a862:	e011      	b.n	800a888 <_DrawBitmap+0x654>
 800a864:	46d4      	mov	ip, sl
 800a866:	46d9      	mov	r9, fp
 800a868:	f8dd 8010 	ldr.w	r8, [sp, #16]
 800a86c:	e00c      	b.n	800a888 <_DrawBitmap+0x654>
 800a86e:	f016 0ff0 	tst.w	r6, #240	; 0xf0
 800a872:	d10d      	bne.n	800a890 <_DrawBitmap+0x65c>
 800a874:	f016 060f 	ands.w	r6, r6, #15
 800a878:	d11b      	bne.n	800a8b2 <_DrawBitmap+0x67e>
 800a87a:	f819 6f01 	ldrb.w	r6, [r9, #1]!
 800a87e:	3408      	adds	r4, #8
 800a880:	f108 0802 	add.w	r8, r8, #2
 800a884:	f1ac 0c02 	sub.w	ip, ip, #2
 800a888:	f1bc 0f01 	cmp.w	ip, #1
 800a88c:	dcef      	bgt.n	800a86e <_DrawBitmap+0x63a>
 800a88e:	e021      	b.n	800a8d4 <_DrawBitmap+0x6a0>
 800a890:	0933      	lsrs	r3, r6, #4
 800a892:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800a896:	6023      	str	r3, [r4, #0]
 800a898:	2f00      	cmp	r7, #0
 800a89a:	d0eb      	beq.n	800a874 <_DrawBitmap+0x640>
 800a89c:	68bb      	ldr	r3, [r7, #8]
 800a89e:	9a05      	ldr	r2, [sp, #20]
 800a8a0:	681b      	ldr	r3, [r3, #0]
 800a8a2:	f8cd c008 	str.w	ip, [sp, #8]
 800a8a6:	4638      	mov	r0, r7
 800a8a8:	4641      	mov	r1, r8
 800a8aa:	4798      	blx	r3
 800a8ac:	f8dd c008 	ldr.w	ip, [sp, #8]
 800a8b0:	e7e0      	b.n	800a874 <_DrawBitmap+0x640>
 800a8b2:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800a8b6:	6063      	str	r3, [r4, #4]
 800a8b8:	2f00      	cmp	r7, #0
 800a8ba:	d0de      	beq.n	800a87a <_DrawBitmap+0x646>
 800a8bc:	68bb      	ldr	r3, [r7, #8]
 800a8be:	9a05      	ldr	r2, [sp, #20]
 800a8c0:	681b      	ldr	r3, [r3, #0]
 800a8c2:	f8cd c008 	str.w	ip, [sp, #8]
 800a8c6:	4638      	mov	r0, r7
 800a8c8:	f108 0101 	add.w	r1, r8, #1
 800a8cc:	4798      	blx	r3
 800a8ce:	f8dd c008 	ldr.w	ip, [sp, #8]
 800a8d2:	e7d2      	b.n	800a87a <_DrawBitmap+0x646>
 800a8d4:	f1bc 0f00 	cmp.w	ip, #0
 800a8d8:	d034      	beq.n	800a944 <_DrawBitmap+0x710>
 800a8da:	0936      	lsrs	r6, r6, #4
 800a8dc:	d032      	beq.n	800a944 <_DrawBitmap+0x710>
 800a8de:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800a8e2:	6023      	str	r3, [r4, #0]
 800a8e4:	b377      	cbz	r7, 800a944 <_DrawBitmap+0x710>
 800a8e6:	68bb      	ldr	r3, [r7, #8]
 800a8e8:	9a05      	ldr	r2, [sp, #20]
 800a8ea:	681b      	ldr	r3, [r3, #0]
 800a8ec:	4638      	mov	r0, r7
 800a8ee:	4641      	mov	r1, r8
 800a8f0:	4798      	blx	r3
 800a8f2:	e027      	b.n	800a944 <_DrawBitmap+0x710>
 800a8f4:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800a8f6:	f1c7 0302 	rsb	r3, r7, #2
 800a8fa:	b2db      	uxtb	r3, r3
 800a8fc:	465f      	mov	r7, fp
 800a8fe:	4652      	mov	r2, sl
 800a900:	4293      	cmp	r3, r2
 800a902:	bfc8      	it	gt
 800a904:	b2d3      	uxtbgt	r3, r2
 800a906:	1ad2      	subs	r2, r2, r3
 800a908:	1d20      	adds	r0, r4, #4
 800a90a:	469c      	mov	ip, r3
 800a90c:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 800a910:	d005      	beq.n	800a91e <_DrawBitmap+0x6ea>
 800a912:	f850 1c04 	ldr.w	r1, [r0, #-4]
 800a916:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 800a91a:	f840 1c04 	str.w	r1, [r0, #-4]
 800a91e:	f10c 3cff 	add.w	ip, ip, #4294967295
 800a922:	0136      	lsls	r6, r6, #4
 800a924:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 800a928:	b2f6      	uxtb	r6, r6
 800a92a:	f100 0004 	add.w	r0, r0, #4
 800a92e:	d1ed      	bne.n	800a90c <_DrawBitmap+0x6d8>
 800a930:	3b01      	subs	r3, #1
 800a932:	b2db      	uxtb	r3, r3
 800a934:	3301      	adds	r3, #1
 800a936:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800a93a:	b11a      	cbz	r2, 800a944 <_DrawBitmap+0x710>
 800a93c:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 800a940:	2302      	movs	r3, #2
 800a942:	e7dd      	b.n	800a900 <_DrawBitmap+0x6cc>
 800a944:	9b05      	ldr	r3, [sp, #20]
 800a946:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800a948:	3301      	adds	r3, #1
 800a94a:	44bb      	add	fp, r7
 800a94c:	9305      	str	r3, [sp, #20]
 800a94e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800a950:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a952:	443b      	add	r3, r7
 800a954:	9309      	str	r3, [sp, #36]	; 0x24
 800a956:	e5c4      	b.n	800a4e2 <_DrawBitmap+0x2ae>
 800a958:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800a95a:	b113      	cbz	r3, 800a962 <_DrawBitmap+0x72e>
 800a95c:	a80f      	add	r0, sp, #60	; 0x3c
 800a95e:	f004 fd93 	bl	800f488 <GUI_ALLOC_UnlockH>
 800a962:	b011      	add	sp, #68	; 0x44
 800a964:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a968:	20000274 	.word	0x20000274

0800a96c <GUI_MEMDEV__WriteToActiveAt>:
 800a96c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a970:	460e      	mov	r6, r1
 800a972:	4690      	mov	r8, r2
 800a974:	4607      	mov	r7, r0
 800a976:	f004 fd79 	bl	800f46c <GUI_ALLOC_LockH>
 800a97a:	6803      	ldr	r3, [r0, #0]
 800a97c:	ac02      	add	r4, sp, #8
 800a97e:	68db      	ldr	r3, [r3, #12]
 800a980:	f844 0d04 	str.w	r0, [r4, #-4]!
 800a984:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a986:	2000      	movs	r0, #0
 800a988:	2116      	movs	r1, #22
 800a98a:	4798      	blx	r3
 800a98c:	4605      	mov	r5, r0
 800a98e:	4620      	mov	r0, r4
 800a990:	f004 fd7a 	bl	800f488 <GUI_ALLOC_UnlockH>
 800a994:	b11d      	cbz	r5, 800a99e <GUI_MEMDEV__WriteToActiveAt+0x32>
 800a996:	4638      	mov	r0, r7
 800a998:	4631      	mov	r1, r6
 800a99a:	4642      	mov	r2, r8
 800a99c:	47a8      	blx	r5
 800a99e:	b002      	add	sp, #8
 800a9a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a9a4 <GUI_MEMDEV__CreateFixed>:
 800a9a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a9a8:	4e3e      	ldr	r6, [pc, #248]	; (800aaa4 <GUI_MEMDEV__CreateFixed+0x100>)
 800a9aa:	b087      	sub	sp, #28
 800a9ac:	461d      	mov	r5, r3
 800a9ae:	6833      	ldr	r3, [r6, #0]
 800a9b0:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800a9b2:	7c5b      	ldrb	r3, [r3, #17]
 800a9b4:	4683      	mov	fp, r0
 800a9b6:	468a      	mov	sl, r1
 800a9b8:	4690      	mov	r8, r2
 800a9ba:	9811      	ldr	r0, [sp, #68]	; 0x44
 800a9bc:	9912      	ldr	r1, [sp, #72]	; 0x48
 800a9be:	2200      	movs	r2, #0
 800a9c0:	f004 f80c 	bl	800e9dc <GUI_DEVICE_Create>
 800a9c4:	4604      	mov	r4, r0
 800a9c6:	2800      	cmp	r0, #0
 800a9c8:	d033      	beq.n	800aa32 <GUI_MEMDEV__CreateFixed+0x8e>
 800a9ca:	6903      	ldr	r3, [r0, #16]
 800a9cc:	689b      	ldr	r3, [r3, #8]
 800a9ce:	4798      	blx	r3
 800a9d0:	f001 fb67 	bl	800c0a2 <LCD__GetBPPDevice>
 800a9d4:	fb08 f600 	mul.w	r6, r8, r0
 800a9d8:	9003      	str	r0, [sp, #12]
 800a9da:	3607      	adds	r6, #7
 800a9dc:	f004 ff0e 	bl	800f7fc <GUI_ALLOC_RequestSize>
 800a9e0:	f017 0901 	ands.w	r9, r7, #1
 800a9e4:	ea4f 06d6 	mov.w	r6, r6, lsr #3
 800a9e8:	d104      	bne.n	800a9f4 <GUI_MEMDEV__CreateFixed+0x50>
 800a9ea:	2304      	movs	r3, #4
 800a9ec:	fb90 f0f3 	sdiv	r0, r0, r3
 800a9f0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800a9f4:	2d00      	cmp	r5, #0
 800a9f6:	dc09      	bgt.n	800aa0c <GUI_MEMDEV__CreateFixed+0x68>
 800a9f8:	b11e      	cbz	r6, 800aa02 <GUI_MEMDEV__CreateFixed+0x5e>
 800a9fa:	3818      	subs	r0, #24
 800a9fc:	fbb0 f0f6 	udiv	r0, r0, r6
 800aa00:	e000      	b.n	800aa04 <GUI_MEMDEV__CreateFixed+0x60>
 800aa02:	4630      	mov	r0, r6
 800aa04:	426d      	negs	r5, r5
 800aa06:	42a8      	cmp	r0, r5
 800aa08:	bfb8      	it	lt
 800aa0a:	4605      	movlt	r5, r0
 800aa0c:	f1b9 0f00 	cmp.w	r9, #0
 800aa10:	d109      	bne.n	800aa26 <GUI_MEMDEV__CreateFixed+0x82>
 800aa12:	f8cd 9000 	str.w	r9, [sp]
 800aa16:	4658      	mov	r0, fp
 800aa18:	4651      	mov	r1, sl
 800aa1a:	4642      	mov	r2, r8
 800aa1c:	462b      	mov	r3, r5
 800aa1e:	f007 fb37 	bl	8012090 <GUI_USAGE_BM_Create>
 800aa22:	4607      	mov	r7, r0
 800aa24:	e000      	b.n	800aa28 <GUI_MEMDEV__CreateFixed+0x84>
 800aa26:	2700      	movs	r7, #0
 800aa28:	2d00      	cmp	r5, #0
 800aa2a:	dc04      	bgt.n	800aa36 <GUI_MEMDEV__CreateFixed+0x92>
 800aa2c:	4620      	mov	r0, r4
 800aa2e:	f003 ffd3 	bl	800e9d8 <GUI_DEVICE_Delete>
 800aa32:	2000      	movs	r0, #0
 800aa34:	e032      	b.n	800aa9c <GUI_MEMDEV__CreateFixed+0xf8>
 800aa36:	fb06 f005 	mul.w	r0, r6, r5
 800aa3a:	3018      	adds	r0, #24
 800aa3c:	f1b9 0f00 	cmp.w	r9, #0
 800aa40:	d002      	beq.n	800aa48 <GUI_MEMDEV__CreateFixed+0xa4>
 800aa42:	f004 ff67 	bl	800f914 <GUI_ALLOC_AllocNoInit>
 800aa46:	e001      	b.n	800aa4c <GUI_MEMDEV__CreateFixed+0xa8>
 800aa48:	f004 fff0 	bl	800fa2c <GUI_ALLOC_AllocZero>
 800aa4c:	4681      	mov	r9, r0
 800aa4e:	b940      	cbnz	r0, 800aa62 <GUI_MEMDEV__CreateFixed+0xbe>
 800aa50:	4620      	mov	r0, r4
 800aa52:	f003 ffc1 	bl	800e9d8 <GUI_DEVICE_Delete>
 800aa56:	2f00      	cmp	r7, #0
 800aa58:	d0eb      	beq.n	800aa32 <GUI_MEMDEV__CreateFixed+0x8e>
 800aa5a:	4638      	mov	r0, r7
 800aa5c:	f004 fd40 	bl	800f4e0 <GUI_ALLOC_Free>
 800aa60:	e01b      	b.n	800aa9a <GUI_MEMDEV__CreateFixed+0xf6>
 800aa62:	f004 fd03 	bl	800f46c <GUI_ALLOC_LockH>
 800aa66:	4603      	mov	r3, r0
 800aa68:	a806      	add	r0, sp, #24
 800aa6a:	9a03      	ldr	r2, [sp, #12]
 800aa6c:	f840 3d04 	str.w	r3, [r0, #-4]!
 800aa70:	611a      	str	r2, [r3, #16]
 800aa72:	601c      	str	r4, [r3, #0]
 800aa74:	f8a3 b004 	strh.w	fp, [r3, #4]
 800aa78:	f8a3 a006 	strh.w	sl, [r3, #6]
 800aa7c:	f8a3 8008 	strh.w	r8, [r3, #8]
 800aa80:	815d      	strh	r5, [r3, #10]
 800aa82:	60de      	str	r6, [r3, #12]
 800aa84:	615f      	str	r7, [r3, #20]
 800aa86:	f004 fcff 	bl	800f488 <GUI_ALLOC_UnlockH>
 800aa8a:	4a06      	ldr	r2, [pc, #24]	; (800aaa4 <GUI_MEMDEV__CreateFixed+0x100>)
 800aa8c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800aa8e:	6123      	str	r3, [r4, #16]
 800aa90:	6813      	ldr	r3, [r2, #0]
 800aa92:	f8c4 9008 	str.w	r9, [r4, #8]
 800aa96:	7c5b      	ldrb	r3, [r3, #17]
 800aa98:	61a3      	str	r3, [r4, #24]
 800aa9a:	4648      	mov	r0, r9
 800aa9c:	b007      	add	sp, #28
 800aa9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aaa2:	bf00      	nop
 800aaa4:	20000274 	.word	0x20000274

0800aaa8 <GUI_MEMDEV_GetBitsPerPixel>:
 800aaa8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aaaa:	4605      	mov	r5, r0
 800aaac:	b170      	cbz	r0, 800aacc <GUI_MEMDEV_GetBitsPerPixel+0x24>
 800aaae:	f004 fcdd 	bl	800f46c <GUI_ALLOC_LockH>
 800aab2:	6803      	ldr	r3, [r0, #0]
 800aab4:	ac02      	add	r4, sp, #8
 800aab6:	691b      	ldr	r3, [r3, #16]
 800aab8:	f844 0d04 	str.w	r0, [r4, #-4]!
 800aabc:	689b      	ldr	r3, [r3, #8]
 800aabe:	4798      	blx	r3
 800aac0:	f001 faef 	bl	800c0a2 <LCD__GetBPPDevice>
 800aac4:	4605      	mov	r5, r0
 800aac6:	4620      	mov	r0, r4
 800aac8:	f004 fcde 	bl	800f488 <GUI_ALLOC_UnlockH>
 800aacc:	4628      	mov	r0, r5
 800aace:	b003      	add	sp, #12
 800aad0:	bd30      	pop	{r4, r5, pc}
	...

0800aad4 <GUI_MEMDEV_Delete>:
 800aad4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aad6:	4604      	mov	r4, r0
 800aad8:	b1d0      	cbz	r0, 800ab10 <GUI_MEMDEV_Delete+0x3c>
 800aada:	4b0e      	ldr	r3, [pc, #56]	; (800ab14 <GUI_MEMDEV_Delete+0x40>)
 800aadc:	681b      	ldr	r3, [r3, #0]
 800aade:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800aae0:	4283      	cmp	r3, r0
 800aae2:	d101      	bne.n	800aae8 <GUI_MEMDEV_Delete+0x14>
 800aae4:	f003 f8aa 	bl	800dc3c <GUI_SelectLCD>
 800aae8:	4620      	mov	r0, r4
 800aaea:	f004 fcbf 	bl	800f46c <GUI_ALLOC_LockH>
 800aaee:	9001      	str	r0, [sp, #4]
 800aaf0:	6940      	ldr	r0, [r0, #20]
 800aaf2:	b108      	cbz	r0, 800aaf8 <GUI_MEMDEV_Delete+0x24>
 800aaf4:	f007 faf8 	bl	80120e8 <GUI_USAGE_DecUseCnt>
 800aaf8:	ad02      	add	r5, sp, #8
 800aafa:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 800aafe:	6818      	ldr	r0, [r3, #0]
 800ab00:	f003 ff6a 	bl	800e9d8 <GUI_DEVICE_Delete>
 800ab04:	4628      	mov	r0, r5
 800ab06:	f004 fcbf 	bl	800f488 <GUI_ALLOC_UnlockH>
 800ab0a:	4620      	mov	r0, r4
 800ab0c:	f004 fce8 	bl	800f4e0 <GUI_ALLOC_Free>
 800ab10:	b003      	add	sp, #12
 800ab12:	bd30      	pop	{r4, r5, pc}
 800ab14:	20000274 	.word	0x20000274

0800ab18 <GUI_MEMDEV_CreateEx>:
 800ab18:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800ab1c:	469a      	mov	sl, r3
 800ab1e:	4b19      	ldr	r3, [pc, #100]	; (800ab84 <GUI_MEMDEV_CreateEx+0x6c>)
 800ab20:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800ab22:	681b      	ldr	r3, [r3, #0]
 800ab24:	4607      	mov	r7, r0
 800ab26:	7c58      	ldrb	r0, [r3, #17]
 800ab28:	4b17      	ldr	r3, [pc, #92]	; (800ab88 <GUI_MEMDEV_CreateEx+0x70>)
 800ab2a:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 800ab2e:	4688      	mov	r8, r1
 800ab30:	4691      	mov	r9, r2
 800ab32:	68e3      	ldr	r3, [r4, #12]
 800ab34:	681b      	ldr	r3, [r3, #0]
 800ab36:	2b04      	cmp	r3, #4
 800ab38:	d006      	beq.n	800ab48 <GUI_MEMDEV_CreateEx+0x30>
 800ab3a:	6824      	ldr	r4, [r4, #0]
 800ab3c:	2c00      	cmp	r4, #0
 800ab3e:	d1f8      	bne.n	800ab32 <GUI_MEMDEV_CreateEx+0x1a>
 800ab40:	f003 ff3a 	bl	800e9b8 <GUI_DEVICE__GetpDriver>
 800ab44:	4604      	mov	r4, r0
 800ab46:	b130      	cbz	r0, 800ab56 <GUI_MEMDEV_CreateEx+0x3e>
 800ab48:	68e3      	ldr	r3, [r4, #12]
 800ab4a:	4620      	mov	r0, r4
 800ab4c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ab4e:	2101      	movs	r1, #1
 800ab50:	4798      	blx	r3
 800ab52:	4606      	mov	r6, r0
 800ab54:	b908      	cbnz	r0, 800ab5a <GUI_MEMDEV_CreateEx+0x42>
 800ab56:	2000      	movs	r0, #0
 800ab58:	e010      	b.n	800ab7c <GUI_MEMDEV_CreateEx+0x64>
 800ab5a:	6924      	ldr	r4, [r4, #16]
 800ab5c:	68a3      	ldr	r3, [r4, #8]
 800ab5e:	4798      	blx	r3
 800ab60:	3001      	adds	r0, #1
 800ab62:	bf04      	itt	eq
 800ab64:	f045 0501 	orreq.w	r5, r5, #1
 800ab68:	4c08      	ldreq	r4, [pc, #32]	; (800ab8c <GUI_MEMDEV_CreateEx+0x74>)
 800ab6a:	9402      	str	r4, [sp, #8]
 800ab6c:	e88d 0060 	stmia.w	sp, {r5, r6}
 800ab70:	4638      	mov	r0, r7
 800ab72:	4641      	mov	r1, r8
 800ab74:	464a      	mov	r2, r9
 800ab76:	4653      	mov	r3, sl
 800ab78:	f7ff ff14 	bl	800a9a4 <GUI_MEMDEV__CreateFixed>
 800ab7c:	b004      	add	sp, #16
 800ab7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ab82:	bf00      	nop
 800ab84:	20000274 	.word	0x20000274
 800ab88:	2001ba34 	.word	0x2001ba34
 800ab8c:	08017318 	.word	0x08017318

0800ab90 <GUI_MEMDEV_Select>:
 800ab90:	4b11      	ldr	r3, [pc, #68]	; (800abd8 <GUI_MEMDEV_Select+0x48>)
 800ab92:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ab94:	681a      	ldr	r2, [r3, #0]
 800ab96:	4604      	mov	r4, r0
 800ab98:	6e16      	ldr	r6, [r2, #96]	; 0x60
 800ab9a:	461f      	mov	r7, r3
 800ab9c:	b910      	cbnz	r0, 800aba4 <GUI_MEMDEV_Select+0x14>
 800ab9e:	f003 f84d 	bl	800dc3c <GUI_SelectLCD>
 800aba2:	e016      	b.n	800abd2 <GUI_MEMDEV_Select+0x42>
 800aba4:	b10e      	cbz	r6, 800abaa <GUI_MEMDEV_Select+0x1a>
 800aba6:	f003 f849 	bl	800dc3c <GUI_SelectLCD>
 800abaa:	f7fe ff37 	bl	8009a1c <WM_Deactivate>
 800abae:	4620      	mov	r0, r4
 800abb0:	f004 fc5c 	bl	800f46c <GUI_ALLOC_LockH>
 800abb4:	ad02      	add	r5, sp, #8
 800abb6:	683b      	ldr	r3, [r7, #0]
 800abb8:	f845 0d04 	str.w	r0, [r5, #-4]!
 800abbc:	661c      	str	r4, [r3, #96]	; 0x60
 800abbe:	6800      	ldr	r0, [r0, #0]
 800abc0:	f003 ff48 	bl	800ea54 <GUI_DEVICE_Link>
 800abc4:	4628      	mov	r0, r5
 800abc6:	f004 fc5f 	bl	800f488 <GUI_ALLOC_UnlockH>
 800abca:	f001 f8f1 	bl	800bdb0 <LCD_UpdateColorIndices>
 800abce:	f001 fd29 	bl	800c624 <LCD_SetClipRectMax>
 800abd2:	4630      	mov	r0, r6
 800abd4:	b003      	add	sp, #12
 800abd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800abd8:	20000274 	.word	0x20000274

0800abdc <GUI_MEMDEV_CopyToLCDAt>:
 800abdc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800abe0:	460c      	mov	r4, r1
 800abe2:	b085      	sub	sp, #20
 800abe4:	4615      	mov	r5, r2
 800abe6:	4606      	mov	r6, r0
 800abe8:	2800      	cmp	r0, #0
 800abea:	d041      	beq.n	800ac70 <GUI_MEMDEV_CopyToLCDAt+0x94>
 800abec:	2000      	movs	r0, #0
 800abee:	f002 ffc1 	bl	800db74 <GUI_SetDrawMode>
 800abf2:	4b21      	ldr	r3, [pc, #132]	; (800ac78 <GUI_MEMDEV_CopyToLCDAt+0x9c>)
 800abf4:	681b      	ldr	r3, [r3, #0]
 800abf6:	4607      	mov	r7, r0
 800abf8:	4630      	mov	r0, r6
 800abfa:	f8d3 8060 	ldr.w	r8, [r3, #96]	; 0x60
 800abfe:	f004 fc35 	bl	800f46c <GUI_ALLOC_LockH>
 800ac02:	6803      	ldr	r3, [r0, #0]
 800ac04:	9001      	str	r0, [sp, #4]
 800ac06:	6998      	ldr	r0, [r3, #24]
 800ac08:	f003 f800 	bl	800dc0c <GUI_SelectLayer>
 800ac0c:	4b1b      	ldr	r3, [pc, #108]	; (800ac7c <GUI_MEMDEV_CopyToLCDAt+0xa0>)
 800ac0e:	429c      	cmp	r4, r3
 800ac10:	9b01      	ldr	r3, [sp, #4]
 800ac12:	bf04      	itt	eq
 800ac14:	f9b3 4004 	ldrsheq.w	r4, [r3, #4]
 800ac18:	f9b3 5006 	ldrsheq.w	r5, [r3, #6]
 800ac1c:	891a      	ldrh	r2, [r3, #8]
 800ac1e:	895b      	ldrh	r3, [r3, #10]
 800ac20:	f8ad 4008 	strh.w	r4, [sp, #8]
 800ac24:	3a01      	subs	r2, #1
 800ac26:	3b01      	subs	r3, #1
 800ac28:	4422      	add	r2, r4
 800ac2a:	442b      	add	r3, r5
 800ac2c:	4681      	mov	r9, r0
 800ac2e:	f8ad 200c 	strh.w	r2, [sp, #12]
 800ac32:	f8ad 300e 	strh.w	r3, [sp, #14]
 800ac36:	f8ad 500a 	strh.w	r5, [sp, #10]
 800ac3a:	f7fe fee7 	bl	8009a0c <WM_Activate>
 800ac3e:	a801      	add	r0, sp, #4
 800ac40:	f004 fc22 	bl	800f488 <GUI_ALLOC_UnlockH>
 800ac44:	a802      	add	r0, sp, #8
 800ac46:	f7fe fcff 	bl	8009648 <WM__InitIVRSearch>
 800ac4a:	b948      	cbnz	r0, 800ac60 <GUI_MEMDEV_CopyToLCDAt+0x84>
 800ac4c:	4648      	mov	r0, r9
 800ac4e:	f002 ffdd 	bl	800dc0c <GUI_SelectLayer>
 800ac52:	4640      	mov	r0, r8
 800ac54:	f7ff ff9c 	bl	800ab90 <GUI_MEMDEV_Select>
 800ac58:	4638      	mov	r0, r7
 800ac5a:	f002 ff8b 	bl	800db74 <GUI_SetDrawMode>
 800ac5e:	e007      	b.n	800ac70 <GUI_MEMDEV_CopyToLCDAt+0x94>
 800ac60:	4630      	mov	r0, r6
 800ac62:	4621      	mov	r1, r4
 800ac64:	462a      	mov	r2, r5
 800ac66:	f006 fcdf 	bl	8011628 <GUI_MEMDEV__WriteToActiveOpaque>
 800ac6a:	f7fe fc2b 	bl	80094c4 <WM__GetNextIVR>
 800ac6e:	e7ec      	b.n	800ac4a <GUI_MEMDEV_CopyToLCDAt+0x6e>
 800ac70:	b005      	add	sp, #20
 800ac72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ac76:	bf00      	nop
 800ac78:	20000274 	.word	0x20000274
 800ac7c:	fffff001 	.word	0xfffff001

0800ac80 <GUI_MEMDEV_CopyToLCD>:
 800ac80:	4901      	ldr	r1, [pc, #4]	; (800ac88 <GUI_MEMDEV_CopyToLCD+0x8>)
 800ac82:	460a      	mov	r2, r1
 800ac84:	f7ff bfaa 	b.w	800abdc <GUI_MEMDEV_CopyToLCDAt>
 800ac88:	fffff001 	.word	0xfffff001

0800ac8c <_SetPhysRAMAddr>:
 800ac8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ac8e:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800ac90:	4604      	mov	r4, r0
 800ac92:	460e      	mov	r6, r1
 800ac94:	4615      	mov	r5, r2
 800ac96:	b15b      	cbz	r3, 800acb0 <_SetPhysRAMAddr+0x24>
 800ac98:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 800ac9c:	4798      	blx	r3
 800ac9e:	4631      	mov	r1, r6
 800aca0:	4607      	mov	r7, r0
 800aca2:	462a      	mov	r2, r5
 800aca4:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800aca8:	4620      	mov	r0, r4
 800acaa:	4798      	blx	r3
 800acac:	463e      	mov	r6, r7
 800acae:	4605      	mov	r5, r0
 800acb0:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800acb4:	4620      	mov	r0, r4
 800acb6:	212a      	movs	r1, #42	; 0x2a
 800acb8:	4798      	blx	r3
 800acba:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800acbc:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800acc0:	4431      	add	r1, r6
 800acc2:	4620      	mov	r0, r4
 800acc4:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800acc8:	4798      	blx	r3
 800acca:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800accc:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800acd0:	b2b7      	uxth	r7, r6
 800acd2:	4439      	add	r1, r7
 800acd4:	4620      	mov	r0, r4
 800acd6:	b2c9      	uxtb	r1, r1
 800acd8:	4798      	blx	r3
 800acda:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800acdc:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ace0:	4431      	add	r1, r6
 800ace2:	4620      	mov	r0, r4
 800ace4:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800ace8:	4798      	blx	r3
 800acea:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800acec:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800acf0:	4439      	add	r1, r7
 800acf2:	4620      	mov	r0, r4
 800acf4:	b2c9      	uxtb	r1, r1
 800acf6:	4798      	blx	r3
 800acf8:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800acfc:	4620      	mov	r0, r4
 800acfe:	212b      	movs	r1, #43	; 0x2b
 800ad00:	4798      	blx	r3
 800ad02:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ad04:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ad08:	4429      	add	r1, r5
 800ad0a:	4620      	mov	r0, r4
 800ad0c:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800ad10:	4798      	blx	r3
 800ad12:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ad14:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ad18:	b2ae      	uxth	r6, r5
 800ad1a:	4431      	add	r1, r6
 800ad1c:	4620      	mov	r0, r4
 800ad1e:	b2c9      	uxtb	r1, r1
 800ad20:	4798      	blx	r3
 800ad22:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ad24:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ad28:	4429      	add	r1, r5
 800ad2a:	4620      	mov	r0, r4
 800ad2c:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800ad30:	4798      	blx	r3
 800ad32:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ad34:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ad38:	4431      	add	r1, r6
 800ad3a:	4620      	mov	r0, r4
 800ad3c:	b2c9      	uxtb	r1, r1
 800ad3e:	4798      	blx	r3
 800ad40:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800ad44:	4620      	mov	r0, r4
 800ad46:	212c      	movs	r1, #44	; 0x2c
 800ad48:	4798      	blx	r3
 800ad4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800ad4c <_SetRect>:
 800ad4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ad50:	4698      	mov	r8, r3
 800ad52:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800ad54:	9f08      	ldr	r7, [sp, #32]
 800ad56:	4604      	mov	r4, r0
 800ad58:	4689      	mov	r9, r1
 800ad5a:	4615      	mov	r5, r2
 800ad5c:	2b00      	cmp	r3, #0
 800ad5e:	d064      	beq.n	800ae2a <_SetRect+0xde>
 800ad60:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 800ad64:	4798      	blx	r3
 800ad66:	463a      	mov	r2, r7
 800ad68:	4606      	mov	r6, r0
 800ad6a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800ad6e:	4641      	mov	r1, r8
 800ad70:	4620      	mov	r0, r4
 800ad72:	4798      	blx	r3
 800ad74:	462a      	mov	r2, r5
 800ad76:	4682      	mov	sl, r0
 800ad78:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800ad7c:	4649      	mov	r1, r9
 800ad7e:	4620      	mov	r0, r4
 800ad80:	4798      	blx	r3
 800ad82:	463a      	mov	r2, r7
 800ad84:	4605      	mov	r5, r0
 800ad86:	4641      	mov	r1, r8
 800ad88:	4620      	mov	r0, r4
 800ad8a:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800ad8e:	4798      	blx	r3
 800ad90:	45b2      	cmp	sl, r6
 800ad92:	4607      	mov	r7, r0
 800ad94:	db02      	blt.n	800ad9c <_SetRect+0x50>
 800ad96:	4653      	mov	r3, sl
 800ad98:	46b2      	mov	sl, r6
 800ad9a:	461e      	mov	r6, r3
 800ad9c:	42af      	cmp	r7, r5
 800ad9e:	db02      	blt.n	800ada6 <_SetRect+0x5a>
 800ada0:	463b      	mov	r3, r7
 800ada2:	462f      	mov	r7, r5
 800ada4:	461d      	mov	r5, r3
 800ada6:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800adaa:	4620      	mov	r0, r4
 800adac:	212a      	movs	r1, #42	; 0x2a
 800adae:	4798      	blx	r3
 800adb0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800adb2:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800adb6:	4451      	add	r1, sl
 800adb8:	4620      	mov	r0, r4
 800adba:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800adbe:	4798      	blx	r3
 800adc0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800adc2:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800adc6:	4451      	add	r1, sl
 800adc8:	4620      	mov	r0, r4
 800adca:	b2c9      	uxtb	r1, r1
 800adcc:	4798      	blx	r3
 800adce:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800add0:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800add4:	4431      	add	r1, r6
 800add6:	4620      	mov	r0, r4
 800add8:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800addc:	4798      	blx	r3
 800adde:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ade0:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ade4:	4431      	add	r1, r6
 800ade6:	4620      	mov	r0, r4
 800ade8:	b2c9      	uxtb	r1, r1
 800adea:	4798      	blx	r3
 800adec:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800adf0:	4620      	mov	r0, r4
 800adf2:	212b      	movs	r1, #43	; 0x2b
 800adf4:	4798      	blx	r3
 800adf6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800adf8:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800adfc:	4439      	add	r1, r7
 800adfe:	4620      	mov	r0, r4
 800ae00:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800ae04:	4798      	blx	r3
 800ae06:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ae08:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ae0c:	4439      	add	r1, r7
 800ae0e:	4620      	mov	r0, r4
 800ae10:	b2c9      	uxtb	r1, r1
 800ae12:	4798      	blx	r3
 800ae14:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ae16:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ae1a:	4429      	add	r1, r5
 800ae1c:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800ae20:	4620      	mov	r0, r4
 800ae22:	4798      	blx	r3
 800ae24:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ae26:	4429      	add	r1, r5
 800ae28:	e03f      	b.n	800aeaa <_SetRect+0x15e>
 800ae2a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800ae2e:	212a      	movs	r1, #42	; 0x2a
 800ae30:	4798      	blx	r3
 800ae32:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ae34:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ae38:	4449      	add	r1, r9
 800ae3a:	4620      	mov	r0, r4
 800ae3c:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800ae40:	4798      	blx	r3
 800ae42:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ae44:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ae48:	4449      	add	r1, r9
 800ae4a:	4620      	mov	r0, r4
 800ae4c:	b2c9      	uxtb	r1, r1
 800ae4e:	4798      	blx	r3
 800ae50:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ae52:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ae56:	4441      	add	r1, r8
 800ae58:	4620      	mov	r0, r4
 800ae5a:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800ae5e:	4798      	blx	r3
 800ae60:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ae62:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ae66:	4441      	add	r1, r8
 800ae68:	4620      	mov	r0, r4
 800ae6a:	b2c9      	uxtb	r1, r1
 800ae6c:	4798      	blx	r3
 800ae6e:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800ae72:	4620      	mov	r0, r4
 800ae74:	212b      	movs	r1, #43	; 0x2b
 800ae76:	4798      	blx	r3
 800ae78:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ae7a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ae7e:	4429      	add	r1, r5
 800ae80:	4620      	mov	r0, r4
 800ae82:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800ae86:	4798      	blx	r3
 800ae88:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ae8a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ae8e:	4429      	add	r1, r5
 800ae90:	4620      	mov	r0, r4
 800ae92:	b2c9      	uxtb	r1, r1
 800ae94:	4798      	blx	r3
 800ae96:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ae98:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ae9c:	4439      	add	r1, r7
 800ae9e:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800aea2:	4620      	mov	r0, r4
 800aea4:	4798      	blx	r3
 800aea6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800aea8:	4439      	add	r1, r7
 800aeaa:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800aeae:	4620      	mov	r0, r4
 800aeb0:	b2c9      	uxtb	r1, r1
 800aeb2:	4798      	blx	r3
 800aeb4:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800aeb8:	4620      	mov	r0, r4
 800aeba:	212c      	movs	r1, #44	; 0x2c
 800aebc:	4798      	blx	r3
 800aebe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800aec4 <_SetOrientation>:
 800aec4:	b513      	push	{r0, r1, r4, lr}
 800aec6:	4a0d      	ldr	r2, [pc, #52]	; (800aefc <_SetOrientation+0x38>)
 800aec8:	4604      	mov	r4, r0
 800aeca:	6851      	ldr	r1, [r2, #4]
 800aecc:	6810      	ldr	r0, [r2, #0]
 800aece:	466b      	mov	r3, sp
 800aed0:	c303      	stmia	r3!, {r0, r1}
 800aed2:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800aed6:	4620      	mov	r0, r4
 800aed8:	2136      	movs	r1, #54	; 0x36
 800aeda:	4798      	blx	r3
 800aedc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800aede:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 800aee0:	aa02      	add	r2, sp, #8
 800aee2:	4413      	add	r3, r2
 800aee4:	f021 01e0 	bic.w	r1, r1, #224	; 0xe0
 800aee8:	f813 3c08 	ldrb.w	r3, [r3, #-8]
 800aeec:	4319      	orrs	r1, r3
 800aeee:	4620      	mov	r0, r4
 800aef0:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800aef4:	b289      	uxth	r1, r1
 800aef6:	4798      	blx	r3
 800aef8:	b002      	add	sp, #8
 800aefa:	bd10      	pop	{r4, pc}
 800aefc:	08015cd0 	.word	0x08015cd0

0800af00 <_ReadPixel_16bpp_B8>:
 800af00:	b513      	push	{r0, r1, r4, lr}
 800af02:	4604      	mov	r4, r0
 800af04:	f8d0 310c 	ldr.w	r3, [r0, #268]	; 0x10c
 800af08:	202e      	movs	r0, #46	; 0x2e
 800af0a:	4798      	blx	r3
 800af0c:	6a21      	ldr	r1, [r4, #32]
 800af0e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800af12:	4668      	mov	r0, sp
 800af14:	3103      	adds	r1, #3
 800af16:	4798      	blx	r3
 800af18:	6a22      	ldr	r2, [r4, #32]
 800af1a:	ab00      	add	r3, sp, #0
 800af1c:	4413      	add	r3, r2
 800af1e:	f81d 2002 	ldrb.w	r2, [sp, r2]
 800af22:	7859      	ldrb	r1, [r3, #1]
 800af24:	7898      	ldrb	r0, [r3, #2]
 800af26:	08d2      	lsrs	r2, r2, #3
 800af28:	0889      	lsrs	r1, r1, #2
 800af2a:	02d2      	lsls	r2, r2, #11
 800af2c:	ea42 1241 	orr.w	r2, r2, r1, lsl #5
 800af30:	ea42 00d0 	orr.w	r0, r2, r0, lsr #3
 800af34:	b002      	add	sp, #8
 800af36:	bd10      	pop	{r4, pc}

0800af38 <_ReadPixel_16bpp_B16_I>:
 800af38:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800af3a:	4604      	mov	r4, r0
 800af3c:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800af40:	202e      	movs	r0, #46	; 0x2e
 800af42:	4798      	blx	r3
 800af44:	6a21      	ldr	r1, [r4, #32]
 800af46:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800af4a:	4668      	mov	r0, sp
 800af4c:	3102      	adds	r1, #2
 800af4e:	4798      	blx	r3
 800af50:	6a23      	ldr	r3, [r4, #32]
 800af52:	a900      	add	r1, sp, #0
 800af54:	eb01 0243 	add.w	r2, r1, r3, lsl #1
 800af58:	f83d 0013 	ldrh.w	r0, [sp, r3, lsl #1]
 800af5c:	8852      	ldrh	r2, [r2, #2]
 800af5e:	f402 417c 	and.w	r1, r2, #64512	; 0xfc00
 800af62:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 800af66:	ea42 1251 	orr.w	r2, r2, r1, lsr #5
 800af6a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 800af6e:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
 800af72:	b004      	add	sp, #16
 800af74:	bd10      	pop	{r4, pc}

0800af76 <_SetReg_B8>:
 800af76:	b538      	push	{r3, r4, r5, lr}
 800af78:	4604      	mov	r4, r0
 800af7a:	460d      	mov	r5, r1
 800af7c:	f8d0 310c 	ldr.w	r3, [r0, #268]	; 0x10c
 800af80:	0a08      	lsrs	r0, r1, #8
 800af82:	4798      	blx	r3
 800af84:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800af88:	b2e8      	uxtb	r0, r5
 800af8a:	4798      	blx	r3
 800af8c:	bd38      	pop	{r3, r4, r5, pc}

0800af8e <_SetReg_B16>:
 800af8e:	b508      	push	{r3, lr}
 800af90:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800af94:	4608      	mov	r0, r1
 800af96:	4798      	blx	r3
 800af98:	bd08      	pop	{r3, pc}

0800af9a <_WritePara_B8>:
 800af9a:	b508      	push	{r3, lr}
 800af9c:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
 800afa0:	b2c8      	uxtb	r0, r1
 800afa2:	4798      	blx	r3
 800afa4:	bd08      	pop	{r3, pc}

0800afa6 <_WritePara_B16>:
 800afa6:	b508      	push	{r3, lr}
 800afa8:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800afac:	4608      	mov	r0, r1
 800afae:	4798      	blx	r3
 800afb0:	bd08      	pop	{r3, pc}
	...

0800afb4 <_SetInterface>:
 800afb4:	2908      	cmp	r1, #8
 800afb6:	d002      	beq.n	800afbe <_SetInterface+0xa>
 800afb8:	2910      	cmp	r1, #16
 800afba:	d005      	beq.n	800afc8 <_SetInterface+0x14>
 800afbc:	4770      	bx	lr
 800afbe:	4b06      	ldr	r3, [pc, #24]	; (800afd8 <_SetInterface+0x24>)
 800afc0:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 800afc4:	4b05      	ldr	r3, [pc, #20]	; (800afdc <_SetInterface+0x28>)
 800afc6:	e003      	b.n	800afd0 <_SetInterface+0x1c>
 800afc8:	4b05      	ldr	r3, [pc, #20]	; (800afe0 <_SetInterface+0x2c>)
 800afca:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 800afce:	4b05      	ldr	r3, [pc, #20]	; (800afe4 <_SetInterface+0x30>)
 800afd0:	f8c0 3090 	str.w	r3, [r0, #144]	; 0x90
 800afd4:	4770      	bx	lr
 800afd6:	bf00      	nop
 800afd8:	0800af77 	.word	0x0800af77
 800afdc:	0800af9b 	.word	0x0800af9b
 800afe0:	0800af8f 	.word	0x0800af8f
 800afe4:	0800afa7 	.word	0x0800afa7

0800afe8 <_ReadRect_16bpp_B8>:
 800afe8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800afea:	b085      	sub	sp, #20
 800afec:	6884      	ldr	r4, [r0, #8]
 800afee:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800aff0:	9700      	str	r7, [sp, #0]
 800aff2:	1abd      	subs	r5, r7, r2
 800aff4:	1a58      	subs	r0, r3, r1
 800aff6:	3501      	adds	r5, #1
 800aff8:	fb00 5505 	mla	r5, r0, r5, r5
 800affc:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800b000:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800b002:	4620      	mov	r0, r4
 800b004:	47b8      	blx	r7
 800b006:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800b00a:	202e      	movs	r0, #46	; 0x2e
 800b00c:	4798      	blx	r3
 800b00e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800b012:	6a21      	ldr	r1, [r4, #32]
 800b014:	a802      	add	r0, sp, #8
 800b016:	4798      	blx	r3
 800b018:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800b01c:	a802      	add	r0, sp, #8
 800b01e:	2103      	movs	r1, #3
 800b020:	4798      	blx	r3
 800b022:	f89d 3008 	ldrb.w	r3, [sp, #8]
 800b026:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800b02a:	08db      	lsrs	r3, r3, #3
 800b02c:	0892      	lsrs	r2, r2, #2
 800b02e:	02db      	lsls	r3, r3, #11
 800b030:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800b034:	f89d 200a 	ldrb.w	r2, [sp, #10]
 800b038:	3d01      	subs	r5, #1
 800b03a:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 800b03e:	f826 3b02 	strh.w	r3, [r6], #2
 800b042:	d1e9      	bne.n	800b018 <_ReadRect_16bpp_B8+0x30>
 800b044:	b005      	add	sp, #20
 800b046:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b048 <_ReadRect_16bpp_B16_I>:
 800b048:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b04a:	b087      	sub	sp, #28
 800b04c:	6884      	ldr	r4, [r0, #8]
 800b04e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 800b050:	9700      	str	r7, [sp, #0]
 800b052:	1abd      	subs	r5, r7, r2
 800b054:	1a58      	subs	r0, r3, r1
 800b056:	3501      	adds	r5, #1
 800b058:	fb00 5505 	mla	r5, r0, r5, r5
 800b05c:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800b060:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 800b062:	4620      	mov	r0, r4
 800b064:	47b8      	blx	r7
 800b066:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800b06a:	202e      	movs	r0, #46	; 0x2e
 800b06c:	4798      	blx	r3
 800b06e:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800b072:	6a21      	ldr	r1, [r4, #32]
 800b074:	a802      	add	r0, sp, #8
 800b076:	4798      	blx	r3
 800b078:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800b07c:	a802      	add	r0, sp, #8
 800b07e:	2102      	movs	r1, #2
 800b080:	4798      	blx	r3
 800b082:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800b086:	f403 427c 	and.w	r2, r3, #64512	; 0xfc00
 800b08a:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 800b08e:	ea43 1352 	orr.w	r3, r3, r2, lsr #5
 800b092:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800b096:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 800b09a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800b09e:	3d01      	subs	r5, #1
 800b0a0:	f826 3b02 	strh.w	r3, [r6], #2
 800b0a4:	d1e8      	bne.n	800b078 <_ReadRect_16bpp_B16_I+0x30>
 800b0a6:	b007      	add	sp, #28
 800b0a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800b0ac <GUIDRV_FlexColor_SetFunc66720>:
 800b0ac:	b510      	push	{r4, lr}
 800b0ae:	4604      	mov	r4, r0
 800b0b0:	f000 fda6 	bl	800bc00 <GUIDRV_FlexColor__InitOnce>
 800b0b4:	68a3      	ldr	r3, [r4, #8]
 800b0b6:	4a12      	ldr	r2, [pc, #72]	; (800b100 <GUIDRV_FlexColor_SetFunc66720+0x54>)
 800b0b8:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
 800b0bc:	4a11      	ldr	r2, [pc, #68]	; (800b104 <GUIDRV_FlexColor_SetFunc66720+0x58>)
 800b0be:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
 800b0c2:	4a11      	ldr	r2, [pc, #68]	; (800b108 <GUIDRV_FlexColor_SetFunc66720+0x5c>)
 800b0c4:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
 800b0c8:	4a10      	ldr	r2, [pc, #64]	; (800b10c <GUIDRV_FlexColor_SetFunc66720+0x60>)
 800b0ca:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 800b0ce:	2200      	movs	r2, #0
 800b0d0:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800b0d4:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
 800b0d8:	4a0d      	ldr	r2, [pc, #52]	; (800b110 <GUIDRV_FlexColor_SetFunc66720+0x64>)
 800b0da:	490e      	ldr	r1, [pc, #56]	; (800b114 <GUIDRV_FlexColor_SetFunc66720+0x68>)
 800b0dc:	6812      	ldr	r2, [r2, #0]
 800b0de:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 800b0e2:	8cda      	ldrh	r2, [r3, #38]	; 0x26
 800b0e4:	6809      	ldr	r1, [r1, #0]
 800b0e6:	f8c3 10b4 	str.w	r1, [r3, #180]	; 0xb4
 800b0ea:	f022 0203 	bic.w	r2, r2, #3
 800b0ee:	490a      	ldr	r1, [pc, #40]	; (800b118 <GUIDRV_FlexColor_SetFunc66720+0x6c>)
 800b0f0:	84da      	strh	r2, [r3, #38]	; 0x26
 800b0f2:	4a0a      	ldr	r2, [pc, #40]	; (800b11c <GUIDRV_FlexColor_SetFunc66720+0x70>)
 800b0f4:	f8c3 10c8 	str.w	r1, [r3, #200]	; 0xc8
 800b0f8:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 800b0fc:	bd10      	pop	{r4, pc}
 800b0fe:	bf00      	nop
 800b100:	0800ac8d 	.word	0x0800ac8d
 800b104:	0800ad4d 	.word	0x0800ad4d
 800b108:	0800aec5 	.word	0x0800aec5
 800b10c:	0800af01 	.word	0x0800af01
 800b110:	20000254 	.word	0x20000254
 800b114:	20000250 	.word	0x20000250
 800b118:	0800afe9 	.word	0x0800afe9
 800b11c:	0800afb5 	.word	0x0800afb5

0800b120 <_ReadData>:
 800b120:	b508      	push	{r3, lr}
 800b122:	f8d0 30b4 	ldr.w	r3, [r0, #180]	; 0xb4
 800b126:	4798      	blx	r3
 800b128:	bd08      	pop	{r3, pc}

0800b12a <_WriteData>:
 800b12a:	b508      	push	{r3, lr}
 800b12c:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800b130:	b288      	uxth	r0, r1
 800b132:	4798      	blx	r3
 800b134:	bd08      	pop	{r3, pc}
	...

0800b138 <_FillRect>:
 800b138:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b13c:	4f3d      	ldr	r7, [pc, #244]	; (800b234 <_FillRect+0xfc>)
 800b13e:	6884      	ldr	r4, [r0, #8]
 800b140:	4682      	mov	sl, r0
 800b142:	6838      	ldr	r0, [r7, #0]
 800b144:	7c00      	ldrb	r0, [r0, #16]
 800b146:	f010 0f01 	tst.w	r0, #1
 800b14a:	b085      	sub	sp, #20
 800b14c:	460e      	mov	r6, r1
 800b14e:	4615      	mov	r5, r2
 800b150:	4698      	mov	r8, r3
 800b152:	ebc1 0903 	rsb	r9, r1, r3
 800b156:	d045      	beq.n	800b1e4 <_FillRect+0xac>
 800b158:	ea4f 0b49 	mov.w	fp, r9, lsl #1
 800b15c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800b15e:	4285      	cmp	r5, r0
 800b160:	dc65      	bgt.n	800b22e <_FillRect+0xf6>
 800b162:	f8d4 c0c4 	ldr.w	ip, [r4, #196]	; 0xc4
 800b166:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800b168:	f1bc 0f00 	cmp.w	ip, #0
 800b16c:	d101      	bne.n	800b172 <_FillRect+0x3a>
 800b16e:	46b4      	mov	ip, r6
 800b170:	e007      	b.n	800b182 <_FillRect+0x4a>
 800b172:	e88d 00a0 	stmia.w	sp, {r5, r7}
 800b176:	4650      	mov	r0, sl
 800b178:	4631      	mov	r1, r6
 800b17a:	462a      	mov	r2, r5
 800b17c:	4643      	mov	r3, r8
 800b17e:	47e0      	blx	ip
 800b180:	e011      	b.n	800b1a6 <_FillRect+0x6e>
 800b182:	45c4      	cmp	ip, r8
 800b184:	dc0e      	bgt.n	800b1a4 <_FillRect+0x6c>
 800b186:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
 800b18a:	f8cd c00c 	str.w	ip, [sp, #12]
 800b18e:	4661      	mov	r1, ip
 800b190:	4650      	mov	r0, sl
 800b192:	462a      	mov	r2, r5
 800b194:	4798      	blx	r3
 800b196:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800b19a:	f827 0b02 	strh.w	r0, [r7], #2
 800b19e:	f10c 0c01 	add.w	ip, ip, #1
 800b1a2:	e7ee      	b.n	800b182 <_FillRect+0x4a>
 800b1a4:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800b1a6:	1ebb      	subs	r3, r7, #2
 800b1a8:	f109 0c01 	add.w	ip, r9, #1
 800b1ac:	445f      	add	r7, fp
 800b1ae:	42bb      	cmp	r3, r7
 800b1b0:	d005      	beq.n	800b1be <_FillRect+0x86>
 800b1b2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800b1b4:	8859      	ldrh	r1, [r3, #2]
 800b1b6:	404a      	eors	r2, r1
 800b1b8:	f823 2f02 	strh.w	r2, [r3, #2]!
 800b1bc:	e7f7      	b.n	800b1ae <_FillRect+0x76>
 800b1be:	9500      	str	r5, [sp, #0]
 800b1c0:	462a      	mov	r2, r5
 800b1c2:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800b1c6:	f8cd c00c 	str.w	ip, [sp, #12]
 800b1ca:	4620      	mov	r0, r4
 800b1cc:	4631      	mov	r1, r6
 800b1ce:	4643      	mov	r3, r8
 800b1d0:	47b8      	blx	r7
 800b1d2:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800b1d6:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800b1da:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800b1dc:	4661      	mov	r1, ip
 800b1de:	4798      	blx	r3
 800b1e0:	3501      	adds	r5, #1
 800b1e2:	e7bb      	b.n	800b15c <_FillRect+0x24>
 800b1e4:	980e      	ldr	r0, [sp, #56]	; 0x38
 800b1e6:	9000      	str	r0, [sp, #0]
 800b1e8:	1a85      	subs	r5, r0, r2
 800b1ea:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800b1ee:	4620      	mov	r0, r4
 800b1f0:	47b0      	blx	r6
 800b1f2:	683b      	ldr	r3, [r7, #0]
 800b1f4:	6ea7      	ldr	r7, [r4, #104]	; 0x68
 800b1f6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b1f8:	f109 0901 	add.w	r9, r9, #1
 800b1fc:	f8d3 8000 	ldr.w	r8, [r3]
 800b200:	fb05 9509 	mla	r5, r5, r9, r9
 800b204:	2301      	movs	r3, #1
 800b206:	b195      	cbz	r5, 800b22e <_FillRect+0xf6>
 800b208:	2dfa      	cmp	r5, #250	; 0xfa
 800b20a:	bf34      	ite	cc
 800b20c:	462e      	movcc	r6, r5
 800b20e:	26fa      	movcs	r6, #250	; 0xfa
 800b210:	b12b      	cbz	r3, 800b21e <_FillRect+0xe6>
 800b212:	4638      	mov	r0, r7
 800b214:	fa1f f188 	uxth.w	r1, r8
 800b218:	4632      	mov	r2, r6
 800b21a:	f001 fac5 	bl	800c7a8 <GUI__memset16>
 800b21e:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800b222:	4638      	mov	r0, r7
 800b224:	4631      	mov	r1, r6
 800b226:	4798      	blx	r3
 800b228:	1bad      	subs	r5, r5, r6
 800b22a:	2300      	movs	r3, #0
 800b22c:	e7eb      	b.n	800b206 <_FillRect+0xce>
 800b22e:	b005      	add	sp, #20
 800b230:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b234:	20000274 	.word	0x20000274

0800b238 <_DrawBitmap>:
 800b238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b23c:	b08d      	sub	sp, #52	; 0x34
 800b23e:	6885      	ldr	r5, [r0, #8]
 800b240:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800b242:	9305      	str	r3, [sp, #20]
 800b244:	1e7b      	subs	r3, r7, #1
 800b246:	2b01      	cmp	r3, #1
 800b248:	9009      	str	r0, [sp, #36]	; 0x24
 800b24a:	9108      	str	r1, [sp, #32]
 800b24c:	920a      	str	r2, [sp, #40]	; 0x28
 800b24e:	950b      	str	r5, [sp, #44]	; 0x2c
 800b250:	d903      	bls.n	800b25a <_DrawBitmap+0x22>
 800b252:	2f04      	cmp	r7, #4
 800b254:	d001      	beq.n	800b25a <_DrawBitmap+0x22>
 800b256:	2f08      	cmp	r7, #8
 800b258:	d106      	bne.n	800b268 <_DrawBitmap+0x30>
 800b25a:	4b8f      	ldr	r3, [pc, #572]	; (800b498 <_DrawBitmap+0x260>)
 800b25c:	681b      	ldr	r3, [r3, #0]
 800b25e:	7c1b      	ldrb	r3, [r3, #16]
 800b260:	f003 0303 	and.w	r3, r3, #3
 800b264:	2b02      	cmp	r3, #2
 800b266:	d010      	beq.n	800b28a <_DrawBitmap+0x52>
 800b268:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b26a:	9f16      	ldr	r7, [sp, #88]	; 0x58
 800b26c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800b26e:	9908      	ldr	r1, [sp, #32]
 800b270:	9b05      	ldr	r3, [sp, #20]
 800b272:	443a      	add	r2, r7
 800b274:	4429      	add	r1, r5
 800b276:	3a01      	subs	r2, #1
 800b278:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800b27a:	9200      	str	r2, [sp, #0]
 800b27c:	440b      	add	r3, r1
 800b27e:	f8d5 40a8 	ldr.w	r4, [r5, #168]	; 0xa8
 800b282:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b284:	4628      	mov	r0, r5
 800b286:	3b01      	subs	r3, #1
 800b288:	47a0      	blx	r4
 800b28a:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800b28e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800b290:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800b292:	ebc7 030b 	rsb	r3, r7, fp
 800b296:	42ab      	cmp	r3, r5
 800b298:	f280 8251 	bge.w	800b73e <_DrawBitmap+0x506>
 800b29c:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800b29e:	1e7b      	subs	r3, r7, #1
 800b2a0:	2b0f      	cmp	r3, #15
 800b2a2:	f200 8245 	bhi.w	800b730 <_DrawBitmap+0x4f8>
 800b2a6:	e8df f013 	tbh	[pc, r3, lsl #1]
 800b2aa:	0010      	.short	0x0010
 800b2ac:	024300b7 	.word	0x024300b7
 800b2b0:	02430140 	.word	0x02430140
 800b2b4:	02430243 	.word	0x02430243
 800b2b8:	024301d7 	.word	0x024301d7
 800b2bc:	02430243 	.word	0x02430243
 800b2c0:	02430243 	.word	0x02430243
 800b2c4:	02430243 	.word	0x02430243
 800b2c8:	023d      	.short	0x023d
 800b2ca:	4b73      	ldr	r3, [pc, #460]	; (800b498 <_DrawBitmap+0x260>)
 800b2cc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800b2ce:	681b      	ldr	r3, [r3, #0]
 800b2d0:	68ac      	ldr	r4, [r5, #8]
 800b2d2:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800b2d4:	7c1b      	ldrb	r3, [r3, #16]
 800b2d6:	682f      	ldr	r7, [r5, #0]
 800b2d8:	686d      	ldr	r5, [r5, #4]
 800b2da:	9507      	str	r5, [sp, #28]
 800b2dc:	f8dd a020 	ldr.w	sl, [sp, #32]
 800b2e0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800b2e2:	f003 0303 	and.w	r3, r3, #3
 800b2e6:	2b02      	cmp	r3, #2
 800b2e8:	44aa      	add	sl, r5
 800b2ea:	d01b      	beq.n	800b324 <_DrawBitmap+0xec>
 800b2ec:	2b03      	cmp	r3, #3
 800b2ee:	d06e      	beq.n	800b3ce <_DrawBitmap+0x196>
 800b2f0:	2b01      	cmp	r3, #1
 800b2f2:	d06c      	beq.n	800b3ce <_DrawBitmap+0x196>
 800b2f4:	9e05      	ldr	r6, [sp, #20]
 800b2f6:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
 800b2fa:	f898 1000 	ldrb.w	r1, [r8]
 800b2fe:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800b302:	2280      	movs	r2, #128	; 0x80
 800b304:	412a      	asrs	r2, r5
 800b306:	4211      	tst	r1, r2
 800b308:	bf16      	itet	ne
 800b30a:	9907      	ldrne	r1, [sp, #28]
 800b30c:	b2b8      	uxtheq	r0, r7
 800b30e:	b288      	uxthne	r0, r1
 800b310:	3501      	adds	r5, #1
 800b312:	4798      	blx	r3
 800b314:	2d08      	cmp	r5, #8
 800b316:	bf04      	itt	eq
 800b318:	f108 0801 	addeq.w	r8, r8, #1
 800b31c:	2500      	moveq	r5, #0
 800b31e:	3e01      	subs	r6, #1
 800b320:	d1eb      	bne.n	800b2fa <_DrawBitmap+0xc2>
 800b322:	e205      	b.n	800b730 <_DrawBitmap+0x4f8>
 800b324:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800b326:	9506      	str	r5, [sp, #24]
 800b328:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 800b32c:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800b330:	f8cd a00c 	str.w	sl, [sp, #12]
 800b334:	2500      	movs	r5, #0
 800b336:	4656      	mov	r6, sl
 800b338:	462b      	mov	r3, r5
 800b33a:	9f06      	ldr	r7, [sp, #24]
 800b33c:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800b340:	783a      	ldrb	r2, [r7, #0]
 800b342:	fa4c fc08 	asr.w	ip, ip, r8
 800b346:	ea12 0c0c 	ands.w	ip, r2, ip
 800b34a:	d00b      	beq.n	800b364 <_DrawBitmap+0x12c>
 800b34c:	b913      	cbnz	r3, 800b354 <_DrawBitmap+0x11c>
 800b34e:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 800b352:	9603      	str	r6, [sp, #12]
 800b354:	9f07      	ldr	r7, [sp, #28]
 800b356:	f8a9 7000 	strh.w	r7, [r9]
 800b35a:	3501      	adds	r5, #1
 800b35c:	f109 0902 	add.w	r9, r9, #2
 800b360:	2301      	movs	r3, #1
 800b362:	e017      	b.n	800b394 <_DrawBitmap+0x15c>
 800b364:	2b01      	cmp	r3, #1
 800b366:	d114      	bne.n	800b392 <_DrawBitmap+0x15a>
 800b368:	f8cd b000 	str.w	fp, [sp]
 800b36c:	f8cd c010 	str.w	ip, [sp, #16]
 800b370:	4620      	mov	r0, r4
 800b372:	9903      	ldr	r1, [sp, #12]
 800b374:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800b378:	465a      	mov	r2, fp
 800b37a:	1e73      	subs	r3, r6, #1
 800b37c:	47b8      	blx	r7
 800b37e:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800b382:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800b384:	4629      	mov	r1, r5
 800b386:	4798      	blx	r3
 800b388:	f8dd c010 	ldr.w	ip, [sp, #16]
 800b38c:	4665      	mov	r5, ip
 800b38e:	4663      	mov	r3, ip
 800b390:	e000      	b.n	800b394 <_DrawBitmap+0x15c>
 800b392:	4663      	mov	r3, ip
 800b394:	f108 0801 	add.w	r8, r8, #1
 800b398:	f1b8 0f08 	cmp.w	r8, #8
 800b39c:	f106 0601 	add.w	r6, r6, #1
 800b3a0:	d104      	bne.n	800b3ac <_DrawBitmap+0x174>
 800b3a2:	9f06      	ldr	r7, [sp, #24]
 800b3a4:	3701      	adds	r7, #1
 800b3a6:	9706      	str	r7, [sp, #24]
 800b3a8:	f04f 0800 	mov.w	r8, #0
 800b3ac:	9a05      	ldr	r2, [sp, #20]
 800b3ae:	4452      	add	r2, sl
 800b3b0:	42b2      	cmp	r2, r6
 800b3b2:	d1c2      	bne.n	800b33a <_DrawBitmap+0x102>
 800b3b4:	9f05      	ldr	r7, [sp, #20]
 800b3b6:	1e7b      	subs	r3, r7, #1
 800b3b8:	4453      	add	r3, sl
 800b3ba:	2d00      	cmp	r5, #0
 800b3bc:	f000 81b8 	beq.w	800b730 <_DrawBitmap+0x4f8>
 800b3c0:	f8cd b000 	str.w	fp, [sp]
 800b3c4:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800b3c8:	9903      	ldr	r1, [sp, #12]
 800b3ca:	4620      	mov	r0, r4
 800b3cc:	e13d      	b.n	800b64a <_DrawBitmap+0x412>
 800b3ce:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800b3d2:	9e1a      	ldr	r6, [sp, #104]	; 0x68
 800b3d4:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800b3d6:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800b3da:	782a      	ldrb	r2, [r5, #0]
 800b3dc:	2380      	movs	r3, #128	; 0x80
 800b3de:	4133      	asrs	r3, r6
 800b3e0:	44d1      	add	r9, sl
 800b3e2:	421a      	tst	r2, r3
 800b3e4:	ebc8 0909 	rsb	r9, r8, r9
 800b3e8:	d00d      	beq.n	800b406 <_DrawBitmap+0x1ce>
 800b3ea:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
 800b3ee:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b3f0:	4649      	mov	r1, r9
 800b3f2:	465a      	mov	r2, fp
 800b3f4:	4798      	blx	r3
 800b3f6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800b3f8:	f8d4 70f0 	ldr.w	r7, [r4, #240]	; 0xf0
 800b3fc:	4043      	eors	r3, r0
 800b3fe:	4649      	mov	r1, r9
 800b400:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b402:	465a      	mov	r2, fp
 800b404:	47b8      	blx	r7
 800b406:	3601      	adds	r6, #1
 800b408:	2e08      	cmp	r6, #8
 800b40a:	bf04      	itt	eq
 800b40c:	3501      	addeq	r5, #1
 800b40e:	2600      	moveq	r6, #0
 800b410:	f1b8 0801 	subs.w	r8, r8, #1
 800b414:	d1df      	bne.n	800b3d6 <_DrawBitmap+0x19e>
 800b416:	e18b      	b.n	800b730 <_DrawBitmap+0x4f8>
 800b418:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800b41a:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800b41c:	68ac      	ldr	r4, [r5, #8]
 800b41e:	2f00      	cmp	r7, #0
 800b420:	f000 8186 	beq.w	800b730 <_DrawBitmap+0x4f8>
 800b424:	4b1c      	ldr	r3, [pc, #112]	; (800b498 <_DrawBitmap+0x260>)
 800b426:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800b428:	681b      	ldr	r3, [r3, #0]
 800b42a:	f895 a000 	ldrb.w	sl, [r5]
 800b42e:	7c1b      	ldrb	r3, [r3, #16]
 800b430:	f013 0303 	ands.w	r3, r3, #3
 800b434:	d011      	beq.n	800b45a <_DrawBitmap+0x222>
 800b436:	2b02      	cmp	r3, #2
 800b438:	f040 817a 	bne.w	800b730 <_DrawBitmap+0x4f8>
 800b43c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800b43e:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800b442:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800b444:	9703      	str	r7, [sp, #12]
 800b446:	44a9      	add	r9, r5
 800b448:	46a8      	mov	r8, r5
 800b44a:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800b44c:	9507      	str	r5, [sp, #28]
 800b44e:	2500      	movs	r5, #0
 800b450:	f8cd 9018 	str.w	r9, [sp, #24]
 800b454:	464e      	mov	r6, r9
 800b456:	462b      	mov	r3, r5
 800b458:	e040      	b.n	800b4dc <_DrawBitmap+0x2a4>
 800b45a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800b45c:	9e05      	ldr	r6, [sp, #20]
 800b45e:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800b460:	f1c5 0303 	rsb	r3, r5, #3
 800b464:	005b      	lsls	r3, r3, #1
 800b466:	f1c3 0206 	rsb	r2, r3, #6
 800b46a:	21c0      	movs	r1, #192	; 0xc0
 800b46c:	fa41 f202 	asr.w	r2, r1, r2
 800b470:	ea02 020a 	and.w	r2, r2, sl
 800b474:	40da      	lsrs	r2, r3
 800b476:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b478:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800b47c:	f831 0022 	ldrh.w	r0, [r1, r2, lsl #2]
 800b480:	3501      	adds	r5, #1
 800b482:	4798      	blx	r3
 800b484:	2d04      	cmp	r5, #4
 800b486:	d103      	bne.n	800b490 <_DrawBitmap+0x258>
 800b488:	f897 a001 	ldrb.w	sl, [r7, #1]
 800b48c:	2500      	movs	r5, #0
 800b48e:	3701      	adds	r7, #1
 800b490:	3e01      	subs	r6, #1
 800b492:	d1e5      	bne.n	800b460 <_DrawBitmap+0x228>
 800b494:	e14c      	b.n	800b730 <_DrawBitmap+0x4f8>
 800b496:	bf00      	nop
 800b498:	20000274 	.word	0x20000274
 800b49c:	b913      	cbnz	r3, 800b4a4 <_DrawBitmap+0x26c>
 800b49e:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800b4a0:	9703      	str	r7, [sp, #12]
 800b4a2:	9606      	str	r6, [sp, #24]
 800b4a4:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800b4a6:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 800b4aa:	9f03      	ldr	r7, [sp, #12]
 800b4ac:	803b      	strh	r3, [r7, #0]
 800b4ae:	3702      	adds	r7, #2
 800b4b0:	3501      	adds	r5, #1
 800b4b2:	9703      	str	r7, [sp, #12]
 800b4b4:	2301      	movs	r3, #1
 800b4b6:	f108 0801 	add.w	r8, r8, #1
 800b4ba:	f1b8 0f04 	cmp.w	r8, #4
 800b4be:	f106 0601 	add.w	r6, r6, #1
 800b4c2:	d106      	bne.n	800b4d2 <_DrawBitmap+0x29a>
 800b4c4:	9f07      	ldr	r7, [sp, #28]
 800b4c6:	f897 a001 	ldrb.w	sl, [r7, #1]
 800b4ca:	3701      	adds	r7, #1
 800b4cc:	9707      	str	r7, [sp, #28]
 800b4ce:	f04f 0800 	mov.w	r8, #0
 800b4d2:	9a05      	ldr	r2, [sp, #20]
 800b4d4:	444a      	add	r2, r9
 800b4d6:	42b2      	cmp	r2, r6
 800b4d8:	f000 80ac 	beq.w	800b634 <_DrawBitmap+0x3fc>
 800b4dc:	f1c8 0203 	rsb	r2, r8, #3
 800b4e0:	0052      	lsls	r2, r2, #1
 800b4e2:	f1c2 0106 	rsb	r1, r2, #6
 800b4e6:	f04f 0cc0 	mov.w	ip, #192	; 0xc0
 800b4ea:	fa4c fc01 	asr.w	ip, ip, r1
 800b4ee:	ea0c 0c0a 	and.w	ip, ip, sl
 800b4f2:	fa3c fc02 	lsrs.w	ip, ip, r2
 800b4f6:	d1d1      	bne.n	800b49c <_DrawBitmap+0x264>
 800b4f8:	2b01      	cmp	r3, #1
 800b4fa:	d114      	bne.n	800b526 <_DrawBitmap+0x2ee>
 800b4fc:	f8cd b000 	str.w	fp, [sp]
 800b500:	f8cd c010 	str.w	ip, [sp, #16]
 800b504:	4620      	mov	r0, r4
 800b506:	9906      	ldr	r1, [sp, #24]
 800b508:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800b50c:	465a      	mov	r2, fp
 800b50e:	1e73      	subs	r3, r6, #1
 800b510:	47b8      	blx	r7
 800b512:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800b516:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800b518:	4629      	mov	r1, r5
 800b51a:	4798      	blx	r3
 800b51c:	f8dd c010 	ldr.w	ip, [sp, #16]
 800b520:	4665      	mov	r5, ip
 800b522:	4663      	mov	r3, ip
 800b524:	e7c7      	b.n	800b4b6 <_DrawBitmap+0x27e>
 800b526:	4663      	mov	r3, ip
 800b528:	e7c5      	b.n	800b4b6 <_DrawBitmap+0x27e>
 800b52a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800b52c:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800b52e:	68ac      	ldr	r4, [r5, #8]
 800b530:	2f00      	cmp	r7, #0
 800b532:	f000 80fd 	beq.w	800b730 <_DrawBitmap+0x4f8>
 800b536:	4b83      	ldr	r3, [pc, #524]	; (800b744 <_DrawBitmap+0x50c>)
 800b538:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800b53a:	681b      	ldr	r3, [r3, #0]
 800b53c:	f895 a000 	ldrb.w	sl, [r5]
 800b540:	7c1b      	ldrb	r3, [r3, #16]
 800b542:	f013 0303 	ands.w	r3, r3, #3
 800b546:	d011      	beq.n	800b56c <_DrawBitmap+0x334>
 800b548:	2b02      	cmp	r3, #2
 800b54a:	f040 80f1 	bne.w	800b730 <_DrawBitmap+0x4f8>
 800b54e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800b550:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800b554:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800b556:	9703      	str	r7, [sp, #12]
 800b558:	44a9      	add	r9, r5
 800b55a:	46a8      	mov	r8, r5
 800b55c:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800b55e:	9507      	str	r5, [sp, #28]
 800b560:	2500      	movs	r5, #0
 800b562:	f8cd 9018 	str.w	r9, [sp, #24]
 800b566:	464e      	mov	r6, r9
 800b568:	462b      	mov	r3, r5
 800b56a:	e03c      	b.n	800b5e6 <_DrawBitmap+0x3ae>
 800b56c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800b56e:	9e05      	ldr	r6, [sp, #20]
 800b570:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800b572:	f1c5 0301 	rsb	r3, r5, #1
 800b576:	009b      	lsls	r3, r3, #2
 800b578:	f1c3 0204 	rsb	r2, r3, #4
 800b57c:	21f0      	movs	r1, #240	; 0xf0
 800b57e:	fa41 f202 	asr.w	r2, r1, r2
 800b582:	ea02 020a 	and.w	r2, r2, sl
 800b586:	40da      	lsrs	r2, r3
 800b588:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b58a:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800b58e:	f831 0022 	ldrh.w	r0, [r1, r2, lsl #2]
 800b592:	3501      	adds	r5, #1
 800b594:	4798      	blx	r3
 800b596:	2d02      	cmp	r5, #2
 800b598:	d103      	bne.n	800b5a2 <_DrawBitmap+0x36a>
 800b59a:	f897 a001 	ldrb.w	sl, [r7, #1]
 800b59e:	2500      	movs	r5, #0
 800b5a0:	3701      	adds	r7, #1
 800b5a2:	3e01      	subs	r6, #1
 800b5a4:	d1e5      	bne.n	800b572 <_DrawBitmap+0x33a>
 800b5a6:	e0c3      	b.n	800b730 <_DrawBitmap+0x4f8>
 800b5a8:	b913      	cbnz	r3, 800b5b0 <_DrawBitmap+0x378>
 800b5aa:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800b5ac:	9703      	str	r7, [sp, #12]
 800b5ae:	9606      	str	r6, [sp, #24]
 800b5b0:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800b5b2:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 800b5b6:	9f03      	ldr	r7, [sp, #12]
 800b5b8:	803b      	strh	r3, [r7, #0]
 800b5ba:	3702      	adds	r7, #2
 800b5bc:	3501      	adds	r5, #1
 800b5be:	9703      	str	r7, [sp, #12]
 800b5c0:	2301      	movs	r3, #1
 800b5c2:	f108 0801 	add.w	r8, r8, #1
 800b5c6:	f1b8 0f02 	cmp.w	r8, #2
 800b5ca:	f106 0601 	add.w	r6, r6, #1
 800b5ce:	d106      	bne.n	800b5de <_DrawBitmap+0x3a6>
 800b5d0:	9f07      	ldr	r7, [sp, #28]
 800b5d2:	f897 a001 	ldrb.w	sl, [r7, #1]
 800b5d6:	3701      	adds	r7, #1
 800b5d8:	9707      	str	r7, [sp, #28]
 800b5da:	f04f 0800 	mov.w	r8, #0
 800b5de:	9a05      	ldr	r2, [sp, #20]
 800b5e0:	444a      	add	r2, r9
 800b5e2:	42b2      	cmp	r2, r6
 800b5e4:	d026      	beq.n	800b634 <_DrawBitmap+0x3fc>
 800b5e6:	f1c8 0201 	rsb	r2, r8, #1
 800b5ea:	0092      	lsls	r2, r2, #2
 800b5ec:	f1c2 0104 	rsb	r1, r2, #4
 800b5f0:	f04f 0cf0 	mov.w	ip, #240	; 0xf0
 800b5f4:	fa4c fc01 	asr.w	ip, ip, r1
 800b5f8:	ea0c 0c0a 	and.w	ip, ip, sl
 800b5fc:	fa3c fc02 	lsrs.w	ip, ip, r2
 800b600:	d1d2      	bne.n	800b5a8 <_DrawBitmap+0x370>
 800b602:	2b01      	cmp	r3, #1
 800b604:	d114      	bne.n	800b630 <_DrawBitmap+0x3f8>
 800b606:	f8cd b000 	str.w	fp, [sp]
 800b60a:	f8cd c010 	str.w	ip, [sp, #16]
 800b60e:	4620      	mov	r0, r4
 800b610:	9906      	ldr	r1, [sp, #24]
 800b612:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800b616:	465a      	mov	r2, fp
 800b618:	1e73      	subs	r3, r6, #1
 800b61a:	47b8      	blx	r7
 800b61c:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800b620:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800b622:	4629      	mov	r1, r5
 800b624:	4798      	blx	r3
 800b626:	f8dd c010 	ldr.w	ip, [sp, #16]
 800b62a:	4665      	mov	r5, ip
 800b62c:	4663      	mov	r3, ip
 800b62e:	e7c8      	b.n	800b5c2 <_DrawBitmap+0x38a>
 800b630:	4663      	mov	r3, ip
 800b632:	e7c6      	b.n	800b5c2 <_DrawBitmap+0x38a>
 800b634:	9f05      	ldr	r7, [sp, #20]
 800b636:	1e7b      	subs	r3, r7, #1
 800b638:	444b      	add	r3, r9
 800b63a:	2d00      	cmp	r5, #0
 800b63c:	d078      	beq.n	800b730 <_DrawBitmap+0x4f8>
 800b63e:	f8cd b000 	str.w	fp, [sp]
 800b642:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800b646:	9906      	ldr	r1, [sp, #24]
 800b648:	4620      	mov	r0, r4
 800b64a:	465a      	mov	r2, fp
 800b64c:	47b0      	blx	r6
 800b64e:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800b652:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800b654:	4629      	mov	r1, r5
 800b656:	e06a      	b.n	800b72e <_DrawBitmap+0x4f6>
 800b658:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800b65a:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800b65c:	68ac      	ldr	r4, [r5, #8]
 800b65e:	2f00      	cmp	r7, #0
 800b660:	d066      	beq.n	800b730 <_DrawBitmap+0x4f8>
 800b662:	4b38      	ldr	r3, [pc, #224]	; (800b744 <_DrawBitmap+0x50c>)
 800b664:	681b      	ldr	r3, [r3, #0]
 800b666:	7c1b      	ldrb	r3, [r3, #16]
 800b668:	f013 0303 	ands.w	r3, r3, #3
 800b66c:	d009      	beq.n	800b682 <_DrawBitmap+0x44a>
 800b66e:	2b02      	cmp	r3, #2
 800b670:	d15e      	bne.n	800b730 <_DrawBitmap+0x4f8>
 800b672:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800b676:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 800b67a:	2600      	movs	r6, #0
 800b67c:	464f      	mov	r7, r9
 800b67e:	4633      	mov	r3, r6
 800b680:	e022      	b.n	800b6c8 <_DrawBitmap+0x490>
 800b682:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800b684:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b686:	9f05      	ldr	r7, [sp, #20]
 800b688:	443b      	add	r3, r7
 800b68a:	1b5b      	subs	r3, r3, r5
 800b68c:	2b00      	cmp	r3, #0
 800b68e:	dd4f      	ble.n	800b730 <_DrawBitmap+0x4f8>
 800b690:	f815 2b01 	ldrb.w	r2, [r5], #1
 800b694:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800b696:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800b69a:	f837 0022 	ldrh.w	r0, [r7, r2, lsl #2]
 800b69e:	4798      	blx	r3
 800b6a0:	e7f0      	b.n	800b684 <_DrawBitmap+0x44c>
 800b6a2:	b913      	cbnz	r3, 800b6aa <_DrawBitmap+0x472>
 800b6a4:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 800b6a8:	46b9      	mov	r9, r7
 800b6aa:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800b6ac:	f855 302a 	ldr.w	r3, [r5, sl, lsl #2]
 800b6b0:	f8a8 3000 	strh.w	r3, [r8]
 800b6b4:	3601      	adds	r6, #1
 800b6b6:	f108 0802 	add.w	r8, r8, #2
 800b6ba:	2301      	movs	r3, #1
 800b6bc:	9a08      	ldr	r2, [sp, #32]
 800b6be:	9d05      	ldr	r5, [sp, #20]
 800b6c0:	3701      	adds	r7, #1
 800b6c2:	442a      	add	r2, r5
 800b6c4:	42ba      	cmp	r2, r7
 800b6c6:	d01c      	beq.n	800b702 <_DrawBitmap+0x4ca>
 800b6c8:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800b6ca:	9808      	ldr	r0, [sp, #32]
 800b6cc:	1a2a      	subs	r2, r5, r0
 800b6ce:	f812 a007 	ldrb.w	sl, [r2, r7]
 800b6d2:	f1ba 0f00 	cmp.w	sl, #0
 800b6d6:	d1e4      	bne.n	800b6a2 <_DrawBitmap+0x46a>
 800b6d8:	2b01      	cmp	r3, #1
 800b6da:	d110      	bne.n	800b6fe <_DrawBitmap+0x4c6>
 800b6dc:	f8cd b000 	str.w	fp, [sp]
 800b6e0:	4620      	mov	r0, r4
 800b6e2:	4649      	mov	r1, r9
 800b6e4:	465a      	mov	r2, fp
 800b6e6:	1e7b      	subs	r3, r7, #1
 800b6e8:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 800b6ec:	47a8      	blx	r5
 800b6ee:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800b6f2:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800b6f4:	4631      	mov	r1, r6
 800b6f6:	4798      	blx	r3
 800b6f8:	4656      	mov	r6, sl
 800b6fa:	4653      	mov	r3, sl
 800b6fc:	e7de      	b.n	800b6bc <_DrawBitmap+0x484>
 800b6fe:	4653      	mov	r3, sl
 800b700:	e7dc      	b.n	800b6bc <_DrawBitmap+0x484>
 800b702:	9f08      	ldr	r7, [sp, #32]
 800b704:	1e6b      	subs	r3, r5, #1
 800b706:	443b      	add	r3, r7
 800b708:	b196      	cbz	r6, 800b730 <_DrawBitmap+0x4f8>
 800b70a:	f8cd b000 	str.w	fp, [sp]
 800b70e:	4620      	mov	r0, r4
 800b710:	4649      	mov	r1, r9
 800b712:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 800b716:	465a      	mov	r2, fp
 800b718:	47a8      	blx	r5
 800b71a:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800b71e:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800b720:	4631      	mov	r1, r6
 800b722:	e004      	b.n	800b72e <_DrawBitmap+0x4f6>
 800b724:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800b726:	9819      	ldr	r0, [sp, #100]	; 0x64
 800b728:	f8d5 3138 	ldr.w	r3, [r5, #312]	; 0x138
 800b72c:	9905      	ldr	r1, [sp, #20]
 800b72e:	4798      	blx	r3
 800b730:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800b732:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800b734:	442f      	add	r7, r5
 800b736:	9719      	str	r7, [sp, #100]	; 0x64
 800b738:	f10b 0b01 	add.w	fp, fp, #1
 800b73c:	e5a7      	b.n	800b28e <_DrawBitmap+0x56>
 800b73e:	b00d      	add	sp, #52	; 0x34
 800b740:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b744:	20000274 	.word	0x20000274

0800b748 <GUIDRV_FlexColor_SetMode16bppC0B16>:
 800b748:	b510      	push	{r4, lr}
 800b74a:	4604      	mov	r4, r0
 800b74c:	f000 fa58 	bl	800bc00 <GUIDRV_FlexColor__InitOnce>
 800b750:	68a4      	ldr	r4, [r4, #8]
 800b752:	4b10      	ldr	r3, [pc, #64]	; (800b794 <GUIDRV_FlexColor_SetMode16bppC0B16+0x4c>)
 800b754:	f8c4 30e4 	str.w	r3, [r4, #228]	; 0xe4
 800b758:	4b0f      	ldr	r3, [pc, #60]	; (800b798 <GUIDRV_FlexColor_SetMode16bppC0B16+0x50>)
 800b75a:	f8c4 30e8 	str.w	r3, [r4, #232]	; 0xe8
 800b75e:	4b0f      	ldr	r3, [pc, #60]	; (800b79c <GUIDRV_FlexColor_SetMode16bppC0B16+0x54>)
 800b760:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 800b764:	4b0e      	ldr	r3, [pc, #56]	; (800b7a0 <GUIDRV_FlexColor_SetMode16bppC0B16+0x58>)
 800b766:	f8c4 30f0 	str.w	r3, [r4, #240]	; 0xf0
 800b76a:	4b0e      	ldr	r3, [pc, #56]	; (800b7a4 <GUIDRV_FlexColor_SetMode16bppC0B16+0x5c>)
 800b76c:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 800b770:	4b0d      	ldr	r3, [pc, #52]	; (800b7a8 <GUIDRV_FlexColor_SetMode16bppC0B16+0x60>)
 800b772:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
 800b776:	f8d4 30c4 	ldr.w	r3, [r4, #196]	; 0xc4
 800b77a:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
 800b77e:	4620      	mov	r0, r4
 800b780:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800b784:	2110      	movs	r1, #16
 800b786:	4798      	blx	r3
 800b788:	2310      	movs	r3, #16
 800b78a:	63a3      	str	r3, [r4, #56]	; 0x38
 800b78c:	4b07      	ldr	r3, [pc, #28]	; (800b7ac <GUIDRV_FlexColor_SetMode16bppC0B16+0x64>)
 800b78e:	6463      	str	r3, [r4, #68]	; 0x44
 800b790:	bd10      	pop	{r4, pc}
 800b792:	bf00      	nop
 800b794:	0800b239 	.word	0x0800b239
 800b798:	0800b139 	.word	0x0800b139
 800b79c:	0800bb4f 	.word	0x0800bb4f
 800b7a0:	0800babf 	.word	0x0800babf
 800b7a4:	0800b121 	.word	0x0800b121
 800b7a8:	0800b12b 	.word	0x0800b12b
 800b7ac:	080173b4 	.word	0x080173b4

0800b7b0 <_Log2PhysX_X0Y0S0>:
 800b7b0:	4608      	mov	r0, r1
 800b7b2:	4770      	bx	lr

0800b7b4 <_Log2PhysX_X1Y0S0>:
 800b7b4:	6800      	ldr	r0, [r0, #0]
 800b7b6:	1a40      	subs	r0, r0, r1
 800b7b8:	3801      	subs	r0, #1
 800b7ba:	4770      	bx	lr

0800b7bc <_Log2PhysX_X0Y1S0>:
 800b7bc:	4608      	mov	r0, r1
 800b7be:	4770      	bx	lr

0800b7c0 <_Log2PhysX_X1Y1S0>:
 800b7c0:	6800      	ldr	r0, [r0, #0]
 800b7c2:	1a40      	subs	r0, r0, r1
 800b7c4:	3801      	subs	r0, #1
 800b7c6:	4770      	bx	lr

0800b7c8 <_Log2PhysX_X0Y0S1>:
 800b7c8:	4610      	mov	r0, r2
 800b7ca:	4770      	bx	lr

0800b7cc <_Log2PhysX_X1Y0S1>:
 800b7cc:	6840      	ldr	r0, [r0, #4]
 800b7ce:	1a80      	subs	r0, r0, r2
 800b7d0:	3801      	subs	r0, #1
 800b7d2:	4770      	bx	lr

0800b7d4 <_Log2PhysX_X0Y1S1>:
 800b7d4:	4610      	mov	r0, r2
 800b7d6:	4770      	bx	lr

0800b7d8 <_Log2PhysX_X1Y1S1>:
 800b7d8:	6840      	ldr	r0, [r0, #4]
 800b7da:	1a80      	subs	r0, r0, r2
 800b7dc:	3801      	subs	r0, #1
 800b7de:	4770      	bx	lr

0800b7e0 <_Log2PhysY_X0Y0S0>:
 800b7e0:	4610      	mov	r0, r2
 800b7e2:	4770      	bx	lr

0800b7e4 <_Log2PhysY_X1Y0S0>:
 800b7e4:	4610      	mov	r0, r2
 800b7e6:	4770      	bx	lr

0800b7e8 <_Log2PhysY_X0Y1S0>:
 800b7e8:	6840      	ldr	r0, [r0, #4]
 800b7ea:	1a80      	subs	r0, r0, r2
 800b7ec:	3801      	subs	r0, #1
 800b7ee:	4770      	bx	lr

0800b7f0 <_Log2PhysY_X1Y1S0>:
 800b7f0:	6840      	ldr	r0, [r0, #4]
 800b7f2:	1a80      	subs	r0, r0, r2
 800b7f4:	3801      	subs	r0, #1
 800b7f6:	4770      	bx	lr

0800b7f8 <_Log2PhysY_X0Y0S1>:
 800b7f8:	4608      	mov	r0, r1
 800b7fa:	4770      	bx	lr

0800b7fc <_Log2PhysY_X1Y0S1>:
 800b7fc:	4608      	mov	r0, r1
 800b7fe:	4770      	bx	lr

0800b800 <_Log2PhysY_X0Y1S1>:
 800b800:	6800      	ldr	r0, [r0, #0]
 800b802:	1a40      	subs	r0, r0, r1
 800b804:	3801      	subs	r0, #1
 800b806:	4770      	bx	lr

0800b808 <_Log2PhysY_X1Y1S1>:
 800b808:	6800      	ldr	r0, [r0, #0]
 800b80a:	1a40      	subs	r0, r0, r1
 800b80c:	3801      	subs	r0, #1
 800b80e:	4770      	bx	lr

0800b810 <_SetPixelIndex>:
 800b810:	b510      	push	{r4, lr}
 800b812:	6884      	ldr	r4, [r0, #8]
 800b814:	f8d4 40f0 	ldr.w	r4, [r4, #240]	; 0xf0
 800b818:	47a0      	blx	r4
 800b81a:	bd10      	pop	{r4, pc}

0800b81c <_GetPixelIndex>:
 800b81c:	b508      	push	{r3, lr}
 800b81e:	6883      	ldr	r3, [r0, #8]
 800b820:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800b824:	4798      	blx	r3
 800b826:	bd08      	pop	{r3, pc}

0800b828 <_XorPixel>:
 800b828:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b82a:	4604      	mov	r4, r0
 800b82c:	460f      	mov	r7, r1
 800b82e:	4616      	mov	r6, r2
 800b830:	6885      	ldr	r5, [r0, #8]
 800b832:	f7ff fff3 	bl	800b81c <_GetPixelIndex>
 800b836:	9001      	str	r0, [sp, #4]
 800b838:	f8dd e004 	ldr.w	lr, [sp, #4]
 800b83c:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800b83e:	4620      	mov	r0, r4
 800b840:	4639      	mov	r1, r7
 800b842:	4632      	mov	r2, r6
 800b844:	ea8e 0303 	eor.w	r3, lr, r3
 800b848:	f7ff ffe2 	bl	800b810 <_SetPixelIndex>
 800b84c:	b003      	add	sp, #12
 800b84e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b850 <_DrawHLine>:
 800b850:	b513      	push	{r0, r1, r4, lr}
 800b852:	6884      	ldr	r4, [r0, #8]
 800b854:	9200      	str	r2, [sp, #0]
 800b856:	f8d4 40e8 	ldr.w	r4, [r4, #232]	; 0xe8
 800b85a:	47a0      	blx	r4
 800b85c:	b002      	add	sp, #8
 800b85e:	bd10      	pop	{r4, pc}

0800b860 <_DrawVLine>:
 800b860:	b513      	push	{r0, r1, r4, lr}
 800b862:	6884      	ldr	r4, [r0, #8]
 800b864:	9300      	str	r3, [sp, #0]
 800b866:	f8d4 40e8 	ldr.w	r4, [r4, #232]	; 0xe8
 800b86a:	460b      	mov	r3, r1
 800b86c:	47a0      	blx	r4
 800b86e:	b002      	add	sp, #8
 800b870:	bd10      	pop	{r4, pc}

0800b872 <_FillRect>:
 800b872:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b874:	9c06      	ldr	r4, [sp, #24]
 800b876:	6885      	ldr	r5, [r0, #8]
 800b878:	9400      	str	r4, [sp, #0]
 800b87a:	f8d5 40e8 	ldr.w	r4, [r5, #232]	; 0xe8
 800b87e:	47a0      	blx	r4
 800b880:	b003      	add	sp, #12
 800b882:	bd30      	pop	{r4, r5, pc}

0800b884 <_DrawBitmap>:
 800b884:	b530      	push	{r4, r5, lr}
 800b886:	b087      	sub	sp, #28
 800b888:	6885      	ldr	r5, [r0, #8]
 800b88a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800b88c:	9400      	str	r4, [sp, #0]
 800b88e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800b890:	9401      	str	r4, [sp, #4]
 800b892:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800b894:	9402      	str	r4, [sp, #8]
 800b896:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800b898:	9403      	str	r4, [sp, #12]
 800b89a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800b89c:	9404      	str	r4, [sp, #16]
 800b89e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800b8a0:	9405      	str	r4, [sp, #20]
 800b8a2:	f8d5 40e4 	ldr.w	r4, [r5, #228]	; 0xe4
 800b8a6:	47a0      	blx	r4
 800b8a8:	b007      	add	sp, #28
 800b8aa:	bd30      	pop	{r4, r5, pc}

0800b8ac <_GetDevFunc_SetRect>:
 800b8ac:	4770      	bx	lr
	...

0800b8b0 <_GetDevFunc_SetRectOutside>:
 800b8b0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b8b2:	9e07      	ldr	r6, [sp, #28]
 800b8b4:	6884      	ldr	r4, [r0, #8]
 800b8b6:	4d0c      	ldr	r5, [pc, #48]	; (800b8e8 <_GetDevFunc_SetRectOutside+0x38>)
 800b8b8:	b176      	cbz	r6, 800b8d8 <_GetDevFunc_SetRectOutside+0x28>
 800b8ba:	6828      	ldr	r0, [r5, #0]
 800b8bc:	b988      	cbnz	r0, 800b8e2 <_GetDevFunc_SetRectOutside+0x32>
 800b8be:	9806      	ldr	r0, [sp, #24]
 800b8c0:	9000      	str	r0, [sp, #0]
 800b8c2:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800b8c6:	4620      	mov	r0, r4
 800b8c8:	47b0      	blx	r6
 800b8ca:	f8d4 30a8 	ldr.w	r3, [r4, #168]	; 0xa8
 800b8ce:	602b      	str	r3, [r5, #0]
 800b8d0:	4b06      	ldr	r3, [pc, #24]	; (800b8ec <_GetDevFunc_SetRectOutside+0x3c>)
 800b8d2:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800b8d6:	e004      	b.n	800b8e2 <_GetDevFunc_SetRectOutside+0x32>
 800b8d8:	682b      	ldr	r3, [r5, #0]
 800b8da:	b113      	cbz	r3, 800b8e2 <_GetDevFunc_SetRectOutside+0x32>
 800b8dc:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800b8e0:	602e      	str	r6, [r5, #0]
 800b8e2:	b002      	add	sp, #8
 800b8e4:	bd70      	pop	{r4, r5, r6, pc}
 800b8e6:	bf00      	nop
 800b8e8:	20019d00 	.word	0x20019d00
 800b8ec:	0800b8ad 	.word	0x0800b8ad

0800b8f0 <_ReadPixelCust_16bpp>:
 800b8f0:	b508      	push	{r3, lr}
 800b8f2:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800b8f4:	f8d0 30d4 	ldr.w	r3, [r0, #212]	; 0xd4
 800b8f8:	6990      	ldr	r0, [r2, #24]
 800b8fa:	4798      	blx	r3
 800b8fc:	bd08      	pop	{r3, pc}

0800b8fe <_ReadPixelCust_18bpp>:
 800b8fe:	b508      	push	{r3, lr}
 800b900:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800b902:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
 800b906:	6990      	ldr	r0, [r2, #24]
 800b908:	4798      	blx	r3
 800b90a:	bd08      	pop	{r3, pc}

0800b90c <_ReadRectCust_16bpp>:
 800b90c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b910:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800b912:	6884      	ldr	r4, [r0, #8]
 800b914:	9500      	str	r5, [sp, #0]
 800b916:	4617      	mov	r7, r2
 800b918:	4620      	mov	r0, r4
 800b91a:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800b91e:	4699      	mov	r9, r3
 800b920:	4688      	mov	r8, r1
 800b922:	1bed      	subs	r5, r5, r7
 800b924:	47b0      	blx	r6
 800b926:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800b928:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 800b92c:	6988      	ldr	r0, [r1, #24]
 800b92e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b930:	ebc8 0809 	rsb	r8, r8, r9
 800b934:	1c6a      	adds	r2, r5, #1
 800b936:	fb08 2202 	mla	r2, r8, r2, r2
 800b93a:	4798      	blx	r3
 800b93c:	b003      	add	sp, #12
 800b93e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800b942 <_ReadRectCust_18bpp>:
 800b942:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b946:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800b948:	6884      	ldr	r4, [r0, #8]
 800b94a:	9500      	str	r5, [sp, #0]
 800b94c:	4617      	mov	r7, r2
 800b94e:	4620      	mov	r0, r4
 800b950:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800b954:	4699      	mov	r9, r3
 800b956:	4688      	mov	r8, r1
 800b958:	1bed      	subs	r5, r5, r7
 800b95a:	47b0      	blx	r6
 800b95c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800b95e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 800b962:	6988      	ldr	r0, [r1, #24]
 800b964:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b966:	ebc8 0809 	rsb	r8, r8, r9
 800b96a:	1c6a      	adds	r2, r5, #1
 800b96c:	fb08 2202 	mla	r2, r8, r2, r2
 800b970:	4798      	blx	r3
 800b972:	b003      	add	sp, #12
 800b974:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800b978 <_GetDevFunc>:
 800b978:	3901      	subs	r1, #1
 800b97a:	2917      	cmp	r1, #23
 800b97c:	d824      	bhi.n	800b9c8 <_GetDevFunc+0x50>
 800b97e:	e8df f001 	tbb	[pc, r1]
 800b982:	2310      	.short	0x2310
 800b984:	23232323 	.word	0x23232323
 800b988:	0c232323 	.word	0x0c232323
 800b98c:	23150e25 	.word	0x23150e25
 800b990:	23232323 	.word	0x23232323
 800b994:	1f232323 	.word	0x1f232323
 800b998:	211a      	.short	0x211a
 800b99a:	480d      	ldr	r0, [pc, #52]	; (800b9d0 <_GetDevFunc+0x58>)
 800b99c:	4770      	bx	lr
 800b99e:	480d      	ldr	r0, [pc, #52]	; (800b9d4 <_GetDevFunc+0x5c>)
 800b9a0:	4770      	bx	lr
 800b9a2:	6803      	ldr	r3, [r0, #0]
 800b9a4:	689b      	ldr	r3, [r3, #8]
 800b9a6:	f8d3 00fc 	ldr.w	r0, [r3, #252]	; 0xfc
 800b9aa:	4770      	bx	lr
 800b9ac:	6803      	ldr	r3, [r0, #0]
 800b9ae:	689b      	ldr	r3, [r3, #8]
 800b9b0:	f8d3 00f4 	ldr.w	r0, [r3, #244]	; 0xf4
 800b9b4:	4770      	bx	lr
 800b9b6:	6803      	ldr	r3, [r0, #0]
 800b9b8:	689b      	ldr	r3, [r3, #8]
 800b9ba:	f8d3 00f8 	ldr.w	r0, [r3, #248]	; 0xf8
 800b9be:	4770      	bx	lr
 800b9c0:	4805      	ldr	r0, [pc, #20]	; (800b9d8 <_GetDevFunc+0x60>)
 800b9c2:	4770      	bx	lr
 800b9c4:	4805      	ldr	r0, [pc, #20]	; (800b9dc <_GetDevFunc+0x64>)
 800b9c6:	4770      	bx	lr
 800b9c8:	2000      	movs	r0, #0
 800b9ca:	4770      	bx	lr
 800b9cc:	4804      	ldr	r0, [pc, #16]	; (800b9e0 <_GetDevFunc+0x68>)
 800b9ce:	4770      	bx	lr
 800b9d0:	0800bd2f 	.word	0x0800bd2f
 800b9d4:	0800bcd1 	.word	0x0800bcd1
 800b9d8:	0800bc35 	.word	0x0800bc35
 800b9dc:	0800b8b1 	.word	0x0800b8b1
 800b9e0:	0800bd1b 	.word	0x0800bd1b

0800b9e4 <_GetDevProp>:
 800b9e4:	3901      	subs	r1, #1
 800b9e6:	6880      	ldr	r0, [r0, #8]
 800b9e8:	290d      	cmp	r1, #13
 800b9ea:	d823      	bhi.n	800ba34 <_GetDevProp+0x50>
 800b9ec:	e8df f001 	tbb	[pc, r1]
 800b9f0:	0f0d0b09 	.word	0x0f0d0b09
 800b9f4:	11222222 	.word	0x11222222
 800b9f8:	13252507 	.word	0x13252507
 800b9fc:	1d18      	.short	0x1d18
 800b9fe:	2000      	movs	r0, #0
 800ba00:	4770      	bx	lr
 800ba02:	6800      	ldr	r0, [r0, #0]
 800ba04:	4770      	bx	lr
 800ba06:	6840      	ldr	r0, [r0, #4]
 800ba08:	4770      	bx	lr
 800ba0a:	6880      	ldr	r0, [r0, #8]
 800ba0c:	4770      	bx	lr
 800ba0e:	68c0      	ldr	r0, [r0, #12]
 800ba10:	4770      	bx	lr
 800ba12:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800ba14:	4770      	bx	lr
 800ba16:	b188      	cbz	r0, 800ba3c <_GetDevProp+0x58>
 800ba18:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800ba1a:	f000 0001 	and.w	r0, r0, #1
 800ba1e:	4770      	bx	lr
 800ba20:	b160      	cbz	r0, 800ba3c <_GetDevProp+0x58>
 800ba22:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800ba24:	f3c0 0040 	ubfx	r0, r0, #1, #1
 800ba28:	4770      	bx	lr
 800ba2a:	b138      	cbz	r0, 800ba3c <_GetDevProp+0x58>
 800ba2c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800ba2e:	f3c0 0080 	ubfx	r0, r0, #2, #1
 800ba32:	4770      	bx	lr
 800ba34:	f04f 30ff 	mov.w	r0, #4294967295
 800ba38:	4770      	bx	lr
 800ba3a:	2001      	movs	r0, #1
 800ba3c:	4770      	bx	lr

0800ba3e <_GetDevData>:
 800ba3e:	6883      	ldr	r3, [r0, #8]
 800ba40:	2901      	cmp	r1, #1
 800ba42:	bf0c      	ite	eq
 800ba44:	6c58      	ldreq	r0, [r3, #68]	; 0x44
 800ba46:	2000      	movne	r0, #0
 800ba48:	4770      	bx	lr

0800ba4a <_GetRect>:
 800ba4a:	6883      	ldr	r3, [r0, #8]
 800ba4c:	2200      	movs	r2, #0
 800ba4e:	800a      	strh	r2, [r1, #0]
 800ba50:	804a      	strh	r2, [r1, #2]
 800ba52:	681a      	ldr	r2, [r3, #0]
 800ba54:	685b      	ldr	r3, [r3, #4]
 800ba56:	3a01      	subs	r2, #1
 800ba58:	3b01      	subs	r3, #1
 800ba5a:	808a      	strh	r2, [r1, #4]
 800ba5c:	80cb      	strh	r3, [r1, #6]
 800ba5e:	4770      	bx	lr

0800ba60 <GUIDRV_FlexColor__SetLog2Phys>:
 800ba60:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ba62:	4d10      	ldr	r5, [pc, #64]	; (800baa4 <GUIDRV_FlexColor__SetLog2Phys+0x44>)
 800ba64:	462e      	mov	r6, r5
 800ba66:	4607      	mov	r7, r0
 800ba68:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800ba6a:	b091      	sub	sp, #68	; 0x44
 800ba6c:	466c      	mov	r4, sp
 800ba6e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ba70:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 800ba74:	3520      	adds	r5, #32
 800ba76:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800ba7a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ba7c:	ac08      	add	r4, sp, #32
 800ba7e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ba80:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800ba84:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800ba88:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ba8a:	aa10      	add	r2, sp, #64	; 0x40
 800ba8c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800ba90:	f853 2c40 	ldr.w	r2, [r3, #-64]
 800ba94:	f8c7 2100 	str.w	r2, [r7, #256]	; 0x100
 800ba98:	f853 3c20 	ldr.w	r3, [r3, #-32]
 800ba9c:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 800baa0:	b011      	add	sp, #68	; 0x44
 800baa2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800baa4:	08015cd8 	.word	0x08015cd8

0800baa8 <_SetOrg>:
 800baa8:	b507      	push	{r0, r1, r2, lr}
 800baaa:	6980      	ldr	r0, [r0, #24]
 800baac:	e88d 0006 	stmia.w	sp, {r1, r2}
 800bab0:	2103      	movs	r1, #3
 800bab2:	466a      	mov	r2, sp
 800bab4:	f7f9 fcd4 	bl	8005460 <LCD_X_DisplayDriver>
 800bab8:	b003      	add	sp, #12
 800baba:	f85d fb04 	ldr.w	pc, [sp], #4

0800babe <GUIDRV_FlexColor__SetPixelIndexNoCache>:
 800babe:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800bac2:	6884      	ldr	r4, [r0, #8]
 800bac4:	4698      	mov	r8, r3
 800bac6:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800bac8:	079b      	lsls	r3, r3, #30
 800baca:	4689      	mov	r9, r1
 800bacc:	4617      	mov	r7, r2
 800bace:	d532      	bpl.n	800bb36 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x78>
 800bad0:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800bad4:	4620      	mov	r0, r4
 800bad6:	4798      	blx	r3
 800bad8:	f8d4 5104 	ldr.w	r5, [r4, #260]	; 0x104
 800badc:	4606      	mov	r6, r0
 800bade:	463a      	mov	r2, r7
 800bae0:	4620      	mov	r0, r4
 800bae2:	4649      	mov	r1, r9
 800bae4:	47a8      	blx	r5
 800bae6:	6923      	ldr	r3, [r4, #16]
 800bae8:	69a2      	ldr	r2, [r4, #24]
 800baea:	429e      	cmp	r6, r3
 800baec:	bfac      	ite	ge
 800baee:	2300      	movge	r3, #0
 800baf0:	2301      	movlt	r3, #1
 800baf2:	4296      	cmp	r6, r2
 800baf4:	bfd4      	ite	le
 800baf6:	461a      	movle	r2, r3
 800baf8:	f043 0201 	orrgt.w	r2, r3, #1
 800bafc:	6963      	ldr	r3, [r4, #20]
 800bafe:	4298      	cmp	r0, r3
 800bb00:	bfac      	ite	ge
 800bb02:	4613      	movge	r3, r2
 800bb04:	f042 0301 	orrlt.w	r3, r2, #1
 800bb08:	4605      	mov	r5, r0
 800bb0a:	b913      	cbnz	r3, 800bb12 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x54>
 800bb0c:	69e3      	ldr	r3, [r4, #28]
 800bb0e:	4298      	cmp	r0, r3
 800bb10:	dd0a      	ble.n	800bb28 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x6a>
 800bb12:	6862      	ldr	r2, [r4, #4]
 800bb14:	6823      	ldr	r3, [r4, #0]
 800bb16:	3a01      	subs	r2, #1
 800bb18:	9200      	str	r2, [sp, #0]
 800bb1a:	2100      	movs	r1, #0
 800bb1c:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800bb20:	4620      	mov	r0, r4
 800bb22:	460a      	mov	r2, r1
 800bb24:	3b01      	subs	r3, #1
 800bb26:	47b8      	blx	r7
 800bb28:	f8d4 70ac 	ldr.w	r7, [r4, #172]	; 0xac
 800bb2c:	4620      	mov	r0, r4
 800bb2e:	4631      	mov	r1, r6
 800bb30:	462a      	mov	r2, r5
 800bb32:	47b8      	blx	r7
 800bb34:	e003      	b.n	800bb3e <GUIDRV_FlexColor__SetPixelIndexNoCache+0x80>
 800bb36:	f8d4 50ac 	ldr.w	r5, [r4, #172]	; 0xac
 800bb3a:	4620      	mov	r0, r4
 800bb3c:	47a8      	blx	r5
 800bb3e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800bb42:	4620      	mov	r0, r4
 800bb44:	4641      	mov	r1, r8
 800bb46:	4798      	blx	r3
 800bb48:	b003      	add	sp, #12
 800bb4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800bb4e <GUIDRV_FlexColor__GetPixelIndexNoCache>:
 800bb4e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bb50:	6884      	ldr	r4, [r0, #8]
 800bb52:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800bb54:	079b      	lsls	r3, r3, #30
 800bb56:	460f      	mov	r7, r1
 800bb58:	4616      	mov	r6, r2
 800bb5a:	d545      	bpl.n	800bbe8 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x9a>
 800bb5c:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800bb60:	4620      	mov	r0, r4
 800bb62:	4798      	blx	r3
 800bb64:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800bb68:	4632      	mov	r2, r6
 800bb6a:	4605      	mov	r5, r0
 800bb6c:	4639      	mov	r1, r7
 800bb6e:	4620      	mov	r0, r4
 800bb70:	4798      	blx	r3
 800bb72:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 800bb76:	4606      	mov	r6, r0
 800bb78:	b11b      	cbz	r3, 800bb82 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x34>
 800bb7a:	4620      	mov	r0, r4
 800bb7c:	2101      	movs	r1, #1
 800bb7e:	2200      	movs	r2, #0
 800bb80:	4798      	blx	r3
 800bb82:	6923      	ldr	r3, [r4, #16]
 800bb84:	69a2      	ldr	r2, [r4, #24]
 800bb86:	429d      	cmp	r5, r3
 800bb88:	bfac      	ite	ge
 800bb8a:	2300      	movge	r3, #0
 800bb8c:	2301      	movlt	r3, #1
 800bb8e:	4295      	cmp	r5, r2
 800bb90:	bfd4      	ite	le
 800bb92:	461a      	movle	r2, r3
 800bb94:	f043 0201 	orrgt.w	r2, r3, #1
 800bb98:	6963      	ldr	r3, [r4, #20]
 800bb9a:	429e      	cmp	r6, r3
 800bb9c:	bfac      	ite	ge
 800bb9e:	4613      	movge	r3, r2
 800bba0:	f042 0301 	orrlt.w	r3, r2, #1
 800bba4:	b913      	cbnz	r3, 800bbac <GUIDRV_FlexColor__GetPixelIndexNoCache+0x5e>
 800bba6:	69e3      	ldr	r3, [r4, #28]
 800bba8:	429e      	cmp	r6, r3
 800bbaa:	dd0a      	ble.n	800bbc2 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x74>
 800bbac:	6862      	ldr	r2, [r4, #4]
 800bbae:	6823      	ldr	r3, [r4, #0]
 800bbb0:	3a01      	subs	r2, #1
 800bbb2:	9200      	str	r2, [sp, #0]
 800bbb4:	2100      	movs	r1, #0
 800bbb6:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800bbba:	4620      	mov	r0, r4
 800bbbc:	460a      	mov	r2, r1
 800bbbe:	3b01      	subs	r3, #1
 800bbc0:	47b8      	blx	r7
 800bbc2:	4629      	mov	r1, r5
 800bbc4:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 800bbc8:	4620      	mov	r0, r4
 800bbca:	4632      	mov	r2, r6
 800bbcc:	4798      	blx	r3
 800bbce:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 800bbd2:	4620      	mov	r0, r4
 800bbd4:	4798      	blx	r3
 800bbd6:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 800bbda:	4605      	mov	r5, r0
 800bbdc:	b16b      	cbz	r3, 800bbfa <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 800bbde:	4620      	mov	r0, r4
 800bbe0:	2100      	movs	r1, #0
 800bbe2:	2201      	movs	r2, #1
 800bbe4:	4798      	blx	r3
 800bbe6:	e008      	b.n	800bbfa <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 800bbe8:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 800bbec:	4620      	mov	r0, r4
 800bbee:	4798      	blx	r3
 800bbf0:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 800bbf4:	4620      	mov	r0, r4
 800bbf6:	4798      	blx	r3
 800bbf8:	4605      	mov	r5, r0
 800bbfa:	4628      	mov	r0, r5
 800bbfc:	b003      	add	sp, #12
 800bbfe:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800bc00 <GUIDRV_FlexColor__InitOnce>:
 800bc00:	b538      	push	{r3, r4, r5, lr}
 800bc02:	6885      	ldr	r5, [r0, #8]
 800bc04:	4604      	mov	r4, r0
 800bc06:	b995      	cbnz	r5, 800bc2e <GUIDRV_FlexColor__InitOnce+0x2e>
 800bc08:	f44f 70ba 	mov.w	r0, #372	; 0x174
 800bc0c:	f003 fd86 	bl	800f71c <GUI_ALLOC_GetFixedBlock>
 800bc10:	f44f 72ba 	mov.w	r2, #372	; 0x174
 800bc14:	60a0      	str	r0, [r4, #8]
 800bc16:	4629      	mov	r1, r5
 800bc18:	f000 fdf4 	bl	800c804 <GUI__memset>
 800bc1c:	68a3      	ldr	r3, [r4, #8]
 800bc1e:	2202      	movs	r2, #2
 800bc20:	84da      	strh	r2, [r3, #38]	; 0x26
 800bc22:	2201      	movs	r2, #1
 800bc24:	621a      	str	r2, [r3, #32]
 800bc26:	4a02      	ldr	r2, [pc, #8]	; (800bc30 <GUIDRV_FlexColor__InitOnce+0x30>)
 800bc28:	641c      	str	r4, [r3, #64]	; 0x40
 800bc2a:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
 800bc2e:	bd38      	pop	{r3, r4, r5, pc}
 800bc30:	0800ba61 	.word	0x0800ba61

0800bc34 <_SetDevFunc>:
 800bc34:	b570      	push	{r4, r5, r6, lr}
 800bc36:	4606      	mov	r6, r0
 800bc38:	460d      	mov	r5, r1
 800bc3a:	4614      	mov	r4, r2
 800bc3c:	f7ff ffe0 	bl	800bc00 <GUIDRV_FlexColor__InitOnce>
 800bc40:	68b3      	ldr	r3, [r6, #8]
 800bc42:	2b00      	cmp	r3, #0
 800bc44:	d03b      	beq.n	800bcbe <_SetDevFunc+0x8a>
 800bc46:	2d26      	cmp	r5, #38	; 0x26
 800bc48:	d002      	beq.n	800bc50 <_SetDevFunc+0x1c>
 800bc4a:	2d27      	cmp	r5, #39	; 0x27
 800bc4c:	d016      	beq.n	800bc7c <_SetDevFunc+0x48>
 800bc4e:	bd70      	pop	{r4, r5, r6, pc}
 800bc50:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800bc52:	2a10      	cmp	r2, #16
 800bc54:	d002      	beq.n	800bc5c <_SetDevFunc+0x28>
 800bc56:	2a12      	cmp	r2, #18
 800bc58:	d008      	beq.n	800bc6c <_SetDevFunc+0x38>
 800bc5a:	bd70      	pop	{r4, r5, r6, pc}
 800bc5c:	4a18      	ldr	r2, [pc, #96]	; (800bcc0 <_SetDevFunc+0x8c>)
 800bc5e:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
 800bc62:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 800bc66:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 800bc6a:	bd70      	pop	{r4, r5, r6, pc}
 800bc6c:	4a15      	ldr	r2, [pc, #84]	; (800bcc4 <_SetDevFunc+0x90>)
 800bc6e:	f8c3 40d8 	str.w	r4, [r3, #216]	; 0xd8
 800bc72:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800bc76:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 800bc7a:	bd70      	pop	{r4, r5, r6, pc}
 800bc7c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800bc7e:	2a10      	cmp	r2, #16
 800bc80:	d002      	beq.n	800bc88 <_SetDevFunc+0x54>
 800bc82:	2a12      	cmp	r2, #18
 800bc84:	d00e      	beq.n	800bca4 <_SetDevFunc+0x70>
 800bc86:	bd70      	pop	{r4, r5, r6, pc}
 800bc88:	b13c      	cbz	r4, 800bc9a <_SetDevFunc+0x66>
 800bc8a:	4a0f      	ldr	r2, [pc, #60]	; (800bcc8 <_SetDevFunc+0x94>)
 800bc8c:	f8c3 40dc 	str.w	r4, [r3, #220]	; 0xdc
 800bc90:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
 800bc94:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 800bc98:	bd70      	pop	{r4, r5, r6, pc}
 800bc9a:	f8c3 40c8 	str.w	r4, [r3, #200]	; 0xc8
 800bc9e:	f8c3 40c4 	str.w	r4, [r3, #196]	; 0xc4
 800bca2:	bd70      	pop	{r4, r5, r6, pc}
 800bca4:	b13c      	cbz	r4, 800bcb6 <_SetDevFunc+0x82>
 800bca6:	4a09      	ldr	r2, [pc, #36]	; (800bccc <_SetDevFunc+0x98>)
 800bca8:	f8c3 40e0 	str.w	r4, [r3, #224]	; 0xe0
 800bcac:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
 800bcb0:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
 800bcb4:	bd70      	pop	{r4, r5, r6, pc}
 800bcb6:	f8c3 40cc 	str.w	r4, [r3, #204]	; 0xcc
 800bcba:	f8c3 40d0 	str.w	r4, [r3, #208]	; 0xd0
 800bcbe:	bd70      	pop	{r4, r5, r6, pc}
 800bcc0:	0800b8f1 	.word	0x0800b8f1
 800bcc4:	0800b8ff 	.word	0x0800b8ff
 800bcc8:	0800b90d 	.word	0x0800b90d
 800bccc:	0800b943 	.word	0x0800b943

0800bcd0 <_GetDevFunc_Init>:
 800bcd0:	b538      	push	{r3, r4, r5, lr}
 800bcd2:	4605      	mov	r5, r0
 800bcd4:	f7ff ff94 	bl	800bc00 <GUIDRV_FlexColor__InitOnce>
 800bcd8:	68ac      	ldr	r4, [r5, #8]
 800bcda:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800bcde:	f003 fd1d 	bl	800f71c <GUI_ALLOC_GetFixedBlock>
 800bce2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800bce4:	66a0      	str	r0, [r4, #104]	; 0x68
 800bce6:	3307      	adds	r3, #7
 800bce8:	10d8      	asrs	r0, r3, #3
 800bcea:	6823      	ldr	r3, [r4, #0]
 800bcec:	4358      	muls	r0, r3
 800bcee:	f003 fd15 	bl	800f71c <GUI_ALLOC_GetFixedBlock>
 800bcf2:	2101      	movs	r1, #1
 800bcf4:	2200      	movs	r2, #0
 800bcf6:	66e0      	str	r0, [r4, #108]	; 0x6c
 800bcf8:	69a8      	ldr	r0, [r5, #24]
 800bcfa:	f7f9 fbb1 	bl	8005460 <LCD_X_DisplayDriver>
 800bcfe:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800bd02:	4605      	mov	r5, r0
 800bd04:	4620      	mov	r0, r4
 800bd06:	4798      	blx	r3
 800bd08:	4620      	mov	r0, r4
 800bd0a:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 800bd0e:	4798      	blx	r3
 800bd10:	2d00      	cmp	r5, #0
 800bd12:	bfd4      	ite	le
 800bd14:	2000      	movle	r0, #0
 800bd16:	2001      	movgt	r0, #1
 800bd18:	bd38      	pop	{r3, r4, r5, pc}

0800bd1a <_GetDevFunc_SetSize>:
 800bd1a:	b570      	push	{r4, r5, r6, lr}
 800bd1c:	4604      	mov	r4, r0
 800bd1e:	460d      	mov	r5, r1
 800bd20:	4616      	mov	r6, r2
 800bd22:	f7ff ff6d 	bl	800bc00 <GUIDRV_FlexColor__InitOnce>
 800bd26:	68a3      	ldr	r3, [r4, #8]
 800bd28:	e883 0060 	stmia.w	r3, {r5, r6}
 800bd2c:	bd70      	pop	{r4, r5, r6, pc}

0800bd2e <_GetDevFunc_SetVSize>:
 800bd2e:	b570      	push	{r4, r5, r6, lr}
 800bd30:	4604      	mov	r4, r0
 800bd32:	460d      	mov	r5, r1
 800bd34:	4616      	mov	r6, r2
 800bd36:	f7ff ff63 	bl	800bc00 <GUIDRV_FlexColor__InitOnce>
 800bd3a:	68a3      	ldr	r3, [r4, #8]
 800bd3c:	609d      	str	r5, [r3, #8]
 800bd3e:	60de      	str	r6, [r3, #12]
 800bd40:	bd70      	pop	{r4, r5, r6, pc}

0800bd42 <GUIDRV_FlexColor_Config>:
 800bd42:	b538      	push	{r3, r4, r5, lr}
 800bd44:	4605      	mov	r5, r0
 800bd46:	460c      	mov	r4, r1
 800bd48:	f7ff ff5a 	bl	800bc00 <GUIDRV_FlexColor__InitOnce>
 800bd4c:	68ab      	ldr	r3, [r5, #8]
 800bd4e:	6822      	ldr	r2, [r4, #0]
 800bd50:	62da      	str	r2, [r3, #44]	; 0x2c
 800bd52:	6862      	ldr	r2, [r4, #4]
 800bd54:	631a      	str	r2, [r3, #48]	; 0x30
 800bd56:	68a2      	ldr	r2, [r4, #8]
 800bd58:	635a      	str	r2, [r3, #52]	; 0x34
 800bd5a:	0752      	lsls	r2, r2, #29
 800bd5c:	d507      	bpl.n	800bd6e <GUIDRV_FlexColor_Config+0x2c>
 800bd5e:	e893 0006 	ldmia.w	r3, {r1, r2}
 800bd62:	601a      	str	r2, [r3, #0]
 800bd64:	6059      	str	r1, [r3, #4]
 800bd66:	68da      	ldr	r2, [r3, #12]
 800bd68:	6899      	ldr	r1, [r3, #8]
 800bd6a:	60d9      	str	r1, [r3, #12]
 800bd6c:	609a      	str	r2, [r3, #8]
 800bd6e:	89a2      	ldrh	r2, [r4, #12]
 800bd70:	849a      	strh	r2, [r3, #36]	; 0x24
 800bd72:	6922      	ldr	r2, [r4, #16]
 800bd74:	b112      	cbz	r2, 800bd7c <GUIDRV_FlexColor_Config+0x3a>
 800bd76:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800bd7a:	621a      	str	r2, [r3, #32]
 800bd7c:	bd38      	pop	{r3, r4, r5, pc}

0800bd7e <GUIDRV_FlexColor_SetFunc>:
 800bd7e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd82:	4604      	mov	r4, r0
 800bd84:	461f      	mov	r7, r3
 800bd86:	4616      	mov	r6, r2
 800bd88:	4688      	mov	r8, r1
 800bd8a:	f7ff ff39 	bl	800bc00 <GUIDRV_FlexColor__InitOnce>
 800bd8e:	68a5      	ldr	r5, [r4, #8]
 800bd90:	4641      	mov	r1, r8
 800bd92:	2268      	movs	r2, #104	; 0x68
 800bd94:	f505 7086 	add.w	r0, r5, #268	; 0x10c
 800bd98:	f009 fa71 	bl	801527e <memcpy>
 800bd9c:	4620      	mov	r0, r4
 800bd9e:	47b0      	blx	r6
 800bda0:	4620      	mov	r0, r4
 800bda2:	47b8      	blx	r7
 800bda4:	6923      	ldr	r3, [r4, #16]
 800bda6:	689b      	ldr	r3, [r3, #8]
 800bda8:	4798      	blx	r3
 800bdaa:	62a8      	str	r0, [r5, #40]	; 0x28
 800bdac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bdb0 <LCD_UpdateColorIndices>:
 800bdb0:	b510      	push	{r4, lr}
 800bdb2:	4c07      	ldr	r4, [pc, #28]	; (800bdd0 <LCD_UpdateColorIndices+0x20>)
 800bdb4:	6823      	ldr	r3, [r4, #0]
 800bdb6:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800bdb8:	f000 fc8e 	bl	800c6d8 <LCD_Color2Index>
 800bdbc:	f000 fcac 	bl	800c718 <LCD_SetColorIndex>
 800bdc0:	6823      	ldr	r3, [r4, #0]
 800bdc2:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800bdc4:	f000 fc88 	bl	800c6d8 <LCD_Color2Index>
 800bdc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bdcc:	f000 bcc0 	b.w	800c750 <LCD_SetBkColorIndex>
 800bdd0:	20000274 	.word	0x20000274

0800bdd4 <LCD_SetClipRectEx>:
 800bdd4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bdd6:	4c09      	ldr	r4, [pc, #36]	; (800bdfc <LCD_SetClipRectEx+0x28>)
 800bdd8:	6823      	ldr	r3, [r4, #0]
 800bdda:	7c5a      	ldrb	r2, [r3, #17]
 800bddc:	4b08      	ldr	r3, [pc, #32]	; (800be00 <LCD_SetClipRectEx+0x2c>)
 800bdde:	4605      	mov	r5, r0
 800bde0:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800bde4:	68c2      	ldr	r2, [r0, #12]
 800bde6:	4669      	mov	r1, sp
 800bde8:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800bdea:	4790      	blx	r2
 800bdec:	6820      	ldr	r0, [r4, #0]
 800bdee:	4629      	mov	r1, r5
 800bdf0:	466a      	mov	r2, sp
 800bdf2:	3008      	adds	r0, #8
 800bdf4:	f000 fdf6 	bl	800c9e4 <GUI__IntersectRects>
 800bdf8:	b003      	add	sp, #12
 800bdfa:	bd30      	pop	{r4, r5, pc}
 800bdfc:	20000274 	.word	0x20000274
 800be00:	2001ba34 	.word	0x2001ba34

0800be04 <LCD_SetVSizeEx>:
 800be04:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800be06:	460d      	mov	r5, r1
 800be08:	4614      	mov	r4, r2
 800be0a:	f002 fdd5 	bl	800e9b8 <GUI_DEVICE__GetpDriver>
 800be0e:	9001      	str	r0, [sp, #4]
 800be10:	b908      	cbnz	r0, 800be16 <LCD_SetVSizeEx+0x12>
 800be12:	2001      	movs	r0, #1
 800be14:	e00c      	b.n	800be30 <LCD_SetVSizeEx+0x2c>
 800be16:	68c3      	ldr	r3, [r0, #12]
 800be18:	210a      	movs	r1, #10
 800be1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800be1c:	a801      	add	r0, sp, #4
 800be1e:	4798      	blx	r3
 800be20:	4603      	mov	r3, r0
 800be22:	2800      	cmp	r0, #0
 800be24:	d0f5      	beq.n	800be12 <LCD_SetVSizeEx+0xe>
 800be26:	9801      	ldr	r0, [sp, #4]
 800be28:	4629      	mov	r1, r5
 800be2a:	4622      	mov	r2, r4
 800be2c:	4798      	blx	r3
 800be2e:	2000      	movs	r0, #0
 800be30:	b003      	add	sp, #12
 800be32:	bd30      	pop	{r4, r5, pc}

0800be34 <LCD_SetSizeEx>:
 800be34:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800be36:	460d      	mov	r5, r1
 800be38:	4614      	mov	r4, r2
 800be3a:	f002 fdbd 	bl	800e9b8 <GUI_DEVICE__GetpDriver>
 800be3e:	9001      	str	r0, [sp, #4]
 800be40:	b908      	cbnz	r0, 800be46 <LCD_SetSizeEx+0x12>
 800be42:	2001      	movs	r0, #1
 800be44:	e00c      	b.n	800be60 <LCD_SetSizeEx+0x2c>
 800be46:	68c3      	ldr	r3, [r0, #12]
 800be48:	210b      	movs	r1, #11
 800be4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800be4c:	a801      	add	r0, sp, #4
 800be4e:	4798      	blx	r3
 800be50:	4603      	mov	r3, r0
 800be52:	2800      	cmp	r0, #0
 800be54:	d0f5      	beq.n	800be42 <LCD_SetSizeEx+0xe>
 800be56:	9801      	ldr	r0, [sp, #4]
 800be58:	4629      	mov	r1, r5
 800be5a:	4622      	mov	r2, r4
 800be5c:	4798      	blx	r3
 800be5e:	2000      	movs	r0, #0
 800be60:	b003      	add	sp, #12
 800be62:	bd30      	pop	{r4, r5, pc}

0800be64 <LCD_SetPosEx>:
 800be64:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800be66:	460d      	mov	r5, r1
 800be68:	4614      	mov	r4, r2
 800be6a:	f002 fda5 	bl	800e9b8 <GUI_DEVICE__GetpDriver>
 800be6e:	9001      	str	r0, [sp, #4]
 800be70:	b908      	cbnz	r0, 800be76 <LCD_SetPosEx+0x12>
 800be72:	2001      	movs	r0, #1
 800be74:	e00c      	b.n	800be90 <LCD_SetPosEx+0x2c>
 800be76:	68c3      	ldr	r3, [r0, #12]
 800be78:	2103      	movs	r1, #3
 800be7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800be7c:	a801      	add	r0, sp, #4
 800be7e:	4798      	blx	r3
 800be80:	4603      	mov	r3, r0
 800be82:	2800      	cmp	r0, #0
 800be84:	d0f5      	beq.n	800be72 <LCD_SetPosEx+0xe>
 800be86:	9801      	ldr	r0, [sp, #4]
 800be88:	4629      	mov	r1, r5
 800be8a:	4622      	mov	r2, r4
 800be8c:	4798      	blx	r3
 800be8e:	2000      	movs	r0, #0
 800be90:	b003      	add	sp, #12
 800be92:	bd30      	pop	{r4, r5, pc}

0800be94 <LCD_SetLUTEntryEx>:
 800be94:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800be96:	460d      	mov	r5, r1
 800be98:	4614      	mov	r4, r2
 800be9a:	f002 fd8d 	bl	800e9b8 <GUI_DEVICE__GetpDriver>
 800be9e:	9001      	str	r0, [sp, #4]
 800bea0:	b908      	cbnz	r0, 800bea6 <LCD_SetLUTEntryEx+0x12>
 800bea2:	2001      	movs	r0, #1
 800bea4:	e00c      	b.n	800bec0 <LCD_SetLUTEntryEx+0x2c>
 800bea6:	68c3      	ldr	r3, [r0, #12]
 800bea8:	2110      	movs	r1, #16
 800beaa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800beac:	a801      	add	r0, sp, #4
 800beae:	4798      	blx	r3
 800beb0:	4603      	mov	r3, r0
 800beb2:	2800      	cmp	r0, #0
 800beb4:	d0f5      	beq.n	800bea2 <LCD_SetLUTEntryEx+0xe>
 800beb6:	9801      	ldr	r0, [sp, #4]
 800beb8:	4629      	mov	r1, r5
 800beba:	4622      	mov	r2, r4
 800bebc:	4798      	blx	r3
 800bebe:	2000      	movs	r0, #0
 800bec0:	b003      	add	sp, #12
 800bec2:	bd30      	pop	{r4, r5, pc}

0800bec4 <LCD_GetPosEx>:
 800bec4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bec6:	460d      	mov	r5, r1
 800bec8:	4614      	mov	r4, r2
 800beca:	f002 fd75 	bl	800e9b8 <GUI_DEVICE__GetpDriver>
 800bece:	9001      	str	r0, [sp, #4]
 800bed0:	b908      	cbnz	r0, 800bed6 <LCD_GetPosEx+0x12>
 800bed2:	2001      	movs	r0, #1
 800bed4:	e00c      	b.n	800bef0 <LCD_GetPosEx+0x2c>
 800bed6:	68c3      	ldr	r3, [r0, #12]
 800bed8:	2104      	movs	r1, #4
 800beda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bedc:	a801      	add	r0, sp, #4
 800bede:	4798      	blx	r3
 800bee0:	4603      	mov	r3, r0
 800bee2:	2800      	cmp	r0, #0
 800bee4:	d0f5      	beq.n	800bed2 <LCD_GetPosEx+0xe>
 800bee6:	9801      	ldr	r0, [sp, #4]
 800bee8:	4629      	mov	r1, r5
 800beea:	4622      	mov	r2, r4
 800beec:	4798      	blx	r3
 800beee:	2000      	movs	r0, #0
 800bef0:	b003      	add	sp, #12
 800bef2:	bd30      	pop	{r4, r5, pc}

0800bef4 <_GetDevProp>:
 800bef4:	2801      	cmp	r0, #1
 800bef6:	b510      	push	{r4, lr}
 800bef8:	460c      	mov	r4, r1
 800befa:	dc08      	bgt.n	800bf0e <_GetDevProp+0x1a>
 800befc:	f002 fd5c 	bl	800e9b8 <GUI_DEVICE__GetpDriver>
 800bf00:	b120      	cbz	r0, 800bf0c <_GetDevProp+0x18>
 800bf02:	68c3      	ldr	r3, [r0, #12]
 800bf04:	4621      	mov	r1, r4
 800bf06:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bf08:	4798      	blx	r3
 800bf0a:	bd10      	pop	{r4, pc}
 800bf0c:	bd10      	pop	{r4, pc}
 800bf0e:	2000      	movs	r0, #0
 800bf10:	bd10      	pop	{r4, pc}

0800bf12 <_GetMaxValue>:
 800bf12:	b538      	push	{r3, r4, r5, lr}
 800bf14:	4604      	mov	r4, r0
 800bf16:	4621      	mov	r1, r4
 800bf18:	2001      	movs	r0, #1
 800bf1a:	f7ff ffeb 	bl	800bef4 <_GetDevProp>
 800bf1e:	4621      	mov	r1, r4
 800bf20:	4605      	mov	r5, r0
 800bf22:	2000      	movs	r0, #0
 800bf24:	f7ff ffe6 	bl	800bef4 <_GetDevProp>
 800bf28:	42a8      	cmp	r0, r5
 800bf2a:	bfb8      	it	lt
 800bf2c:	4628      	movlt	r0, r5
 800bf2e:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 800bf32:	bd38      	pop	{r3, r4, r5, pc}

0800bf34 <LCD_GetXSizeEx>:
 800bf34:	2101      	movs	r1, #1
 800bf36:	f7ff bfdd 	b.w	800bef4 <_GetDevProp>

0800bf3a <LCD_GetYSizeEx>:
 800bf3a:	2102      	movs	r1, #2
 800bf3c:	f7ff bfda 	b.w	800bef4 <_GetDevProp>

0800bf40 <LCD_GetVXSizeEx>:
 800bf40:	2103      	movs	r1, #3
 800bf42:	f7ff bfd7 	b.w	800bef4 <_GetDevProp>

0800bf46 <LCD_GetVYSizeEx>:
 800bf46:	2104      	movs	r1, #4
 800bf48:	f7ff bfd4 	b.w	800bef4 <_GetDevProp>

0800bf4c <LCD_GetBitsPerPixelEx>:
 800bf4c:	2108      	movs	r1, #8
 800bf4e:	f7ff bfd1 	b.w	800bef4 <_GetDevProp>

0800bf52 <LCD_GetNumColorsEx>:
 800bf52:	2109      	movs	r1, #9
 800bf54:	f7ff bfce 	b.w	800bef4 <_GetDevProp>

0800bf58 <LCD_GetXSize>:
 800bf58:	4b02      	ldr	r3, [pc, #8]	; (800bf64 <LCD_GetXSize+0xc>)
 800bf5a:	681b      	ldr	r3, [r3, #0]
 800bf5c:	7c58      	ldrb	r0, [r3, #17]
 800bf5e:	f7ff bfe9 	b.w	800bf34 <LCD_GetXSizeEx>
 800bf62:	bf00      	nop
 800bf64:	20000274 	.word	0x20000274

0800bf68 <LCD_GetYSize>:
 800bf68:	4b02      	ldr	r3, [pc, #8]	; (800bf74 <LCD_GetYSize+0xc>)
 800bf6a:	681b      	ldr	r3, [r3, #0]
 800bf6c:	7c58      	ldrb	r0, [r3, #17]
 800bf6e:	f7ff bfe4 	b.w	800bf3a <LCD_GetYSizeEx>
 800bf72:	bf00      	nop
 800bf74:	20000274 	.word	0x20000274

0800bf78 <LCD_GetNumColors>:
 800bf78:	4b02      	ldr	r3, [pc, #8]	; (800bf84 <LCD_GetNumColors+0xc>)
 800bf7a:	681b      	ldr	r3, [r3, #0]
 800bf7c:	7c58      	ldrb	r0, [r3, #17]
 800bf7e:	f7ff bfe8 	b.w	800bf52 <LCD_GetNumColorsEx>
 800bf82:	bf00      	nop
 800bf84:	20000274 	.word	0x20000274

0800bf88 <GUI_GetBitsPerPixelEx>:
 800bf88:	b508      	push	{r3, lr}
 800bf8a:	4b04      	ldr	r3, [pc, #16]	; (800bf9c <GUI_GetBitsPerPixelEx+0x14>)
 800bf8c:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800bf90:	68c3      	ldr	r3, [r0, #12]
 800bf92:	2108      	movs	r1, #8
 800bf94:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bf96:	4798      	blx	r3
 800bf98:	bd08      	pop	{r3, pc}
 800bf9a:	bf00      	nop
 800bf9c:	2001ba34 	.word	0x2001ba34

0800bfa0 <LCD_GetPaletteEx>:
 800bfa0:	b508      	push	{r3, lr}
 800bfa2:	f002 fd09 	bl	800e9b8 <GUI_DEVICE__GetpDriver>
 800bfa6:	b120      	cbz	r0, 800bfb2 <LCD_GetPaletteEx+0x12>
 800bfa8:	68c3      	ldr	r3, [r0, #12]
 800bfaa:	2102      	movs	r1, #2
 800bfac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bfae:	4798      	blx	r3
 800bfb0:	bd08      	pop	{r3, pc}
 800bfb2:	bd08      	pop	{r3, pc}

0800bfb4 <LCD_GetPalette>:
 800bfb4:	4b02      	ldr	r3, [pc, #8]	; (800bfc0 <LCD_GetPalette+0xc>)
 800bfb6:	681b      	ldr	r3, [r3, #0]
 800bfb8:	7c58      	ldrb	r0, [r3, #17]
 800bfba:	f7ff bff1 	b.w	800bfa0 <LCD_GetPaletteEx>
 800bfbe:	bf00      	nop
 800bfc0:	20000274 	.word	0x20000274

0800bfc4 <GUI_GetpfIndex2ColorEx>:
 800bfc4:	4b02      	ldr	r3, [pc, #8]	; (800bfd0 <GUI_GetpfIndex2ColorEx+0xc>)
 800bfc6:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800bfca:	691b      	ldr	r3, [r3, #16]
 800bfcc:	6858      	ldr	r0, [r3, #4]
 800bfce:	4770      	bx	lr
 800bfd0:	2001ba34 	.word	0x2001ba34

0800bfd4 <GUI_GetpfColor2IndexEx>:
 800bfd4:	4b02      	ldr	r3, [pc, #8]	; (800bfe0 <GUI_GetpfColor2IndexEx+0xc>)
 800bfd6:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800bfda:	691b      	ldr	r3, [r3, #16]
 800bfdc:	6818      	ldr	r0, [r3, #0]
 800bfde:	4770      	bx	lr
 800bfe0:	2001ba34 	.word	0x2001ba34

0800bfe4 <LCD_GetXSizeMax>:
 800bfe4:	2001      	movs	r0, #1
 800bfe6:	f7ff bf94 	b.w	800bf12 <_GetMaxValue>

0800bfea <LCD_GetYSizeMax>:
 800bfea:	2002      	movs	r0, #2
 800bfec:	f7ff bf91 	b.w	800bf12 <_GetMaxValue>

0800bff0 <LCD_GetVXSizeMax>:
 800bff0:	2003      	movs	r0, #3
 800bff2:	f7ff bf8e 	b.w	800bf12 <_GetMaxValue>
	...

0800bff8 <LCD_SetDisplaySize>:
 800bff8:	4b02      	ldr	r3, [pc, #8]	; (800c004 <LCD_SetDisplaySize+0xc>)
 800bffa:	6018      	str	r0, [r3, #0]
 800bffc:	4b02      	ldr	r3, [pc, #8]	; (800c008 <LCD_SetDisplaySize+0x10>)
 800bffe:	6019      	str	r1, [r3, #0]
 800c000:	4770      	bx	lr
 800c002:	bf00      	nop
 800c004:	20019d08 	.word	0x20019d08
 800c008:	20019d04 	.word	0x20019d04

0800c00c <LCD_GetXSizeDisplay>:
 800c00c:	4b01      	ldr	r3, [pc, #4]	; (800c014 <LCD_GetXSizeDisplay+0x8>)
 800c00e:	6818      	ldr	r0, [r3, #0]
 800c010:	4770      	bx	lr
 800c012:	bf00      	nop
 800c014:	20019d08 	.word	0x20019d08

0800c018 <LCD_GetYSizeDisplay>:
 800c018:	4b01      	ldr	r3, [pc, #4]	; (800c020 <LCD_GetYSizeDisplay+0x8>)
 800c01a:	6818      	ldr	r0, [r3, #0]
 800c01c:	4770      	bx	lr
 800c01e:	bf00      	nop
 800c020:	20019d04 	.word	0x20019d04

0800c024 <LCD__GetBPP>:
 800c024:	2800      	cmp	r0, #0
 800c026:	d03b      	beq.n	800c0a0 <LCD__GetBPP+0x7c>
 800c028:	f030 0301 	bics.w	r3, r0, #1
 800c02c:	d029      	beq.n	800c082 <LCD__GetBPP+0x5e>
 800c02e:	f030 0303 	bics.w	r3, r0, #3
 800c032:	d028      	beq.n	800c086 <LCD__GetBPP+0x62>
 800c034:	f030 0307 	bics.w	r3, r0, #7
 800c038:	d027      	beq.n	800c08a <LCD__GetBPP+0x66>
 800c03a:	f030 030f 	bics.w	r3, r0, #15
 800c03e:	d026      	beq.n	800c08e <LCD__GetBPP+0x6a>
 800c040:	f030 031f 	bics.w	r3, r0, #31
 800c044:	d025      	beq.n	800c092 <LCD__GetBPP+0x6e>
 800c046:	f030 03ff 	bics.w	r3, r0, #255	; 0xff
 800c04a:	d024      	beq.n	800c096 <LCD__GetBPP+0x72>
 800c04c:	f420 73ff 	bic.w	r3, r0, #510	; 0x1fe
 800c050:	f023 0301 	bic.w	r3, r3, #1
 800c054:	b30b      	cbz	r3, 800c09a <LCD__GetBPP+0x76>
 800c056:	f420 637f 	bic.w	r3, r0, #4080	; 0xff0
 800c05a:	f023 030f 	bic.w	r3, r3, #15
 800c05e:	b1e3      	cbz	r3, 800c09a <LCD__GetBPP+0x76>
 800c060:	f420 43ff 	bic.w	r3, r0, #32640	; 0x7f80
 800c064:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800c068:	b1bb      	cbz	r3, 800c09a <LCD__GetBPP+0x76>
 800c06a:	0c03      	lsrs	r3, r0, #16
 800c06c:	041b      	lsls	r3, r3, #16
 800c06e:	b1a3      	cbz	r3, 800c09a <LCD__GetBPP+0x76>
 800c070:	0c83      	lsrs	r3, r0, #18
 800c072:	049b      	lsls	r3, r3, #18
 800c074:	b19b      	cbz	r3, 800c09e <LCD__GetBPP+0x7a>
 800c076:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800c07a:	bf0c      	ite	eq
 800c07c:	2018      	moveq	r0, #24
 800c07e:	2020      	movne	r0, #32
 800c080:	4770      	bx	lr
 800c082:	2001      	movs	r0, #1
 800c084:	4770      	bx	lr
 800c086:	2002      	movs	r0, #2
 800c088:	4770      	bx	lr
 800c08a:	2003      	movs	r0, #3
 800c08c:	4770      	bx	lr
 800c08e:	2004      	movs	r0, #4
 800c090:	4770      	bx	lr
 800c092:	2005      	movs	r0, #5
 800c094:	4770      	bx	lr
 800c096:	2008      	movs	r0, #8
 800c098:	4770      	bx	lr
 800c09a:	2010      	movs	r0, #16
 800c09c:	4770      	bx	lr
 800c09e:	2012      	movs	r0, #18
 800c0a0:	4770      	bx	lr

0800c0a2 <LCD__GetBPPDevice>:
 800c0a2:	b508      	push	{r3, lr}
 800c0a4:	f7ff ffbe 	bl	800c024 <LCD__GetBPP>
 800c0a8:	2801      	cmp	r0, #1
 800c0aa:	d00f      	beq.n	800c0cc <LCD__GetBPPDevice+0x2a>
 800c0ac:	1e83      	subs	r3, r0, #2
 800c0ae:	2b06      	cmp	r3, #6
 800c0b0:	d909      	bls.n	800c0c6 <LCD__GetBPPDevice+0x24>
 800c0b2:	f1a0 0309 	sub.w	r3, r0, #9
 800c0b6:	2b07      	cmp	r3, #7
 800c0b8:	d907      	bls.n	800c0ca <LCD__GetBPPDevice+0x28>
 800c0ba:	3811      	subs	r0, #17
 800c0bc:	2810      	cmp	r0, #16
 800c0be:	bf34      	ite	cc
 800c0c0:	2020      	movcc	r0, #32
 800c0c2:	2000      	movcs	r0, #0
 800c0c4:	bd08      	pop	{r3, pc}
 800c0c6:	2008      	movs	r0, #8
 800c0c8:	bd08      	pop	{r3, pc}
 800c0ca:	2010      	movs	r0, #16
 800c0cc:	bd08      	pop	{r3, pc}
	...

0800c0d0 <_SetDrawMode>:
 800c0d0:	b570      	push	{r4, r5, r6, lr}
 800c0d2:	4b08      	ldr	r3, [pc, #32]	; (800c0f4 <_SetDrawMode+0x24>)
 800c0d4:	681b      	ldr	r3, [r3, #0]
 800c0d6:	7c1a      	ldrb	r2, [r3, #16]
 800c0d8:	ea80 0102 	eor.w	r1, r0, r2
 800c0dc:	0749      	lsls	r1, r1, #29
 800c0de:	d505      	bpl.n	800c0ec <_SetDrawMode+0x1c>
 800c0e0:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800c0e2:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 800c0e4:	6826      	ldr	r6, [r4, #0]
 800c0e6:	680d      	ldr	r5, [r1, #0]
 800c0e8:	6025      	str	r5, [r4, #0]
 800c0ea:	600e      	str	r6, [r1, #0]
 800c0ec:	7418      	strb	r0, [r3, #16]
 800c0ee:	4610      	mov	r0, r2
 800c0f0:	bd70      	pop	{r4, r5, r6, pc}
 800c0f2:	bf00      	nop
 800c0f4:	20000274 	.word	0x20000274

0800c0f8 <LCD_SetDrawMode>:
 800c0f8:	b508      	push	{r3, lr}
 800c0fa:	4b02      	ldr	r3, [pc, #8]	; (800c104 <LCD_SetDrawMode+0xc>)
 800c0fc:	681b      	ldr	r3, [r3, #0]
 800c0fe:	689b      	ldr	r3, [r3, #8]
 800c100:	4798      	blx	r3
 800c102:	bd08      	pop	{r3, pc}
 800c104:	20000258 	.word	0x20000258

0800c108 <LCD_DrawPixel>:
 800c108:	b538      	push	{r3, r4, r5, lr}
 800c10a:	4b14      	ldr	r3, [pc, #80]	; (800c15c <LCD_DrawPixel+0x54>)
 800c10c:	681b      	ldr	r3, [r3, #0]
 800c10e:	460a      	mov	r2, r1
 800c110:	f9b3 100a 	ldrsh.w	r1, [r3, #10]
 800c114:	428a      	cmp	r2, r1
 800c116:	4604      	mov	r4, r0
 800c118:	db1e      	blt.n	800c158 <LCD_DrawPixel+0x50>
 800c11a:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800c11e:	428a      	cmp	r2, r1
 800c120:	dc1a      	bgt.n	800c158 <LCD_DrawPixel+0x50>
 800c122:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 800c126:	4288      	cmp	r0, r1
 800c128:	db16      	blt.n	800c158 <LCD_DrawPixel+0x50>
 800c12a:	f9b3 100c 	ldrsh.w	r1, [r3, #12]
 800c12e:	4288      	cmp	r0, r1
 800c130:	dc12      	bgt.n	800c158 <LCD_DrawPixel+0x50>
 800c132:	7c19      	ldrb	r1, [r3, #16]
 800c134:	7c58      	ldrb	r0, [r3, #17]
 800c136:	f011 0f01 	tst.w	r1, #1
 800c13a:	4909      	ldr	r1, [pc, #36]	; (800c160 <LCD_DrawPixel+0x58>)
 800c13c:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 800c140:	d004      	beq.n	800c14c <LCD_DrawPixel+0x44>
 800c142:	68c3      	ldr	r3, [r0, #12]
 800c144:	4621      	mov	r1, r4
 800c146:	69db      	ldr	r3, [r3, #28]
 800c148:	4798      	blx	r3
 800c14a:	bd38      	pop	{r3, r4, r5, pc}
 800c14c:	68c1      	ldr	r1, [r0, #12]
 800c14e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c150:	698d      	ldr	r5, [r1, #24]
 800c152:	681b      	ldr	r3, [r3, #0]
 800c154:	4621      	mov	r1, r4
 800c156:	47a8      	blx	r5
 800c158:	bd38      	pop	{r3, r4, r5, pc}
 800c15a:	bf00      	nop
 800c15c:	20000274 	.word	0x20000274
 800c160:	2001ba34 	.word	0x2001ba34

0800c164 <LCD_DrawHLine>:
 800c164:	b538      	push	{r3, r4, r5, lr}
 800c166:	4b10      	ldr	r3, [pc, #64]	; (800c1a8 <LCD_DrawHLine+0x44>)
 800c168:	681c      	ldr	r4, [r3, #0]
 800c16a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c16e:	4299      	cmp	r1, r3
 800c170:	460d      	mov	r5, r1
 800c172:	db17      	blt.n	800c1a4 <LCD_DrawHLine+0x40>
 800c174:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 800c178:	4299      	cmp	r1, r3
 800c17a:	dc13      	bgt.n	800c1a4 <LCD_DrawHLine+0x40>
 800c17c:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800c180:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c184:	4288      	cmp	r0, r1
 800c186:	bfa8      	it	ge
 800c188:	4601      	movge	r1, r0
 800c18a:	429a      	cmp	r2, r3
 800c18c:	bfb8      	it	lt
 800c18e:	4613      	movlt	r3, r2
 800c190:	428b      	cmp	r3, r1
 800c192:	db07      	blt.n	800c1a4 <LCD_DrawHLine+0x40>
 800c194:	7c60      	ldrb	r0, [r4, #17]
 800c196:	4a05      	ldr	r2, [pc, #20]	; (800c1ac <LCD_DrawHLine+0x48>)
 800c198:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 800c19c:	68c2      	ldr	r2, [r0, #12]
 800c19e:	6894      	ldr	r4, [r2, #8]
 800c1a0:	462a      	mov	r2, r5
 800c1a2:	47a0      	blx	r4
 800c1a4:	bd38      	pop	{r3, r4, r5, pc}
 800c1a6:	bf00      	nop
 800c1a8:	20000274 	.word	0x20000274
 800c1ac:	2001ba34 	.word	0x2001ba34

0800c1b0 <LCD_DrawVLine>:
 800c1b0:	b538      	push	{r3, r4, r5, lr}
 800c1b2:	4b10      	ldr	r3, [pc, #64]	; (800c1f4 <LCD_DrawVLine+0x44>)
 800c1b4:	681c      	ldr	r4, [r3, #0]
 800c1b6:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c1ba:	4605      	mov	r5, r0
 800c1bc:	429d      	cmp	r5, r3
 800c1be:	4610      	mov	r0, r2
 800c1c0:	db17      	blt.n	800c1f2 <LCD_DrawVLine+0x42>
 800c1c2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c1c6:	429d      	cmp	r5, r3
 800c1c8:	dc13      	bgt.n	800c1f2 <LCD_DrawVLine+0x42>
 800c1ca:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800c1ce:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 800c1d2:	4291      	cmp	r1, r2
 800c1d4:	bfa8      	it	ge
 800c1d6:	460a      	movge	r2, r1
 800c1d8:	4298      	cmp	r0, r3
 800c1da:	bfb8      	it	lt
 800c1dc:	4603      	movlt	r3, r0
 800c1de:	4293      	cmp	r3, r2
 800c1e0:	db07      	blt.n	800c1f2 <LCD_DrawVLine+0x42>
 800c1e2:	7c60      	ldrb	r0, [r4, #17]
 800c1e4:	4904      	ldr	r1, [pc, #16]	; (800c1f8 <LCD_DrawVLine+0x48>)
 800c1e6:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 800c1ea:	68c1      	ldr	r1, [r0, #12]
 800c1ec:	68cc      	ldr	r4, [r1, #12]
 800c1ee:	4629      	mov	r1, r5
 800c1f0:	47a0      	blx	r4
 800c1f2:	bd38      	pop	{r3, r4, r5, pc}
 800c1f4:	20000274 	.word	0x20000274
 800c1f8:	2001ba34 	.word	0x2001ba34

0800c1fc <LCD_FillRect>:
 800c1fc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c1fe:	460e      	mov	r6, r1
 800c200:	4912      	ldr	r1, [pc, #72]	; (800c24c <LCD_FillRect+0x50>)
 800c202:	680c      	ldr	r4, [r1, #0]
 800c204:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800c208:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800c20c:	4288      	cmp	r0, r1
 800c20e:	bfa8      	it	ge
 800c210:	4601      	movge	r1, r0
 800c212:	42aa      	cmp	r2, r5
 800c214:	bfb8      	it	lt
 800c216:	4615      	movlt	r5, r2
 800c218:	428d      	cmp	r5, r1
 800c21a:	db14      	blt.n	800c246 <LCD_FillRect+0x4a>
 800c21c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800c220:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 800c224:	4296      	cmp	r6, r2
 800c226:	bfa8      	it	ge
 800c228:	4632      	movge	r2, r6
 800c22a:	4283      	cmp	r3, r0
 800c22c:	bfa8      	it	ge
 800c22e:	4603      	movge	r3, r0
 800c230:	4293      	cmp	r3, r2
 800c232:	db08      	blt.n	800c246 <LCD_FillRect+0x4a>
 800c234:	7c64      	ldrb	r4, [r4, #17]
 800c236:	4806      	ldr	r0, [pc, #24]	; (800c250 <LCD_FillRect+0x54>)
 800c238:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800c23c:	68c4      	ldr	r4, [r0, #12]
 800c23e:	9300      	str	r3, [sp, #0]
 800c240:	6924      	ldr	r4, [r4, #16]
 800c242:	462b      	mov	r3, r5
 800c244:	47a0      	blx	r4
 800c246:	b002      	add	sp, #8
 800c248:	bd70      	pop	{r4, r5, r6, pc}
 800c24a:	bf00      	nop
 800c24c:	20000274 	.word	0x20000274
 800c250:	2001ba34 	.word	0x2001ba34

0800c254 <LCD__DrawBitmap_1bpp>:
 800c254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c258:	f8df c1ac 	ldr.w	ip, [pc, #428]	; 800c408 <LCD__DrawBitmap_1bpp+0x1b4>
 800c25c:	b08f      	sub	sp, #60	; 0x3c
 800c25e:	f8dc c000 	ldr.w	ip, [ip]
 800c262:	9009      	str	r0, [sp, #36]	; 0x24
 800c264:	460e      	mov	r6, r1
 800c266:	4615      	mov	r5, r2
 800c268:	469b      	mov	fp, r3
 800c26a:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800c26c:	f8dd 8078 	ldr.w	r8, [sp, #120]	; 0x78
 800c270:	f1bc 0f00 	cmp.w	ip, #0
 800c274:	d00d      	beq.n	800c292 <LCD__DrawBitmap_1bpp+0x3e>
 800c276:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800c278:	9e19      	ldr	r6, [sp, #100]	; 0x64
 800c27a:	9500      	str	r5, [sp, #0]
 800c27c:	9601      	str	r6, [sp, #4]
 800c27e:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800c280:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800c282:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800c284:	9702      	str	r7, [sp, #8]
 800c286:	9503      	str	r5, [sp, #12]
 800c288:	9404      	str	r4, [sp, #16]
 800c28a:	9605      	str	r6, [sp, #20]
 800c28c:	f8dc 4000 	ldr.w	r4, [ip]
 800c290:	e053      	b.n	800c33a <LCD__DrawBitmap_1bpp+0xe6>
 800c292:	9f18      	ldr	r7, [sp, #96]	; 0x60
 800c294:	9819      	ldr	r0, [sp, #100]	; 0x64
 800c296:	ea47 0300 	orr.w	r3, r7, r0
 800c29a:	2b01      	cmp	r3, #1
 800c29c:	d14f      	bne.n	800c33e <LCD__DrawBitmap_1bpp+0xea>
 800c29e:	4b58      	ldr	r3, [pc, #352]	; (800c400 <LCD__DrawBitmap_1bpp+0x1ac>)
 800c2a0:	6818      	ldr	r0, [r3, #0]
 800c2a2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800c2a6:	1a51      	subs	r1, r2, r1
 800c2a8:	2900      	cmp	r1, #0
 800c2aa:	dd08      	ble.n	800c2be <LCD__DrawBitmap_1bpp+0x6a>
 800c2ac:	ebc1 030b 	rsb	r3, r1, fp
 800c2b0:	2b00      	cmp	r3, #0
 800c2b2:	f340 80a2 	ble.w	800c3fa <LCD__DrawBitmap_1bpp+0x1a6>
 800c2b6:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800c2b8:	fb07 4401 	mla	r4, r7, r1, r4
 800c2bc:	e001      	b.n	800c2c2 <LCD__DrawBitmap_1bpp+0x6e>
 800c2be:	465b      	mov	r3, fp
 800c2c0:	4632      	mov	r2, r6
 800c2c2:	445e      	add	r6, fp
 800c2c4:	f9b0 100e 	ldrsh.w	r1, [r0, #14]
 800c2c8:	3e01      	subs	r6, #1
 800c2ca:	1a76      	subs	r6, r6, r1
 800c2cc:	2e00      	cmp	r6, #0
 800c2ce:	dd03      	ble.n	800c2d8 <LCD__DrawBitmap_1bpp+0x84>
 800c2d0:	1b9b      	subs	r3, r3, r6
 800c2d2:	2b00      	cmp	r3, #0
 800c2d4:	f340 8091 	ble.w	800c3fa <LCD__DrawBitmap_1bpp+0x1a6>
 800c2d8:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c2da:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
 800c2de:	4429      	add	r1, r5
 800c2e0:	3901      	subs	r1, #1
 800c2e2:	1b89      	subs	r1, r1, r6
 800c2e4:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800c2e6:	2900      	cmp	r1, #0
 800c2e8:	bfc8      	it	gt
 800c2ea:	ebc1 0505 	rsbgt	r5, r1, r5
 800c2ee:	ebc8 0106 	rsb	r1, r8, r6
 800c2f2:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800c2f6:	42b1      	cmp	r1, r6
 800c2f8:	da0c      	bge.n	800c314 <LCD__DrawBitmap_1bpp+0xc0>
 800c2fa:	ebc1 0c06 	rsb	ip, r1, r6
 800c2fe:	eb08 070c 	add.w	r7, r8, ip
 800c302:	1b8e      	subs	r6, r1, r6
 800c304:	f02c 0c07 	bic.w	ip, ip, #7
 800c308:	4435      	add	r5, r6
 800c30a:	eb04 04e7 	add.w	r4, r4, r7, asr #3
 800c30e:	4461      	add	r1, ip
 800c310:	f007 0807 	and.w	r8, r7, #7
 800c314:	2d00      	cmp	r5, #0
 800c316:	dd70      	ble.n	800c3fa <LCD__DrawBitmap_1bpp+0x1a6>
 800c318:	7c46      	ldrb	r6, [r0, #17]
 800c31a:	483a      	ldr	r0, [pc, #232]	; (800c404 <LCD__DrawBitmap_1bpp+0x1b0>)
 800c31c:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800c31e:	f850 0026 	ldr.w	r0, [r0, r6, lsl #2]
 800c322:	68c6      	ldr	r6, [r0, #12]
 800c324:	9701      	str	r7, [sp, #4]
 800c326:	9403      	str	r4, [sp, #12]
 800c328:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800c32a:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800c32c:	9300      	str	r3, [sp, #0]
 800c32e:	9702      	str	r7, [sp, #8]
 800c330:	f8cd 8010 	str.w	r8, [sp, #16]
 800c334:	9405      	str	r4, [sp, #20]
 800c336:	6874      	ldr	r4, [r6, #4]
 800c338:	462b      	mov	r3, r5
 800c33a:	47a0      	blx	r4
 800c33c:	e05d      	b.n	800c3fa <LCD__DrawBitmap_1bpp+0x1a6>
 800c33e:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800c340:	f1c7 0708 	rsb	r7, r7, #8
 800c344:	970c      	str	r7, [sp, #48]	; 0x30
 800c346:	4667      	mov	r7, ip
 800c348:	45dc      	cmp	ip, fp
 800c34a:	da56      	bge.n	800c3fa <LCD__DrawBitmap_1bpp+0x1a6>
 800c34c:	4b2c      	ldr	r3, [pc, #176]	; (800c400 <LCD__DrawBitmap_1bpp+0x1ac>)
 800c34e:	9819      	ldr	r0, [sp, #100]	; 0x64
 800c350:	681b      	ldr	r3, [r3, #0]
 800c352:	4430      	add	r0, r6
 800c354:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 800c358:	900a      	str	r0, [sp, #40]	; 0x28
 800c35a:	1e41      	subs	r1, r0, #1
 800c35c:	4291      	cmp	r1, r2
 800c35e:	910b      	str	r1, [sp, #44]	; 0x2c
 800c360:	db45      	blt.n	800c3ee <LCD__DrawBitmap_1bpp+0x19a>
 800c362:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 800c366:	429e      	cmp	r6, r3
 800c368:	dc41      	bgt.n	800c3ee <LCD__DrawBitmap_1bpp+0x19a>
 800c36a:	f04f 0800 	mov.w	r8, #0
 800c36e:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800c372:	9408      	str	r4, [sp, #32]
 800c374:	46c2      	mov	sl, r8
 800c376:	45aa      	cmp	sl, r5
 800c378:	da39      	bge.n	800c3ee <LCD__DrawBitmap_1bpp+0x19a>
 800c37a:	f1b8 0f00 	cmp.w	r8, #0
 800c37e:	d105      	bne.n	800c38c <LCD__DrawBitmap_1bpp+0x138>
 800c380:	9a08      	ldr	r2, [sp, #32]
 800c382:	7817      	ldrb	r7, [r2, #0]
 800c384:	3201      	adds	r2, #1
 800c386:	9208      	str	r2, [sp, #32]
 800c388:	f04f 0808 	mov.w	r8, #8
 800c38c:	980c      	ldr	r0, [sp, #48]	; 0x30
 800c38e:	991a      	ldr	r1, [sp, #104]	; 0x68
 800c390:	4a1b      	ldr	r2, [pc, #108]	; (800c400 <LCD__DrawBitmap_1bpp+0x1ac>)
 800c392:	fa47 f300 	asr.w	r3, r7, r0
 800c396:	ebc1 0808 	rsb	r8, r1, r8
 800c39a:	408f      	lsls	r7, r1
 800c39c:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 800c3a0:	b2ff      	uxtb	r7, r7
 800c3a2:	d103      	bne.n	800c3ac <LCD__DrawBitmap_1bpp+0x158>
 800c3a4:	6810      	ldr	r0, [r2, #0]
 800c3a6:	7c00      	ldrb	r0, [r0, #16]
 800c3a8:	0780      	lsls	r0, r0, #30
 800c3aa:	d41b      	bmi.n	800c3e4 <LCD__DrawBitmap_1bpp+0x190>
 800c3ac:	6812      	ldr	r2, [r2, #0]
 800c3ae:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800c3b0:	6810      	ldr	r0, [r2, #0]
 800c3b2:	900d      	str	r0, [sp, #52]	; 0x34
 800c3b4:	981d      	ldr	r0, [sp, #116]	; 0x74
 800c3b6:	b110      	cbz	r0, 800c3be <LCD__DrawBitmap_1bpp+0x16a>
 800c3b8:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 800c3bc:	e000      	b.n	800c3c0 <LCD__DrawBitmap_1bpp+0x16c>
 800c3be:	b2db      	uxtb	r3, r3
 800c3c0:	9918      	ldr	r1, [sp, #96]	; 0x60
 800c3c2:	6013      	str	r3, [r2, #0]
 800c3c4:	1e4a      	subs	r2, r1, #1
 800c3c6:	444a      	add	r2, r9
 800c3c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c3ca:	f8cd c01c 	str.w	ip, [sp, #28]
 800c3ce:	4648      	mov	r0, r9
 800c3d0:	4631      	mov	r1, r6
 800c3d2:	f7ff ff13 	bl	800c1fc <LCD_FillRect>
 800c3d6:	4b0a      	ldr	r3, [pc, #40]	; (800c400 <LCD__DrawBitmap_1bpp+0x1ac>)
 800c3d8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800c3da:	681b      	ldr	r3, [r3, #0]
 800c3dc:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800c3e0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c3e2:	601a      	str	r2, [r3, #0]
 800c3e4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800c3e6:	f10a 0a01 	add.w	sl, sl, #1
 800c3ea:	4499      	add	r9, r3
 800c3ec:	e7c3      	b.n	800c376 <LCD__DrawBitmap_1bpp+0x122>
 800c3ee:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 800c3f0:	f10c 0c01 	add.w	ip, ip, #1
 800c3f4:	4434      	add	r4, r6
 800c3f6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800c3f8:	e7a6      	b.n	800c348 <LCD__DrawBitmap_1bpp+0xf4>
 800c3fa:	b00f      	add	sp, #60	; 0x3c
 800c3fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c400:	20000274 	.word	0x20000274
 800c404:	2001ba34 	.word	0x2001ba34
 800c408:	2001ba08 	.word	0x2001ba08

0800c40c <LCD_DrawBitmap>:
 800c40c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c410:	f8df c20c 	ldr.w	ip, [pc, #524]	; 800c620 <LCD_DrawBitmap+0x214>
 800c414:	b091      	sub	sp, #68	; 0x44
 800c416:	f8dc 9000 	ldr.w	r9, [ip]
 800c41a:	9207      	str	r2, [sp, #28]
 800c41c:	4605      	mov	r5, r0
 800c41e:	4688      	mov	r8, r1
 800c420:	469b      	mov	fp, r3
 800c422:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 800c424:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 800c426:	f1b9 0f00 	cmp.w	r9, #0
 800c42a:	d00c      	beq.n	800c446 <LCD_DrawBitmap+0x3a>
 800c42c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800c42e:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800c430:	9500      	str	r5, [sp, #0]
 800c432:	9701      	str	r7, [sp, #4]
 800c434:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 800c436:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 800c438:	9602      	str	r6, [sp, #8]
 800c43a:	9503      	str	r5, [sp, #12]
 800c43c:	9404      	str	r4, [sp, #16]
 800c43e:	9705      	str	r7, [sp, #20]
 800c440:	f8d9 4000 	ldr.w	r4, [r9]
 800c444:	e081      	b.n	800c54a <LCD_DrawBitmap+0x13e>
 800c446:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800c448:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800c44a:	ea47 0300 	orr.w	r3, r7, r0
 800c44e:	2b01      	cmp	r3, #1
 800c450:	d17d      	bne.n	800c54e <LCD_DrawBitmap+0x142>
 800c452:	4b71      	ldr	r3, [pc, #452]	; (800c618 <LCD_DrawBitmap+0x20c>)
 800c454:	6818      	ldr	r0, [r3, #0]
 800c456:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800c45a:	1a53      	subs	r3, r2, r1
 800c45c:	2b00      	cmp	r3, #0
 800c45e:	dd08      	ble.n	800c472 <LCD_DrawBitmap+0x66>
 800c460:	ebc3 010b 	rsb	r1, r3, fp
 800c464:	2900      	cmp	r1, #0
 800c466:	f340 80d4 	ble.w	800c612 <LCD_DrawBitmap+0x206>
 800c46a:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800c46c:	fb07 4403 	mla	r4, r7, r3, r4
 800c470:	e001      	b.n	800c476 <LCD_DrawBitmap+0x6a>
 800c472:	4659      	mov	r1, fp
 800c474:	4642      	mov	r2, r8
 800c476:	44d8      	add	r8, fp
 800c478:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 800c47c:	f108 38ff 	add.w	r8, r8, #4294967295
 800c480:	ebc3 0808 	rsb	r8, r3, r8
 800c484:	f1b8 0f00 	cmp.w	r8, #0
 800c488:	dd04      	ble.n	800c494 <LCD_DrawBitmap+0x88>
 800c48a:	ebc8 0101 	rsb	r1, r8, r1
 800c48e:	2900      	cmp	r1, #0
 800c490:	f340 80bf 	ble.w	800c612 <LCD_DrawBitmap+0x206>
 800c494:	9b07      	ldr	r3, [sp, #28]
 800c496:	f9b0 c00c 	ldrsh.w	ip, [r0, #12]
 800c49a:	442b      	add	r3, r5
 800c49c:	3b01      	subs	r3, #1
 800c49e:	ebcc 0303 	rsb	r3, ip, r3
 800c4a2:	2b00      	cmp	r3, #0
 800c4a4:	dd02      	ble.n	800c4ac <LCD_DrawBitmap+0xa0>
 800c4a6:	9f07      	ldr	r7, [sp, #28]
 800c4a8:	1aff      	subs	r7, r7, r3
 800c4aa:	9707      	str	r7, [sp, #28]
 800c4ac:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 800c4b0:	4565      	cmp	r5, ip
 800c4b2:	da33      	bge.n	800c51c <LCD_DrawBitmap+0x110>
 800c4b4:	9f07      	ldr	r7, [sp, #28]
 800c4b6:	ebc5 030c 	rsb	r3, r5, ip
 800c4ba:	1aff      	subs	r7, r7, r3
 800c4bc:	2e08      	cmp	r6, #8
 800c4be:	9707      	str	r7, [sp, #28]
 800c4c0:	d027      	beq.n	800c512 <LCD_DrawBitmap+0x106>
 800c4c2:	dc0d      	bgt.n	800c4e0 <LCD_DrawBitmap+0xd4>
 800c4c4:	2e02      	cmp	r6, #2
 800c4c6:	d014      	beq.n	800c4f2 <LCD_DrawBitmap+0xe6>
 800c4c8:	2e04      	cmp	r6, #4
 800c4ca:	d01a      	beq.n	800c502 <LCD_DrawBitmap+0xf6>
 800c4cc:	2e01      	cmp	r6, #1
 800c4ce:	d126      	bne.n	800c51e <LCD_DrawBitmap+0x112>
 800c4d0:	f023 0c07 	bic.w	ip, r3, #7
 800c4d4:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 800c4d8:	4465      	add	r5, ip
 800c4da:	f003 0307 	and.w	r3, r3, #7
 800c4de:	e01e      	b.n	800c51e <LCD_DrawBitmap+0x112>
 800c4e0:	2e18      	cmp	r6, #24
 800c4e2:	d018      	beq.n	800c516 <LCD_DrawBitmap+0x10a>
 800c4e4:	2e20      	cmp	r6, #32
 800c4e6:	d016      	beq.n	800c516 <LCD_DrawBitmap+0x10a>
 800c4e8:	2e10      	cmp	r6, #16
 800c4ea:	d118      	bne.n	800c51e <LCD_DrawBitmap+0x112>
 800c4ec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800c4f0:	e013      	b.n	800c51a <LCD_DrawBitmap+0x10e>
 800c4f2:	f023 0c03 	bic.w	ip, r3, #3
 800c4f6:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 800c4fa:	4465      	add	r5, ip
 800c4fc:	f003 0303 	and.w	r3, r3, #3
 800c500:	e00d      	b.n	800c51e <LCD_DrawBitmap+0x112>
 800c502:	f023 0c01 	bic.w	ip, r3, #1
 800c506:	eb04 0463 	add.w	r4, r4, r3, asr #1
 800c50a:	4465      	add	r5, ip
 800c50c:	f003 0301 	and.w	r3, r3, #1
 800c510:	e005      	b.n	800c51e <LCD_DrawBitmap+0x112>
 800c512:	441c      	add	r4, r3
 800c514:	e001      	b.n	800c51a <LCD_DrawBitmap+0x10e>
 800c516:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800c51a:	4665      	mov	r5, ip
 800c51c:	2300      	movs	r3, #0
 800c51e:	9f07      	ldr	r7, [sp, #28]
 800c520:	2f00      	cmp	r7, #0
 800c522:	dd76      	ble.n	800c612 <LCD_DrawBitmap+0x206>
 800c524:	f890 e011 	ldrb.w	lr, [r0, #17]
 800c528:	483c      	ldr	r0, [pc, #240]	; (800c61c <LCD_DrawBitmap+0x210>)
 800c52a:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800c52c:	f850 002e 	ldr.w	r0, [r0, lr, lsl #2]
 800c530:	f8d0 e00c 	ldr.w	lr, [r0, #12]
 800c534:	9403      	str	r4, [sp, #12]
 800c536:	e88d 0042 	stmia.w	sp, {r1, r6}
 800c53a:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 800c53c:	9304      	str	r3, [sp, #16]
 800c53e:	9702      	str	r7, [sp, #8]
 800c540:	9405      	str	r4, [sp, #20]
 800c542:	f8de 4004 	ldr.w	r4, [lr, #4]
 800c546:	9b07      	ldr	r3, [sp, #28]
 800c548:	4629      	mov	r1, r5
 800c54a:	47a0      	blx	r4
 800c54c:	e061      	b.n	800c612 <LCD_DrawBitmap+0x206>
 800c54e:	f1c6 0708 	rsb	r7, r6, #8
 800c552:	970e      	str	r7, [sp, #56]	; 0x38
 800c554:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800c558:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800c55a:	455f      	cmp	r7, fp
 800c55c:	da59      	bge.n	800c612 <LCD_DrawBitmap+0x206>
 800c55e:	4b2e      	ldr	r3, [pc, #184]	; (800c618 <LCD_DrawBitmap+0x20c>)
 800c560:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800c562:	681b      	ldr	r3, [r3, #0]
 800c564:	4447      	add	r7, r8
 800c566:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 800c56a:	970c      	str	r7, [sp, #48]	; 0x30
 800c56c:	3f01      	subs	r7, #1
 800c56e:	4297      	cmp	r7, r2
 800c570:	970d      	str	r7, [sp, #52]	; 0x34
 800c572:	db46      	blt.n	800c602 <LCD_DrawBitmap+0x1f6>
 800c574:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 800c578:	4598      	cmp	r8, r3
 800c57a:	dc42      	bgt.n	800c602 <LCD_DrawBitmap+0x1f6>
 800c57c:	f04f 0a00 	mov.w	sl, #0
 800c580:	940b      	str	r4, [sp, #44]	; 0x2c
 800c582:	46ac      	mov	ip, r5
 800c584:	4657      	mov	r7, sl
 800c586:	9807      	ldr	r0, [sp, #28]
 800c588:	4287      	cmp	r7, r0
 800c58a:	da3a      	bge.n	800c602 <LCD_DrawBitmap+0x1f6>
 800c58c:	f1ba 0f00 	cmp.w	sl, #0
 800c590:	d106      	bne.n	800c5a0 <LCD_DrawBitmap+0x194>
 800c592:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800c594:	f890 9000 	ldrb.w	r9, [r0]
 800c598:	3001      	adds	r0, #1
 800c59a:	900b      	str	r0, [sp, #44]	; 0x2c
 800c59c:	f04f 0a08 	mov.w	sl, #8
 800c5a0:	990e      	ldr	r1, [sp, #56]	; 0x38
 800c5a2:	4a1d      	ldr	r2, [pc, #116]	; (800c618 <LCD_DrawBitmap+0x20c>)
 800c5a4:	fa49 f301 	asr.w	r3, r9, r1
 800c5a8:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 800c5ac:	fa09 f906 	lsl.w	r9, r9, r6
 800c5b0:	fa5f f989 	uxtb.w	r9, r9
 800c5b4:	ebc6 0a0a 	rsb	sl, r6, sl
 800c5b8:	d103      	bne.n	800c5c2 <LCD_DrawBitmap+0x1b6>
 800c5ba:	6810      	ldr	r0, [r2, #0]
 800c5bc:	7c00      	ldrb	r0, [r0, #16]
 800c5be:	0780      	lsls	r0, r0, #30
 800c5c0:	d41b      	bmi.n	800c5fa <LCD_DrawBitmap+0x1ee>
 800c5c2:	6812      	ldr	r2, [r2, #0]
 800c5c4:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800c5c6:	6810      	ldr	r0, [r2, #0]
 800c5c8:	900f      	str	r0, [sp, #60]	; 0x3c
 800c5ca:	981f      	ldr	r0, [sp, #124]	; 0x7c
 800c5cc:	b110      	cbz	r0, 800c5d4 <LCD_DrawBitmap+0x1c8>
 800c5ce:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 800c5d2:	e000      	b.n	800c5d6 <LCD_DrawBitmap+0x1ca>
 800c5d4:	b2db      	uxtb	r3, r3
 800c5d6:	991a      	ldr	r1, [sp, #104]	; 0x68
 800c5d8:	6013      	str	r3, [r2, #0]
 800c5da:	1e4a      	subs	r2, r1, #1
 800c5dc:	4462      	add	r2, ip
 800c5de:	4660      	mov	r0, ip
 800c5e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c5e2:	f8cd c020 	str.w	ip, [sp, #32]
 800c5e6:	4641      	mov	r1, r8
 800c5e8:	f7ff fe08 	bl	800c1fc <LCD_FillRect>
 800c5ec:	4b0a      	ldr	r3, [pc, #40]	; (800c618 <LCD_DrawBitmap+0x20c>)
 800c5ee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800c5f0:	681b      	ldr	r3, [r3, #0]
 800c5f2:	f8dd c020 	ldr.w	ip, [sp, #32]
 800c5f6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c5f8:	601a      	str	r2, [r3, #0]
 800c5fa:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800c5fc:	3701      	adds	r7, #1
 800c5fe:	449c      	add	ip, r3
 800c600:	e7c1      	b.n	800c586 <LCD_DrawBitmap+0x17a>
 800c602:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800c604:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800c608:	3701      	adds	r7, #1
 800c60a:	970a      	str	r7, [sp, #40]	; 0x28
 800c60c:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800c60e:	443c      	add	r4, r7
 800c610:	e7a2      	b.n	800c558 <LCD_DrawBitmap+0x14c>
 800c612:	b011      	add	sp, #68	; 0x44
 800c614:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c618:	20000274 	.word	0x20000274
 800c61c:	2001ba34 	.word	0x2001ba34
 800c620:	2001ba08 	.word	0x2001ba08

0800c624 <LCD_SetClipRectMax>:
 800c624:	b508      	push	{r3, lr}
 800c626:	4b05      	ldr	r3, [pc, #20]	; (800c63c <LCD_SetClipRectMax+0x18>)
 800c628:	6819      	ldr	r1, [r3, #0]
 800c62a:	4b05      	ldr	r3, [pc, #20]	; (800c640 <LCD_SetClipRectMax+0x1c>)
 800c62c:	7c4a      	ldrb	r2, [r1, #17]
 800c62e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800c632:	68c3      	ldr	r3, [r0, #12]
 800c634:	3108      	adds	r1, #8
 800c636:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c638:	4798      	blx	r3
 800c63a:	bd08      	pop	{r3, pc}
 800c63c:	20000274 	.word	0x20000274
 800c640:	2001ba34 	.word	0x2001ba34

0800c644 <emWin_LCD_Init>:
 800c644:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c646:	f7ff ffed 	bl	800c624 <LCD_SetClipRectMax>
 800c64a:	f006 fc01 	bl	8012e50 <LCD_InitColors>
 800c64e:	4604      	mov	r4, r0
 800c650:	2800      	cmp	r0, #0
 800c652:	d13d      	bne.n	800c6d0 <emWin_LCD_Init+0x8c>
 800c654:	4605      	mov	r5, r0
 800c656:	4628      	mov	r0, r5
 800c658:	f002 f9ae 	bl	800e9b8 <GUI_DEVICE__GetpDriver>
 800c65c:	9001      	str	r0, [sp, #4]
 800c65e:	b148      	cbz	r0, 800c674 <emWin_LCD_Init+0x30>
 800c660:	68c3      	ldr	r3, [r0, #12]
 800c662:	210c      	movs	r1, #12
 800c664:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c666:	a801      	add	r0, sp, #4
 800c668:	4798      	blx	r3
 800c66a:	4603      	mov	r3, r0
 800c66c:	b370      	cbz	r0, 800c6cc <emWin_LCD_Init+0x88>
 800c66e:	9801      	ldr	r0, [sp, #4]
 800c670:	4798      	blx	r3
 800c672:	4304      	orrs	r4, r0
 800c674:	3501      	adds	r5, #1
 800c676:	2d02      	cmp	r5, #2
 800c678:	d1ed      	bne.n	800c656 <emWin_LCD_Init+0x12>
 800c67a:	bb4c      	cbnz	r4, 800c6d0 <emWin_LCD_Init+0x8c>
 800c67c:	f006 fc04 	bl	8012e88 <LCD_InitLUT>
 800c680:	2401      	movs	r4, #1
 800c682:	4620      	mov	r0, r4
 800c684:	f002 f998 	bl	800e9b8 <GUI_DEVICE__GetpDriver>
 800c688:	9001      	str	r0, [sp, #4]
 800c68a:	b1d0      	cbz	r0, 800c6c2 <emWin_LCD_Init+0x7e>
 800c68c:	4620      	mov	r0, r4
 800c68e:	f001 fabd 	bl	800dc0c <GUI_SelectLayer>
 800c692:	2004      	movs	r0, #4
 800c694:	f7ff fd30 	bl	800c0f8 <LCD_SetDrawMode>
 800c698:	f643 72ff 	movw	r2, #16383	; 0x3fff
 800c69c:	2000      	movs	r0, #0
 800c69e:	4601      	mov	r1, r0
 800c6a0:	4613      	mov	r3, r2
 800c6a2:	f7ff fdab 	bl	800c1fc <LCD_FillRect>
 800c6a6:	2000      	movs	r0, #0
 800c6a8:	f7ff fd26 	bl	800c0f8 <LCD_SetDrawMode>
 800c6ac:	a802      	add	r0, sp, #8
 800c6ae:	210e      	movs	r1, #14
 800c6b0:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800c6b4:	68db      	ldr	r3, [r3, #12]
 800c6b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c6b8:	4798      	blx	r3
 800c6ba:	4603      	mov	r3, r0
 800c6bc:	b108      	cbz	r0, 800c6c2 <emWin_LCD_Init+0x7e>
 800c6be:	9801      	ldr	r0, [sp, #4]
 800c6c0:	4798      	blx	r3
 800c6c2:	f114 34ff 	adds.w	r4, r4, #4294967295
 800c6c6:	d2dc      	bcs.n	800c682 <emWin_LCD_Init+0x3e>
 800c6c8:	2000      	movs	r0, #0
 800c6ca:	e002      	b.n	800c6d2 <emWin_LCD_Init+0x8e>
 800c6cc:	2001      	movs	r0, #1
 800c6ce:	e000      	b.n	800c6d2 <emWin_LCD_Init+0x8e>
 800c6d0:	4620      	mov	r0, r4
 800c6d2:	b003      	add	sp, #12
 800c6d4:	bd30      	pop	{r4, r5, pc}
	...

0800c6d8 <LCD_Color2Index>:
 800c6d8:	b508      	push	{r3, lr}
 800c6da:	4b05      	ldr	r3, [pc, #20]	; (800c6f0 <LCD_Color2Index+0x18>)
 800c6dc:	681b      	ldr	r3, [r3, #0]
 800c6de:	7c5a      	ldrb	r2, [r3, #17]
 800c6e0:	4b04      	ldr	r3, [pc, #16]	; (800c6f4 <LCD_Color2Index+0x1c>)
 800c6e2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800c6e6:	691b      	ldr	r3, [r3, #16]
 800c6e8:	681b      	ldr	r3, [r3, #0]
 800c6ea:	4798      	blx	r3
 800c6ec:	bd08      	pop	{r3, pc}
 800c6ee:	bf00      	nop
 800c6f0:	20000274 	.word	0x20000274
 800c6f4:	2001ba34 	.word	0x2001ba34

0800c6f8 <LCD_Index2Color>:
 800c6f8:	b508      	push	{r3, lr}
 800c6fa:	4b05      	ldr	r3, [pc, #20]	; (800c710 <LCD_Index2Color+0x18>)
 800c6fc:	681b      	ldr	r3, [r3, #0]
 800c6fe:	7c5a      	ldrb	r2, [r3, #17]
 800c700:	4b04      	ldr	r3, [pc, #16]	; (800c714 <LCD_Index2Color+0x1c>)
 800c702:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800c706:	691b      	ldr	r3, [r3, #16]
 800c708:	685b      	ldr	r3, [r3, #4]
 800c70a:	4798      	blx	r3
 800c70c:	bd08      	pop	{r3, pc}
 800c70e:	bf00      	nop
 800c710:	20000274 	.word	0x20000274
 800c714:	2001ba34 	.word	0x2001ba34

0800c718 <LCD_SetColorIndex>:
 800c718:	4b04      	ldr	r3, [pc, #16]	; (800c72c <LCD_SetColorIndex+0x14>)
 800c71a:	681b      	ldr	r3, [r3, #0]
 800c71c:	7c1a      	ldrb	r2, [r3, #16]
 800c71e:	0752      	lsls	r2, r2, #29
 800c720:	bf4c      	ite	mi
 800c722:	6b9b      	ldrmi	r3, [r3, #56]	; 0x38
 800c724:	6bdb      	ldrpl	r3, [r3, #60]	; 0x3c
 800c726:	6018      	str	r0, [r3, #0]
 800c728:	4770      	bx	lr
 800c72a:	bf00      	nop
 800c72c:	20000274 	.word	0x20000274

0800c730 <_SetColor>:
 800c730:	b508      	push	{r3, lr}
 800c732:	4b06      	ldr	r3, [pc, #24]	; (800c74c <_SetColor+0x1c>)
 800c734:	681b      	ldr	r3, [r3, #0]
 800c736:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800c738:	4281      	cmp	r1, r0
 800c73a:	d006      	beq.n	800c74a <_SetColor+0x1a>
 800c73c:	6318      	str	r0, [r3, #48]	; 0x30
 800c73e:	f7ff ffcb 	bl	800c6d8 <LCD_Color2Index>
 800c742:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c746:	f7ff bfe7 	b.w	800c718 <LCD_SetColorIndex>
 800c74a:	bd08      	pop	{r3, pc}
 800c74c:	20000274 	.word	0x20000274

0800c750 <LCD_SetBkColorIndex>:
 800c750:	4b04      	ldr	r3, [pc, #16]	; (800c764 <LCD_SetBkColorIndex+0x14>)
 800c752:	681b      	ldr	r3, [r3, #0]
 800c754:	7c1a      	ldrb	r2, [r3, #16]
 800c756:	0752      	lsls	r2, r2, #29
 800c758:	bf4c      	ite	mi
 800c75a:	6bdb      	ldrmi	r3, [r3, #60]	; 0x3c
 800c75c:	6b9b      	ldrpl	r3, [r3, #56]	; 0x38
 800c75e:	6018      	str	r0, [r3, #0]
 800c760:	4770      	bx	lr
 800c762:	bf00      	nop
 800c764:	20000274 	.word	0x20000274

0800c768 <_SetBkColor>:
 800c768:	b508      	push	{r3, lr}
 800c76a:	4b06      	ldr	r3, [pc, #24]	; (800c784 <_SetBkColor+0x1c>)
 800c76c:	681b      	ldr	r3, [r3, #0]
 800c76e:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800c770:	4281      	cmp	r1, r0
 800c772:	d006      	beq.n	800c782 <_SetBkColor+0x1a>
 800c774:	6358      	str	r0, [r3, #52]	; 0x34
 800c776:	f7ff ffaf 	bl	800c6d8 <LCD_Color2Index>
 800c77a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c77e:	f7ff bfe7 	b.w	800c750 <LCD_SetBkColorIndex>
 800c782:	bd08      	pop	{r3, pc}
 800c784:	20000274 	.word	0x20000274

0800c788 <LCD_SetBkColor>:
 800c788:	b508      	push	{r3, lr}
 800c78a:	4b02      	ldr	r3, [pc, #8]	; (800c794 <LCD_SetBkColor+0xc>)
 800c78c:	681b      	ldr	r3, [r3, #0]
 800c78e:	685b      	ldr	r3, [r3, #4]
 800c790:	4798      	blx	r3
 800c792:	bd08      	pop	{r3, pc}
 800c794:	20000258 	.word	0x20000258

0800c798 <LCD_SetColor>:
 800c798:	b508      	push	{r3, lr}
 800c79a:	4b02      	ldr	r3, [pc, #8]	; (800c7a4 <LCD_SetColor+0xc>)
 800c79c:	681b      	ldr	r3, [r3, #0]
 800c79e:	681b      	ldr	r3, [r3, #0]
 800c7a0:	4798      	blx	r3
 800c7a2:	bd08      	pop	{r3, pc}
 800c7a4:	20000258 	.word	0x20000258

0800c7a8 <GUI__memset16>:
 800c7a8:	b570      	push	{r4, r5, r6, lr}
 800c7aa:	0784      	lsls	r4, r0, #30
 800c7ac:	d502      	bpl.n	800c7b4 <GUI__memset16+0xc>
 800c7ae:	8001      	strh	r1, [r0, #0]
 800c7b0:	3a01      	subs	r2, #1
 800c7b2:	3002      	adds	r0, #2
 800c7b4:	0855      	lsrs	r5, r2, #1
 800c7b6:	462b      	mov	r3, r5
 800c7b8:	b305      	cbz	r5, 800c7fc <GUI__memset16+0x54>
 800c7ba:	2d03      	cmp	r5, #3
 800c7bc:	eb01 4401 	add.w	r4, r1, r1, lsl #16
 800c7c0:	dc02      	bgt.n	800c7c8 <GUI__memset16+0x20>
 800c7c2:	4606      	mov	r6, r0
 800c7c4:	461d      	mov	r5, r3
 800c7c6:	e012      	b.n	800c7ee <GUI__memset16+0x46>
 800c7c8:	4603      	mov	r3, r0
 800c7ca:	462e      	mov	r6, r5
 800c7cc:	3e04      	subs	r6, #4
 800c7ce:	2e03      	cmp	r6, #3
 800c7d0:	601c      	str	r4, [r3, #0]
 800c7d2:	605c      	str	r4, [r3, #4]
 800c7d4:	609c      	str	r4, [r3, #8]
 800c7d6:	60dc      	str	r4, [r3, #12]
 800c7d8:	f103 0310 	add.w	r3, r3, #16
 800c7dc:	dcf6      	bgt.n	800c7cc <GUI__memset16+0x24>
 800c7de:	3d04      	subs	r5, #4
 800c7e0:	08ab      	lsrs	r3, r5, #2
 800c7e2:	1c5e      	adds	r6, r3, #1
 800c7e4:	eb00 1006 	add.w	r0, r0, r6, lsl #4
 800c7e8:	eba5 0383 	sub.w	r3, r5, r3, lsl #2
 800c7ec:	e7e9      	b.n	800c7c2 <GUI__memset16+0x1a>
 800c7ee:	b11d      	cbz	r5, 800c7f8 <GUI__memset16+0x50>
 800c7f0:	f846 4b04 	str.w	r4, [r6], #4
 800c7f4:	3d01      	subs	r5, #1
 800c7f6:	e7fa      	b.n	800c7ee <GUI__memset16+0x46>
 800c7f8:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800c7fc:	07d3      	lsls	r3, r2, #31
 800c7fe:	bf48      	it	mi
 800c800:	8001      	strhmi	r1, [r0, #0]
 800c802:	bd70      	pop	{r4, r5, r6, pc}

0800c804 <GUI__memset>:
 800c804:	b570      	push	{r4, r5, r6, lr}
 800c806:	b12a      	cbz	r2, 800c814 <GUI__memset+0x10>
 800c808:	0783      	lsls	r3, r0, #30
 800c80a:	d003      	beq.n	800c814 <GUI__memset+0x10>
 800c80c:	f800 1b01 	strb.w	r1, [r0], #1
 800c810:	3a01      	subs	r2, #1
 800c812:	e7f8      	b.n	800c806 <GUI__memset+0x2>
 800c814:	0893      	lsrs	r3, r2, #2
 800c816:	d101      	bne.n	800c81c <GUI__memset+0x18>
 800c818:	4402      	add	r2, r0
 800c81a:	e017      	b.n	800c84c <GUI__memset+0x48>
 800c81c:	f04f 3401 	mov.w	r4, #16843009	; 0x1010101
 800c820:	f002 0203 	and.w	r2, r2, #3
 800c824:	434c      	muls	r4, r1
 800c826:	2b03      	cmp	r3, #3
 800c828:	4605      	mov	r5, r0
 800c82a:	dd06      	ble.n	800c83a <GUI__memset+0x36>
 800c82c:	6004      	str	r4, [r0, #0]
 800c82e:	6044      	str	r4, [r0, #4]
 800c830:	6084      	str	r4, [r0, #8]
 800c832:	60c4      	str	r4, [r0, #12]
 800c834:	3b04      	subs	r3, #4
 800c836:	3010      	adds	r0, #16
 800c838:	e7f5      	b.n	800c826 <GUI__memset+0x22>
 800c83a:	461e      	mov	r6, r3
 800c83c:	b11b      	cbz	r3, 800c846 <GUI__memset+0x42>
 800c83e:	f845 4b04 	str.w	r4, [r5], #4
 800c842:	3b01      	subs	r3, #1
 800c844:	e7fa      	b.n	800c83c <GUI__memset+0x38>
 800c846:	eb00 0086 	add.w	r0, r0, r6, lsl #2
 800c84a:	e7e5      	b.n	800c818 <GUI__memset+0x14>
 800c84c:	4290      	cmp	r0, r2
 800c84e:	d002      	beq.n	800c856 <GUI__memset+0x52>
 800c850:	f800 1b01 	strb.w	r1, [r0], #1
 800c854:	e7fa      	b.n	800c84c <GUI__memset+0x48>
 800c856:	bd70      	pop	{r4, r5, r6, pc}

0800c858 <GUI__SetText>:
 800c858:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c85a:	6807      	ldr	r7, [r0, #0]
 800c85c:	4605      	mov	r5, r0
 800c85e:	4638      	mov	r0, r7
 800c860:	460e      	mov	r6, r1
 800c862:	f006 fb77 	bl	8012f54 <GUI__strcmp_hp>
 800c866:	b908      	cbnz	r0, 800c86c <GUI__SetText+0x14>
 800c868:	2000      	movs	r0, #0
 800c86a:	e02e      	b.n	800c8ca <GUI__SetText+0x72>
 800c86c:	4630      	mov	r0, r6
 800c86e:	f006 fb51 	bl	8012f14 <GUI__strlen>
 800c872:	1c44      	adds	r4, r0, #1
 800c874:	4638      	mov	r0, r7
 800c876:	f002 fe27 	bl	800f4c8 <GUI_ALLOC_GetSize>
 800c87a:	4284      	cmp	r4, r0
 800c87c:	d10f      	bne.n	800c89e <GUI__SetText+0x46>
 800c87e:	2c00      	cmp	r4, #0
 800c880:	d0f2      	beq.n	800c868 <GUI__SetText+0x10>
 800c882:	4638      	mov	r0, r7
 800c884:	f002 fdf2 	bl	800f46c <GUI_ALLOC_LockH>
 800c888:	ad02      	add	r5, sp, #8
 800c88a:	4631      	mov	r1, r6
 800c88c:	f845 0d04 	str.w	r0, [r5, #-4]!
 800c890:	4622      	mov	r2, r4
 800c892:	f008 fcf4 	bl	801527e <memcpy>
 800c896:	4628      	mov	r0, r5
 800c898:	f002 fdf6 	bl	800f488 <GUI_ALLOC_UnlockH>
 800c89c:	e014      	b.n	800c8c8 <GUI__SetText+0x70>
 800c89e:	4620      	mov	r0, r4
 800c8a0:	f003 f838 	bl	800f914 <GUI_ALLOC_AllocNoInit>
 800c8a4:	4607      	mov	r7, r0
 800c8a6:	2800      	cmp	r0, #0
 800c8a8:	d0de      	beq.n	800c868 <GUI__SetText+0x10>
 800c8aa:	f002 fddf 	bl	800f46c <GUI_ALLOC_LockH>
 800c8ae:	ac02      	add	r4, sp, #8
 800c8b0:	4631      	mov	r1, r6
 800c8b2:	f844 0d04 	str.w	r0, [r4, #-4]!
 800c8b6:	f008 fde7 	bl	8015488 <strcpy>
 800c8ba:	4620      	mov	r0, r4
 800c8bc:	f002 fde4 	bl	800f488 <GUI_ALLOC_UnlockH>
 800c8c0:	4628      	mov	r0, r5
 800c8c2:	f003 f82b 	bl	800f91c <GUI_ALLOC_FreePtr>
 800c8c6:	602f      	str	r7, [r5, #0]
 800c8c8:	2001      	movs	r0, #1
 800c8ca:	b003      	add	sp, #12
 800c8cc:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c8ce <GUI__ReduceRect>:
 800c8ce:	880b      	ldrh	r3, [r1, #0]
 800c8d0:	b292      	uxth	r2, r2
 800c8d2:	4413      	add	r3, r2
 800c8d4:	8003      	strh	r3, [r0, #0]
 800c8d6:	888b      	ldrh	r3, [r1, #4]
 800c8d8:	1a9b      	subs	r3, r3, r2
 800c8da:	8083      	strh	r3, [r0, #4]
 800c8dc:	884b      	ldrh	r3, [r1, #2]
 800c8de:	4413      	add	r3, r2
 800c8e0:	8043      	strh	r3, [r0, #2]
 800c8e2:	88cb      	ldrh	r3, [r1, #6]
 800c8e4:	1a9a      	subs	r2, r3, r2
 800c8e6:	80c2      	strh	r2, [r0, #6]
 800c8e8:	4770      	bx	lr
	...

0800c8ec <GUI__ManageCacheEx>:
 800c8ec:	2801      	cmp	r0, #1
 800c8ee:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c8f0:	4604      	mov	r4, r0
 800c8f2:	460d      	mov	r5, r1
 800c8f4:	dc65      	bgt.n	800c9c2 <GUI__ManageCacheEx+0xd6>
 800c8f6:	4b34      	ldr	r3, [pc, #208]	; (800c9c8 <GUI__ManageCacheEx+0xdc>)
 800c8f8:	681b      	ldr	r3, [r3, #0]
 800c8fa:	b103      	cbz	r3, 800c8fe <GUI__ManageCacheEx+0x12>
 800c8fc:	4798      	blx	r3
 800c8fe:	2d01      	cmp	r5, #1
 800c900:	d004      	beq.n	800c90c <GUI__ManageCacheEx+0x20>
 800c902:	2d02      	cmp	r5, #2
 800c904:	d021      	beq.n	800c94a <GUI__ManageCacheEx+0x5e>
 800c906:	2d00      	cmp	r5, #0
 800c908:	d15b      	bne.n	800c9c2 <GUI__ManageCacheEx+0xd6>
 800c90a:	e035      	b.n	800c978 <GUI__ManageCacheEx+0x8c>
 800c90c:	4e2f      	ldr	r6, [pc, #188]	; (800c9cc <GUI__ManageCacheEx+0xe0>)
 800c90e:	f856 7024 	ldr.w	r7, [r6, r4, lsl #2]
 800c912:	b9b7      	cbnz	r7, 800c942 <GUI__ManageCacheEx+0x56>
 800c914:	4620      	mov	r0, r4
 800c916:	f002 f84f 	bl	800e9b8 <GUI_DEVICE__GetpDriver>
 800c91a:	9001      	str	r0, [sp, #4]
 800c91c:	2800      	cmp	r0, #0
 800c91e:	d050      	beq.n	800c9c2 <GUI__ManageCacheEx+0xd6>
 800c920:	68c3      	ldr	r3, [r0, #12]
 800c922:	210d      	movs	r1, #13
 800c924:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c926:	a801      	add	r0, sp, #4
 800c928:	4798      	blx	r3
 800c92a:	4603      	mov	r3, r0
 800c92c:	2800      	cmp	r0, #0
 800c92e:	d048      	beq.n	800c9c2 <GUI__ManageCacheEx+0xd6>
 800c930:	9801      	ldr	r0, [sp, #4]
 800c932:	4629      	mov	r1, r5
 800c934:	4798      	blx	r3
 800c936:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 800c93a:	3301      	adds	r3, #1
 800c93c:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
 800c940:	e018      	b.n	800c974 <GUI__ManageCacheEx+0x88>
 800c942:	3701      	adds	r7, #1
 800c944:	f846 7024 	str.w	r7, [r6, r4, lsl #2]
 800c948:	e03b      	b.n	800c9c2 <GUI__ManageCacheEx+0xd6>
 800c94a:	4620      	mov	r0, r4
 800c94c:	f002 f834 	bl	800e9b8 <GUI_DEVICE__GetpDriver>
 800c950:	9001      	str	r0, [sp, #4]
 800c952:	2800      	cmp	r0, #0
 800c954:	d035      	beq.n	800c9c2 <GUI__ManageCacheEx+0xd6>
 800c956:	68c3      	ldr	r3, [r0, #12]
 800c958:	210d      	movs	r1, #13
 800c95a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c95c:	a801      	add	r0, sp, #4
 800c95e:	4798      	blx	r3
 800c960:	4604      	mov	r4, r0
 800c962:	2800      	cmp	r0, #0
 800c964:	d02d      	beq.n	800c9c2 <GUI__ManageCacheEx+0xd6>
 800c966:	4b1a      	ldr	r3, [pc, #104]	; (800c9d0 <GUI__ManageCacheEx+0xe4>)
 800c968:	681b      	ldr	r3, [r3, #0]
 800c96a:	b103      	cbz	r3, 800c96e <GUI__ManageCacheEx+0x82>
 800c96c:	4798      	blx	r3
 800c96e:	9801      	ldr	r0, [sp, #4]
 800c970:	2102      	movs	r1, #2
 800c972:	47a0      	blx	r4
 800c974:	2000      	movs	r0, #0
 800c976:	e025      	b.n	800c9c4 <GUI__ManageCacheEx+0xd8>
 800c978:	4d14      	ldr	r5, [pc, #80]	; (800c9cc <GUI__ManageCacheEx+0xe0>)
 800c97a:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 800c97e:	2b01      	cmp	r3, #1
 800c980:	d001      	beq.n	800c986 <GUI__ManageCacheEx+0x9a>
 800c982:	2001      	movs	r0, #1
 800c984:	e015      	b.n	800c9b2 <GUI__ManageCacheEx+0xc6>
 800c986:	4620      	mov	r0, r4
 800c988:	f002 f816 	bl	800e9b8 <GUI_DEVICE__GetpDriver>
 800c98c:	9001      	str	r0, [sp, #4]
 800c98e:	2800      	cmp	r0, #0
 800c990:	d0f7      	beq.n	800c982 <GUI__ManageCacheEx+0x96>
 800c992:	68c3      	ldr	r3, [r0, #12]
 800c994:	210d      	movs	r1, #13
 800c996:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c998:	a801      	add	r0, sp, #4
 800c99a:	4798      	blx	r3
 800c99c:	4606      	mov	r6, r0
 800c99e:	2800      	cmp	r0, #0
 800c9a0:	d0ef      	beq.n	800c982 <GUI__ManageCacheEx+0x96>
 800c9a2:	4b0b      	ldr	r3, [pc, #44]	; (800c9d0 <GUI__ManageCacheEx+0xe4>)
 800c9a4:	681b      	ldr	r3, [r3, #0]
 800c9a6:	b103      	cbz	r3, 800c9aa <GUI__ManageCacheEx+0xbe>
 800c9a8:	4798      	blx	r3
 800c9aa:	9801      	ldr	r0, [sp, #4]
 800c9ac:	2100      	movs	r1, #0
 800c9ae:	47b0      	blx	r6
 800c9b0:	2000      	movs	r0, #0
 800c9b2:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 800c9b6:	2b00      	cmp	r3, #0
 800c9b8:	bf18      	it	ne
 800c9ba:	3b01      	subne	r3, #1
 800c9bc:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 800c9c0:	e000      	b.n	800c9c4 <GUI__ManageCacheEx+0xd8>
 800c9c2:	2001      	movs	r0, #1
 800c9c4:	b003      	add	sp, #12
 800c9c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c9c8:	20019d18 	.word	0x20019d18
 800c9cc:	20019d10 	.word	0x20019d10
 800c9d0:	20019d0c 	.word	0x20019d0c

0800c9d4 <GUI__ManageCache>:
 800c9d4:	4b02      	ldr	r3, [pc, #8]	; (800c9e0 <GUI__ManageCache+0xc>)
 800c9d6:	681b      	ldr	r3, [r3, #0]
 800c9d8:	4601      	mov	r1, r0
 800c9da:	7c58      	ldrb	r0, [r3, #17]
 800c9dc:	f7ff bf86 	b.w	800c8ec <GUI__ManageCacheEx>
 800c9e0:	20000274 	.word	0x20000274

0800c9e4 <GUI__IntersectRects>:
 800c9e4:	b570      	push	{r4, r5, r6, lr}
 800c9e6:	f9b2 3000 	ldrsh.w	r3, [r2]
 800c9ea:	f9b1 4000 	ldrsh.w	r4, [r1]
 800c9ee:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800c9f2:	f9b1 6004 	ldrsh.w	r6, [r1, #4]
 800c9f6:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 800c9fa:	429c      	cmp	r4, r3
 800c9fc:	bfb8      	it	lt
 800c9fe:	461c      	movlt	r4, r3
 800ca00:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800ca04:	429d      	cmp	r5, r3
 800ca06:	bfa8      	it	ge
 800ca08:	462b      	movge	r3, r5
 800ca0a:	f9b2 5004 	ldrsh.w	r5, [r2, #4]
 800ca0e:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800ca12:	42ae      	cmp	r6, r5
 800ca14:	bfb8      	it	lt
 800ca16:	4635      	movlt	r5, r6
 800ca18:	b2a4      	uxth	r4, r4
 800ca1a:	b2ad      	uxth	r5, r5
 800ca1c:	4291      	cmp	r1, r2
 800ca1e:	bfb8      	it	lt
 800ca20:	460a      	movlt	r2, r1
 800ca22:	8004      	strh	r4, [r0, #0]
 800ca24:	8085      	strh	r5, [r0, #4]
 800ca26:	b224      	sxth	r4, r4
 800ca28:	b22d      	sxth	r5, r5
 800ca2a:	b29b      	uxth	r3, r3
 800ca2c:	b292      	uxth	r2, r2
 800ca2e:	42a5      	cmp	r5, r4
 800ca30:	8043      	strh	r3, [r0, #2]
 800ca32:	80c2      	strh	r2, [r0, #6]
 800ca34:	db06      	blt.n	800ca44 <GUI__IntersectRects+0x60>
 800ca36:	b210      	sxth	r0, r2
 800ca38:	b21b      	sxth	r3, r3
 800ca3a:	4298      	cmp	r0, r3
 800ca3c:	bfb4      	ite	lt
 800ca3e:	2000      	movlt	r0, #0
 800ca40:	2001      	movge	r0, #1
 800ca42:	bd70      	pop	{r4, r5, r6, pc}
 800ca44:	2000      	movs	r0, #0
 800ca46:	bd70      	pop	{r4, r5, r6, pc}

0800ca48 <GUI__IntersectRect>:
 800ca48:	880b      	ldrh	r3, [r1, #0]
 800ca4a:	b510      	push	{r4, lr}
 800ca4c:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ca50:	b21a      	sxth	r2, r3
 800ca52:	4294      	cmp	r4, r2
 800ca54:	bfb8      	it	lt
 800ca56:	8003      	strhlt	r3, [r0, #0]
 800ca58:	884b      	ldrh	r3, [r1, #2]
 800ca5a:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800ca5e:	b21a      	sxth	r2, r3
 800ca60:	4294      	cmp	r4, r2
 800ca62:	bfb8      	it	lt
 800ca64:	8043      	strhlt	r3, [r0, #2]
 800ca66:	888b      	ldrh	r3, [r1, #4]
 800ca68:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800ca6c:	b21a      	sxth	r2, r3
 800ca6e:	4294      	cmp	r4, r2
 800ca70:	bfc8      	it	gt
 800ca72:	8083      	strhgt	r3, [r0, #4]
 800ca74:	88cb      	ldrh	r3, [r1, #6]
 800ca76:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800ca7a:	b21a      	sxth	r2, r3
 800ca7c:	4291      	cmp	r1, r2
 800ca7e:	bfc8      	it	gt
 800ca80:	80c3      	strhgt	r3, [r0, #6]
 800ca82:	bd10      	pop	{r4, pc}

0800ca84 <GUI__MixColors>:
 800ca84:	f001 437f 	and.w	r3, r1, #4278190080	; 0xff000000
 800ca88:	f1b3 4f7f 	cmp.w	r3, #4278190080	; 0xff000000
 800ca8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ca8e:	d027      	beq.n	800cae0 <GUI__MixColors+0x5c>
 800ca90:	43d3      	mvns	r3, r2
 800ca92:	b2db      	uxtb	r3, r3
 800ca94:	b2cd      	uxtb	r5, r1
 800ca96:	b2c6      	uxtb	r6, r0
 800ca98:	435d      	muls	r5, r3
 800ca9a:	fb02 5506 	mla	r5, r2, r6, r5
 800ca9e:	f401 467f 	and.w	r6, r1, #65280	; 0xff00
 800caa2:	f400 447f 	and.w	r4, r0, #65280	; 0xff00
 800caa6:	435e      	muls	r6, r3
 800caa8:	fb02 6604 	mla	r6, r2, r4, r6
 800caac:	f401 047f 	and.w	r4, r1, #16711680	; 0xff0000
 800cab0:	f400 077f 	and.w	r7, r0, #16711680	; 0xff0000
 800cab4:	435c      	muls	r4, r3
 800cab6:	0e09      	lsrs	r1, r1, #24
 800cab8:	0e00      	lsrs	r0, r0, #24
 800caba:	fb02 4407 	mla	r4, r2, r7, r4
 800cabe:	434b      	muls	r3, r1
 800cac0:	0a36      	lsrs	r6, r6, #8
 800cac2:	fb02 3200 	mla	r2, r2, r0, r3
 800cac6:	0a24      	lsrs	r4, r4, #8
 800cac8:	f3c5 2307 	ubfx	r3, r5, #8, #8
 800cacc:	f406 407f 	and.w	r0, r6, #65280	; 0xff00
 800cad0:	4318      	orrs	r0, r3
 800cad2:	0412      	lsls	r2, r2, #16
 800cad4:	f404 037f 	and.w	r3, r4, #16711680	; 0xff0000
 800cad8:	4318      	orrs	r0, r3
 800cada:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800cade:	4310      	orrs	r0, r2
 800cae0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800cae4 <_OnExit>:
 800cae4:	b570      	push	{r4, r5, r6, lr}
 800cae6:	4c0a      	ldr	r4, [pc, #40]	; (800cb10 <_OnExit+0x2c>)
 800cae8:	4d0a      	ldr	r5, [pc, #40]	; (800cb14 <_OnExit+0x30>)
 800caea:	6820      	ldr	r0, [r4, #0]
 800caec:	4e0a      	ldr	r6, [pc, #40]	; (800cb18 <_OnExit+0x34>)
 800caee:	f002 fca9 	bl	800f444 <GUI_ALLOC_FreeFixedBlock>
 800caf2:	6828      	ldr	r0, [r5, #0]
 800caf4:	f002 fca6 	bl	800f444 <GUI_ALLOC_FreeFixedBlock>
 800caf8:	6830      	ldr	r0, [r6, #0]
 800cafa:	f002 fca3 	bl	800f444 <GUI_ALLOC_FreeFixedBlock>
 800cafe:	4a07      	ldr	r2, [pc, #28]	; (800cb1c <_OnExit+0x38>)
 800cb00:	2300      	movs	r3, #0
 800cb02:	6013      	str	r3, [r2, #0]
 800cb04:	4a06      	ldr	r2, [pc, #24]	; (800cb20 <_OnExit+0x3c>)
 800cb06:	6033      	str	r3, [r6, #0]
 800cb08:	602b      	str	r3, [r5, #0]
 800cb0a:	6023      	str	r3, [r4, #0]
 800cb0c:	6013      	str	r3, [r2, #0]
 800cb0e:	bd70      	pop	{r4, r5, r6, pc}
 800cb10:	20019d20 	.word	0x20019d20
 800cb14:	20019d1c 	.word	0x20019d1c
 800cb18:	20019d24 	.word	0x20019d24
 800cb1c:	20019d28 	.word	0x20019d28
 800cb20:	20019d38 	.word	0x20019d38

0800cb24 <GUI__GetAlphaBuffer>:
 800cb24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800cb28:	461c      	mov	r4, r3
 800cb2a:	4b28      	ldr	r3, [pc, #160]	; (800cbcc <GUI__GetAlphaBuffer+0xa8>)
 800cb2c:	4617      	mov	r7, r2
 800cb2e:	681a      	ldr	r2, [r3, #0]
 800cb30:	4606      	mov	r6, r0
 800cb32:	4688      	mov	r8, r1
 800cb34:	b932      	cbnz	r2, 800cb44 <GUI__GetAlphaBuffer+0x20>
 800cb36:	2201      	movs	r2, #1
 800cb38:	4825      	ldr	r0, [pc, #148]	; (800cbd0 <GUI__GetAlphaBuffer+0xac>)
 800cb3a:	601a      	str	r2, [r3, #0]
 800cb3c:	4b25      	ldr	r3, [pc, #148]	; (800cbd4 <GUI__GetAlphaBuffer+0xb0>)
 800cb3e:	6003      	str	r3, [r0, #0]
 800cb40:	f002 f874 	bl	800ec2c <GUI__RegisterExit>
 800cb44:	4d24      	ldr	r5, [pc, #144]	; (800cbd8 <GUI__GetAlphaBuffer+0xb4>)
 800cb46:	682b      	ldr	r3, [r5, #0]
 800cb48:	b933      	cbnz	r3, 800cb58 <GUI__GetAlphaBuffer+0x34>
 800cb4a:	4b24      	ldr	r3, [pc, #144]	; (800cbdc <GUI__GetAlphaBuffer+0xb8>)
 800cb4c:	681b      	ldr	r3, [r3, #0]
 800cb4e:	602b      	str	r3, [r5, #0]
 800cb50:	b913      	cbnz	r3, 800cb58 <GUI__GetAlphaBuffer+0x34>
 800cb52:	f7ff fa4d 	bl	800bff0 <LCD_GetVXSizeMax>
 800cb56:	6028      	str	r0, [r5, #0]
 800cb58:	b10c      	cbz	r4, 800cb5e <GUI__GetAlphaBuffer+0x3a>
 800cb5a:	682b      	ldr	r3, [r5, #0]
 800cb5c:	6023      	str	r3, [r4, #0]
 800cb5e:	b196      	cbz	r6, 800cb86 <GUI__GetAlphaBuffer+0x62>
 800cb60:	4b1f      	ldr	r3, [pc, #124]	; (800cbe0 <GUI__GetAlphaBuffer+0xbc>)
 800cb62:	681a      	ldr	r2, [r3, #0]
 800cb64:	4699      	mov	r9, r3
 800cb66:	2400      	movs	r4, #0
 800cb68:	b94a      	cbnz	r2, 800cb7e <GUI__GetAlphaBuffer+0x5a>
 800cb6a:	6828      	ldr	r0, [r5, #0]
 800cb6c:	0080      	lsls	r0, r0, #2
 800cb6e:	f002 fdd5 	bl	800f71c <GUI_ALLOC_GetFixedBlock>
 800cb72:	f1d0 0401 	rsbs	r4, r0, #1
 800cb76:	f8c9 0000 	str.w	r0, [r9]
 800cb7a:	bf38      	it	cc
 800cb7c:	2400      	movcc	r4, #0
 800cb7e:	f8d9 3000 	ldr.w	r3, [r9]
 800cb82:	6033      	str	r3, [r6, #0]
 800cb84:	e000      	b.n	800cb88 <GUI__GetAlphaBuffer+0x64>
 800cb86:	4634      	mov	r4, r6
 800cb88:	f1b8 0f00 	cmp.w	r8, #0
 800cb8c:	d00d      	beq.n	800cbaa <GUI__GetAlphaBuffer+0x86>
 800cb8e:	4e15      	ldr	r6, [pc, #84]	; (800cbe4 <GUI__GetAlphaBuffer+0xc0>)
 800cb90:	6833      	ldr	r3, [r6, #0]
 800cb92:	b93b      	cbnz	r3, 800cba4 <GUI__GetAlphaBuffer+0x80>
 800cb94:	6828      	ldr	r0, [r5, #0]
 800cb96:	0080      	lsls	r0, r0, #2
 800cb98:	f002 fdc0 	bl	800f71c <GUI_ALLOC_GetFixedBlock>
 800cb9c:	2800      	cmp	r0, #0
 800cb9e:	6030      	str	r0, [r6, #0]
 800cba0:	bf08      	it	eq
 800cba2:	2401      	moveq	r4, #1
 800cba4:	6833      	ldr	r3, [r6, #0]
 800cba6:	f8c8 3000 	str.w	r3, [r8]
 800cbaa:	b167      	cbz	r7, 800cbc6 <GUI__GetAlphaBuffer+0xa2>
 800cbac:	4e0e      	ldr	r6, [pc, #56]	; (800cbe8 <GUI__GetAlphaBuffer+0xc4>)
 800cbae:	6833      	ldr	r3, [r6, #0]
 800cbb0:	b93b      	cbnz	r3, 800cbc2 <GUI__GetAlphaBuffer+0x9e>
 800cbb2:	6828      	ldr	r0, [r5, #0]
 800cbb4:	0080      	lsls	r0, r0, #2
 800cbb6:	f002 fdb1 	bl	800f71c <GUI_ALLOC_GetFixedBlock>
 800cbba:	2800      	cmp	r0, #0
 800cbbc:	6030      	str	r0, [r6, #0]
 800cbbe:	bf08      	it	eq
 800cbc0:	2401      	moveq	r4, #1
 800cbc2:	6833      	ldr	r3, [r6, #0]
 800cbc4:	603b      	str	r3, [r7, #0]
 800cbc6:	4620      	mov	r0, r4
 800cbc8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800cbcc:	20019d38 	.word	0x20019d38
 800cbd0:	20019d30 	.word	0x20019d30
 800cbd4:	0800cae5 	.word	0x0800cae5
 800cbd8:	20019d28 	.word	0x20019d28
 800cbdc:	2001ba3c 	.word	0x2001ba3c
 800cbe0:	20019d20 	.word	0x20019d20
 800cbe4:	20019d1c 	.word	0x20019d1c
 800cbe8:	20019d24 	.word	0x20019d24

0800cbec <GUI__DoAlphaBlending>:
 800cbec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cbf0:	b093      	sub	sp, #76	; 0x4c
 800cbf2:	2400      	movs	r4, #0
 800cbf4:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800cbf6:	900b      	str	r0, [sp, #44]	; 0x2c
 800cbf8:	910c      	str	r1, [sp, #48]	; 0x30
 800cbfa:	4690      	mov	r8, r2
 800cbfc:	461f      	mov	r7, r3
 800cbfe:	6034      	str	r4, [r6, #0]
 800cc00:	a80f      	add	r0, sp, #60	; 0x3c
 800cc02:	a910      	add	r1, sp, #64	; 0x40
 800cc04:	4622      	mov	r2, r4
 800cc06:	ab11      	add	r3, sp, #68	; 0x44
 800cc08:	f7ff ff8c 	bl	800cb24 <GUI__GetAlphaBuffer>
 800cc0c:	4605      	mov	r5, r0
 800cc0e:	2800      	cmp	r0, #0
 800cc10:	f040 80c3 	bne.w	800cd9a <GUI__DoAlphaBlending+0x1ae>
 800cc14:	4c63      	ldr	r4, [pc, #396]	; (800cda4 <GUI__DoAlphaBlending+0x1b8>)
 800cc16:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800cc18:	6823      	ldr	r3, [r4, #0]
 800cc1a:	7c58      	ldrb	r0, [r3, #17]
 800cc1c:	4b62      	ldr	r3, [pc, #392]	; (800cda8 <GUI__DoAlphaBlending+0x1bc>)
 800cc1e:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800cc22:	9307      	str	r3, [sp, #28]
 800cc24:	4297      	cmp	r7, r2
 800cc26:	bfa8      	it	ge
 800cc28:	4617      	movge	r7, r2
 800cc2a:	691a      	ldr	r2, [r3, #16]
 800cc2c:	920d      	str	r2, [sp, #52]	; 0x34
 800cc2e:	970a      	str	r7, [sp, #40]	; 0x28
 800cc30:	f7ff f9aa 	bl	800bf88 <GUI_GetBitsPerPixelEx>
 800cc34:	6823      	ldr	r3, [r4, #0]
 800cc36:	9008      	str	r0, [sp, #32]
 800cc38:	7c58      	ldrb	r0, [r3, #17]
 800cc3a:	f7ff f9c3 	bl	800bfc4 <GUI_GetpfIndex2ColorEx>
 800cc3e:	4b5b      	ldr	r3, [pc, #364]	; (800cdac <GUI__DoAlphaBlending+0x1c0>)
 800cc40:	9004      	str	r0, [sp, #16]
 800cc42:	4298      	cmp	r0, r3
 800cc44:	d005      	beq.n	800cc52 <GUI__DoAlphaBlending+0x66>
 800cc46:	4b5a      	ldr	r3, [pc, #360]	; (800cdb0 <GUI__DoAlphaBlending+0x1c4>)
 800cc48:	1ac3      	subs	r3, r0, r3
 800cc4a:	bf18      	it	ne
 800cc4c:	2301      	movne	r3, #1
 800cc4e:	9306      	str	r3, [sp, #24]
 800cc50:	e000      	b.n	800cc54 <GUI__DoAlphaBlending+0x68>
 800cc52:	9506      	str	r5, [sp, #24]
 800cc54:	2500      	movs	r5, #0
 800cc56:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800cc58:	46ab      	mov	fp, r5
 800cc5a:	4643      	mov	r3, r8
 800cc5c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800cc5e:	f853 0b04 	ldr.w	r0, [r3], #4
 800cc62:	9305      	str	r3, [sp, #20]
 800cc64:	4790      	blx	r2
 800cc66:	0e03      	lsrs	r3, r0, #24
 800cc68:	4681      	mov	r9, r0
 800cc6a:	9309      	str	r3, [sp, #36]	; 0x24
 800cc6c:	f000 8085 	beq.w	800cd7a <GUI__DoAlphaBlending+0x18e>
 800cc70:	f1bb 0f00 	cmp.w	fp, #0
 800cc74:	d13f      	bne.n	800ccf6 <GUI__DoAlphaBlending+0x10a>
 800cc76:	4b4b      	ldr	r3, [pc, #300]	; (800cda4 <GUI__DoAlphaBlending+0x1b8>)
 800cc78:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 800cc7a:	681b      	ldr	r3, [r3, #0]
 800cc7c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cc7e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800cc82:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 800cc86:	990c      	ldr	r1, [sp, #48]	; 0x30
 800cc88:	442f      	add	r7, r5
 800cc8a:	42bb      	cmp	r3, r7
 800cc8c:	bfc8      	it	gt
 800cc8e:	ebc7 0b03 	rsbgt	fp, r7, r3
 800cc92:	eb0b 0a05 	add.w	sl, fp, r5
 800cc96:	bfc8      	it	gt
 800cc98:	461f      	movgt	r7, r3
 800cc9a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800cc9c:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 800cca0:	4453      	add	r3, sl
 800cca2:	4494      	add	ip, r2
 800cca4:	9300      	str	r3, [sp, #0]
 800cca6:	9b07      	ldr	r3, [sp, #28]
 800cca8:	9301      	str	r3, [sp, #4]
 800ccaa:	f10c 32ff 	add.w	r2, ip, #4294967295
 800ccae:	4638      	mov	r0, r7
 800ccb0:	460b      	mov	r3, r1
 800ccb2:	f8cd c00c 	str.w	ip, [sp, #12]
 800ccb6:	f006 f891 	bl	8012ddc <GUI_ReadRectEx>
 800ccba:	9a08      	ldr	r2, [sp, #32]
 800ccbc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800ccbe:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800ccc2:	2a17      	cmp	r2, #23
 800ccc4:	dc06      	bgt.n	800ccd4 <GUI__DoAlphaBlending+0xe8>
 800ccc6:	4450      	add	r0, sl
 800ccc8:	ebcb 0104 	rsb	r1, fp, r4
 800cccc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ccce:	f006 f9ff 	bl	80130d0 <GUI__ExpandPixelIndicesEx>
 800ccd2:	e001      	b.n	800ccd8 <GUI__DoAlphaBlending+0xec>
 800ccd4:	9b06      	ldr	r3, [sp, #24]
 800ccd6:	b913      	cbnz	r3, 800ccde <GUI__DoAlphaBlending+0xf2>
 800ccd8:	f04f 0b01 	mov.w	fp, #1
 800ccdc:	e00b      	b.n	800ccf6 <GUI__DoAlphaBlending+0x10a>
 800ccde:	ebc7 070c 	rsb	r7, r7, ip
 800cce2:	4482      	add	sl, r0
 800cce4:	f8da 0000 	ldr.w	r0, [sl]
 800cce8:	9a04      	ldr	r2, [sp, #16]
 800ccea:	4790      	blx	r2
 800ccec:	3f01      	subs	r7, #1
 800ccee:	f84a 0b04 	str.w	r0, [sl], #4
 800ccf2:	d1f7      	bne.n	800cce4 <GUI__DoAlphaBlending+0xf8>
 800ccf4:	e7f0      	b.n	800ccd8 <GUI__DoAlphaBlending+0xec>
 800ccf6:	4b2f      	ldr	r3, [pc, #188]	; (800cdb4 <GUI__DoAlphaBlending+0x1c8>)
 800ccf8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800ccfa:	f8d3 c000 	ldr.w	ip, [r3]
 800ccfe:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800cd00:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 800cd04:	f1bc 0f00 	cmp.w	ip, #0
 800cd08:	d024      	beq.n	800cd54 <GUI__DoAlphaBlending+0x168>
 800cd0a:	eb07 020a 	add.w	r2, r7, sl
 800cd0e:	4451      	add	r1, sl
 800cd10:	9210      	str	r2, [sp, #64]	; 0x40
 800cd12:	4623      	mov	r3, r4
 800cd14:	910f      	str	r1, [sp, #60]	; 0x3c
 800cd16:	4640      	mov	r0, r8
 800cd18:	47e0      	blx	ip
 800cd1a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800cd1c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800cd1e:	2300      	movs	r3, #0
 800cd20:	f858 1003 	ldr.w	r1, [r8, r3]
 800cd24:	f001 407f 	and.w	r0, r1, #4278190080	; 0xff000000
 800cd28:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 800cd2c:	58e8      	ldr	r0, [r5, r3]
 800cd2e:	d101      	bne.n	800cd34 <GUI__DoAlphaBlending+0x148>
 800cd30:	50d0      	str	r0, [r2, r3]
 800cd32:	e005      	b.n	800cd40 <GUI__DoAlphaBlending+0x154>
 800cd34:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
 800cd38:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 800cd3c:	bf08      	it	eq
 800cd3e:	50d1      	streq	r1, [r2, r3]
 800cd40:	3c01      	subs	r4, #1
 800cd42:	f103 0304 	add.w	r3, r3, #4
 800cd46:	d1eb      	bne.n	800cd20 <GUI__DoAlphaBlending+0x134>
 800cd48:	6833      	ldr	r3, [r6, #0]
 800cd4a:	9710      	str	r7, [sp, #64]	; 0x40
 800cd4c:	f043 0301 	orr.w	r3, r3, #1
 800cd50:	6033      	str	r3, [r6, #0]
 800cd52:	e020      	b.n	800cd96 <GUI__DoAlphaBlending+0x1aa>
 800cd54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cd56:	2bff      	cmp	r3, #255	; 0xff
 800cd58:	d104      	bne.n	800cd64 <GUI__DoAlphaBlending+0x178>
 800cd5a:	f851 300a 	ldr.w	r3, [r1, sl]
 800cd5e:	f847 300a 	str.w	r3, [r7, sl]
 800cd62:	e011      	b.n	800cd88 <GUI__DoAlphaBlending+0x19c>
 800cd64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cd66:	f851 100a 	ldr.w	r1, [r1, sl]
 800cd6a:	43da      	mvns	r2, r3
 800cd6c:	4648      	mov	r0, r9
 800cd6e:	b2d2      	uxtb	r2, r2
 800cd70:	f7ff fe88 	bl	800ca84 <GUI__MixColors>
 800cd74:	f847 000a 	str.w	r0, [r7, sl]
 800cd78:	e002      	b.n	800cd80 <GUI__DoAlphaBlending+0x194>
 800cd7a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800cd7c:	f843 0025 	str.w	r0, [r3, r5, lsl #2]
 800cd80:	6833      	ldr	r3, [r6, #0]
 800cd82:	f043 0301 	orr.w	r3, r3, #1
 800cd86:	6033      	str	r3, [r6, #0]
 800cd88:	3c01      	subs	r4, #1
 800cd8a:	f105 0501 	add.w	r5, r5, #1
 800cd8e:	d002      	beq.n	800cd96 <GUI__DoAlphaBlending+0x1aa>
 800cd90:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800cd94:	e761      	b.n	800cc5a <GUI__DoAlphaBlending+0x6e>
 800cd96:	9810      	ldr	r0, [sp, #64]	; 0x40
 800cd98:	e000      	b.n	800cd9c <GUI__DoAlphaBlending+0x1b0>
 800cd9a:	4620      	mov	r0, r4
 800cd9c:	b013      	add	sp, #76	; 0x4c
 800cd9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cda2:	bf00      	nop
 800cda4:	20000274 	.word	0x20000274
 800cda8:	2001ba34 	.word	0x2001ba34
 800cdac:	0800fbdf 	.word	0x0800fbdf
 800cdb0:	0800fbdd 	.word	0x0800fbdd
 800cdb4:	20019d2c 	.word	0x20019d2c

0800cdb8 <GUI__AllocAlphaBuffer>:
 800cdb8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800cdba:	b108      	cbz	r0, 800cdc0 <GUI__AllocAlphaBuffer+0x8>
 800cdbc:	aa03      	add	r2, sp, #12
 800cdbe:	e000      	b.n	800cdc2 <GUI__AllocAlphaBuffer+0xa>
 800cdc0:	4602      	mov	r2, r0
 800cdc2:	a801      	add	r0, sp, #4
 800cdc4:	a902      	add	r1, sp, #8
 800cdc6:	2300      	movs	r3, #0
 800cdc8:	f7ff feac 	bl	800cb24 <GUI__GetAlphaBuffer>
 800cdcc:	b005      	add	sp, #20
 800cdce:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800cdd4 <GUI_SignalEvent>:
 800cdd4:	b508      	push	{r3, lr}
 800cdd6:	4b02      	ldr	r3, [pc, #8]	; (800cde0 <GUI_SignalEvent+0xc>)
 800cdd8:	681b      	ldr	r3, [r3, #0]
 800cdda:	b103      	cbz	r3, 800cdde <GUI_SignalEvent+0xa>
 800cddc:	4798      	blx	r3
 800cdde:	bd08      	pop	{r3, pc}
 800cde0:	20019d3c 	.word	0x20019d3c

0800cde4 <_GetDecs>:
 800cde4:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800cde8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cdec:	eddf 7a0d 	vldr	s15, [pc, #52]	; 800ce24 <_GetDecs+0x40>
 800cdf0:	bf48      	it	mi
 800cdf2:	eeb1 0a40 	vnegmi.f32	s0, s0
 800cdf6:	ee30 0a27 	vadd.f32	s0, s0, s15
 800cdfa:	2000      	movs	r0, #0
 800cdfc:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800ce00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ce04:	d00c      	beq.n	800ce20 <_GetDecs+0x3c>
 800ce06:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800ce0a:	ee20 0a27 	vmul.f32	s0, s0, s15
 800ce0e:	3001      	adds	r0, #1
 800ce10:	eefc 7ac0 	vcvt.u32.f32	s15, s0
 800ce14:	b2c0      	uxtb	r0, r0
 800ce16:	ee17 3a90 	vmov	r3, s15
 800ce1a:	2b00      	cmp	r3, #0
 800ce1c:	d0f3      	beq.n	800ce06 <_GetDecs+0x22>
 800ce1e:	4770      	bx	lr
 800ce20:	4770      	bx	lr
 800ce22:	bf00      	nop
 800ce24:	3089705f 	.word	0x3089705f

0800ce28 <_RoundHalfUp>:
 800ce28:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800ce2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ce30:	b508      	push	{r3, lr}
 800ce32:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800ce36:	d50a      	bpl.n	800ce4e <_RoundHalfUp+0x26>
 800ce38:	ee70 7a67 	vsub.f32	s15, s0, s15
 800ce3c:	ee17 0a90 	vmov	r0, s15
 800ce40:	f7f3 fba2 	bl	8000588 <__aeabi_f2d>
 800ce44:	ec41 0b10 	vmov	d0, r0, r1
 800ce48:	f008 fe32 	bl	8015ab0 <ceil>
 800ce4c:	e009      	b.n	800ce62 <_RoundHalfUp+0x3a>
 800ce4e:	ee70 7a27 	vadd.f32	s15, s0, s15
 800ce52:	ee17 0a90 	vmov	r0, s15
 800ce56:	f7f3 fb97 	bl	8000588 <__aeabi_f2d>
 800ce5a:	ec41 0b10 	vmov	d0, r0, r1
 800ce5e:	f008 fea7 	bl	8015bb0 <floor>
 800ce62:	ec51 0b10 	vmov	r0, r1, d0
 800ce66:	f7f3 fea9 	bl	8000bbc <__aeabi_d2f>
 800ce6a:	ee00 0a10 	vmov	s0, r0
 800ce6e:	bd08      	pop	{r3, pc}

0800ce70 <_DispFloatFix>:
 800ce70:	4b0e      	ldr	r3, [pc, #56]	; (800ceac <_DispFloatFix+0x3c>)
 800ce72:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800ce76:	ee07 3a90 	vmov	s15, r3
 800ce7a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800ce7e:	b570      	push	{r4, r5, r6, lr}
 800ce80:	ee20 0a27 	vmul.f32	s0, s0, s15
 800ce84:	4605      	mov	r5, r0
 800ce86:	460c      	mov	r4, r1
 800ce88:	4616      	mov	r6, r2
 800ce8a:	f7ff ffcd 	bl	800ce28 <_RoundHalfUp>
 800ce8e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800ce92:	4629      	mov	r1, r5
 800ce94:	ee10 0a10 	vmov	r0, s0
 800ce98:	4622      	mov	r2, r4
 800ce9a:	b11e      	cbz	r6, 800cea4 <_DispFloatFix+0x34>
 800ce9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cea0:	f000 b8ae 	b.w	800d000 <GUI_DispSDecShift>
 800cea4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cea8:	f000 b89d 	b.w	800cfe6 <GUI_DispDecShift>
 800ceac:	080172d8 	.word	0x080172d8

0800ceb0 <_DispFloatMin>:
 800ceb0:	b538      	push	{r3, r4, r5, lr}
 800ceb2:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800ceb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ceba:	ed2d 8b02 	vpush	{d8}
 800cebe:	4604      	mov	r4, r0
 800cec0:	eeb0 8a40 	vmov.f32	s16, s0
 800cec4:	460d      	mov	r5, r1
 800cec6:	d052      	beq.n	800cf6e <_DispFloatMin+0xbe>
 800cec8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800cecc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ced0:	db24      	blt.n	800cf1c <_DispFloatMin+0x6c>
 800ced2:	eef7 8a00 	vmov.f32	s17, #112	; 0x3f800000  1.0
 800ced6:	eeb4 0ae8 	vcmpe.f32	s0, s17
 800ceda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cede:	d51d      	bpl.n	800cf1c <_DispFloatMin+0x6c>
 800cee0:	f7ff ff80 	bl	800cde4 <_GetDecs>
 800cee4:	42a0      	cmp	r0, r4
 800cee6:	dc02      	bgt.n	800ceee <_DispFloatMin+0x3e>
 800cee8:	ee78 7a28 	vadd.f32	s15, s16, s17
 800ceec:	e046      	b.n	800cf7c <_DispFloatMin+0xcc>
 800ceee:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800cef2:	eeb4 8ae7 	vcmpe.f32	s16, s15
 800cef6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cefa:	db09      	blt.n	800cf10 <_DispFloatMin+0x60>
 800cefc:	eddf 7a36 	vldr	s15, [pc, #216]	; 800cfd8 <_DispFloatMin+0x128>
 800cf00:	2c00      	cmp	r4, #0
 800cf02:	bf18      	it	ne
 800cf04:	eef0 7a68 	vmovne.f32	s15, s17
 800cf08:	bf08      	it	eq
 800cf0a:	eeb0 8a68 	vmoveq.f32	s16, s17
 800cf0e:	e035      	b.n	800cf7c <_DispFloatMin+0xcc>
 800cf10:	b344      	cbz	r4, 800cf64 <_DispFloatMin+0xb4>
 800cf12:	eef0 7a68 	vmov.f32	s15, s17
 800cf16:	ed9f 8a30 	vldr	s16, [pc, #192]	; 800cfd8 <_DispFloatMin+0x128>
 800cf1a:	e02f      	b.n	800cf7c <_DispFloatMin+0xcc>
 800cf1c:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800cf20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cf24:	d528      	bpl.n	800cf78 <_DispFloatMin+0xc8>
 800cf26:	eeff 8a00 	vmov.f32	s17, #240	; 0xbf800000 -1.0
 800cf2a:	eeb4 8ae8 	vcmpe.f32	s16, s17
 800cf2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cf32:	dd21      	ble.n	800cf78 <_DispFloatMin+0xc8>
 800cf34:	eeb0 0a48 	vmov.f32	s0, s16
 800cf38:	f7ff ff54 	bl	800cde4 <_GetDecs>
 800cf3c:	42a0      	cmp	r0, r4
 800cf3e:	dc04      	bgt.n	800cf4a <_DispFloatMin+0x9a>
 800cf40:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800cf44:	ee78 7a67 	vsub.f32	s15, s16, s15
 800cf48:	e018      	b.n	800cf7c <_DispFloatMin+0xcc>
 800cf4a:	eefe 7a00 	vmov.f32	s15, #224	; 0xbf000000 -0.5
 800cf4e:	eeb4 8ae7 	vcmpe.f32	s16, s15
 800cf52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cf56:	d803      	bhi.n	800cf60 <_DispFloatMin+0xb0>
 800cf58:	b94c      	cbnz	r4, 800cf6e <_DispFloatMin+0xbe>
 800cf5a:	eeb0 8a68 	vmov.f32	s16, s17
 800cf5e:	e00b      	b.n	800cf78 <_DispFloatMin+0xc8>
 800cf60:	b144      	cbz	r4, 800cf74 <_DispFloatMin+0xc4>
 800cf62:	e004      	b.n	800cf6e <_DispFloatMin+0xbe>
 800cf64:	eddf 7a1c 	vldr	s15, [pc, #112]	; 800cfd8 <_DispFloatMin+0x128>
 800cf68:	eeb0 8a67 	vmov.f32	s16, s15
 800cf6c:	e006      	b.n	800cf7c <_DispFloatMin+0xcc>
 800cf6e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800cf72:	e003      	b.n	800cf7c <_DispFloatMin+0xcc>
 800cf74:	ed9f 8a18 	vldr	s16, [pc, #96]	; 800cfd8 <_DispFloatMin+0x128>
 800cf78:	eef0 7a48 	vmov.f32	s15, s16
 800cf7c:	4b17      	ldr	r3, [pc, #92]	; (800cfdc <_DispFloatMin+0x12c>)
 800cf7e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 800cf82:	ee00 3a10 	vmov	s0, r3
 800cf86:	eeb8 0a40 	vcvt.f32.u32	s0, s0
 800cf8a:	ee27 0a80 	vmul.f32	s0, s15, s0
 800cf8e:	f7ff ff4b 	bl	800ce28 <_RoundHalfUp>
 800cf92:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800cf96:	ee10 0a10 	vmov	r0, s0
 800cf9a:	f002 fcd5 	bl	800f948 <GUI_Long2Len>
 800cf9e:	2d01      	cmp	r5, #1
 800cfa0:	ebc4 0000 	rsb	r0, r4, r0
 800cfa4:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 800cfa8:	d105      	bne.n	800cfb6 <_DispFloatMin+0x106>
 800cfaa:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800cfae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cfb2:	bfc8      	it	gt
 800cfb4:	3001      	addgt	r0, #1
 800cfb6:	eeb0 0a48 	vmov.f32	s0, s16
 800cfba:	ecbd 8b02 	vpop	{d8}
 800cfbe:	2c00      	cmp	r4, #0
 800cfc0:	bf0c      	ite	eq
 800cfc2:	4623      	moveq	r3, r4
 800cfc4:	1c63      	addne	r3, r4, #1
 800cfc6:	4418      	add	r0, r3
 800cfc8:	4621      	mov	r1, r4
 800cfca:	462a      	mov	r2, r5
 800cfcc:	b2c0      	uxtb	r0, r0
 800cfce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cfd2:	f7ff bf4d 	b.w	800ce70 <_DispFloatFix>
 800cfd6:	bf00      	nop
 800cfd8:	00000000 	.word	0x00000000
 800cfdc:	080172d8 	.word	0x080172d8

0800cfe0 <GUI_DispFloatMin>:
 800cfe0:	2100      	movs	r1, #0
 800cfe2:	f7ff bf65 	b.w	800ceb0 <_DispFloatMin>

0800cfe6 <GUI_DispDecShift>:
 800cfe6:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800cfe8:	ab04      	add	r3, sp, #16
 800cfea:	ac01      	add	r4, sp, #4
 800cfec:	f843 4d10 	str.w	r4, [r3, #-16]!
 800cff0:	466b      	mov	r3, sp
 800cff2:	f002 fccd 	bl	800f990 <GUI_AddDecShift>
 800cff6:	4620      	mov	r0, r4
 800cff8:	f001 fc5a 	bl	800e8b0 <GUI_DispString>
 800cffc:	b004      	add	sp, #16
 800cffe:	bd10      	pop	{r4, pc}

0800d000 <GUI_DispSDecShift>:
 800d000:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d002:	b085      	sub	sp, #20
 800d004:	ac04      	add	r4, sp, #16
 800d006:	460d      	mov	r5, r1
 800d008:	ae01      	add	r6, sp, #4
 800d00a:	4669      	mov	r1, sp
 800d00c:	4617      	mov	r7, r2
 800d00e:	f844 6d10 	str.w	r6, [r4, #-16]!
 800d012:	f002 fcb1 	bl	800f978 <GUI_AddSign>
 800d016:	2800      	cmp	r0, #0
 800d018:	bfc4      	itt	gt
 800d01a:	f105 35ff 	addgt.w	r5, r5, #4294967295
 800d01e:	b2ed      	uxtbgt	r5, r5
 800d020:	4629      	mov	r1, r5
 800d022:	463a      	mov	r2, r7
 800d024:	466b      	mov	r3, sp
 800d026:	f002 fcb3 	bl	800f990 <GUI_AddDecShift>
 800d02a:	4630      	mov	r0, r6
 800d02c:	f001 fc40 	bl	800e8b0 <GUI_DispString>
 800d030:	b005      	add	sp, #20
 800d032:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d034 <_OnExit>:
 800d034:	4a03      	ldr	r2, [pc, #12]	; (800d044 <_OnExit+0x10>)
 800d036:	2300      	movs	r3, #0
 800d038:	6013      	str	r3, [r2, #0]
 800d03a:	4a03      	ldr	r2, [pc, #12]	; (800d048 <_OnExit+0x14>)
 800d03c:	6013      	str	r3, [r2, #0]
 800d03e:	4a03      	ldr	r2, [pc, #12]	; (800d04c <_OnExit+0x18>)
 800d040:	6013      	str	r3, [r2, #0]
 800d042:	4770      	bx	lr
 800d044:	20019d40 	.word	0x20019d40
 800d048:	20019d44 	.word	0x20019d44
 800d04c:	20019d50 	.word	0x20019d50

0800d050 <GUI_TIMER_Exec>:
 800d050:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d054:	4b19      	ldr	r3, [pc, #100]	; (800d0bc <GUI_TIMER_Exec+0x6c>)
 800d056:	681f      	ldr	r7, [r3, #0]
 800d058:	b085      	sub	sp, #20
 800d05a:	2500      	movs	r5, #0
 800d05c:	4698      	mov	r8, r3
 800d05e:	f8d8 3000 	ldr.w	r3, [r8]
 800d062:	4c16      	ldr	r4, [pc, #88]	; (800d0bc <GUI_TIMER_Exec+0x6c>)
 800d064:	b333      	cbz	r3, 800d0b4 <GUI_TIMER_Exec+0x64>
 800d066:	f000 f991 	bl	800d38c <GUI_GetTime>
 800d06a:	4606      	mov	r6, r0
 800d06c:	6820      	ldr	r0, [r4, #0]
 800d06e:	f002 f9fd 	bl	800f46c <GUI_ALLOC_LockH>
 800d072:	4603      	mov	r3, r0
 800d074:	a804      	add	r0, sp, #16
 800d076:	6959      	ldr	r1, [r3, #20]
 800d078:	f840 3d10 	str.w	r3, [r0, #-16]!
 800d07c:	1b89      	subs	r1, r1, r6
 800d07e:	2900      	cmp	r1, #0
 800d080:	dc13      	bgt.n	800d0aa <GUI_TIMER_Exec+0x5a>
 800d082:	6821      	ldr	r1, [r4, #0]
 800d084:	9103      	str	r1, [sp, #12]
 800d086:	9601      	str	r6, [sp, #4]
 800d088:	6919      	ldr	r1, [r3, #16]
 800d08a:	685e      	ldr	r6, [r3, #4]
 800d08c:	9102      	str	r1, [sp, #8]
 800d08e:	4668      	mov	r0, sp
 800d090:	6026      	str	r6, [r4, #0]
 800d092:	f8d3 9000 	ldr.w	r9, [r3]
 800d096:	f002 f9f7 	bl	800f488 <GUI_ALLOC_UnlockH>
 800d09a:	a801      	add	r0, sp, #4
 800d09c:	47c8      	blx	r9
 800d09e:	b14e      	cbz	r6, 800d0b4 <GUI_TIMER_Exec+0x64>
 800d0a0:	6823      	ldr	r3, [r4, #0]
 800d0a2:	42bb      	cmp	r3, r7
 800d0a4:	d005      	beq.n	800d0b2 <GUI_TIMER_Exec+0x62>
 800d0a6:	2501      	movs	r5, #1
 800d0a8:	e7d9      	b.n	800d05e <GUI_TIMER_Exec+0xe>
 800d0aa:	4668      	mov	r0, sp
 800d0ac:	f002 f9ec 	bl	800f488 <GUI_ALLOC_UnlockH>
 800d0b0:	e000      	b.n	800d0b4 <GUI_TIMER_Exec+0x64>
 800d0b2:	2500      	movs	r5, #0
 800d0b4:	4628      	mov	r0, r5
 800d0b6:	b005      	add	sp, #20
 800d0b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d0bc:	20019d44 	.word	0x20019d44

0800d0c0 <_Link>:
 800d0c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d0c2:	4c25      	ldr	r4, [pc, #148]	; (800d158 <_Link+0x98>)
 800d0c4:	b085      	sub	sp, #20
 800d0c6:	4605      	mov	r5, r0
 800d0c8:	f002 f9d0 	bl	800f46c <GUI_ALLOC_LockH>
 800d0cc:	6823      	ldr	r3, [r4, #0]
 800d0ce:	9001      	str	r0, [sp, #4]
 800d0d0:	b913      	cbnz	r3, 800d0d8 <_Link+0x18>
 800d0d2:	6025      	str	r5, [r4, #0]
 800d0d4:	6043      	str	r3, [r0, #4]
 800d0d6:	e039      	b.n	800d14c <_Link+0x8c>
 800d0d8:	4618      	mov	r0, r3
 800d0da:	f002 f9c7 	bl	800f46c <GUI_ALLOC_LockH>
 800d0de:	ab04      	add	r3, sp, #16
 800d0e0:	6946      	ldr	r6, [r0, #20]
 800d0e2:	f843 0d10 	str.w	r0, [r3, #-16]!
 800d0e6:	4668      	mov	r0, sp
 800d0e8:	f002 f9ce 	bl	800f488 <GUI_ALLOC_UnlockH>
 800d0ec:	9b01      	ldr	r3, [sp, #4]
 800d0ee:	695a      	ldr	r2, [r3, #20]
 800d0f0:	1b92      	subs	r2, r2, r6
 800d0f2:	2a00      	cmp	r2, #0
 800d0f4:	dc03      	bgt.n	800d0fe <_Link+0x3e>
 800d0f6:	6822      	ldr	r2, [r4, #0]
 800d0f8:	605a      	str	r2, [r3, #4]
 800d0fa:	6025      	str	r5, [r4, #0]
 800d0fc:	e026      	b.n	800d14c <_Link+0x8c>
 800d0fe:	6826      	ldr	r6, [r4, #0]
 800d100:	4630      	mov	r0, r6
 800d102:	f002 f9b3 	bl	800f46c <GUI_ALLOC_LockH>
 800d106:	ac04      	add	r4, sp, #16
 800d108:	6846      	ldr	r6, [r0, #4]
 800d10a:	f844 0d08 	str.w	r0, [r4, #-8]!
 800d10e:	b1be      	cbz	r6, 800d140 <_Link+0x80>
 800d110:	4630      	mov	r0, r6
 800d112:	f002 f9ab 	bl	800f46c <GUI_ALLOC_LockH>
 800d116:	ab04      	add	r3, sp, #16
 800d118:	6947      	ldr	r7, [r0, #20]
 800d11a:	f843 0d04 	str.w	r0, [r3, #-4]!
 800d11e:	4618      	mov	r0, r3
 800d120:	f002 f9b2 	bl	800f488 <GUI_ALLOC_UnlockH>
 800d124:	9a01      	ldr	r2, [sp, #4]
 800d126:	6953      	ldr	r3, [r2, #20]
 800d128:	1bdb      	subs	r3, r3, r7
 800d12a:	2b00      	cmp	r3, #0
 800d12c:	9b02      	ldr	r3, [sp, #8]
 800d12e:	dc02      	bgt.n	800d136 <_Link+0x76>
 800d130:	6056      	str	r6, [r2, #4]
 800d132:	605d      	str	r5, [r3, #4]
 800d134:	e007      	b.n	800d146 <_Link+0x86>
 800d136:	4620      	mov	r0, r4
 800d138:	685e      	ldr	r6, [r3, #4]
 800d13a:	f002 f9a5 	bl	800f488 <GUI_ALLOC_UnlockH>
 800d13e:	e7df      	b.n	800d100 <_Link+0x40>
 800d140:	9b01      	ldr	r3, [sp, #4]
 800d142:	605e      	str	r6, [r3, #4]
 800d144:	6045      	str	r5, [r0, #4]
 800d146:	4620      	mov	r0, r4
 800d148:	f002 f99e 	bl	800f488 <GUI_ALLOC_UnlockH>
 800d14c:	a801      	add	r0, sp, #4
 800d14e:	f002 f99b 	bl	800f488 <GUI_ALLOC_UnlockH>
 800d152:	b005      	add	sp, #20
 800d154:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d156:	bf00      	nop
 800d158:	20019d44 	.word	0x20019d44

0800d15c <_Unlink>:
 800d15c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d15e:	4605      	mov	r5, r0
 800d160:	b1f0      	cbz	r0, 800d1a0 <_Unlink+0x44>
 800d162:	f002 f983 	bl	800f46c <GUI_ALLOC_LockH>
 800d166:	4b0f      	ldr	r3, [pc, #60]	; (800d1a4 <_Unlink+0x48>)
 800d168:	9000      	str	r0, [sp, #0]
 800d16a:	681c      	ldr	r4, [r3, #0]
 800d16c:	42ac      	cmp	r4, r5
 800d16e:	d104      	bne.n	800d17a <_Unlink+0x1e>
 800d170:	6842      	ldr	r2, [r0, #4]
 800d172:	601a      	str	r2, [r3, #0]
 800d174:	e011      	b.n	800d19a <_Unlink+0x3e>
 800d176:	f002 f987 	bl	800f488 <GUI_ALLOC_UnlockH>
 800d17a:	b174      	cbz	r4, 800d19a <_Unlink+0x3e>
 800d17c:	4620      	mov	r0, r4
 800d17e:	f002 f975 	bl	800f46c <GUI_ALLOC_LockH>
 800d182:	4603      	mov	r3, r0
 800d184:	a802      	add	r0, sp, #8
 800d186:	685c      	ldr	r4, [r3, #4]
 800d188:	f840 3d04 	str.w	r3, [r0, #-4]!
 800d18c:	42ac      	cmp	r4, r5
 800d18e:	d1f2      	bne.n	800d176 <_Unlink+0x1a>
 800d190:	9a00      	ldr	r2, [sp, #0]
 800d192:	6852      	ldr	r2, [r2, #4]
 800d194:	605a      	str	r2, [r3, #4]
 800d196:	f002 f977 	bl	800f488 <GUI_ALLOC_UnlockH>
 800d19a:	4668      	mov	r0, sp
 800d19c:	f002 f974 	bl	800f488 <GUI_ALLOC_UnlockH>
 800d1a0:	b003      	add	sp, #12
 800d1a2:	bd30      	pop	{r4, r5, pc}
 800d1a4:	20019d44 	.word	0x20019d44

0800d1a8 <GUI_TIMER__GetFirstTimer>:
 800d1a8:	2300      	movs	r3, #0
 800d1aa:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d1ac:	6003      	str	r3, [r0, #0]
 800d1ae:	4b09      	ldr	r3, [pc, #36]	; (800d1d4 <GUI_TIMER__GetFirstTimer+0x2c>)
 800d1b0:	681c      	ldr	r4, [r3, #0]
 800d1b2:	4605      	mov	r5, r0
 800d1b4:	b154      	cbz	r4, 800d1cc <GUI_TIMER__GetFirstTimer+0x24>
 800d1b6:	4620      	mov	r0, r4
 800d1b8:	f002 f958 	bl	800f46c <GUI_ALLOC_LockH>
 800d1bc:	ab02      	add	r3, sp, #8
 800d1be:	6902      	ldr	r2, [r0, #16]
 800d1c0:	f843 0d04 	str.w	r0, [r3, #-4]!
 800d1c4:	602a      	str	r2, [r5, #0]
 800d1c6:	4618      	mov	r0, r3
 800d1c8:	f002 f95e 	bl	800f488 <GUI_ALLOC_UnlockH>
 800d1cc:	4620      	mov	r0, r4
 800d1ce:	b003      	add	sp, #12
 800d1d0:	bd30      	pop	{r4, r5, pc}
 800d1d2:	bf00      	nop
 800d1d4:	20019d40 	.word	0x20019d40

0800d1d8 <GUI_TIMER__GetNextTimerLin>:
 800d1d8:	2300      	movs	r3, #0
 800d1da:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d1dc:	600b      	str	r3, [r1, #0]
 800d1de:	460e      	mov	r6, r1
 800d1e0:	4604      	mov	r4, r0
 800d1e2:	b190      	cbz	r0, 800d20a <GUI_TIMER__GetNextTimerLin+0x32>
 800d1e4:	f002 f942 	bl	800f46c <GUI_ALLOC_LockH>
 800d1e8:	ad02      	add	r5, sp, #8
 800d1ea:	6884      	ldr	r4, [r0, #8]
 800d1ec:	f845 0d04 	str.w	r0, [r5, #-4]!
 800d1f0:	b144      	cbz	r4, 800d204 <GUI_TIMER__GetNextTimerLin+0x2c>
 800d1f2:	4628      	mov	r0, r5
 800d1f4:	f002 f948 	bl	800f488 <GUI_ALLOC_UnlockH>
 800d1f8:	4620      	mov	r0, r4
 800d1fa:	f002 f937 	bl	800f46c <GUI_ALLOC_LockH>
 800d1fe:	6903      	ldr	r3, [r0, #16]
 800d200:	9001      	str	r0, [sp, #4]
 800d202:	6033      	str	r3, [r6, #0]
 800d204:	4628      	mov	r0, r5
 800d206:	f002 f93f 	bl	800f488 <GUI_ALLOC_UnlockH>
 800d20a:	4620      	mov	r0, r4
 800d20c:	b002      	add	sp, #8
 800d20e:	bd70      	pop	{r4, r5, r6, pc}

0800d210 <GUI_TIMER_Create>:
 800d210:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d214:	4681      	mov	r9, r0
 800d216:	201c      	movs	r0, #28
 800d218:	460e      	mov	r6, r1
 800d21a:	4690      	mov	r8, r2
 800d21c:	461f      	mov	r7, r3
 800d21e:	f002 fc05 	bl	800fa2c <GUI_ALLOC_AllocZero>
 800d222:	4604      	mov	r4, r0
 800d224:	2800      	cmp	r0, #0
 800d226:	d031      	beq.n	800d28c <GUI_TIMER_Create+0x7c>
 800d228:	4b1a      	ldr	r3, [pc, #104]	; (800d294 <GUI_TIMER_Create+0x84>)
 800d22a:	4a1b      	ldr	r2, [pc, #108]	; (800d298 <GUI_TIMER_Create+0x88>)
 800d22c:	601a      	str	r2, [r3, #0]
 800d22e:	f002 f91d 	bl	800f46c <GUI_ALLOC_LockH>
 800d232:	9000      	str	r0, [sp, #0]
 800d234:	b916      	cbnz	r6, 800d23c <GUI_TIMER_Create+0x2c>
 800d236:	f000 f8a9 	bl	800d38c <GUI_GetTime>
 800d23a:	4606      	mov	r6, r0
 800d23c:	a802      	add	r0, sp, #8
 800d23e:	f850 5d08 	ldr.w	r5, [r0, #-8]!
 800d242:	4668      	mov	r0, sp
 800d244:	616e      	str	r6, [r5, #20]
 800d246:	f8c5 9000 	str.w	r9, [r5]
 800d24a:	f8c5 8010 	str.w	r8, [r5, #16]
 800d24e:	81af      	strh	r7, [r5, #12]
 800d250:	f002 f91a 	bl	800f488 <GUI_ALLOC_UnlockH>
 800d254:	4620      	mov	r0, r4
 800d256:	f7ff ff33 	bl	800d0c0 <_Link>
 800d25a:	4b10      	ldr	r3, [pc, #64]	; (800d29c <GUI_TIMER_Create+0x8c>)
 800d25c:	681a      	ldr	r2, [r3, #0]
 800d25e:	b932      	cbnz	r2, 800d26e <GUI_TIMER_Create+0x5e>
 800d260:	2201      	movs	r2, #1
 800d262:	480f      	ldr	r0, [pc, #60]	; (800d2a0 <GUI_TIMER_Create+0x90>)
 800d264:	601a      	str	r2, [r3, #0]
 800d266:	4b0f      	ldr	r3, [pc, #60]	; (800d2a4 <GUI_TIMER_Create+0x94>)
 800d268:	6003      	str	r3, [r0, #0]
 800d26a:	f001 fcdf 	bl	800ec2c <GUI__RegisterExit>
 800d26e:	4620      	mov	r0, r4
 800d270:	f002 f8fc 	bl	800f46c <GUI_ALLOC_LockH>
 800d274:	4a0c      	ldr	r2, [pc, #48]	; (800d2a8 <GUI_TIMER_Create+0x98>)
 800d276:	9001      	str	r0, [sp, #4]
 800d278:	6813      	ldr	r3, [r2, #0]
 800d27a:	b913      	cbnz	r3, 800d282 <GUI_TIMER_Create+0x72>
 800d27c:	6014      	str	r4, [r2, #0]
 800d27e:	6083      	str	r3, [r0, #8]
 800d280:	e001      	b.n	800d286 <GUI_TIMER_Create+0x76>
 800d282:	6083      	str	r3, [r0, #8]
 800d284:	6014      	str	r4, [r2, #0]
 800d286:	a801      	add	r0, sp, #4
 800d288:	f002 f8fe 	bl	800f488 <GUI_ALLOC_UnlockH>
 800d28c:	4620      	mov	r0, r4
 800d28e:	b003      	add	sp, #12
 800d290:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d294:	2001ba18 	.word	0x2001ba18
 800d298:	0800d051 	.word	0x0800d051
 800d29c:	20019d50 	.word	0x20019d50
 800d2a0:	20019d48 	.word	0x20019d48
 800d2a4:	0800d035 	.word	0x0800d035
 800d2a8:	20019d40 	.word	0x20019d40

0800d2ac <GUI_TIMER_Delete>:
 800d2ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d2ae:	4604      	mov	r4, r0
 800d2b0:	b358      	cbz	r0, 800d30a <GUI_TIMER_Delete+0x5e>
 800d2b2:	4d17      	ldr	r5, [pc, #92]	; (800d310 <GUI_TIMER_Delete+0x64>)
 800d2b4:	682e      	ldr	r6, [r5, #0]
 800d2b6:	4286      	cmp	r6, r0
 800d2b8:	d10b      	bne.n	800d2d2 <GUI_TIMER_Delete+0x26>
 800d2ba:	f002 f8d7 	bl	800f46c <GUI_ALLOC_LockH>
 800d2be:	ab02      	add	r3, sp, #8
 800d2c0:	6882      	ldr	r2, [r0, #8]
 800d2c2:	f843 0d04 	str.w	r0, [r3, #-4]!
 800d2c6:	602a      	str	r2, [r5, #0]
 800d2c8:	4618      	mov	r0, r3
 800d2ca:	e016      	b.n	800d2fa <GUI_TIMER_Delete+0x4e>
 800d2cc:	4668      	mov	r0, sp
 800d2ce:	f002 f8db 	bl	800f488 <GUI_ALLOC_UnlockH>
 800d2d2:	4630      	mov	r0, r6
 800d2d4:	f002 f8ca 	bl	800f46c <GUI_ALLOC_LockH>
 800d2d8:	6886      	ldr	r6, [r0, #8]
 800d2da:	ad02      	add	r5, sp, #8
 800d2dc:	42a6      	cmp	r6, r4
 800d2de:	f845 0d08 	str.w	r0, [r5, #-8]!
 800d2e2:	d1f3      	bne.n	800d2cc <GUI_TIMER_Delete+0x20>
 800d2e4:	4620      	mov	r0, r4
 800d2e6:	f002 f8c1 	bl	800f46c <GUI_ALLOC_LockH>
 800d2ea:	9b00      	ldr	r3, [sp, #0]
 800d2ec:	6882      	ldr	r2, [r0, #8]
 800d2ee:	9001      	str	r0, [sp, #4]
 800d2f0:	609a      	str	r2, [r3, #8]
 800d2f2:	a801      	add	r0, sp, #4
 800d2f4:	f002 f8c8 	bl	800f488 <GUI_ALLOC_UnlockH>
 800d2f8:	4668      	mov	r0, sp
 800d2fa:	f002 f8c5 	bl	800f488 <GUI_ALLOC_UnlockH>
 800d2fe:	4620      	mov	r0, r4
 800d300:	f7ff ff2c 	bl	800d15c <_Unlink>
 800d304:	4620      	mov	r0, r4
 800d306:	f002 f8eb 	bl	800f4e0 <GUI_ALLOC_Free>
 800d30a:	b002      	add	sp, #8
 800d30c:	bd70      	pop	{r4, r5, r6, pc}
 800d30e:	bf00      	nop
 800d310:	20019d40 	.word	0x20019d40

0800d314 <GUI_TIMER_SetPeriod>:
 800d314:	b513      	push	{r0, r1, r4, lr}
 800d316:	460c      	mov	r4, r1
 800d318:	b140      	cbz	r0, 800d32c <GUI_TIMER_SetPeriod+0x18>
 800d31a:	f002 f8a7 	bl	800f46c <GUI_ALLOC_LockH>
 800d31e:	ab02      	add	r3, sp, #8
 800d320:	6184      	str	r4, [r0, #24]
 800d322:	f843 0d04 	str.w	r0, [r3, #-4]!
 800d326:	4618      	mov	r0, r3
 800d328:	f002 f8ae 	bl	800f488 <GUI_ALLOC_UnlockH>
 800d32c:	b002      	add	sp, #8
 800d32e:	bd10      	pop	{r4, pc}

0800d330 <GUI_TIMER_Restart>:
 800d330:	b513      	push	{r0, r1, r4, lr}
 800d332:	4604      	mov	r4, r0
 800d334:	b198      	cbz	r0, 800d35e <GUI_TIMER_Restart+0x2e>
 800d336:	f002 f899 	bl	800f46c <GUI_ALLOC_LockH>
 800d33a:	9001      	str	r0, [sp, #4]
 800d33c:	f000 f826 	bl	800d38c <GUI_GetTime>
 800d340:	ab02      	add	r3, sp, #8
 800d342:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 800d346:	6991      	ldr	r1, [r2, #24]
 800d348:	4408      	add	r0, r1
 800d34a:	6150      	str	r0, [r2, #20]
 800d34c:	4618      	mov	r0, r3
 800d34e:	f002 f89b 	bl	800f488 <GUI_ALLOC_UnlockH>
 800d352:	4620      	mov	r0, r4
 800d354:	f7ff ff02 	bl	800d15c <_Unlink>
 800d358:	4620      	mov	r0, r4
 800d35a:	f7ff feb1 	bl	800d0c0 <_Link>
 800d35e:	b002      	add	sp, #8
 800d360:	bd10      	pop	{r4, pc}

0800d362 <GUI_TIMER_GetFlag>:
 800d362:	b513      	push	{r0, r1, r4, lr}
 800d364:	460c      	mov	r4, r1
 800d366:	b168      	cbz	r0, 800d384 <GUI_TIMER_GetFlag+0x22>
 800d368:	f002 f880 	bl	800f46c <GUI_ALLOC_LockH>
 800d36c:	ab02      	add	r3, sp, #8
 800d36e:	8982      	ldrh	r2, [r0, #12]
 800d370:	f843 0d04 	str.w	r0, [r3, #-4]!
 800d374:	4214      	tst	r4, r2
 800d376:	4618      	mov	r0, r3
 800d378:	bf0c      	ite	eq
 800d37a:	2400      	moveq	r4, #0
 800d37c:	2401      	movne	r4, #1
 800d37e:	f002 f883 	bl	800f488 <GUI_ALLOC_UnlockH>
 800d382:	e000      	b.n	800d386 <GUI_TIMER_GetFlag+0x24>
 800d384:	2401      	movs	r4, #1
 800d386:	4620      	mov	r0, r4
 800d388:	b002      	add	sp, #8
 800d38a:	bd10      	pop	{r4, pc}

0800d38c <GUI_GetTime>:
 800d38c:	f7f7 bff2 	b.w	8005374 <GUI_X_GetTime>

0800d390 <GUI_Delay>:
 800d390:	b538      	push	{r3, r4, r5, lr}
 800d392:	4605      	mov	r5, r0
 800d394:	f7f7 ffee 	bl	8005374 <GUI_X_GetTime>
 800d398:	4405      	add	r5, r0
 800d39a:	f7f7 ffeb 	bl	8005374 <GUI_X_GetTime>
 800d39e:	1a2c      	subs	r4, r5, r0
 800d3a0:	2c00      	cmp	r4, #0
 800d3a2:	dd08      	ble.n	800d3b6 <GUI_Delay+0x26>
 800d3a4:	f000 fdd8 	bl	800df58 <GUI_Exec>
 800d3a8:	2c05      	cmp	r4, #5
 800d3aa:	bfb4      	ite	lt
 800d3ac:	4620      	movlt	r0, r4
 800d3ae:	2005      	movge	r0, #5
 800d3b0:	f7f7 ffe6 	bl	8005380 <GUI_X_Delay>
 800d3b4:	e7f1      	b.n	800d39a <GUI_Delay+0xa>
 800d3b6:	bd38      	pop	{r3, r4, r5, pc}

0800d3b8 <GUI_TOUCH_Calibrate>:
 800d3b8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d3ba:	2801      	cmp	r0, #1
 800d3bc:	9c08      	ldr	r4, [sp, #32]
 800d3be:	d845      	bhi.n	800d44c <GUI_TOUCH_Calibrate+0x94>
 800d3c0:	4d25      	ldr	r5, [pc, #148]	; (800d458 <GUI_TOUCH_Calibrate+0xa0>)
 800d3c2:	d00c      	beq.n	800d3de <GUI_TOUCH_Calibrate+0x26>
 800d3c4:	4e25      	ldr	r6, [pc, #148]	; (800d45c <GUI_TOUCH_Calibrate+0xa4>)
 800d3c6:	e886 0006 	stmia.w	r6, {r1, r2}
 800d3ca:	6829      	ldr	r1, [r5, #0]
 800d3cc:	f001 0206 	and.w	r2, r1, #6
 800d3d0:	2a06      	cmp	r2, #6
 800d3d2:	4a23      	ldr	r2, [pc, #140]	; (800d460 <GUI_TOUCH_Calibrate+0xa8>)
 800d3d4:	d010      	beq.n	800d3f8 <GUI_TOUCH_Calibrate+0x40>
 800d3d6:	f001 0105 	and.w	r1, r1, #5
 800d3da:	2901      	cmp	r1, #1
 800d3dc:	e00b      	b.n	800d3f6 <GUI_TOUCH_Calibrate+0x3e>
 800d3de:	4e21      	ldr	r6, [pc, #132]	; (800d464 <GUI_TOUCH_Calibrate+0xac>)
 800d3e0:	e886 0006 	stmia.w	r6, {r1, r2}
 800d3e4:	6829      	ldr	r1, [r5, #0]
 800d3e6:	f001 0205 	and.w	r2, r1, #5
 800d3ea:	2a05      	cmp	r2, #5
 800d3ec:	4a1e      	ldr	r2, [pc, #120]	; (800d468 <GUI_TOUCH_Calibrate+0xb0>)
 800d3ee:	d003      	beq.n	800d3f8 <GUI_TOUCH_Calibrate+0x40>
 800d3f0:	f001 0106 	and.w	r1, r1, #6
 800d3f4:	2902      	cmp	r1, #2
 800d3f6:	d102      	bne.n	800d3fe <GUI_TOUCH_Calibrate+0x46>
 800d3f8:	6014      	str	r4, [r2, #0]
 800d3fa:	6053      	str	r3, [r2, #4]
 800d3fc:	e001      	b.n	800d402 <GUI_TOUCH_Calibrate+0x4a>
 800d3fe:	e882 0018 	stmia.w	r2, {r3, r4}
 800d402:	4b1a      	ldr	r3, [pc, #104]	; (800d46c <GUI_TOUCH_Calibrate+0xb4>)
 800d404:	781a      	ldrb	r2, [r3, #0]
 800d406:	4102      	asrs	r2, r0
 800d408:	07d2      	lsls	r2, r2, #31
 800d40a:	bf44      	itt	mi
 800d40c:	2200      	movmi	r2, #0
 800d40e:	701a      	strbmi	r2, [r3, #0]
 800d410:	2201      	movs	r2, #1
 800d412:	fa02 f000 	lsl.w	r0, r2, r0
 800d416:	781a      	ldrb	r2, [r3, #0]
 800d418:	4310      	orrs	r0, r2
 800d41a:	b2c0      	uxtb	r0, r0
 800d41c:	2803      	cmp	r0, #3
 800d41e:	7018      	strb	r0, [r3, #0]
 800d420:	d116      	bne.n	800d450 <GUI_TOUCH_Calibrate+0x98>
 800d422:	4c13      	ldr	r4, [pc, #76]	; (800d470 <GUI_TOUCH_Calibrate+0xb8>)
 800d424:	6823      	ldr	r3, [r4, #0]
 800d426:	7c58      	ldrb	r0, [r3, #17]
 800d428:	f7fe fd84 	bl	800bf34 <LCD_GetXSizeEx>
 800d42c:	6823      	ldr	r3, [r4, #0]
 800d42e:	4605      	mov	r5, r0
 800d430:	7c58      	ldrb	r0, [r3, #17]
 800d432:	f7fe fd82 	bl	800bf3a <LCD_GetYSizeEx>
 800d436:	4b0c      	ldr	r3, [pc, #48]	; (800d468 <GUI_TOUCH_Calibrate+0xb0>)
 800d438:	9002      	str	r0, [sp, #8]
 800d43a:	e88d 0028 	stmia.w	sp, {r3, r5}
 800d43e:	4907      	ldr	r1, [pc, #28]	; (800d45c <GUI_TOUCH_Calibrate+0xa4>)
 800d440:	4a08      	ldr	r2, [pc, #32]	; (800d464 <GUI_TOUCH_Calibrate+0xac>)
 800d442:	4b07      	ldr	r3, [pc, #28]	; (800d460 <GUI_TOUCH_Calibrate+0xa8>)
 800d444:	2002      	movs	r0, #2
 800d446:	f000 f8ff 	bl	800d648 <GUI_TOUCH_CalcCoefficients>
 800d44a:	e002      	b.n	800d452 <GUI_TOUCH_Calibrate+0x9a>
 800d44c:	2001      	movs	r0, #1
 800d44e:	e000      	b.n	800d452 <GUI_TOUCH_Calibrate+0x9a>
 800d450:	2000      	movs	r0, #0
 800d452:	b004      	add	sp, #16
 800d454:	bd70      	pop	{r4, r5, r6, pc}
 800d456:	bf00      	nop
 800d458:	20019d68 	.word	0x20019d68
 800d45c:	20019d54 	.word	0x20019d54
 800d460:	20019d70 	.word	0x20019d70
 800d464:	20019d7c 	.word	0x20019d7c
 800d468:	20019d5c 	.word	0x20019d5c
 800d46c:	20019d64 	.word	0x20019d64
 800d470:	20000274 	.word	0x20000274

0800d474 <GUI_TOUCH_Exec>:
 800d474:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d476:	4c29      	ldr	r4, [pc, #164]	; (800d51c <GUI_TOUCH_Exec+0xa8>)
 800d478:	4d29      	ldr	r5, [pc, #164]	; (800d520 <GUI_TOUCH_Exec+0xac>)
 800d47a:	7823      	ldrb	r3, [r4, #0]
 800d47c:	b087      	sub	sp, #28
 800d47e:	4626      	mov	r6, r4
 800d480:	b943      	cbnz	r3, 800d494 <GUI_TOUCH_Exec+0x20>
 800d482:	f7f7 ff90 	bl	80053a6 <GUI_TOUCH_X_MeasureY>
 800d486:	6028      	str	r0, [r5, #0]
 800d488:	f7f7 ff88 	bl	800539c <GUI_TOUCH_X_ActivateY>
 800d48c:	7823      	ldrb	r3, [r4, #0]
 800d48e:	3301      	adds	r3, #1
 800d490:	7023      	strb	r3, [r4, #0]
 800d492:	e040      	b.n	800d516 <GUI_TOUCH_Exec+0xa2>
 800d494:	f7f7 ff83 	bl	800539e <GUI_TOUCH_X_MeasureX>
 800d498:	4c22      	ldr	r4, [pc, #136]	; (800d524 <GUI_TOUCH_Exec+0xb0>)
 800d49a:	6020      	str	r0, [r4, #0]
 800d49c:	f7f7 ff7d 	bl	800539a <GUI_TOUCH_X_ActivateX>
 800d4a0:	6823      	ldr	r3, [r4, #0]
 800d4a2:	9301      	str	r3, [sp, #4]
 800d4a4:	682b      	ldr	r3, [r5, #0]
 800d4a6:	9302      	str	r3, [sp, #8]
 800d4a8:	f006 f9b8 	bl	801381c <GUI_TOUCH_GetLayer>
 800d4ac:	a902      	add	r1, sp, #8
 800d4ae:	f88d 0015 	strb.w	r0, [sp, #21]
 800d4b2:	a801      	add	r0, sp, #4
 800d4b4:	f000 f88a 	bl	800d5cc <GUI_TOUCH_CalibratePoint>
 800d4b8:	4c1b      	ldr	r4, [pc, #108]	; (800d528 <GUI_TOUCH_Exec+0xb4>)
 800d4ba:	b148      	cbz	r0, 800d4d0 <GUI_TOUCH_Exec+0x5c>
 800d4bc:	7823      	ldrb	r3, [r4, #0]
 800d4be:	b343      	cbz	r3, 800d512 <GUI_TOUCH_Exec+0x9e>
 800d4c0:	4b1a      	ldr	r3, [pc, #104]	; (800d52c <GUI_TOUCH_Exec+0xb8>)
 800d4c2:	681b      	ldr	r3, [r3, #0]
 800d4c4:	9303      	str	r3, [sp, #12]
 800d4c6:	4b1a      	ldr	r3, [pc, #104]	; (800d530 <GUI_TOUCH_Exec+0xbc>)
 800d4c8:	681b      	ldr	r3, [r3, #0]
 800d4ca:	9304      	str	r3, [sp, #16]
 800d4cc:	2500      	movs	r5, #0
 800d4ce:	e01a      	b.n	800d506 <GUI_TOUCH_Exec+0x92>
 800d4d0:	4816      	ldr	r0, [pc, #88]	; (800d52c <GUI_TOUCH_Exec+0xb8>)
 800d4d2:	4917      	ldr	r1, [pc, #92]	; (800d530 <GUI_TOUCH_Exec+0xbc>)
 800d4d4:	f894 c000 	ldrb.w	ip, [r4]
 800d4d8:	9a01      	ldr	r2, [sp, #4]
 800d4da:	6807      	ldr	r7, [r0, #0]
 800d4dc:	9b02      	ldr	r3, [sp, #8]
 800d4de:	680d      	ldr	r5, [r1, #0]
 800d4e0:	f1bc 0f00 	cmp.w	ip, #0
 800d4e4:	d00a      	beq.n	800d4fc <GUI_TOUCH_Exec+0x88>
 800d4e6:	1bd7      	subs	r7, r2, r7
 800d4e8:	1b5d      	subs	r5, r3, r5
 800d4ea:	2f00      	cmp	r7, #0
 800d4ec:	bfb8      	it	lt
 800d4ee:	427f      	neglt	r7, r7
 800d4f0:	2d00      	cmp	r5, #0
 800d4f2:	bfb8      	it	lt
 800d4f4:	426d      	neglt	r5, r5
 800d4f6:	443d      	add	r5, r7
 800d4f8:	2d02      	cmp	r5, #2
 800d4fa:	dd0a      	ble.n	800d512 <GUI_TOUCH_Exec+0x9e>
 800d4fc:	6002      	str	r2, [r0, #0]
 800d4fe:	9203      	str	r2, [sp, #12]
 800d500:	600b      	str	r3, [r1, #0]
 800d502:	9304      	str	r3, [sp, #16]
 800d504:	2501      	movs	r5, #1
 800d506:	a803      	add	r0, sp, #12
 800d508:	f88d 5014 	strb.w	r5, [sp, #20]
 800d50c:	f000 fae8 	bl	800dae0 <GUI_TOUCH_StoreStateEx>
 800d510:	7025      	strb	r5, [r4, #0]
 800d512:	2300      	movs	r3, #0
 800d514:	7033      	strb	r3, [r6, #0]
 800d516:	b007      	add	sp, #28
 800d518:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d51a:	bf00      	nop
 800d51c:	20019d6d 	.word	0x20019d6d
 800d520:	20019d84 	.word	0x20019d84
 800d524:	20019d78 	.word	0x20019d78
 800d528:	20019d6c 	.word	0x20019d6c
 800d52c:	20000260 	.word	0x20000260
 800d530:	2000025c 	.word	0x2000025c

0800d534 <GUI_TOUCH_TransformPoint>:
 800d534:	b570      	push	{r4, r5, r6, lr}
 800d536:	4b22      	ldr	r3, [pc, #136]	; (800d5c0 <GUI_TOUCH_TransformPoint+0x8c>)
 800d538:	681b      	ldr	r3, [r3, #0]
 800d53a:	ed2d 8b02 	vpush	{d8}
 800d53e:	4606      	mov	r6, r0
 800d540:	460d      	mov	r5, r1
 800d542:	b3c3      	cbz	r3, 800d5b6 <GUI_TOUCH_TransformPoint+0x82>
 800d544:	edd0 7a00 	vldr	s15, [r0]
 800d548:	4c1e      	ldr	r4, [pc, #120]	; (800d5c4 <GUI_TOUCH_TransformPoint+0x90>)
 800d54a:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 800d54e:	edd1 7a00 	vldr	s15, [r1]
 800d552:	ed94 7a01 	vldr	s14, [r4, #4]
 800d556:	eef8 8ae7 	vcvt.f32.s32	s17, s15
 800d55a:	edd4 7a00 	vldr	s15, [r4]
 800d55e:	ee28 7a87 	vmul.f32	s14, s17, s14
 800d562:	eea7 7a88 	vfma.f32	s14, s15, s16
 800d566:	edd4 7a02 	vldr	s15, [r4, #8]
 800d56a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800d56e:	ee17 0a90 	vmov	r0, s15
 800d572:	f7f3 f809 	bl	8000588 <__aeabi_f2d>
 800d576:	2200      	movs	r2, #0
 800d578:	4b13      	ldr	r3, [pc, #76]	; (800d5c8 <GUI_TOUCH_TransformPoint+0x94>)
 800d57a:	f7f2 fea7 	bl	80002cc <__adddf3>
 800d57e:	f7f3 faf5 	bl	8000b6c <__aeabi_d2iz>
 800d582:	edd4 7a04 	vldr	s15, [r4, #16]
 800d586:	ed94 7a03 	vldr	s14, [r4, #12]
 800d58a:	6030      	str	r0, [r6, #0]
 800d58c:	ee68 7aa7 	vmul.f32	s15, s17, s15
 800d590:	eee7 7a08 	vfma.f32	s15, s14, s16
 800d594:	ed94 7a05 	vldr	s14, [r4, #20]
 800d598:	ee37 7a87 	vadd.f32	s14, s15, s14
 800d59c:	ee17 0a10 	vmov	r0, s14
 800d5a0:	f7f2 fff2 	bl	8000588 <__aeabi_f2d>
 800d5a4:	2200      	movs	r2, #0
 800d5a6:	4b08      	ldr	r3, [pc, #32]	; (800d5c8 <GUI_TOUCH_TransformPoint+0x94>)
 800d5a8:	f7f2 fe90 	bl	80002cc <__adddf3>
 800d5ac:	f7f3 fade 	bl	8000b6c <__aeabi_d2iz>
 800d5b0:	6028      	str	r0, [r5, #0]
 800d5b2:	2000      	movs	r0, #0
 800d5b4:	e000      	b.n	800d5b8 <GUI_TOUCH_TransformPoint+0x84>
 800d5b6:	2001      	movs	r0, #1
 800d5b8:	ecbd 8b02 	vpop	{d8}
 800d5bc:	bd70      	pop	{r4, r5, r6, pc}
 800d5be:	bf00      	nop
 800d5c0:	20019d98 	.word	0x20019d98
 800d5c4:	20019d9c 	.word	0x20019d9c
 800d5c8:	3fe00000 	.word	0x3fe00000

0800d5cc <GUI_TOUCH_CalibratePoint>:
 800d5cc:	4b18      	ldr	r3, [pc, #96]	; (800d630 <GUI_TOUCH_CalibratePoint+0x64>)
 800d5ce:	6802      	ldr	r2, [r0, #0]
 800d5d0:	681b      	ldr	r3, [r3, #0]
 800d5d2:	429a      	cmp	r2, r3
 800d5d4:	b570      	push	{r4, r5, r6, lr}
 800d5d6:	4605      	mov	r5, r0
 800d5d8:	460c      	mov	r4, r1
 800d5da:	db27      	blt.n	800d62c <GUI_TOUCH_CalibratePoint+0x60>
 800d5dc:	4e15      	ldr	r6, [pc, #84]	; (800d634 <GUI_TOUCH_CalibratePoint+0x68>)
 800d5de:	680b      	ldr	r3, [r1, #0]
 800d5e0:	6836      	ldr	r6, [r6, #0]
 800d5e2:	42b3      	cmp	r3, r6
 800d5e4:	db22      	blt.n	800d62c <GUI_TOUCH_CalibratePoint+0x60>
 800d5e6:	4e14      	ldr	r6, [pc, #80]	; (800d638 <GUI_TOUCH_CalibratePoint+0x6c>)
 800d5e8:	6836      	ldr	r6, [r6, #0]
 800d5ea:	42b2      	cmp	r2, r6
 800d5ec:	dc1e      	bgt.n	800d62c <GUI_TOUCH_CalibratePoint+0x60>
 800d5ee:	4a13      	ldr	r2, [pc, #76]	; (800d63c <GUI_TOUCH_CalibratePoint+0x70>)
 800d5f0:	6812      	ldr	r2, [r2, #0]
 800d5f2:	4293      	cmp	r3, r2
 800d5f4:	dc1a      	bgt.n	800d62c <GUI_TOUCH_CalibratePoint+0x60>
 800d5f6:	f7ff ff9d 	bl	800d534 <GUI_TOUCH_TransformPoint>
 800d5fa:	b9c0      	cbnz	r0, 800d62e <GUI_TOUCH_CalibratePoint+0x62>
 800d5fc:	682a      	ldr	r2, [r5, #0]
 800d5fe:	2a00      	cmp	r2, #0
 800d600:	da01      	bge.n	800d606 <GUI_TOUCH_CalibratePoint+0x3a>
 800d602:	6028      	str	r0, [r5, #0]
 800d604:	e006      	b.n	800d614 <GUI_TOUCH_CalibratePoint+0x48>
 800d606:	4b0e      	ldr	r3, [pc, #56]	; (800d640 <GUI_TOUCH_CalibratePoint+0x74>)
 800d608:	681b      	ldr	r3, [r3, #0]
 800d60a:	429a      	cmp	r2, r3
 800d60c:	bfa4      	itt	ge
 800d60e:	f103 33ff 	addge.w	r3, r3, #4294967295
 800d612:	602b      	strge	r3, [r5, #0]
 800d614:	6822      	ldr	r2, [r4, #0]
 800d616:	2a00      	cmp	r2, #0
 800d618:	da01      	bge.n	800d61e <GUI_TOUCH_CalibratePoint+0x52>
 800d61a:	2300      	movs	r3, #0
 800d61c:	e004      	b.n	800d628 <GUI_TOUCH_CalibratePoint+0x5c>
 800d61e:	4b09      	ldr	r3, [pc, #36]	; (800d644 <GUI_TOUCH_CalibratePoint+0x78>)
 800d620:	681b      	ldr	r3, [r3, #0]
 800d622:	429a      	cmp	r2, r3
 800d624:	db03      	blt.n	800d62e <GUI_TOUCH_CalibratePoint+0x62>
 800d626:	3b01      	subs	r3, #1
 800d628:	6023      	str	r3, [r4, #0]
 800d62a:	bd70      	pop	{r4, r5, r6, pc}
 800d62c:	2001      	movs	r0, #1
 800d62e:	bd70      	pop	{r4, r5, r6, pc}
 800d630:	20019d88 	.word	0x20019d88
 800d634:	20019d8c 	.word	0x20019d8c
 800d638:	20019db8 	.word	0x20019db8
 800d63c:	20019db4 	.word	0x20019db4
 800d640:	20019d90 	.word	0x20019d90
 800d644:	20019d94 	.word	0x20019d94

0800d648 <GUI_TOUCH_CalcCoefficients>:
 800d648:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d64c:	ed2d 8b02 	vpush	{d8}
 800d650:	f8df c3bc 	ldr.w	ip, [pc, #956]	; 800da10 <GUI_TOUCH_CalcCoefficients+0x3c8>
 800d654:	b08c      	sub	sp, #48	; 0x30
 800d656:	2400      	movs	r4, #0
 800d658:	2802      	cmp	r0, #2
 800d65a:	9f16      	ldr	r7, [sp, #88]	; 0x58
 800d65c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 800d65e:	f8dd a060 	ldr.w	sl, [sp, #96]	; 0x60
 800d662:	f8cc 4000 	str.w	r4, [ip]
 800d666:	d135      	bne.n	800d6d4 <GUI_TOUCH_CalcCoefficients+0x8c>
 800d668:	c912      	ldmia	r1, {r1, r4}
 800d66a:	6818      	ldr	r0, [r3, #0]
 800d66c:	685b      	ldr	r3, [r3, #4]
 800d66e:	1a61      	subs	r1, r4, r1
 800d670:	1a1b      	subs	r3, r3, r0
 800d672:	ee00 1a10 	vmov	s0, r1
 800d676:	ee07 3a90 	vmov	s15, r3
 800d67a:	eeb8 7ac0 	vcvt.f32.s32	s14, s0
 800d67e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800d682:	ee05 0a10 	vmov	s10, r0
 800d686:	eec7 7a27 	vdiv.f32	s15, s14, s15
 800d68a:	6850      	ldr	r0, [r2, #4]
 800d68c:	6812      	ldr	r2, [r2, #0]
 800d68e:	4bdb      	ldr	r3, [pc, #876]	; (800d9fc <GUI_TOUCH_CalcCoefficients+0x3b4>)
 800d690:	2100      	movs	r1, #0
 800d692:	1a82      	subs	r2, r0, r2
 800d694:	6059      	str	r1, [r3, #4]
 800d696:	60d9      	str	r1, [r3, #12]
 800d698:	6839      	ldr	r1, [r7, #0]
 800d69a:	eeb8 7ac5 	vcvt.f32.s32	s14, s10
 800d69e:	ee06 2a10 	vmov	s12, r2
 800d6a2:	687a      	ldr	r2, [r7, #4]
 800d6a4:	edc3 7a00 	vstr	s15, [r3]
 800d6a8:	ee67 7a67 	vnmul.f32	s15, s14, s15
 800d6ac:	1a52      	subs	r2, r2, r1
 800d6ae:	edc3 7a02 	vstr	s15, [r3, #8]
 800d6b2:	ee07 2a90 	vmov	s15, r2
 800d6b6:	eeb8 7ac6 	vcvt.f32.s32	s14, s12
 800d6ba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800d6be:	ee06 1a90 	vmov	s13, r1
 800d6c2:	eec7 7a27 	vdiv.f32	s15, s14, s15
 800d6c6:	eeb8 7ae6 	vcvt.f32.s32	s14, s13
 800d6ca:	edc3 7a04 	vstr	s15, [r3, #16]
 800d6ce:	ee67 7a67 	vnmul.f32	s15, s14, s15
 800d6d2:	e144      	b.n	800d95e <GUI_TOUCH_CalcCoefficients+0x316>
 800d6d4:	f340 8148 	ble.w	800d968 <GUI_TOUCH_CalcCoefficients+0x320>
 800d6d8:	2803      	cmp	r0, #3
 800d6da:	d128      	bne.n	800d72e <GUI_TOUCH_CalcCoefficients+0xe6>
 800d6dc:	4620      	mov	r0, r4
 800d6de:	581d      	ldr	r5, [r3, r0]
 800d6e0:	ee00 5a10 	vmov	s0, r5
 800d6e4:	583d      	ldr	r5, [r7, r0]
 800d6e6:	eef8 7ac0 	vcvt.f32.s32	s15, s0
 800d6ea:	ac00      	add	r4, sp, #0
 800d6ec:	ee00 5a10 	vmov	s0, r5
 800d6f0:	580d      	ldr	r5, [r1, r0]
 800d6f2:	4404      	add	r4, r0
 800d6f4:	edc4 7a00 	vstr	s15, [r4]
 800d6f8:	eef8 7ac0 	vcvt.f32.s32	s15, s0
 800d6fc:	ac03      	add	r4, sp, #12
 800d6fe:	ee00 5a10 	vmov	s0, r5
 800d702:	4404      	add	r4, r0
 800d704:	5815      	ldr	r5, [r2, r0]
 800d706:	edc4 7a00 	vstr	s15, [r4]
 800d70a:	eef8 7ac0 	vcvt.f32.s32	s15, s0
 800d70e:	ac0c      	add	r4, sp, #48	; 0x30
 800d710:	4404      	add	r4, r0
 800d712:	ee00 5a10 	vmov	s0, r5
 800d716:	ed44 7a06 	vstr	s15, [r4, #-24]	; 0xffffffe8
 800d71a:	ac0c      	add	r4, sp, #48	; 0x30
 800d71c:	4404      	add	r4, r0
 800d71e:	eef8 7ac0 	vcvt.f32.s32	s15, s0
 800d722:	3004      	adds	r0, #4
 800d724:	280c      	cmp	r0, #12
 800d726:	ed44 7a03 	vstr	s15, [r4, #-12]
 800d72a:	d1d8      	bne.n	800d6de <GUI_TOUCH_CalcCoefficients+0x96>
 800d72c:	e09b      	b.n	800d866 <GUI_TOUCH_CalcCoefficients+0x21e>
 800d72e:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 800d732:	44a1      	add	r9, r4
 800d734:	f04f 0800 	mov.w	r8, #0
 800d738:	f849 8c0c 	str.w	r8, [r9, #-12]
 800d73c:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 800d740:	44a1      	add	r9, r4
 800d742:	f849 8c18 	str.w	r8, [r9, #-24]
 800d746:	f10d 090c 	add.w	r9, sp, #12
 800d74a:	44a1      	add	r9, r4
 800d74c:	f8c9 8000 	str.w	r8, [r9]
 800d750:	f10d 0900 	add.w	r9, sp, #0
 800d754:	44a1      	add	r9, r4
 800d756:	3404      	adds	r4, #4
 800d758:	2c0c      	cmp	r4, #12
 800d75a:	f8c9 8000 	str.w	r8, [r9]
 800d75e:	d1e6      	bne.n	800d72e <GUI_TOUCH_CalcCoefficients+0xe6>
 800d760:	ed9d 7a02 	vldr	s14, [sp, #8]
 800d764:	eddd 7a05 	vldr	s15, [sp, #20]
 800d768:	eddd 3a08 	vldr	s7, [sp, #32]
 800d76c:	ed9d 4a0b 	vldr	s8, [sp, #44]	; 0x2c
 800d770:	eddd 1a00 	vldr	s3, [sp]
 800d774:	eddd 5a01 	vldr	s11, [sp, #4]
 800d778:	ed9d 2a04 	vldr	s4, [sp, #16]
 800d77c:	eddd 2a06 	vldr	s5, [sp, #24]
 800d780:	ed9d 3a07 	vldr	s6, [sp, #28]
 800d784:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 800d788:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 800d78c:	ea4f 0880 	mov.w	r8, r0, lsl #2
 800d790:	2400      	movs	r4, #0
 800d792:	591d      	ldr	r5, [r3, r4]
 800d794:	ee00 5a10 	vmov	s0, r5
 800d798:	593d      	ldr	r5, [r7, r4]
 800d79a:	eeb8 6ac0 	vcvt.f32.s32	s12, s0
 800d79e:	ee00 5a10 	vmov	s0, r5
 800d7a2:	590d      	ldr	r5, [r1, r4]
 800d7a4:	eef8 6ac0 	vcvt.f32.s32	s13, s0
 800d7a8:	ee00 5a10 	vmov	s0, r5
 800d7ac:	5915      	ldr	r5, [r2, r4]
 800d7ae:	eef8 4ac0 	vcvt.f32.s32	s9, s0
 800d7b2:	ee00 5a10 	vmov	s0, r5
 800d7b6:	eeb8 5ac0 	vcvt.f32.s32	s10, s0
 800d7ba:	eee6 2a24 	vfma.f32	s5, s12, s9
 800d7be:	3404      	adds	r4, #4
 800d7c0:	4544      	cmp	r4, r8
 800d7c2:	ee73 3aa4 	vadd.f32	s7, s7, s9
 800d7c6:	eea6 3aa4 	vfma.f32	s6, s13, s9
 800d7ca:	eef0 4a60 	vmov.f32	s9, s1
 800d7ce:	ee37 7a06 	vadd.f32	s14, s14, s12
 800d7d2:	eee6 1a06 	vfma.f32	s3, s12, s12
 800d7d6:	eee6 5a26 	vfma.f32	s11, s12, s13
 800d7da:	eee6 4a05 	vfma.f32	s9, s12, s10
 800d7de:	eeb0 6a41 	vmov.f32	s12, s2
 800d7e2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d7e6:	ee34 4a05 	vadd.f32	s8, s8, s10
 800d7ea:	eea6 2aa6 	vfma.f32	s4, s13, s13
 800d7ee:	eea6 6a85 	vfma.f32	s12, s13, s10
 800d7f2:	d004      	beq.n	800d7fe <GUI_TOUCH_CalcCoefficients+0x1b6>
 800d7f4:	eef0 0a64 	vmov.f32	s1, s9
 800d7f8:	eeb0 1a46 	vmov.f32	s2, s12
 800d7fc:	e7c9      	b.n	800d792 <GUI_TOUCH_CalcCoefficients+0x14a>
 800d7fe:	eec5 6aa7 	vdiv.f32	s13, s11, s15
 800d802:	ee05 0a10 	vmov	s10, r0
 800d806:	edcd 6a01 	vstr	s13, [sp, #4]
 800d80a:	eef8 6ac5 	vcvt.f32.s32	s13, s10
 800d80e:	eec1 1a87 	vdiv.f32	s3, s3, s14
 800d812:	eec5 5a87 	vdiv.f32	s11, s11, s14
 800d816:	ee82 2a27 	vdiv.f32	s4, s4, s15
 800d81a:	eec2 2a87 	vdiv.f32	s5, s5, s14
 800d81e:	ee83 3a27 	vdiv.f32	s6, s6, s15
 800d822:	eec4 4a87 	vdiv.f32	s9, s9, s14
 800d826:	ee86 6a27 	vdiv.f32	s12, s12, s15
 800d82a:	ee87 7a26 	vdiv.f32	s14, s14, s13
 800d82e:	eec7 7aa6 	vdiv.f32	s15, s15, s13
 800d832:	eec3 3aa6 	vdiv.f32	s7, s7, s13
 800d836:	eec4 6a26 	vdiv.f32	s13, s8, s13
 800d83a:	edcd 1a00 	vstr	s3, [sp]
 800d83e:	edcd 5a03 	vstr	s11, [sp, #12]
 800d842:	ed8d 2a04 	vstr	s4, [sp, #16]
 800d846:	edcd 2a06 	vstr	s5, [sp, #24]
 800d84a:	ed8d 3a07 	vstr	s6, [sp, #28]
 800d84e:	edcd 4a09 	vstr	s9, [sp, #36]	; 0x24
 800d852:	ed8d 6a0a 	vstr	s12, [sp, #40]	; 0x28
 800d856:	ed8d 7a02 	vstr	s14, [sp, #8]
 800d85a:	edcd 7a05 	vstr	s15, [sp, #20]
 800d85e:	edcd 3a08 	vstr	s7, [sp, #32]
 800d862:	edcd 6a0b 	vstr	s13, [sp, #44]	; 0x2c
 800d866:	ed9d 7a02 	vldr	s14, [sp, #8]
 800d86a:	eddd 4a05 	vldr	s9, [sp, #20]
 800d86e:	ed9d 6a01 	vldr	s12, [sp, #4]
 800d872:	ed9d 3a03 	vldr	s6, [sp, #12]
 800d876:	eddd 5a00 	vldr	s11, [sp]
 800d87a:	eddd 2a04 	vldr	s5, [sp, #16]
 800d87e:	ee76 6a47 	vsub.f32	s13, s12, s14
 800d882:	ee73 1a64 	vsub.f32	s3, s6, s9
 800d886:	ee35 2ac7 	vsub.f32	s4, s11, s14
 800d88a:	ee32 1ae4 	vsub.f32	s2, s5, s9
 800d88e:	ee61 7ae6 	vnmul.f32	s15, s3, s13
 800d892:	eee2 7a01 	vfma.f32	s15, s4, s2
 800d896:	eef5 7a40 	vcmp.f32	s15, #0.0
 800d89a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d89e:	d063      	beq.n	800d968 <GUI_TOUCH_CalcCoefficients+0x320>
 800d8a0:	ed9d 4a08 	vldr	s8, [sp, #32]
 800d8a4:	eddd 0a07 	vldr	s1, [sp, #28]
 800d8a8:	eddd 3a06 	vldr	s7, [sp, #24]
 800d8ac:	4b53      	ldr	r3, [pc, #332]	; (800d9fc <GUI_TOUCH_CalcCoefficients+0x3b4>)
 800d8ae:	ee30 8ac4 	vsub.f32	s16, s1, s8
 800d8b2:	ee33 5ac4 	vsub.f32	s10, s7, s8
 800d8b6:	ee21 0ac8 	vnmul.f32	s0, s3, s16
 800d8ba:	eea5 0a01 	vfma.f32	s0, s10, s2
 800d8be:	ee26 5ac5 	vnmul.f32	s10, s13, s10
 800d8c2:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800d8c6:	eea8 5a02 	vfma.f32	s10, s16, s4
 800d8ca:	ed83 0a00 	vstr	s0, [r3]
 800d8ce:	ee85 5a27 	vdiv.f32	s10, s10, s15
 800d8d2:	ed83 5a01 	vstr	s10, [r3, #4]
 800d8d6:	ee23 5ac7 	vnmul.f32	s10, s7, s14
 800d8da:	eea5 5a84 	vfma.f32	s10, s11, s8
 800d8de:	ee24 4a46 	vnmul.f32	s8, s8, s12
 800d8e2:	ee22 5a85 	vmul.f32	s10, s5, s10
 800d8e6:	eea7 4a20 	vfma.f32	s8, s14, s1
 800d8ea:	eea3 5a04 	vfma.f32	s10, s6, s8
 800d8ee:	ee20 4ae5 	vnmul.f32	s8, s1, s11
 800d8f2:	eea6 4a23 	vfma.f32	s8, s12, s7
 800d8f6:	eddd 3a0a 	vldr	s7, [sp, #40]	; 0x28
 800d8fa:	eea4 5a84 	vfma.f32	s10, s9, s8
 800d8fe:	ed9d 4a09 	vldr	s8, [sp, #36]	; 0x24
 800d902:	ee85 5a27 	vdiv.f32	s10, s10, s15
 800d906:	ed83 5a02 	vstr	s10, [r3, #8]
 800d90a:	ed9d 5a0b 	vldr	s10, [sp, #44]	; 0x2c
 800d90e:	ee34 0a45 	vsub.f32	s0, s8, s10
 800d912:	ee73 0ac5 	vsub.f32	s1, s7, s10
 800d916:	ee66 6ac0 	vnmul.f32	s13, s13, s0
 800d91a:	ee61 1ae0 	vnmul.f32	s3, s3, s1
 800d91e:	eee0 6a82 	vfma.f32	s13, s1, s4
 800d922:	eee0 1a01 	vfma.f32	s3, s0, s2
 800d926:	eec6 6aa7 	vdiv.f32	s13, s13, s15
 800d92a:	eec1 1aa7 	vdiv.f32	s3, s3, s15
 800d92e:	edc3 6a04 	vstr	s13, [r3, #16]
 800d932:	ee64 6a47 	vnmul.f32	s13, s8, s14
 800d936:	edc3 1a03 	vstr	s3, [r3, #12]
 800d93a:	eee5 6a85 	vfma.f32	s13, s11, s10
 800d93e:	ee25 5a46 	vnmul.f32	s10, s10, s12
 800d942:	ee62 6aa6 	vmul.f32	s13, s5, s13
 800d946:	eea7 5a23 	vfma.f32	s10, s14, s7
 800d94a:	ee63 5ae5 	vnmul.f32	s11, s7, s11
 800d94e:	eee3 6a05 	vfma.f32	s13, s6, s10
 800d952:	eee6 5a04 	vfma.f32	s11, s12, s8
 800d956:	eee4 6aa5 	vfma.f32	s13, s9, s11
 800d95a:	eec6 7aa7 	vdiv.f32	s15, s13, s15
 800d95e:	edc3 7a05 	vstr	s15, [r3, #20]
 800d962:	2301      	movs	r3, #1
 800d964:	f8cc 3000 	str.w	r3, [ip]
 800d968:	f8dc 0000 	ldr.w	r0, [ip]
 800d96c:	2800      	cmp	r0, #0
 800d96e:	f000 80a7 	beq.w	800dac0 <GUI_TOUCH_CalcCoefficients+0x478>
 800d972:	4b23      	ldr	r3, [pc, #140]	; (800da00 <GUI_TOUCH_CalcCoefficients+0x3b8>)
 800d974:	eddf 7a23 	vldr	s15, [pc, #140]	; 800da04 <GUI_TOUCH_CalcCoefficients+0x3bc>
 800d978:	601e      	str	r6, [r3, #0]
 800d97a:	4b23      	ldr	r3, [pc, #140]	; (800da08 <GUI_TOUCH_CalcCoefficients+0x3c0>)
 800d97c:	f8c3 a000 	str.w	sl, [r3]
 800d980:	4b1e      	ldr	r3, [pc, #120]	; (800d9fc <GUI_TOUCH_CalcCoefficients+0x3b4>)
 800d982:	ed93 7a00 	vldr	s14, [r3]
 800d986:	eeb4 7a67 	vcmp.f32	s14, s15
 800d98a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d98e:	d012      	beq.n	800d9b6 <GUI_TOUCH_CalcCoefficients+0x36e>
 800d990:	edd3 6a01 	vldr	s13, [r3, #4]
 800d994:	eee6 7ae7 	vfms.f32	s15, s13, s15
 800d998:	edd3 6a02 	vldr	s13, [r3, #8]
 800d99c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d9a0:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 800d9a4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d9a8:	eec7 7a87 	vdiv.f32	s15, s15, s14
 800d9ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d9b0:	ee17 1a90 	vmov	r1, s15
 800d9b4:	e001      	b.n	800d9ba <GUI_TOUCH_CalcCoefficients+0x372>
 800d9b6:	f04f 31ff 	mov.w	r1, #4294967295
 800d9ba:	edd3 7a04 	vldr	s15, [r3, #16]
 800d9be:	eddf 6a11 	vldr	s13, [pc, #68]	; 800da04 <GUI_TOUCH_CalcCoefficients+0x3bc>
 800d9c2:	4c12      	ldr	r4, [pc, #72]	; (800da0c <GUI_TOUCH_CalcCoefficients+0x3c4>)
 800d9c4:	4a0d      	ldr	r2, [pc, #52]	; (800d9fc <GUI_TOUCH_CalcCoefficients+0x3b4>)
 800d9c6:	6021      	str	r1, [r4, #0]
 800d9c8:	eef4 7a66 	vcmp.f32	s15, s13
 800d9cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d9d0:	4627      	mov	r7, r4
 800d9d2:	d01f      	beq.n	800da14 <GUI_TOUCH_CalcCoefficients+0x3cc>
 800d9d4:	ed92 6a03 	vldr	s12, [r2, #12]
 800d9d8:	eee6 6a66 	vfms.f32	s13, s12, s13
 800d9dc:	ed92 6a05 	vldr	s12, [r2, #20]
 800d9e0:	ee76 6ac6 	vsub.f32	s13, s13, s12
 800d9e4:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 800d9e8:	ee76 6ac6 	vsub.f32	s13, s13, s12
 800d9ec:	eec6 6aa7 	vdiv.f32	s13, s13, s15
 800d9f0:	eefd 6ae6 	vcvt.s32.f32	s13, s13
 800d9f4:	ee16 2a90 	vmov	r2, s13
 800d9f8:	e00e      	b.n	800da18 <GUI_TOUCH_CalcCoefficients+0x3d0>
 800d9fa:	bf00      	nop
 800d9fc:	20019d9c 	.word	0x20019d9c
 800da00:	20019d90 	.word	0x20019d90
 800da04:	00000000 	.word	0x00000000
 800da08:	20019d94 	.word	0x20019d94
 800da0c:	20019d88 	.word	0x20019d88
 800da10:	20019d98 	.word	0x20019d98
 800da14:	f04f 32ff 	mov.w	r2, #4294967295
 800da18:	4c2e      	ldr	r4, [pc, #184]	; (800dad4 <GUI_TOUCH_CalcCoefficients+0x48c>)
 800da1a:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800da1e:	3e01      	subs	r6, #1
 800da20:	f10a 3aff 	add.w	sl, sl, #4294967295
 800da24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800da28:	ee05 6a90 	vmov	s11, r6
 800da2c:	6022      	str	r2, [r4, #0]
 800da2e:	ee06 aa10 	vmov	s12, sl
 800da32:	4626      	mov	r6, r4
 800da34:	d016      	beq.n	800da64 <GUI_TOUCH_CalcCoefficients+0x41c>
 800da36:	ed93 5a01 	vldr	s10, [r3, #4]
 800da3a:	eef8 4ac6 	vcvt.f32.s32	s9, s12
 800da3e:	eef8 6ae5 	vcvt.f32.s32	s13, s11
 800da42:	eee4 6ac5 	vfms.f32	s13, s9, s10
 800da46:	ed93 5a02 	vldr	s10, [r3, #8]
 800da4a:	ee76 6ac5 	vsub.f32	s13, s13, s10
 800da4e:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 800da52:	ee76 6ac5 	vsub.f32	s13, s13, s10
 800da56:	ee86 7a87 	vdiv.f32	s14, s13, s14
 800da5a:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800da5e:	ee17 4a10 	vmov	r4, s14
 800da62:	e001      	b.n	800da68 <GUI_TOUCH_CalcCoefficients+0x420>
 800da64:	f04f 34ff 	mov.w	r4, #4294967295
 800da68:	4d1b      	ldr	r5, [pc, #108]	; (800dad8 <GUI_TOUCH_CalcCoefficients+0x490>)
 800da6a:	eef5 7a40 	vcmp.f32	s15, #0.0
 800da6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800da72:	602c      	str	r4, [r5, #0]
 800da74:	46ac      	mov	ip, r5
 800da76:	d016      	beq.n	800daa6 <GUI_TOUCH_CalcCoefficients+0x45e>
 800da78:	edd3 6a03 	vldr	s13, [r3, #12]
 800da7c:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 800da80:	eeb8 7ac6 	vcvt.f32.s32	s14, s12
 800da84:	eea5 7ae6 	vfms.f32	s14, s11, s13
 800da88:	edd3 6a05 	vldr	s13, [r3, #20]
 800da8c:	ee37 7a66 	vsub.f32	s14, s14, s13
 800da90:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 800da94:	ee37 7a66 	vsub.f32	s14, s14, s13
 800da98:	eec7 7a27 	vdiv.f32	s15, s14, s15
 800da9c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800daa0:	ee17 3a90 	vmov	r3, s15
 800daa4:	e001      	b.n	800daaa <GUI_TOUCH_CalcCoefficients+0x462>
 800daa6:	f04f 33ff 	mov.w	r3, #4294967295
 800daaa:	42a1      	cmp	r1, r4
 800daac:	4d0b      	ldr	r5, [pc, #44]	; (800dadc <GUI_TOUCH_CalcCoefficients+0x494>)
 800daae:	bfc4      	itt	gt
 800dab0:	603c      	strgt	r4, [r7, #0]
 800dab2:	f8cc 1000 	strgt.w	r1, [ip]
 800dab6:	429a      	cmp	r2, r3
 800dab8:	602b      	str	r3, [r5, #0]
 800daba:	bfc4      	itt	gt
 800dabc:	6033      	strgt	r3, [r6, #0]
 800dabe:	602a      	strgt	r2, [r5, #0]
 800dac0:	f1d0 0001 	rsbs	r0, r0, #1
 800dac4:	bf38      	it	cc
 800dac6:	2000      	movcc	r0, #0
 800dac8:	b00c      	add	sp, #48	; 0x30
 800daca:	ecbd 8b02 	vpop	{d8}
 800dace:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800dad2:	bf00      	nop
 800dad4:	20019d8c 	.word	0x20019d8c
 800dad8:	20019db8 	.word	0x20019db8
 800dadc:	20019db4 	.word	0x20019db4

0800dae0 <GUI_TOUCH_StoreStateEx>:
 800dae0:	b530      	push	{r4, r5, lr}
 800dae2:	4d0f      	ldr	r5, [pc, #60]	; (800db20 <GUI_TOUCH_StoreStateEx+0x40>)
 800dae4:	b085      	sub	sp, #20
 800dae6:	4629      	mov	r1, r5
 800dae8:	220c      	movs	r2, #12
 800daea:	4604      	mov	r4, r0
 800daec:	f007 fbb8 	bl	8015260 <memcmp>
 800daf0:	b1a0      	cbz	r0, 800db1c <GUI_TOUCH_StoreStateEx+0x3c>
 800daf2:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 800daf6:	4b0b      	ldr	r3, [pc, #44]	; (800db24 <GUI_TOUCH_StoreStateEx+0x44>)
 800daf8:	681b      	ldr	r3, [r3, #0]
 800dafa:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800dafe:	b153      	cbz	r3, 800db16 <GUI_TOUCH_StoreStateEx+0x36>
 800db00:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 800db04:	ad01      	add	r5, sp, #4
 800db06:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800db0a:	4628      	mov	r0, r5
 800db0c:	a902      	add	r1, sp, #8
 800db0e:	4798      	blx	r3
 800db10:	b920      	cbnz	r0, 800db1c <GUI_TOUCH_StoreStateEx+0x3c>
 800db12:	4628      	mov	r0, r5
 800db14:	e000      	b.n	800db18 <GUI_TOUCH_StoreStateEx+0x38>
 800db16:	4620      	mov	r0, r4
 800db18:	f000 f8fe 	bl	800dd18 <GUI_PID_StoreState>
 800db1c:	b005      	add	sp, #20
 800db1e:	bd30      	pop	{r4, r5, pc}
 800db20:	20019dbc 	.word	0x20019dbc
 800db24:	20019dc8 	.word	0x20019dc8

0800db28 <GUI_SetTextMode>:
 800db28:	4b03      	ldr	r3, [pc, #12]	; (800db38 <GUI_SetTextMode+0x10>)
 800db2a:	681b      	ldr	r3, [r3, #0]
 800db2c:	f9b3 202a 	ldrsh.w	r2, [r3, #42]	; 0x2a
 800db30:	8558      	strh	r0, [r3, #42]	; 0x2a
 800db32:	4610      	mov	r0, r2
 800db34:	4770      	bx	lr
 800db36:	bf00      	nop
 800db38:	20000274 	.word	0x20000274

0800db3c <GUI_SetTextAlign>:
 800db3c:	4b03      	ldr	r3, [pc, #12]	; (800db4c <GUI_SetTextAlign+0x10>)
 800db3e:	681b      	ldr	r3, [r3, #0]
 800db40:	f9b3 202c 	ldrsh.w	r2, [r3, #44]	; 0x2c
 800db44:	8598      	strh	r0, [r3, #44]	; 0x2c
 800db46:	4610      	mov	r0, r2
 800db48:	4770      	bx	lr
 800db4a:	bf00      	nop
 800db4c:	20000274 	.word	0x20000274

0800db50 <GUI_SetLineStyle>:
 800db50:	4b02      	ldr	r3, [pc, #8]	; (800db5c <GUI_SetLineStyle+0xc>)
 800db52:	681b      	ldr	r3, [r3, #0]
 800db54:	7e9a      	ldrb	r2, [r3, #26]
 800db56:	7698      	strb	r0, [r3, #26]
 800db58:	4610      	mov	r0, r2
 800db5a:	4770      	bx	lr
 800db5c:	20000274 	.word	0x20000274

0800db60 <GUI_SetFont>:
 800db60:	4b03      	ldr	r3, [pc, #12]	; (800db70 <GUI_SetFont+0x10>)
 800db62:	681b      	ldr	r3, [r3, #0]
 800db64:	69d9      	ldr	r1, [r3, #28]
 800db66:	b100      	cbz	r0, 800db6a <GUI_SetFont+0xa>
 800db68:	61d8      	str	r0, [r3, #28]
 800db6a:	4608      	mov	r0, r1
 800db6c:	4770      	bx	lr
 800db6e:	bf00      	nop
 800db70:	20000274 	.word	0x20000274

0800db74 <GUI_SetDrawMode>:
 800db74:	f7fe bac0 	b.w	800c0f8 <LCD_SetDrawMode>

0800db78 <GL_SetDefault>:
 800db78:	b508      	push	{r3, lr}
 800db7a:	2000      	movs	r0, #0
 800db7c:	f000 f81c 	bl	800dbb8 <GUI_SetBkColor>
 800db80:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 800db84:	f000 f81a 	bl	800dbbc <GUI_SetColor>
 800db88:	2001      	movs	r0, #1
 800db8a:	f000 f893 	bl	800dcb4 <GUI_SetPenSize>
 800db8e:	2000      	movs	r0, #0
 800db90:	f7ff ffd4 	bl	800db3c <GUI_SetTextAlign>
 800db94:	2000      	movs	r0, #0
 800db96:	f7ff ffc7 	bl	800db28 <GUI_SetTextMode>
 800db9a:	2000      	movs	r0, #0
 800db9c:	f7ff ffea 	bl	800db74 <GUI_SetDrawMode>
 800dba0:	4b04      	ldr	r3, [pc, #16]	; (800dbb4 <GL_SetDefault+0x3c>)
 800dba2:	6818      	ldr	r0, [r3, #0]
 800dba4:	f7ff ffdc 	bl	800db60 <GUI_SetFont>
 800dba8:	2000      	movs	r0, #0
 800dbaa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800dbae:	f7ff bfcf 	b.w	800db50 <GUI_SetLineStyle>
 800dbb2:	bf00      	nop
 800dbb4:	20000278 	.word	0x20000278

0800dbb8 <GUI_SetBkColor>:
 800dbb8:	f7fe bde6 	b.w	800c788 <LCD_SetBkColor>

0800dbbc <GUI_SetColor>:
 800dbbc:	f7fe bdec 	b.w	800c798 <LCD_SetColor>

0800dbc0 <GUI__AlphaPreserveTrans>:
 800dbc0:	b510      	push	{r4, lr}
 800dbc2:	4b07      	ldr	r3, [pc, #28]	; (800dbe0 <GUI__AlphaPreserveTrans+0x20>)
 800dbc4:	781c      	ldrb	r4, [r3, #0]
 800dbc6:	b120      	cbz	r0, 800dbd2 <GUI__AlphaPreserveTrans+0x12>
 800dbc8:	2201      	movs	r2, #1
 800dbca:	701a      	strb	r2, [r3, #0]
 800dbcc:	f04f 30ff 	mov.w	r0, #4294967295
 800dbd0:	e002      	b.n	800dbd8 <GUI__AlphaPreserveTrans+0x18>
 800dbd2:	7018      	strb	r0, [r3, #0]
 800dbd4:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 800dbd8:	f005 f994 	bl	8012f04 <LCD_AA_SetAndMask>
 800dbdc:	4620      	mov	r0, r4
 800dbde:	bd10      	pop	{r4, pc}
 800dbe0:	2001ba25 	.word	0x2001ba25

0800dbe4 <GUI_GetCursorLayer>:
 800dbe4:	2801      	cmp	r0, #1
 800dbe6:	bf9a      	itte	ls
 800dbe8:	4b02      	ldrls	r3, [pc, #8]	; (800dbf4 <GUI_GetCursorLayer+0x10>)
 800dbea:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
 800dbee:	2000      	movhi	r0, #0
 800dbf0:	4770      	bx	lr
 800dbf2:	bf00      	nop
 800dbf4:	20019dcc 	.word	0x20019dcc

0800dbf8 <GUI_GetLayerPosEx>:
 800dbf8:	b538      	push	{r3, r4, r5, lr}
 800dbfa:	460d      	mov	r5, r1
 800dbfc:	4614      	mov	r4, r2
 800dbfe:	f7fe f961 	bl	800bec4 <LCD_GetPosEx>
 800dc02:	b110      	cbz	r0, 800dc0a <GUI_GetLayerPosEx+0x12>
 800dc04:	2300      	movs	r3, #0
 800dc06:	602b      	str	r3, [r5, #0]
 800dc08:	6023      	str	r3, [r4, #0]
 800dc0a:	bd38      	pop	{r3, r4, r5, pc}

0800dc0c <GUI_SelectLayer>:
 800dc0c:	b570      	push	{r4, r5, r6, lr}
 800dc0e:	4d08      	ldr	r5, [pc, #32]	; (800dc30 <GUI_SelectLayer+0x24>)
 800dc10:	682b      	ldr	r3, [r5, #0]
 800dc12:	2801      	cmp	r0, #1
 800dc14:	4604      	mov	r4, r0
 800dc16:	7c5e      	ldrb	r6, [r3, #17]
 800dc18:	d808      	bhi.n	800dc2c <GUI_SelectLayer+0x20>
 800dc1a:	f000 fecd 	bl	800e9b8 <GUI_DEVICE__GetpDriver>
 800dc1e:	b128      	cbz	r0, 800dc2c <GUI_SelectLayer+0x20>
 800dc20:	682b      	ldr	r3, [r5, #0]
 800dc22:	745c      	strb	r4, [r3, #17]
 800dc24:	f000 f80a 	bl	800dc3c <GUI_SelectLCD>
 800dc28:	4b02      	ldr	r3, [pc, #8]	; (800dc34 <GUI_SelectLayer+0x28>)
 800dc2a:	601c      	str	r4, [r3, #0]
 800dc2c:	4630      	mov	r0, r6
 800dc2e:	bd70      	pop	{r4, r5, r6, pc}
 800dc30:	20000274 	.word	0x20000274
 800dc34:	2001b9d8 	.word	0x2001b9d8

0800dc38 <GUI_SetLayerPosEx>:
 800dc38:	f7fe b914 	b.w	800be64 <LCD_SetPosEx>

0800dc3c <GUI_SelectLCD>:
 800dc3c:	b508      	push	{r3, lr}
 800dc3e:	f004 ffb9 	bl	8012bb4 <LCD_SelectLCD>
 800dc42:	f7fe f8b5 	bl	800bdb0 <LCD_UpdateColorIndices>
 800dc46:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800dc4a:	f7fb bedf 	b.w	8009a0c <WM_Activate>
	...

0800dc50 <GUI_SaveContext_W>:
 800dc50:	b508      	push	{r3, lr}
 800dc52:	4b03      	ldr	r3, [pc, #12]	; (800dc60 <GUI_SaveContext_W+0x10>)
 800dc54:	2270      	movs	r2, #112	; 0x70
 800dc56:	6819      	ldr	r1, [r3, #0]
 800dc58:	f007 fb11 	bl	801527e <memcpy>
 800dc5c:	bd08      	pop	{r3, pc}
 800dc5e:	bf00      	nop
 800dc60:	20000274 	.word	0x20000274

0800dc64 <GUI_RestoreContext>:
 800dc64:	b508      	push	{r3, lr}
 800dc66:	4b03      	ldr	r3, [pc, #12]	; (800dc74 <GUI_RestoreContext+0x10>)
 800dc68:	4601      	mov	r1, r0
 800dc6a:	2270      	movs	r2, #112	; 0x70
 800dc6c:	6818      	ldr	r0, [r3, #0]
 800dc6e:	f007 fb06 	bl	801527e <memcpy>
 800dc72:	bd08      	pop	{r3, pc}
 800dc74:	20000274 	.word	0x20000274

0800dc78 <GUI_RectsIntersect>:
 800dc78:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800dc7c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800dc80:	429a      	cmp	r2, r3
 800dc82:	dc14      	bgt.n	800dcae <GUI_RectsIntersect+0x36>
 800dc84:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800dc88:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800dc8c:	429a      	cmp	r2, r3
 800dc8e:	dc0e      	bgt.n	800dcae <GUI_RectsIntersect+0x36>
 800dc90:	f9b0 2000 	ldrsh.w	r2, [r0]
 800dc94:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800dc98:	429a      	cmp	r2, r3
 800dc9a:	dc08      	bgt.n	800dcae <GUI_RectsIntersect+0x36>
 800dc9c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800dca0:	f9b1 2000 	ldrsh.w	r2, [r1]
 800dca4:	429a      	cmp	r2, r3
 800dca6:	bfcc      	ite	gt
 800dca8:	2000      	movgt	r0, #0
 800dcaa:	2001      	movle	r0, #1
 800dcac:	4770      	bx	lr
 800dcae:	2000      	movs	r0, #0
 800dcb0:	4770      	bx	lr
	...

0800dcb4 <GUI_SetPenSize>:
 800dcb4:	4b02      	ldr	r3, [pc, #8]	; (800dcc0 <GUI_SetPenSize+0xc>)
 800dcb6:	681b      	ldr	r3, [r3, #0]
 800dcb8:	7e1a      	ldrb	r2, [r3, #24]
 800dcba:	7618      	strb	r0, [r3, #24]
 800dcbc:	4610      	mov	r0, r2
 800dcbe:	4770      	bx	lr
 800dcc0:	20000274 	.word	0x20000274

0800dcc4 <GUI_PID_GetState>:
 800dcc4:	4a11      	ldr	r2, [pc, #68]	; (800dd0c <GUI_PID_GetState+0x48>)
 800dcc6:	4912      	ldr	r1, [pc, #72]	; (800dd10 <GUI_PID_GetState+0x4c>)
 800dcc8:	6813      	ldr	r3, [r2, #0]
 800dcca:	6809      	ldr	r1, [r1, #0]
 800dccc:	428b      	cmp	r3, r1
 800dcce:	b570      	push	{r4, r5, r6, lr}
 800dcd0:	4604      	mov	r4, r0
 800dcd2:	4616      	mov	r6, r2
 800dcd4:	4d0f      	ldr	r5, [pc, #60]	; (800dd14 <GUI_PID_GetState+0x50>)
 800dcd6:	d109      	bne.n	800dcec <GUI_PID_GetState+0x28>
 800dcd8:	42ab      	cmp	r3, r5
 800dcda:	bf06      	itte	eq
 800dcdc:	333c      	addeq	r3, #60	; 0x3c
 800dcde:	e893 0007 	ldmiaeq.w	r3, {r0, r1, r2}
 800dce2:	e913 0007 	ldmdbne	r3, {r0, r1, r2}
 800dce6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800dcea:	e00a      	b.n	800dd02 <GUI_PID_GetState+0x3e>
 800dcec:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800dcf0:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800dcf4:	f105 023c 	add.w	r2, r5, #60	; 0x3c
 800dcf8:	4293      	cmp	r3, r2
 800dcfa:	bf18      	it	ne
 800dcfc:	f103 050c 	addne.w	r5, r3, #12
 800dd00:	6035      	str	r5, [r6, #0]
 800dd02:	7a20      	ldrb	r0, [r4, #8]
 800dd04:	3000      	adds	r0, #0
 800dd06:	bf18      	it	ne
 800dd08:	2001      	movne	r0, #1
 800dd0a:	bd70      	pop	{r4, r5, r6, pc}
 800dd0c:	20000268 	.word	0x20000268
 800dd10:	20000264 	.word	0x20000264
 800dd14:	20019dd8 	.word	0x20019dd8

0800dd18 <GUI_PID_StoreState>:
 800dd18:	4a21      	ldr	r2, [pc, #132]	; (800dda0 <GUI_PID_StoreState+0x88>)
 800dd1a:	4922      	ldr	r1, [pc, #136]	; (800dda4 <GUI_PID_StoreState+0x8c>)
 800dd1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dd20:	6011      	str	r1, [r2, #0]
 800dd22:	4f21      	ldr	r7, [pc, #132]	; (800dda8 <GUI_PID_StoreState+0x90>)
 800dd24:	4921      	ldr	r1, [pc, #132]	; (800ddac <GUI_PID_StoreState+0x94>)
 800dd26:	683a      	ldr	r2, [r7, #0]
 800dd28:	680c      	ldr	r4, [r1, #0]
 800dd2a:	4603      	mov	r3, r0
 800dd2c:	4820      	ldr	r0, [pc, #128]	; (800ddb0 <GUI_PID_StoreState+0x98>)
 800dd2e:	4294      	cmp	r4, r2
 800dd30:	468c      	mov	ip, r1
 800dd32:	f100 063c 	add.w	r6, r0, #60	; 0x3c
 800dd36:	d017      	beq.n	800dd68 <GUI_PID_StoreState+0x50>
 800dd38:	4282      	cmp	r2, r0
 800dd3a:	bf14      	ite	ne
 800dd3c:	f1a2 010c 	subne.w	r1, r2, #12
 800dd40:	4631      	moveq	r1, r6
 800dd42:	7a1d      	ldrb	r5, [r3, #8]
 800dd44:	f891 8008 	ldrb.w	r8, [r1, #8]
 800dd48:	45a8      	cmp	r8, r5
 800dd4a:	d10d      	bne.n	800dd68 <GUI_PID_StoreState+0x50>
 800dd4c:	428c      	cmp	r4, r1
 800dd4e:	d00b      	beq.n	800dd68 <GUI_PID_StoreState+0x50>
 800dd50:	4281      	cmp	r1, r0
 800dd52:	bf14      	ite	ne
 800dd54:	390c      	subne	r1, #12
 800dd56:	4917      	ldreq	r1, [pc, #92]	; (800ddb4 <GUI_PID_StoreState+0x9c>)
 800dd58:	7a09      	ldrb	r1, [r1, #8]
 800dd5a:	42a9      	cmp	r1, r5
 800dd5c:	d104      	bne.n	800dd68 <GUI_PID_StoreState+0x50>
 800dd5e:	4282      	cmp	r2, r0
 800dd60:	bf14      	ite	ne
 800dd62:	3a0c      	subne	r2, #12
 800dd64:	4a13      	ldreq	r2, [pc, #76]	; (800ddb4 <GUI_PID_StoreState+0x9c>)
 800dd66:	603a      	str	r2, [r7, #0]
 800dd68:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800dd6c:	683d      	ldr	r5, [r7, #0]
 800dd6e:	42b5      	cmp	r5, r6
 800dd70:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800dd74:	bf0c      	ite	eq
 800dd76:	4d0e      	ldreq	r5, [pc, #56]	; (800ddb0 <GUI_PID_StoreState+0x98>)
 800dd78:	350c      	addne	r5, #12
 800dd7a:	42ac      	cmp	r4, r5
 800dd7c:	603d      	str	r5, [r7, #0]
 800dd7e:	d105      	bne.n	800dd8c <GUI_PID_StoreState+0x74>
 800dd80:	42b4      	cmp	r4, r6
 800dd82:	bf14      	ite	ne
 800dd84:	340c      	addne	r4, #12
 800dd86:	4c0a      	ldreq	r4, [pc, #40]	; (800ddb0 <GUI_PID_StoreState+0x98>)
 800dd88:	f8cc 4000 	str.w	r4, [ip]
 800dd8c:	4a0a      	ldr	r2, [pc, #40]	; (800ddb8 <GUI_PID_StoreState+0xa0>)
 800dd8e:	6812      	ldr	r2, [r2, #0]
 800dd90:	b10a      	cbz	r2, 800dd96 <GUI_PID_StoreState+0x7e>
 800dd92:	4618      	mov	r0, r3
 800dd94:	4790      	blx	r2
 800dd96:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800dd9a:	f7ff b81b 	b.w	800cdd4 <GUI_SignalEvent>
 800dd9e:	bf00      	nop
 800dda0:	2001ba40 	.word	0x2001ba40
 800dda4:	08010e81 	.word	0x08010e81
 800dda8:	20000264 	.word	0x20000264
 800ddac:	20000268 	.word	0x20000268
 800ddb0:	20019dd8 	.word	0x20019dd8
 800ddb4:	20019e14 	.word	0x20019e14
 800ddb8:	20019dd4 	.word	0x20019dd4

0800ddbc <GUI_PID_IsEmpty>:
 800ddbc:	4b03      	ldr	r3, [pc, #12]	; (800ddcc <GUI_PID_IsEmpty+0x10>)
 800ddbe:	6818      	ldr	r0, [r3, #0]
 800ddc0:	4b03      	ldr	r3, [pc, #12]	; (800ddd0 <GUI_PID_IsEmpty+0x14>)
 800ddc2:	681b      	ldr	r3, [r3, #0]
 800ddc4:	1ac3      	subs	r3, r0, r3
 800ddc6:	4258      	negs	r0, r3
 800ddc8:	4158      	adcs	r0, r3
 800ddca:	4770      	bx	lr
 800ddcc:	20000268 	.word	0x20000268
 800ddd0:	20000264 	.word	0x20000264

0800ddd4 <GUI_GetKey>:
 800ddd4:	4b02      	ldr	r3, [pc, #8]	; (800dde0 <GUI_GetKey+0xc>)
 800ddd6:	2200      	movs	r2, #0
 800ddd8:	6818      	ldr	r0, [r3, #0]
 800ddda:	601a      	str	r2, [r3, #0]
 800dddc:	4770      	bx	lr
 800ddde:	bf00      	nop
 800dde0:	20019e20 	.word	0x20019e20

0800dde4 <GUI_StoreKey>:
 800dde4:	4b02      	ldr	r3, [pc, #8]	; (800ddf0 <GUI_StoreKey+0xc>)
 800dde6:	681a      	ldr	r2, [r3, #0]
 800dde8:	b902      	cbnz	r2, 800ddec <GUI_StoreKey+0x8>
 800ddea:	6018      	str	r0, [r3, #0]
 800ddec:	f7fe bff2 	b.w	800cdd4 <GUI_SignalEvent>
 800ddf0:	20019e20 	.word	0x20019e20

0800ddf4 <GUI_PollKeyMsg>:
 800ddf4:	4a0a      	ldr	r2, [pc, #40]	; (800de20 <GUI_PollKeyMsg+0x2c>)
 800ddf6:	490b      	ldr	r1, [pc, #44]	; (800de24 <GUI_PollKeyMsg+0x30>)
 800ddf8:	6813      	ldr	r3, [r2, #0]
 800ddfa:	6809      	ldr	r1, [r1, #0]
 800ddfc:	428b      	cmp	r3, r1
 800ddfe:	b510      	push	{r4, lr}
 800de00:	d00b      	beq.n	800de1a <GUI_PollKeyMsg+0x26>
 800de02:	4c09      	ldr	r4, [pc, #36]	; (800de28 <GUI_PollKeyMsg+0x34>)
 800de04:	42a3      	cmp	r3, r4
 800de06:	e893 0003 	ldmia.w	r3, {r0, r1}
 800de0a:	bf14      	ite	ne
 800de0c:	3308      	addne	r3, #8
 800de0e:	3b50      	subeq	r3, #80	; 0x50
 800de10:	6013      	str	r3, [r2, #0]
 800de12:	f003 fb21 	bl	8011458 <WM_OnKey>
 800de16:	2001      	movs	r0, #1
 800de18:	bd10      	pop	{r4, pc}
 800de1a:	2000      	movs	r0, #0
 800de1c:	bd10      	pop	{r4, pc}
 800de1e:	bf00      	nop
 800de20:	20000270 	.word	0x20000270
 800de24:	2000026c 	.word	0x2000026c
 800de28:	20019e74 	.word	0x20019e74

0800de2c <GUI_MoveRect>:
 800de2c:	b168      	cbz	r0, 800de4a <GUI_MoveRect+0x1e>
 800de2e:	8803      	ldrh	r3, [r0, #0]
 800de30:	b289      	uxth	r1, r1
 800de32:	440b      	add	r3, r1
 800de34:	8003      	strh	r3, [r0, #0]
 800de36:	8883      	ldrh	r3, [r0, #4]
 800de38:	4419      	add	r1, r3
 800de3a:	8843      	ldrh	r3, [r0, #2]
 800de3c:	8081      	strh	r1, [r0, #4]
 800de3e:	b292      	uxth	r2, r2
 800de40:	4413      	add	r3, r2
 800de42:	8043      	strh	r3, [r0, #2]
 800de44:	88c3      	ldrh	r3, [r0, #6]
 800de46:	441a      	add	r2, r3
 800de48:	80c2      	strh	r2, [r0, #6]
 800de4a:	4770      	bx	lr

0800de4c <GUI_MergeRect>:
 800de4c:	b510      	push	{r4, lr}
 800de4e:	b338      	cbz	r0, 800dea0 <GUI_MergeRect+0x54>
 800de50:	b309      	cbz	r1, 800de96 <GUI_MergeRect+0x4a>
 800de52:	b30a      	cbz	r2, 800de98 <GUI_MergeRect+0x4c>
 800de54:	f9b1 4000 	ldrsh.w	r4, [r1]
 800de58:	f9b2 3000 	ldrsh.w	r3, [r2]
 800de5c:	429c      	cmp	r4, r3
 800de5e:	bfb8      	it	lt
 800de60:	4623      	movlt	r3, r4
 800de62:	8003      	strh	r3, [r0, #0]
 800de64:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800de68:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800de6c:	429c      	cmp	r4, r3
 800de6e:	bfb8      	it	lt
 800de70:	4623      	movlt	r3, r4
 800de72:	8043      	strh	r3, [r0, #2]
 800de74:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 800de78:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800de7c:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 800de80:	429c      	cmp	r4, r3
 800de82:	bfa8      	it	ge
 800de84:	4623      	movge	r3, r4
 800de86:	8083      	strh	r3, [r0, #4]
 800de88:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 800de8c:	4299      	cmp	r1, r3
 800de8e:	bfa8      	it	ge
 800de90:	460b      	movge	r3, r1
 800de92:	80c3      	strh	r3, [r0, #6]
 800de94:	bd10      	pop	{r4, pc}
 800de96:	4611      	mov	r1, r2
 800de98:	680b      	ldr	r3, [r1, #0]
 800de9a:	6003      	str	r3, [r0, #0]
 800de9c:	684b      	ldr	r3, [r1, #4]
 800de9e:	6043      	str	r3, [r0, #4]
 800dea0:	bd10      	pop	{r4, pc}
	...

0800dea4 <GUI_GotoXY>:
 800dea4:	4b02      	ldr	r3, [pc, #8]	; (800deb0 <GUI_GotoXY+0xc>)
 800dea6:	681b      	ldr	r3, [r3, #0]
 800dea8:	8458      	strh	r0, [r3, #34]	; 0x22
 800deaa:	8499      	strh	r1, [r3, #36]	; 0x24
 800deac:	2000      	movs	r0, #0
 800deae:	4770      	bx	lr
 800deb0:	20000274 	.word	0x20000274

0800deb4 <GUI_GetOrg>:
 800deb4:	4b04      	ldr	r3, [pc, #16]	; (800dec8 <GUI_GetOrg+0x14>)
 800deb6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800deba:	6003      	str	r3, [r0, #0]
 800debc:	4b03      	ldr	r3, [pc, #12]	; (800decc <GUI_GetOrg+0x18>)
 800debe:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dec2:	600b      	str	r3, [r1, #0]
 800dec4:	4770      	bx	lr
 800dec6:	bf00      	nop
 800dec8:	2001ba1c 	.word	0x2001ba1c
 800decc:	2001ba10 	.word	0x2001ba10

0800ded0 <GUI_GetLineStyle>:
 800ded0:	4b01      	ldr	r3, [pc, #4]	; (800ded8 <GUI_GetLineStyle+0x8>)
 800ded2:	681b      	ldr	r3, [r3, #0]
 800ded4:	7e98      	ldrb	r0, [r3, #26]
 800ded6:	4770      	bx	lr
 800ded8:	20000274 	.word	0x20000274

0800dedc <GUI_GetFontSizeY>:
 800dedc:	f005 b8ee 	b.w	80130bc <GUI__GetFontSizeY>

0800dee0 <GUI_FillRect>:
 800dee0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800dee2:	4c0f      	ldr	r4, [pc, #60]	; (800df20 <GUI_FillRect+0x40>)
 800dee4:	6824      	ldr	r4, [r4, #0]
 800dee6:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800dee8:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800deea:	1947      	adds	r7, r0, r5
 800deec:	190e      	adds	r6, r1, r4
 800deee:	4415      	add	r5, r2
 800def0:	441c      	add	r4, r3
 800def2:	4668      	mov	r0, sp
 800def4:	f8ad 7000 	strh.w	r7, [sp]
 800def8:	f8ad 5004 	strh.w	r5, [sp, #4]
 800defc:	f8ad 6002 	strh.w	r6, [sp, #2]
 800df00:	f8ad 4006 	strh.w	r4, [sp, #6]
 800df04:	f7fb fba0 	bl	8009648 <WM__InitIVRSearch>
 800df08:	b140      	cbz	r0, 800df1c <GUI_FillRect+0x3c>
 800df0a:	4638      	mov	r0, r7
 800df0c:	4631      	mov	r1, r6
 800df0e:	462a      	mov	r2, r5
 800df10:	4623      	mov	r3, r4
 800df12:	f7fe f973 	bl	800c1fc <LCD_FillRect>
 800df16:	f7fb fad5 	bl	80094c4 <WM__GetNextIVR>
 800df1a:	e7f5      	b.n	800df08 <GUI_FillRect+0x28>
 800df1c:	b003      	add	sp, #12
 800df1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800df20:	20000274 	.word	0x20000274

0800df24 <GUI_Exec1>:
 800df24:	4b0a      	ldr	r3, [pc, #40]	; (800df50 <GUI_Exec1+0x2c>)
 800df26:	b510      	push	{r4, lr}
 800df28:	681c      	ldr	r4, [r3, #0]
 800df2a:	b11c      	cbz	r4, 800df34 <GUI_Exec1+0x10>
 800df2c:	47a0      	blx	r4
 800df2e:	1c04      	adds	r4, r0, #0
 800df30:	bf18      	it	ne
 800df32:	2401      	movne	r4, #1
 800df34:	f7fb fcbc 	bl	80098b0 <WM_Exec>
 800df38:	4b06      	ldr	r3, [pc, #24]	; (800df54 <GUI_Exec1+0x30>)
 800df3a:	681b      	ldr	r3, [r3, #0]
 800df3c:	2800      	cmp	r0, #0
 800df3e:	bf18      	it	ne
 800df40:	2401      	movne	r4, #1
 800df42:	b11b      	cbz	r3, 800df4c <GUI_Exec1+0x28>
 800df44:	4798      	blx	r3
 800df46:	2800      	cmp	r0, #0
 800df48:	bf18      	it	ne
 800df4a:	2401      	movne	r4, #1
 800df4c:	4620      	mov	r0, r4
 800df4e:	bd10      	pop	{r4, pc}
 800df50:	2001ba18 	.word	0x2001ba18
 800df54:	2001ba30 	.word	0x2001ba30

0800df58 <GUI_Exec>:
 800df58:	b510      	push	{r4, lr}
 800df5a:	2400      	movs	r4, #0
 800df5c:	f7ff ffe2 	bl	800df24 <GUI_Exec1>
 800df60:	b108      	cbz	r0, 800df66 <GUI_Exec+0xe>
 800df62:	2401      	movs	r4, #1
 800df64:	e7fa      	b.n	800df5c <GUI_Exec+0x4>
 800df66:	4620      	mov	r0, r4
 800df68:	bd10      	pop	{r4, pc}
	...

0800df6c <GUI_DrawVLine>:
 800df6c:	4b0f      	ldr	r3, [pc, #60]	; (800dfac <GUI_DrawVLine+0x40>)
 800df6e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800df70:	681b      	ldr	r3, [r3, #0]
 800df72:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800df74:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 800df76:	4406      	add	r6, r0
 800df78:	190d      	adds	r5, r1, r4
 800df7a:	b2b3      	uxth	r3, r6
 800df7c:	4414      	add	r4, r2
 800df7e:	4668      	mov	r0, sp
 800df80:	f8ad 3000 	strh.w	r3, [sp]
 800df84:	f8ad 3004 	strh.w	r3, [sp, #4]
 800df88:	f8ad 5002 	strh.w	r5, [sp, #2]
 800df8c:	f8ad 4006 	strh.w	r4, [sp, #6]
 800df90:	f7fb fb5a 	bl	8009648 <WM__InitIVRSearch>
 800df94:	b138      	cbz	r0, 800dfa6 <GUI_DrawVLine+0x3a>
 800df96:	4630      	mov	r0, r6
 800df98:	4629      	mov	r1, r5
 800df9a:	4622      	mov	r2, r4
 800df9c:	f7fe f908 	bl	800c1b0 <LCD_DrawVLine>
 800dfa0:	f7fb fa90 	bl	80094c4 <WM__GetNextIVR>
 800dfa4:	e7f6      	b.n	800df94 <GUI_DrawVLine+0x28>
 800dfa6:	b002      	add	sp, #8
 800dfa8:	bd70      	pop	{r4, r5, r6, pc}
 800dfaa:	bf00      	nop
 800dfac:	20000274 	.word	0x20000274

0800dfb0 <_SetLineColor>:
 800dfb0:	4b1e      	ldr	r3, [pc, #120]	; (800e02c <_SetLineColor+0x7c>)
 800dfb2:	681b      	ldr	r3, [r3, #0]
 800dfb4:	7e9b      	ldrb	r3, [r3, #26]
 800dfb6:	3b01      	subs	r3, #1
 800dfb8:	2b03      	cmp	r3, #3
 800dfba:	d832      	bhi.n	800e022 <_SetLineColor+0x72>
 800dfbc:	e8df f003 	tbb	[pc, r3]
 800dfc0:	221a0d02 	.word	0x221a0d02
 800dfc4:	4b1a      	ldr	r3, [pc, #104]	; (800e030 <_SetLineColor+0x80>)
 800dfc6:	3006      	adds	r0, #6
 800dfc8:	4003      	ands	r3, r0
 800dfca:	2b00      	cmp	r3, #0
 800dfcc:	da03      	bge.n	800dfd6 <_SetLineColor+0x26>
 800dfce:	3b01      	subs	r3, #1
 800dfd0:	f063 030f 	orn	r3, r3, #15
 800dfd4:	3301      	adds	r3, #1
 800dfd6:	2b0b      	cmp	r3, #11
 800dfd8:	e008      	b.n	800dfec <_SetLineColor+0x3c>
 800dfda:	4b16      	ldr	r3, [pc, #88]	; (800e034 <_SetLineColor+0x84>)
 800dfdc:	4003      	ands	r3, r0
 800dfde:	2b00      	cmp	r3, #0
 800dfe0:	da03      	bge.n	800dfea <_SetLineColor+0x3a>
 800dfe2:	3b01      	subs	r3, #1
 800dfe4:	f063 0303 	orn	r3, r3, #3
 800dfe8:	3301      	adds	r3, #1
 800dfea:	2b01      	cmp	r3, #1
 800dfec:	bfcc      	ite	gt
 800dfee:	2000      	movgt	r0, #0
 800dff0:	2001      	movle	r0, #1
 800dff2:	4770      	bx	lr
 800dff4:	2314      	movs	r3, #20
 800dff6:	fb90 f2f3 	sdiv	r2, r0, r3
 800dffa:	fb03 0012 	mls	r0, r3, r2, r0
 800dffe:	280b      	cmp	r0, #11
 800e000:	dc09      	bgt.n	800e016 <_SetLineColor+0x66>
 800e002:	e010      	b.n	800e026 <_SetLineColor+0x76>
 800e004:	2318      	movs	r3, #24
 800e006:	fb90 f2f3 	sdiv	r2, r0, r3
 800e00a:	fb03 0012 	mls	r0, r3, r2, r0
 800e00e:	280b      	cmp	r0, #11
 800e010:	dd09      	ble.n	800e026 <_SetLineColor+0x76>
 800e012:	f020 0004 	bic.w	r0, r0, #4
 800e016:	3810      	subs	r0, #16
 800e018:	2801      	cmp	r0, #1
 800e01a:	bf8c      	ite	hi
 800e01c:	2000      	movhi	r0, #0
 800e01e:	2001      	movls	r0, #1
 800e020:	4770      	bx	lr
 800e022:	2000      	movs	r0, #0
 800e024:	4770      	bx	lr
 800e026:	2001      	movs	r0, #1
 800e028:	4770      	bx	lr
 800e02a:	bf00      	nop
 800e02c:	20000274 	.word	0x20000274
 800e030:	8000000f 	.word	0x8000000f
 800e034:	80000003 	.word	0x80000003

0800e038 <GUI_sin>:
 800e038:	f3c0 000b 	ubfx	r0, r0, #0, #12
 800e03c:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 800e040:	bfc6      	itte	gt
 800e042:	f5a0 6000 	subgt.w	r0, r0, #2048	; 0x800
 800e046:	2101      	movgt	r1, #1
 800e048:	2100      	movle	r1, #0
 800e04a:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 800e04e:	bfc8      	it	gt
 800e050:	f5c0 6000 	rsbgt	r0, r0, #2048	; 0x800
 800e054:	f000 033f 	and.w	r3, r0, #63	; 0x3f
 800e058:	b510      	push	{r4, lr}
 800e05a:	1182      	asrs	r2, r0, #6
 800e05c:	4c0b      	ldr	r4, [pc, #44]	; (800e08c <GUI_sin+0x54>)
 800e05e:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 800e062:	b29b      	uxth	r3, r3
 800e064:	f834 0012 	ldrh.w	r0, [r4, r2, lsl #1]
 800e068:	2b40      	cmp	r3, #64	; 0x40
 800e06a:	fb00 f003 	mul.w	r0, r0, r3
 800e06e:	d008      	beq.n	800e082 <GUI_sin+0x4a>
 800e070:	2a10      	cmp	r2, #16
 800e072:	d006      	beq.n	800e082 <GUI_sin+0x4a>
 800e074:	3201      	adds	r2, #1
 800e076:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 800e07a:	f834 2012 	ldrh.w	r2, [r4, r2, lsl #1]
 800e07e:	fb03 0002 	mla	r0, r3, r2, r0
 800e082:	3020      	adds	r0, #32
 800e084:	0980      	lsrs	r0, r0, #6
 800e086:	b101      	cbz	r1, 800e08a <GUI_sin+0x52>
 800e088:	4240      	negs	r0, r0
 800e08a:	bd10      	pop	{r4, pc}
 800e08c:	0801728c 	.word	0x0801728c

0800e090 <GUI_cos>:
 800e090:	f500 6080 	add.w	r0, r0, #1024	; 0x400
 800e094:	f7ff bfd0 	b.w	800e038 <GUI_sin>

0800e098 <GL_DrawLine1Ex>:
 800e098:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e09c:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800e0a0:	1a17      	subs	r7, r2, r0
 800e0a2:	1a5c      	subs	r4, r3, r1
 800e0a4:	ea54 0c07 	orrs.w	ip, r4, r7
 800e0a8:	4605      	mov	r5, r0
 800e0aa:	460e      	mov	r6, r1
 800e0ac:	f8d8 b000 	ldr.w	fp, [r8]
 800e0b0:	d104      	bne.n	800e0bc <GL_DrawLine1Ex+0x24>
 800e0b2:	b003      	add	sp, #12
 800e0b4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e0b8:	f005 bd10 	b.w	8013adc <GL_DrawPoint>
 800e0bc:	ea87 70e7 	eor.w	r0, r7, r7, asr #31
 800e0c0:	eba0 70e7 	sub.w	r0, r0, r7, asr #31
 800e0c4:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 800e0c8:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 800e0cc:	4288      	cmp	r0, r1
 800e0ce:	db04      	blt.n	800e0da <GL_DrawLine1Ex+0x42>
 800e0d0:	4621      	mov	r1, r4
 800e0d2:	463c      	mov	r4, r7
 800e0d4:	460f      	mov	r7, r1
 800e0d6:	2100      	movs	r1, #0
 800e0d8:	e006      	b.n	800e0e8 <GL_DrawLine1Ex+0x50>
 800e0da:	4611      	mov	r1, r2
 800e0dc:	461a      	mov	r2, r3
 800e0de:	460b      	mov	r3, r1
 800e0e0:	4629      	mov	r1, r5
 800e0e2:	4635      	mov	r5, r6
 800e0e4:	460e      	mov	r6, r1
 800e0e6:	2101      	movs	r1, #1
 800e0e8:	9100      	str	r1, [sp, #0]
 800e0ea:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 800e0ee:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 800e0f2:	428c      	cmp	r4, r1
 800e0f4:	d008      	beq.n	800e108 <GL_DrawLine1Ex+0x70>
 800e0f6:	461e      	mov	r6, r3
 800e0f8:	462b      	mov	r3, r5
 800e0fa:	4264      	negs	r4, r4
 800e0fc:	4615      	mov	r5, r2
 800e0fe:	427f      	negs	r7, r7
 800e100:	461a      	mov	r2, r3
 800e102:	f04f 3aff 	mov.w	sl, #4294967295
 800e106:	e001      	b.n	800e10c <GL_DrawLine1Ex+0x74>
 800e108:	f04f 0a01 	mov.w	sl, #1
 800e10c:	2f00      	cmp	r7, #0
 800e10e:	f8df 9148 	ldr.w	r9, [pc, #328]	; 800e258 <GL_DrawLine1Ex+0x1c0>
 800e112:	d13e      	bne.n	800e192 <GL_DrawLine1Ex+0xfa>
 800e114:	9b00      	ldr	r3, [sp, #0]
 800e116:	b1d3      	cbz	r3, 800e14e <GL_DrawLine1Ex+0xb6>
 800e118:	f8d9 3000 	ldr.w	r3, [r9]
 800e11c:	7e9b      	ldrb	r3, [r3, #26]
 800e11e:	b98b      	cbnz	r3, 800e144 <GL_DrawLine1Ex+0xac>
 800e120:	4630      	mov	r0, r6
 800e122:	4629      	mov	r1, r5
 800e124:	b003      	add	sp, #12
 800e126:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e12a:	f7fe b841 	b.w	800c1b0 <LCD_DrawVLine>
 800e12e:	f7ff ff3f 	bl	800dfb0 <_SetLineColor>
 800e132:	b930      	cbnz	r0, 800e142 <GL_DrawLine1Ex+0xaa>
 800e134:	f8d9 3000 	ldr.w	r3, [r9]
 800e138:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800e13a:	4630      	mov	r0, r6
 800e13c:	685b      	ldr	r3, [r3, #4]
 800e13e:	1979      	adds	r1, r7, r5
 800e140:	4798      	blx	r3
 800e142:	3701      	adds	r7, #1
 800e144:	42a7      	cmp	r7, r4
 800e146:	eb07 000b 	add.w	r0, r7, fp
 800e14a:	ddf0      	ble.n	800e12e <GL_DrawLine1Ex+0x96>
 800e14c:	e01d      	b.n	800e18a <GL_DrawLine1Ex+0xf2>
 800e14e:	f8d9 3000 	ldr.w	r3, [r9]
 800e152:	7e99      	ldrb	r1, [r3, #26]
 800e154:	b111      	cbz	r1, 800e15c <GL_DrawLine1Ex+0xc4>
 800e156:	f8dd a000 	ldr.w	sl, [sp]
 800e15a:	e012      	b.n	800e182 <GL_DrawLine1Ex+0xea>
 800e15c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800e15e:	4628      	mov	r0, r5
 800e160:	681b      	ldr	r3, [r3, #0]
 800e162:	4631      	mov	r1, r6
 800e164:	4798      	blx	r3
 800e166:	e074      	b.n	800e252 <GL_DrawLine1Ex+0x1ba>
 800e168:	f7ff ff22 	bl	800dfb0 <_SetLineColor>
 800e16c:	b938      	cbnz	r0, 800e17e <GL_DrawLine1Ex+0xe6>
 800e16e:	f8d9 3000 	ldr.w	r3, [r9]
 800e172:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800e174:	eb0a 0005 	add.w	r0, sl, r5
 800e178:	685b      	ldr	r3, [r3, #4]
 800e17a:	4631      	mov	r1, r6
 800e17c:	4798      	blx	r3
 800e17e:	f10a 0a01 	add.w	sl, sl, #1
 800e182:	45a2      	cmp	sl, r4
 800e184:	eb0a 000b 	add.w	r0, sl, fp
 800e188:	ddee      	ble.n	800e168 <GL_DrawLine1Ex+0xd0>
 800e18a:	3801      	subs	r0, #1
 800e18c:	f8c8 0000 	str.w	r0, [r8]
 800e190:	e05f      	b.n	800e252 <GL_DrawLine1Ex+0x1ba>
 800e192:	f8d9 1000 	ldr.w	r1, [r9]
 800e196:	f04f 0202 	mov.w	r2, #2
 800e19a:	7e89      	ldrb	r1, [r1, #26]
 800e19c:	fb94 f2f2 	sdiv	r2, r4, r2
 800e1a0:	bfb8      	it	lt
 800e1a2:	4252      	neglt	r2, r2
 800e1a4:	b9d9      	cbnz	r1, 800e1de <GL_DrawLine1Ex+0x146>
 800e1a6:	4693      	mov	fp, r2
 800e1a8:	46a8      	mov	r8, r5
 800e1aa:	ebc5 0308 	rsb	r3, r5, r8
 800e1ae:	42a3      	cmp	r3, r4
 800e1b0:	dc4f      	bgt.n	800e252 <GL_DrawLine1Ex+0x1ba>
 800e1b2:	9b00      	ldr	r3, [sp, #0]
 800e1b4:	fb9b f1f4 	sdiv	r1, fp, r4
 800e1b8:	4431      	add	r1, r6
 800e1ba:	b92b      	cbnz	r3, 800e1c8 <GL_DrawLine1Ex+0x130>
 800e1bc:	f8d9 3000 	ldr.w	r3, [r9]
 800e1c0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800e1c2:	4640      	mov	r0, r8
 800e1c4:	685b      	ldr	r3, [r3, #4]
 800e1c6:	e005      	b.n	800e1d4 <GL_DrawLine1Ex+0x13c>
 800e1c8:	f8d9 3000 	ldr.w	r3, [r9]
 800e1cc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800e1ce:	685b      	ldr	r3, [r3, #4]
 800e1d0:	4608      	mov	r0, r1
 800e1d2:	4641      	mov	r1, r8
 800e1d4:	4798      	blx	r3
 800e1d6:	f108 0801 	add.w	r8, r8, #1
 800e1da:	44bb      	add	fp, r7
 800e1dc:	e7e5      	b.n	800e1aa <GL_DrawLine1Ex+0x112>
 800e1de:	f1ba 3fff 	cmp.w	sl, #4294967295
 800e1e2:	bf04      	itt	eq
 800e1e4:	eb04 010b 	addeq.w	r1, r4, fp
 800e1e8:	f8c8 1000 	streq.w	r1, [r8]
 800e1ec:	9201      	str	r2, [sp, #4]
 800e1ee:	46ab      	mov	fp, r5
 800e1f0:	ebc5 010b 	rsb	r1, r5, fp
 800e1f4:	42a1      	cmp	r1, r4
 800e1f6:	f8d8 0000 	ldr.w	r0, [r8]
 800e1fa:	dc1e      	bgt.n	800e23a <GL_DrawLine1Ex+0x1a2>
 800e1fc:	4450      	add	r0, sl
 800e1fe:	f8c8 0000 	str.w	r0, [r8]
 800e202:	f7ff fed5 	bl	800dfb0 <_SetLineColor>
 800e206:	b980      	cbnz	r0, 800e22a <GL_DrawLine1Ex+0x192>
 800e208:	f8dd c004 	ldr.w	ip, [sp, #4]
 800e20c:	f8d9 0000 	ldr.w	r0, [r9]
 800e210:	9b00      	ldr	r3, [sp, #0]
 800e212:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800e214:	fb9c f1f4 	sdiv	r1, ip, r4
 800e218:	4431      	add	r1, r6
 800e21a:	b913      	cbnz	r3, 800e222 <GL_DrawLine1Ex+0x18a>
 800e21c:	6843      	ldr	r3, [r0, #4]
 800e21e:	4658      	mov	r0, fp
 800e220:	e002      	b.n	800e228 <GL_DrawLine1Ex+0x190>
 800e222:	6843      	ldr	r3, [r0, #4]
 800e224:	4608      	mov	r0, r1
 800e226:	4659      	mov	r1, fp
 800e228:	4798      	blx	r3
 800e22a:	f8dd c004 	ldr.w	ip, [sp, #4]
 800e22e:	44bc      	add	ip, r7
 800e230:	f10b 0b01 	add.w	fp, fp, #1
 800e234:	f8cd c004 	str.w	ip, [sp, #4]
 800e238:	e7da      	b.n	800e1f0 <GL_DrawLine1Ex+0x158>
 800e23a:	f1ba 3fff 	cmp.w	sl, #4294967295
 800e23e:	bf04      	itt	eq
 800e240:	1824      	addeq	r4, r4, r0
 800e242:	f8c8 4000 	streq.w	r4, [r8]
 800e246:	f8d8 2000 	ldr.w	r2, [r8]
 800e24a:	ebca 0302 	rsb	r3, sl, r2
 800e24e:	f8c8 3000 	str.w	r3, [r8]
 800e252:	b003      	add	sp, #12
 800e254:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e258:	20000274 	.word	0x20000274

0800e25c <GL_DrawLineEx>:
 800e25c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e260:	4d67      	ldr	r5, [pc, #412]	; (800e400 <GL_DrawLineEx+0x1a4>)
 800e262:	682c      	ldr	r4, [r5, #0]
 800e264:	f894 b018 	ldrb.w	fp, [r4, #24]
 800e268:	f1bb 0f01 	cmp.w	fp, #1
 800e26c:	b087      	sub	sp, #28
 800e26e:	4681      	mov	r9, r0
 800e270:	4688      	mov	r8, r1
 800e272:	4617      	mov	r7, r2
 800e274:	461e      	mov	r6, r3
 800e276:	46aa      	mov	sl, r5
 800e278:	d104      	bne.n	800e284 <GL_DrawLineEx+0x28>
 800e27a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800e27c:	9400      	str	r4, [sp, #0]
 800e27e:	f7ff ff0b 	bl	800e098 <GL_DrawLine1Ex>
 800e282:	e0ba      	b.n	800e3fa <GL_DrawLineEx+0x19e>
 800e284:	1a84      	subs	r4, r0, r2
 800e286:	1acd      	subs	r5, r1, r3
 800e288:	ea54 0305 	orrs.w	r3, r4, r5
 800e28c:	f000 80b5 	beq.w	800e3fa <GL_DrawLineEx+0x19e>
 800e290:	2c00      	cmp	r4, #0
 800e292:	bfba      	itte	lt
 800e294:	4264      	neglt	r4, r4
 800e296:	2301      	movlt	r3, #1
 800e298:	2300      	movge	r3, #0
 800e29a:	2d00      	cmp	r5, #0
 800e29c:	bfbc      	itt	lt
 800e29e:	426d      	neglt	r5, r5
 800e2a0:	f043 0302 	orrlt.w	r3, r3, #2
 800e2a4:	42a5      	cmp	r5, r4
 800e2a6:	f10b 3bff 	add.w	fp, fp, #4294967295
 800e2aa:	dd04      	ble.n	800e2b6 <GL_DrawLineEx+0x5a>
 800e2ac:	4622      	mov	r2, r4
 800e2ae:	f043 0304 	orr.w	r3, r3, #4
 800e2b2:	462c      	mov	r4, r5
 800e2b4:	4615      	mov	r5, r2
 800e2b6:	2202      	movs	r2, #2
 800e2b8:	fb94 f2f2 	sdiv	r2, r4, r2
 800e2bc:	eb02 2585 	add.w	r5, r2, r5, lsl #10
 800e2c0:	fb95 f4f4 	sdiv	r4, r5, r4
 800e2c4:	11a1      	asrs	r1, r4, #6
 800e2c6:	4a4f      	ldr	r2, [pc, #316]	; (800e404 <GL_DrawLineEx+0x1a8>)
 800e2c8:	f3c4 0483 	ubfx	r4, r4, #2, #4
 800e2cc:	f1c4 0510 	rsb	r5, r4, #16
 800e2d0:	f932 0011 	ldrsh.w	r0, [r2, r1, lsl #1]
 800e2d4:	2d10      	cmp	r5, #16
 800e2d6:	fb05 f000 	mul.w	r0, r5, r0
 800e2da:	d004      	beq.n	800e2e6 <GL_DrawLineEx+0x8a>
 800e2dc:	3101      	adds	r1, #1
 800e2de:	f932 2011 	ldrsh.w	r2, [r2, r1, lsl #1]
 800e2e2:	fb04 0002 	mla	r0, r4, r2, r0
 800e2e6:	2210      	movs	r2, #16
 800e2e8:	3008      	adds	r0, #8
 800e2ea:	fb90 f0f2 	sdiv	r0, r0, r2
 800e2ee:	0759      	lsls	r1, r3, #29
 800e2f0:	bf48      	it	mi
 800e2f2:	f5c0 6080 	rsbmi	r0, r0, #1024	; 0x400
 800e2f6:	07da      	lsls	r2, r3, #31
 800e2f8:	bf48      	it	mi
 800e2fa:	f5c0 6000 	rsbmi	r0, r0, #2048	; 0x800
 800e2fe:	079b      	lsls	r3, r3, #30
 800e300:	bf48      	it	mi
 800e302:	f5c0 5080 	rsbmi	r0, r0, #4096	; 0x1000
 800e306:	f500 6580 	add.w	r5, r0, #1024	; 0x400
 800e30a:	4628      	mov	r0, r5
 800e30c:	f7ff fec0 	bl	800e090 <GUI_cos>
 800e310:	fb00 f40b 	mul.w	r4, r0, fp
 800e314:	4628      	mov	r0, r5
 800e316:	f7ff fe8f 	bl	800e038 <GUI_sin>
 800e31a:	2c00      	cmp	r4, #0
 800e31c:	fb00 f00b 	mul.w	r0, r0, fp
 800e320:	da04      	bge.n	800e32c <GL_DrawLineEx+0xd0>
 800e322:	f5c4 7300 	rsb	r3, r4, #512	; 0x200
 800e326:	129b      	asrs	r3, r3, #10
 800e328:	425b      	negs	r3, r3
 800e32a:	e002      	b.n	800e332 <GL_DrawLineEx+0xd6>
 800e32c:	f504 7300 	add.w	r3, r4, #512	; 0x200
 800e330:	129b      	asrs	r3, r3, #10
 800e332:	2800      	cmp	r0, #0
 800e334:	da06      	bge.n	800e344 <GL_DrawLineEx+0xe8>
 800e336:	f5c0 7b00 	rsb	fp, r0, #512	; 0x200
 800e33a:	ea4f 2bab 	mov.w	fp, fp, asr #10
 800e33e:	f1cb 0b00 	rsb	fp, fp, #0
 800e342:	e003      	b.n	800e34c <GL_DrawLineEx+0xf0>
 800e344:	f500 7b00 	add.w	fp, r0, #512	; 0x200
 800e348:	ea4f 2bab 	mov.w	fp, fp, asr #10
 800e34c:	2b00      	cmp	r3, #0
 800e34e:	dd03      	ble.n	800e358 <GL_DrawLineEx+0xfc>
 800e350:	1c58      	adds	r0, r3, #1
 800e352:	1040      	asrs	r0, r0, #1
 800e354:	105b      	asrs	r3, r3, #1
 800e356:	e005      	b.n	800e364 <GL_DrawLineEx+0x108>
 800e358:	2202      	movs	r2, #2
 800e35a:	fb93 f0f2 	sdiv	r0, r3, r2
 800e35e:	3b01      	subs	r3, #1
 800e360:	fb93 f3f2 	sdiv	r3, r3, r2
 800e364:	f1bb 0f00 	cmp.w	fp, #0
 800e368:	dd05      	ble.n	800e376 <GL_DrawLineEx+0x11a>
 800e36a:	f10b 0201 	add.w	r2, fp, #1
 800e36e:	1052      	asrs	r2, r2, #1
 800e370:	ea4f 0b6b 	mov.w	fp, fp, asr #1
 800e374:	e006      	b.n	800e384 <GL_DrawLineEx+0x128>
 800e376:	2102      	movs	r1, #2
 800e378:	fb9b f2f1 	sdiv	r2, fp, r1
 800e37c:	f10b 3bff 	add.w	fp, fp, #4294967295
 800e380:	fb9b fbf1 	sdiv	fp, fp, r1
 800e384:	b280      	uxth	r0, r0
 800e386:	fa1f f489 	uxth.w	r4, r9
 800e38a:	1901      	adds	r1, r0, r4
 800e38c:	b292      	uxth	r2, r2
 800e38e:	f8ad 1008 	strh.w	r1, [sp, #8]
 800e392:	fa1f fb8b 	uxth.w	fp, fp
 800e396:	fa1f f188 	uxth.w	r1, r8
 800e39a:	1855      	adds	r5, r2, r1
 800e39c:	ebcb 0101 	rsb	r1, fp, r1
 800e3a0:	b29b      	uxth	r3, r3
 800e3a2:	f8ad 100e 	strh.w	r1, [sp, #14]
 800e3a6:	b2b9      	uxth	r1, r7
 800e3a8:	1ae4      	subs	r4, r4, r3
 800e3aa:	1acb      	subs	r3, r1, r3
 800e3ac:	f8ad 3010 	strh.w	r3, [sp, #16]
 800e3b0:	b2b3      	uxth	r3, r6
 800e3b2:	4401      	add	r1, r0
 800e3b4:	ebcb 0b03 	rsb	fp, fp, r3
 800e3b8:	4413      	add	r3, r2
 800e3ba:	2200      	movs	r2, #0
 800e3bc:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e3c0:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e3c4:	a802      	add	r0, sp, #8
 800e3c6:	4613      	mov	r3, r2
 800e3c8:	2104      	movs	r1, #4
 800e3ca:	f8ad 500a 	strh.w	r5, [sp, #10]
 800e3ce:	f8ad 400c 	strh.w	r4, [sp, #12]
 800e3d2:	f8ad b012 	strh.w	fp, [sp, #18]
 800e3d6:	f005 fa9f 	bl	8013918 <GL_FillPolygon>
 800e3da:	f8da 3000 	ldr.w	r3, [sl]
 800e3de:	7e5b      	ldrb	r3, [r3, #25]
 800e3e0:	b91b      	cbnz	r3, 800e3ea <GL_DrawLineEx+0x18e>
 800e3e2:	4648      	mov	r0, r9
 800e3e4:	4641      	mov	r1, r8
 800e3e6:	f005 fb79 	bl	8013adc <GL_DrawPoint>
 800e3ea:	f8da 3000 	ldr.w	r3, [sl]
 800e3ee:	7e5b      	ldrb	r3, [r3, #25]
 800e3f0:	b91b      	cbnz	r3, 800e3fa <GL_DrawLineEx+0x19e>
 800e3f2:	4638      	mov	r0, r7
 800e3f4:	4631      	mov	r1, r6
 800e3f6:	f005 fb71 	bl	8013adc <GL_DrawPoint>
 800e3fa:	b007      	add	sp, #28
 800e3fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e400:	20000274 	.word	0x20000274
 800e404:	080172ae 	.word	0x080172ae

0800e408 <GL_DrawLine>:
 800e408:	b530      	push	{r4, r5, lr}
 800e40a:	b085      	sub	sp, #20
 800e40c:	ac04      	add	r4, sp, #16
 800e40e:	2500      	movs	r5, #0
 800e410:	f844 5d04 	str.w	r5, [r4, #-4]!
 800e414:	9400      	str	r4, [sp, #0]
 800e416:	f7ff ff21 	bl	800e25c <GL_DrawLineEx>
 800e41a:	b005      	add	sp, #20
 800e41c:	bd30      	pop	{r4, r5, pc}
	...

0800e420 <GUI_DrawLine>:
 800e420:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e424:	461e      	mov	r6, r3
 800e426:	4b0c      	ldr	r3, [pc, #48]	; (800e458 <GUI_DrawLine+0x38>)
 800e428:	681c      	ldr	r4, [r3, #0]
 800e42a:	4681      	mov	r9, r0
 800e42c:	2000      	movs	r0, #0
 800e42e:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800e430:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800e432:	4688      	mov	r8, r1
 800e434:	4617      	mov	r7, r2
 800e436:	f7fb f907 	bl	8009648 <WM__InitIVRSearch>
 800e43a:	b150      	cbz	r0, 800e452 <GUI_DrawLine+0x32>
 800e43c:	eb09 0005 	add.w	r0, r9, r5
 800e440:	eb08 0104 	add.w	r1, r8, r4
 800e444:	197a      	adds	r2, r7, r5
 800e446:	1933      	adds	r3, r6, r4
 800e448:	f7ff ffde 	bl	800e408 <GL_DrawLine>
 800e44c:	f7fb f83a 	bl	80094c4 <WM__GetNextIVR>
 800e450:	e7f3      	b.n	800e43a <GUI_DrawLine+0x1a>
 800e452:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e456:	bf00      	nop
 800e458:	20000274 	.word	0x20000274

0800e45c <GUI_DrawHLine>:
 800e45c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e45e:	4f10      	ldr	r7, [pc, #64]	; (800e4a0 <GUI_DrawHLine+0x44>)
 800e460:	683b      	ldr	r3, [r7, #0]
 800e462:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 800e464:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800e466:	4405      	add	r5, r0
 800e468:	190e      	adds	r6, r1, r4
 800e46a:	b2ab      	uxth	r3, r5
 800e46c:	4414      	add	r4, r2
 800e46e:	4668      	mov	r0, sp
 800e470:	f8ad 6000 	strh.w	r6, [sp]
 800e474:	f8ad 4004 	strh.w	r4, [sp, #4]
 800e478:	f8ad 3002 	strh.w	r3, [sp, #2]
 800e47c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e480:	f7fb f8e2 	bl	8009648 <WM__InitIVRSearch>
 800e484:	b148      	cbz	r0, 800e49a <GUI_DrawHLine+0x3e>
 800e486:	683b      	ldr	r3, [r7, #0]
 800e488:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800e48a:	4630      	mov	r0, r6
 800e48c:	681b      	ldr	r3, [r3, #0]
 800e48e:	4629      	mov	r1, r5
 800e490:	4622      	mov	r2, r4
 800e492:	4798      	blx	r3
 800e494:	f7fb f816 	bl	80094c4 <WM__GetNextIVR>
 800e498:	e7f4      	b.n	800e484 <GUI_DrawHLine+0x28>
 800e49a:	b003      	add	sp, #12
 800e49c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e49e:	bf00      	nop
 800e4a0:	20000274 	.word	0x20000274

0800e4a4 <GUI_DrawGraphEx>:
 800e4a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e4a8:	4698      	mov	r8, r3
 800e4aa:	4b81      	ldr	r3, [pc, #516]	; (800e6b0 <GUI_DrawGraphEx+0x20c>)
 800e4ac:	b08b      	sub	sp, #44	; 0x2c
 800e4ae:	468a      	mov	sl, r1
 800e4b0:	6819      	ldr	r1, [r3, #0]
 800e4b2:	9006      	str	r0, [sp, #24]
 800e4b4:	2000      	movs	r0, #0
 800e4b6:	4691      	mov	r9, r2
 800e4b8:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800e4ba:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800e4bc:	6ccd      	ldr	r5, [r1, #76]	; 0x4c
 800e4be:	6d0c      	ldr	r4, [r1, #80]	; 0x50
 800e4c0:	f7fb f8c2 	bl	8009648 <WM__InitIVRSearch>
 800e4c4:	2800      	cmp	r0, #0
 800e4c6:	f000 80ef 	beq.w	800e6a8 <GUI_DrawGraphEx+0x204>
 800e4ca:	f10a 4300 	add.w	r3, sl, #2147483648	; 0x80000000
 800e4ce:	9806      	ldr	r0, [sp, #24]
 800e4d0:	3b01      	subs	r3, #1
 800e4d2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800e4d6:	9307      	str	r3, [sp, #28]
 800e4d8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800e4da:	2b00      	cmp	r3, #0
 800e4dc:	bf14      	ite	ne
 800e4de:	f06f 0301 	mvnne.w	r3, #1
 800e4e2:	2302      	moveq	r3, #2
 800e4e4:	44a9      	add	r9, r5
 800e4e6:	4444      	add	r4, r8
 800e4e8:	9309      	str	r3, [sp, #36]	; 0x24
 800e4ea:	b927      	cbnz	r7, 800e4f6 <GUI_DrawGraphEx+0x52>
 800e4ec:	f7fa ffea 	bl	80094c4 <WM__GetNextIVR>
 800e4f0:	2800      	cmp	r0, #0
 800e4f2:	d1fa      	bne.n	800e4ea <GUI_DrawGraphEx+0x46>
 800e4f4:	e0d8      	b.n	800e6a8 <GUI_DrawGraphEx+0x204>
 800e4f6:	2e00      	cmp	r6, #0
 800e4f8:	d0f8      	beq.n	800e4ec <GUI_DrawGraphEx+0x48>
 800e4fa:	f1ba 0f00 	cmp.w	sl, #0
 800e4fe:	ddf5      	ble.n	800e4ec <GUI_DrawGraphEx+0x48>
 800e500:	1c7b      	adds	r3, r7, #1
 800e502:	d104      	bne.n	800e50e <GUI_DrawGraphEx+0x6a>
 800e504:	2e01      	cmp	r6, #1
 800e506:	bf14      	ite	ne
 800e508:	2302      	movne	r3, #2
 800e50a:	2301      	moveq	r3, #1
 800e50c:	e00a      	b.n	800e524 <GUI_DrawGraphEx+0x80>
 800e50e:	2f01      	cmp	r7, #1
 800e510:	d104      	bne.n	800e51c <GUI_DrawGraphEx+0x78>
 800e512:	2e01      	cmp	r6, #1
 800e514:	bf14      	ite	ne
 800e516:	2303      	movne	r3, #3
 800e518:	2300      	moveq	r3, #0
 800e51a:	e003      	b.n	800e524 <GUI_DrawGraphEx+0x80>
 800e51c:	2e01      	cmp	r6, #1
 800e51e:	bf14      	ite	ne
 800e520:	2305      	movne	r3, #5
 800e522:	2304      	moveq	r3, #4
 800e524:	9305      	str	r3, [sp, #20]
 800e526:	4b62      	ldr	r3, [pc, #392]	; (800e6b0 <GUI_DrawGraphEx+0x20c>)
 800e528:	681b      	ldr	r3, [r3, #0]
 800e52a:	695b      	ldr	r3, [r3, #20]
 800e52c:	b1eb      	cbz	r3, 800e56a <GUI_DrawGraphEx+0xc6>
 800e52e:	f9b3 8000 	ldrsh.w	r8, [r3]
 800e532:	f9b3 0002 	ldrsh.w	r0, [r3, #2]
 800e536:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 800e53a:	f9b3 b006 	ldrsh.w	fp, [r3, #6]
 800e53e:	9004      	str	r0, [sp, #16]
 800e540:	f108 38ff 	add.w	r8, r8, #4294967295
 800e544:	45c1      	cmp	r9, r8
 800e546:	eb09 030a 	add.w	r3, r9, sl
 800e54a:	bfb8      	it	lt
 800e54c:	ebc9 0808 	rsblt	r8, r9, r8
 800e550:	f103 33ff 	add.w	r3, r3, #4294967295
 800e554:	bfb4      	ite	lt
 800e556:	ea28 78e8 	biclt.w	r8, r8, r8, asr #31
 800e55a:	f04f 0800 	movge.w	r8, #0
 800e55e:	4293      	cmp	r3, r2
 800e560:	dd0a      	ble.n	800e578 <GUI_DrawGraphEx+0xd4>
 800e562:	ebc9 0202 	rsb	r2, r9, r2
 800e566:	3201      	adds	r2, #1
 800e568:	e007      	b.n	800e57a <GUI_DrawGraphEx+0xd6>
 800e56a:	f04f 3bff 	mov.w	fp, #4294967295
 800e56e:	4652      	mov	r2, sl
 800e570:	f8cd b010 	str.w	fp, [sp, #16]
 800e574:	4698      	mov	r8, r3
 800e576:	e000      	b.n	800e57a <GUI_DrawGraphEx+0xd6>
 800e578:	4652      	mov	r2, sl
 800e57a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800e57c:	b91b      	cbnz	r3, 800e586 <GUI_DrawGraphEx+0xe2>
 800e57e:	9b06      	ldr	r3, [sp, #24]
 800e580:	eb03 0348 	add.w	r3, r3, r8, lsl #1
 800e584:	e000      	b.n	800e588 <GUI_DrawGraphEx+0xe4>
 800e586:	9b07      	ldr	r3, [sp, #28]
 800e588:	4590      	cmp	r8, r2
 800e58a:	9303      	str	r3, [sp, #12]
 800e58c:	daae      	bge.n	800e4ec <GUI_DrawGraphEx+0x48>
 800e58e:	444a      	add	r2, r9
 800e590:	9208      	str	r2, [sp, #32]
 800e592:	2200      	movs	r2, #0
 800e594:	44c8      	add	r8, r9
 800e596:	2301      	movs	r3, #1
 800e598:	9202      	str	r2, [sp, #8]
 800e59a:	9803      	ldr	r0, [sp, #12]
 800e59c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800e59e:	8805      	ldrh	r5, [r0, #0]
 800e5a0:	4408      	add	r0, r1
 800e5a2:	b22d      	sxth	r5, r5
 800e5a4:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800e5a8:	428d      	cmp	r5, r1
 800e5aa:	9003      	str	r0, [sp, #12]
 800e5ac:	d10d      	bne.n	800e5ca <GUI_DrawGraphEx+0x126>
 800e5ae:	9802      	ldr	r0, [sp, #8]
 800e5b0:	2800      	cmp	r0, #0
 800e5b2:	d16f      	bne.n	800e694 <GUI_DrawGraphEx+0x1f0>
 800e5b4:	2b00      	cmp	r3, #0
 800e5b6:	d16f      	bne.n	800e698 <GUI_DrawGraphEx+0x1f4>
 800e5b8:	4611      	mov	r1, r2
 800e5ba:	f108 30ff 	add.w	r0, r8, #4294967295
 800e5be:	9201      	str	r2, [sp, #4]
 800e5c0:	f7fd fda2 	bl	800c108 <LCD_DrawPixel>
 800e5c4:	2301      	movs	r3, #1
 800e5c6:	9a01      	ldr	r2, [sp, #4]
 800e5c8:	e067      	b.n	800e69a <GUI_DrawGraphEx+0x1f6>
 800e5ca:	9805      	ldr	r0, [sp, #20]
 800e5cc:	1e41      	subs	r1, r0, #1
 800e5ce:	b1db      	cbz	r3, 800e608 <GUI_DrawGraphEx+0x164>
 800e5d0:	2904      	cmp	r1, #4
 800e5d2:	d817      	bhi.n	800e604 <GUI_DrawGraphEx+0x160>
 800e5d4:	e8df f001 	tbb	[pc, r1]
 800e5d8:	0b070503 	.word	0x0b070503
 800e5dc:	0f          	.byte	0x0f
 800e5dd:	00          	.byte	0x00
 800e5de:	1b62      	subs	r2, r4, r5
 800e5e0:	e00e      	b.n	800e600 <GUI_DrawGraphEx+0x15c>
 800e5e2:	1b65      	subs	r5, r4, r5
 800e5e4:	e000      	b.n	800e5e8 <GUI_DrawGraphEx+0x144>
 800e5e6:	4425      	add	r5, r4
 800e5e8:	fbb5 f2f6 	udiv	r2, r5, r6
 800e5ec:	e008      	b.n	800e600 <GUI_DrawGraphEx+0x15c>
 800e5ee:	4425      	add	r5, r4
 800e5f0:	fb07 f205 	mul.w	r2, r7, r5
 800e5f4:	e004      	b.n	800e600 <GUI_DrawGraphEx+0x15c>
 800e5f6:	4425      	add	r5, r4
 800e5f8:	fb07 f205 	mul.w	r2, r7, r5
 800e5fc:	fbb2 f2f6 	udiv	r2, r2, r6
 800e600:	2300      	movs	r3, #0
 800e602:	e04a      	b.n	800e69a <GUI_DrawGraphEx+0x1f6>
 800e604:	192a      	adds	r2, r5, r4
 800e606:	e7fb      	b.n	800e600 <GUI_DrawGraphEx+0x15c>
 800e608:	2904      	cmp	r1, #4
 800e60a:	d812      	bhi.n	800e632 <GUI_DrawGraphEx+0x18e>
 800e60c:	e8df f001 	tbb	[pc, r1]
 800e610:	0b070503 	.word	0x0b070503
 800e614:	0e          	.byte	0x0e
 800e615:	00          	.byte	0x00
 800e616:	1b65      	subs	r5, r4, r5
 800e618:	e00c      	b.n	800e634 <GUI_DrawGraphEx+0x190>
 800e61a:	1b65      	subs	r5, r4, r5
 800e61c:	e000      	b.n	800e620 <GUI_DrawGraphEx+0x17c>
 800e61e:	4425      	add	r5, r4
 800e620:	fbb5 f5f6 	udiv	r5, r5, r6
 800e624:	e006      	b.n	800e634 <GUI_DrawGraphEx+0x190>
 800e626:	4425      	add	r5, r4
 800e628:	437d      	muls	r5, r7
 800e62a:	e003      	b.n	800e634 <GUI_DrawGraphEx+0x190>
 800e62c:	4425      	add	r5, r4
 800e62e:	437d      	muls	r5, r7
 800e630:	e7f6      	b.n	800e620 <GUI_DrawGraphEx+0x17c>
 800e632:	4425      	add	r5, r4
 800e634:	9904      	ldr	r1, [sp, #16]
 800e636:	428a      	cmp	r2, r1
 800e638:	da01      	bge.n	800e63e <GUI_DrawGraphEx+0x19a>
 800e63a:	428d      	cmp	r5, r1
 800e63c:	db25      	blt.n	800e68a <GUI_DrawGraphEx+0x1e6>
 800e63e:	455a      	cmp	r2, fp
 800e640:	dd01      	ble.n	800e646 <GUI_DrawGraphEx+0x1a2>
 800e642:	455d      	cmp	r5, fp
 800e644:	dc21      	bgt.n	800e68a <GUI_DrawGraphEx+0x1e6>
 800e646:	eb05 0c02 	add.w	ip, r5, r2
 800e64a:	2102      	movs	r1, #2
 800e64c:	42aa      	cmp	r2, r5
 800e64e:	fb9c fcf1 	sdiv	ip, ip, r1
 800e652:	f108 30ff 	add.w	r0, r8, #4294967295
 800e656:	dc0b      	bgt.n	800e670 <GUI_DrawGraphEx+0x1cc>
 800e658:	4611      	mov	r1, r2
 800e65a:	4662      	mov	r2, ip
 800e65c:	e88d 1008 	stmia.w	sp, {r3, ip}
 800e660:	f7fd fda6 	bl	800c1b0 <LCD_DrawVLine>
 800e664:	f8dd c004 	ldr.w	ip, [sp, #4]
 800e668:	4640      	mov	r0, r8
 800e66a:	4661      	mov	r1, ip
 800e66c:	462a      	mov	r2, r5
 800e66e:	e009      	b.n	800e684 <GUI_DrawGraphEx+0x1e0>
 800e670:	4661      	mov	r1, ip
 800e672:	e88d 1008 	stmia.w	sp, {r3, ip}
 800e676:	f7fd fd9b 	bl	800c1b0 <LCD_DrawVLine>
 800e67a:	f8dd c004 	ldr.w	ip, [sp, #4]
 800e67e:	4640      	mov	r0, r8
 800e680:	4629      	mov	r1, r5
 800e682:	4662      	mov	r2, ip
 800e684:	f7fd fd94 	bl	800c1b0 <LCD_DrawVLine>
 800e688:	9b00      	ldr	r3, [sp, #0]
 800e68a:	9a02      	ldr	r2, [sp, #8]
 800e68c:	3201      	adds	r2, #1
 800e68e:	9202      	str	r2, [sp, #8]
 800e690:	462a      	mov	r2, r5
 800e692:	e002      	b.n	800e69a <GUI_DrawGraphEx+0x1f6>
 800e694:	2300      	movs	r3, #0
 800e696:	9302      	str	r3, [sp, #8]
 800e698:	2301      	movs	r3, #1
 800e69a:	9808      	ldr	r0, [sp, #32]
 800e69c:	f108 0801 	add.w	r8, r8, #1
 800e6a0:	4580      	cmp	r8, r0
 800e6a2:	f47f af7a 	bne.w	800e59a <GUI_DrawGraphEx+0xf6>
 800e6a6:	e721      	b.n	800e4ec <GUI_DrawGraphEx+0x48>
 800e6a8:	b00b      	add	sp, #44	; 0x2c
 800e6aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e6ae:	bf00      	nop
 800e6b0:	20000274 	.word	0x20000274

0800e6b4 <GUI_DrawFocusRect>:
 800e6b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e6b6:	4603      	mov	r3, r0
 800e6b8:	460a      	mov	r2, r1
 800e6ba:	4668      	mov	r0, sp
 800e6bc:	4619      	mov	r1, r3
 800e6be:	f7fe f906 	bl	800c8ce <GUI__ReduceRect>
 800e6c2:	4b23      	ldr	r3, [pc, #140]	; (800e750 <GUI_DrawFocusRect+0x9c>)
 800e6c4:	f8bd 1000 	ldrh.w	r1, [sp]
 800e6c8:	681b      	ldr	r3, [r3, #0]
 800e6ca:	f8b3 204c 	ldrh.w	r2, [r3, #76]	; 0x4c
 800e6ce:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 800e6d2:	4411      	add	r1, r2
 800e6d4:	f8ad 1000 	strh.w	r1, [sp]
 800e6d8:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800e6dc:	4419      	add	r1, r3
 800e6de:	f8ad 1002 	strh.w	r1, [sp, #2]
 800e6e2:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 800e6e6:	440a      	add	r2, r1
 800e6e8:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e6ec:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800e6f0:	4668      	mov	r0, sp
 800e6f2:	4413      	add	r3, r2
 800e6f4:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e6f8:	f7fa ffa6 	bl	8009648 <WM__InitIVRSearch>
 800e6fc:	b328      	cbz	r0, 800e74a <GUI_DrawFocusRect+0x96>
 800e6fe:	f9bd 5000 	ldrsh.w	r5, [sp]
 800e702:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800e706:	f9bd 1002 	ldrsh.w	r1, [sp, #2]
 800e70a:	429d      	cmp	r5, r3
 800e70c:	dc09      	bgt.n	800e722 <GUI_DrawFocusRect+0x6e>
 800e70e:	4628      	mov	r0, r5
 800e710:	f7fd fcfa 	bl	800c108 <LCD_DrawPixel>
 800e714:	4628      	mov	r0, r5
 800e716:	f9bd 1006 	ldrsh.w	r1, [sp, #6]
 800e71a:	f7fd fcf5 	bl	800c108 <LCD_DrawPixel>
 800e71e:	3502      	adds	r5, #2
 800e720:	e7ef      	b.n	800e702 <GUI_DrawFocusRect+0x4e>
 800e722:	460c      	mov	r4, r1
 800e724:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800e728:	429c      	cmp	r4, r3
 800e72a:	dc0b      	bgt.n	800e744 <GUI_DrawFocusRect+0x90>
 800e72c:	4621      	mov	r1, r4
 800e72e:	f9bd 0000 	ldrsh.w	r0, [sp]
 800e732:	f7fd fce9 	bl	800c108 <LCD_DrawPixel>
 800e736:	4621      	mov	r1, r4
 800e738:	f9bd 0004 	ldrsh.w	r0, [sp, #4]
 800e73c:	f7fd fce4 	bl	800c108 <LCD_DrawPixel>
 800e740:	3402      	adds	r4, #2
 800e742:	e7ef      	b.n	800e724 <GUI_DrawFocusRect+0x70>
 800e744:	f7fa febe 	bl	80094c4 <WM__GetNextIVR>
 800e748:	e7d8      	b.n	800e6fc <GUI_DrawFocusRect+0x48>
 800e74a:	b003      	add	sp, #12
 800e74c:	bd30      	pop	{r4, r5, pc}
 800e74e:	bf00      	nop
 800e750:	20000274 	.word	0x20000274

0800e754 <GUI_WrapGetNumLines>:
 800e754:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e756:	4605      	mov	r5, r0
 800e758:	460e      	mov	r6, r1
 800e75a:	4617      	mov	r7, r2
 800e75c:	2400      	movs	r4, #0
 800e75e:	4628      	mov	r0, r5
 800e760:	4631      	mov	r1, r6
 800e762:	463a      	mov	r2, r7
 800e764:	f004 fca0 	bl	80130a8 <GUI__WrapGetNumBytesToNextLine>
 800e768:	b110      	cbz	r0, 800e770 <GUI_WrapGetNumLines+0x1c>
 800e76a:	4405      	add	r5, r0
 800e76c:	3401      	adds	r4, #1
 800e76e:	e7f6      	b.n	800e75e <GUI_WrapGetNumLines+0xa>
 800e770:	4620      	mov	r0, r4
 800e772:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e774 <GUI_DispStringInRectWrap>:
 800e774:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e778:	b089      	sub	sp, #36	; 0x24
 800e77a:	460c      	mov	r4, r1
 800e77c:	9202      	str	r2, [sp, #8]
 800e77e:	9303      	str	r3, [sp, #12]
 800e780:	4605      	mov	r5, r0
 800e782:	2800      	cmp	r0, #0
 800e784:	f000 8091 	beq.w	800e8aa <GUI_DispStringInRectWrap+0x136>
 800e788:	f8b1 a000 	ldrh.w	sl, [r1]
 800e78c:	f8b1 9004 	ldrh.w	r9, [r1, #4]
 800e790:	884e      	ldrh	r6, [r1, #2]
 800e792:	f8b1 b006 	ldrh.w	fp, [r1, #6]
 800e796:	fa0f f289 	sxth.w	r2, r9
 800e79a:	fa0f f38a 	sxth.w	r3, sl
 800e79e:	1ad3      	subs	r3, r2, r3
 800e7a0:	3301      	adds	r3, #1
 800e7a2:	9301      	str	r3, [sp, #4]
 800e7a4:	f000 fd46 	bl	800f234 <GUI_GetFontDistY>
 800e7a8:	9902      	ldr	r1, [sp, #8]
 800e7aa:	f011 070c 	ands.w	r7, r1, #12
 800e7ae:	4680      	mov	r8, r0
 800e7b0:	d01b      	beq.n	800e7ea <GUI_DispStringInRectWrap+0x76>
 800e7b2:	4628      	mov	r0, r5
 800e7b4:	9901      	ldr	r1, [sp, #4]
 800e7b6:	9a03      	ldr	r2, [sp, #12]
 800e7b8:	f7ff ffcc 	bl	800e754 <GUI_WrapGetNumLines>
 800e7bc:	2f08      	cmp	r7, #8
 800e7be:	d003      	beq.n	800e7c8 <GUI_DispStringInRectWrap+0x54>
 800e7c0:	2f0c      	cmp	r7, #12
 800e7c2:	d006      	beq.n	800e7d2 <GUI_DispStringInRectWrap+0x5e>
 800e7c4:	2f04      	cmp	r7, #4
 800e7c6:	d110      	bne.n	800e7ea <GUI_DispStringInRectWrap+0x76>
 800e7c8:	f10b 0601 	add.w	r6, fp, #1
 800e7cc:	fb00 6618 	mls	r6, r0, r8, r6
 800e7d0:	e00a      	b.n	800e7e8 <GUI_DispStringInRectWrap+0x74>
 800e7d2:	b232      	sxth	r2, r6
 800e7d4:	fa0f f38b 	sxth.w	r3, fp
 800e7d8:	1a9b      	subs	r3, r3, r2
 800e7da:	3301      	adds	r3, #1
 800e7dc:	fb08 3010 	mls	r0, r8, r0, r3
 800e7e0:	2302      	movs	r3, #2
 800e7e2:	fb90 f0f3 	sdiv	r0, r0, r3
 800e7e6:	4406      	add	r6, r0
 800e7e8:	b2b6      	uxth	r6, r6
 800e7ea:	4620      	mov	r0, r4
 800e7ec:	f7f9 fbe6 	bl	8007fbc <WM_SetUserClipRect>
 800e7f0:	4607      	mov	r7, r0
 800e7f2:	b178      	cbz	r0, 800e814 <GUI_DispStringInRectWrap+0xa0>
 800e7f4:	a804      	add	r0, sp, #16
 800e7f6:	4621      	mov	r1, r4
 800e7f8:	463a      	mov	r2, r7
 800e7fa:	f8ad a010 	strh.w	sl, [sp, #16]
 800e7fe:	f8ad 6012 	strh.w	r6, [sp, #18]
 800e802:	f8ad 9014 	strh.w	r9, [sp, #20]
 800e806:	f8ad b016 	strh.w	fp, [sp, #22]
 800e80a:	f7fe f8eb 	bl	800c9e4 <GUI__IntersectRects>
 800e80e:	a804      	add	r0, sp, #16
 800e810:	f7f9 fbd4 	bl	8007fbc <WM_SetUserClipRect>
 800e814:	9901      	ldr	r1, [sp, #4]
 800e816:	9a03      	ldr	r2, [sp, #12]
 800e818:	4628      	mov	r0, r5
 800e81a:	f004 fc13 	bl	8013044 <GUI__WrapGetNumCharsDisp>
 800e81e:	eb06 0b08 	add.w	fp, r6, r8
 800e822:	4602      	mov	r2, r0
 800e824:	fa1f fb8b 	uxth.w	fp, fp
 800e828:	f10b 33ff 	add.w	r3, fp, #4294967295
 800e82c:	4611      	mov	r1, r2
 800e82e:	4628      	mov	r0, r5
 800e830:	f8ad 301e 	strh.w	r3, [sp, #30]
 800e834:	9200      	str	r2, [sp, #0]
 800e836:	f8ad a018 	strh.w	sl, [sp, #24]
 800e83a:	f8ad 601a 	strh.w	r6, [sp, #26]
 800e83e:	f8ad 901c 	strh.w	r9, [sp, #28]
 800e842:	f000 fc5b 	bl	800f0fc <GUI__GetLineDistX>
 800e846:	9902      	ldr	r1, [sp, #8]
 800e848:	9a00      	ldr	r2, [sp, #0]
 800e84a:	f001 0303 	and.w	r3, r1, #3
 800e84e:	2b01      	cmp	r3, #1
 800e850:	d013      	beq.n	800e87a <GUI_DispStringInRectWrap+0x106>
 800e852:	2b02      	cmp	r3, #2
 800e854:	d004      	beq.n	800e860 <GUI_DispStringInRectWrap+0xec>
 800e856:	b9ab      	cbnz	r3, 800e884 <GUI_DispStringInRectWrap+0x110>
 800e858:	8823      	ldrh	r3, [r4, #0]
 800e85a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e85e:	e011      	b.n	800e884 <GUI_DispStringInRectWrap+0x110>
 800e860:	8821      	ldrh	r1, [r4, #0]
 800e862:	f9b4 e004 	ldrsh.w	lr, [r4, #4]
 800e866:	b20e      	sxth	r6, r1
 800e868:	ebc6 060e 	rsb	r6, r6, lr
 800e86c:	1a30      	subs	r0, r6, r0
 800e86e:	fb90 f3f3 	sdiv	r3, r0, r3
 800e872:	4419      	add	r1, r3
 800e874:	f8ad 1018 	strh.w	r1, [sp, #24]
 800e878:	e004      	b.n	800e884 <GUI_DispStringInRectWrap+0x110>
 800e87a:	88a3      	ldrh	r3, [r4, #4]
 800e87c:	3301      	adds	r3, #1
 800e87e:	1a18      	subs	r0, r3, r0
 800e880:	f8ad 0018 	strh.w	r0, [sp, #24]
 800e884:	4628      	mov	r0, r5
 800e886:	4611      	mov	r1, r2
 800e888:	aa06      	add	r2, sp, #24
 800e88a:	f000 fc67 	bl	800f15c <GUI__DispLine>
 800e88e:	4628      	mov	r0, r5
 800e890:	9901      	ldr	r1, [sp, #4]
 800e892:	9a03      	ldr	r2, [sp, #12]
 800e894:	f004 fc08 	bl	80130a8 <GUI__WrapGetNumBytesToNextLine>
 800e898:	4405      	add	r5, r0
 800e89a:	fa1f f68b 	uxth.w	r6, fp
 800e89e:	782b      	ldrb	r3, [r5, #0]
 800e8a0:	2b00      	cmp	r3, #0
 800e8a2:	d1b7      	bne.n	800e814 <GUI_DispStringInRectWrap+0xa0>
 800e8a4:	4638      	mov	r0, r7
 800e8a6:	f7f9 fb89 	bl	8007fbc <WM_SetUserClipRect>
 800e8aa:	b009      	add	sp, #36	; 0x24
 800e8ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e8b0 <GUI_DispString>:
 800e8b0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e8b4:	4604      	mov	r4, r0
 800e8b6:	2800      	cmp	r0, #0
 800e8b8:	d079      	beq.n	800e9ae <GUI_DispString+0xfe>
 800e8ba:	4d3e      	ldr	r5, [pc, #248]	; (800e9b4 <GUI_DispString+0x104>)
 800e8bc:	f000 fcba 	bl	800f234 <GUI_GetFontDistY>
 800e8c0:	682b      	ldr	r3, [r5, #0]
 800e8c2:	4680      	mov	r8, r0
 800e8c4:	f8b3 9022 	ldrh.w	r9, [r3, #34]	; 0x22
 800e8c8:	f000 fc9c 	bl	800f204 <GUI_GetYAdjust>
 800e8cc:	682b      	ldr	r3, [r5, #0]
 800e8ce:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 800e8d0:	b287      	uxth	r7, r0
 800e8d2:	1bd2      	subs	r2, r2, r7
 800e8d4:	849a      	strh	r2, [r3, #36]	; 0x24
 800e8d6:	7823      	ldrb	r3, [r4, #0]
 800e8d8:	2b00      	cmp	r3, #0
 800e8da:	d05d      	beq.n	800e998 <GUI_DispString+0xe8>
 800e8dc:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800e8e0:	4620      	mov	r0, r4
 800e8e2:	f000 fbdd 	bl	800f0a0 <GUI__GetLineNumChars>
 800e8e6:	4606      	mov	r6, r0
 800e8e8:	4631      	mov	r1, r6
 800e8ea:	4620      	mov	r0, r4
 800e8ec:	f000 fc06 	bl	800f0fc <GUI__GetLineDistX>
 800e8f0:	682b      	ldr	r3, [r5, #0]
 800e8f2:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800e8f4:	f002 0203 	and.w	r2, r2, #3
 800e8f8:	2a01      	cmp	r2, #1
 800e8fa:	d005      	beq.n	800e908 <GUI_DispString+0x58>
 800e8fc:	2a02      	cmp	r2, #2
 800e8fe:	bf14      	ite	ne
 800e900:	2200      	movne	r2, #0
 800e902:	fb90 f2f2 	sdiveq	r2, r0, r2
 800e906:	e000      	b.n	800e90a <GUI_DispString+0x5a>
 800e908:	4602      	mov	r2, r0
 800e90a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800e90c:	1a8a      	subs	r2, r1, r2
 800e90e:	b292      	uxth	r2, r2
 800e910:	b291      	uxth	r1, r2
 800e912:	8459      	strh	r1, [r3, #34]	; 0x22
 800e914:	fa1f fa80 	uxth.w	sl, r0
 800e918:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800e91a:	f8ad 1000 	strh.w	r1, [sp]
 800e91e:	f10a 31ff 	add.w	r1, sl, #4294967295
 800e922:	440a      	add	r2, r1
 800e924:	f8ad 3002 	strh.w	r3, [sp, #2]
 800e928:	fa1f fb88 	uxth.w	fp, r8
 800e92c:	3b01      	subs	r3, #1
 800e92e:	445b      	add	r3, fp
 800e930:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e934:	4620      	mov	r0, r4
 800e936:	4631      	mov	r1, r6
 800e938:	466a      	mov	r2, sp
 800e93a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e93e:	f000 fc0d 	bl	800f15c <GUI__DispLine>
 800e942:	682b      	ldr	r3, [r5, #0]
 800e944:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800e948:	849a      	strh	r2, [r3, #36]	; 0x24
 800e94a:	4620      	mov	r0, r4
 800e94c:	4631      	mov	r1, r6
 800e94e:	f004 ff53 	bl	80137f8 <GUI_UC__NumChars2NumBytes>
 800e952:	5c23      	ldrb	r3, [r4, r0]
 800e954:	2b0a      	cmp	r3, #10
 800e956:	eb04 0200 	add.w	r2, r4, r0
 800e95a:	d001      	beq.n	800e960 <GUI_DispString+0xb0>
 800e95c:	2b0d      	cmp	r3, #13
 800e95e:	d112      	bne.n	800e986 <GUI_DispString+0xd6>
 800e960:	682b      	ldr	r3, [r5, #0]
 800e962:	8d99      	ldrh	r1, [r3, #44]	; 0x2c
 800e964:	f001 0103 	and.w	r1, r1, #3
 800e968:	3901      	subs	r1, #1
 800e96a:	2901      	cmp	r1, #1
 800e96c:	bf8a      	itet	hi
 800e96e:	8c19      	ldrhhi	r1, [r3, #32]
 800e970:	f8a3 9022 	strhls.w	r9, [r3, #34]	; 0x22
 800e974:	8459      	strhhi	r1, [r3, #34]	; 0x22
 800e976:	7811      	ldrb	r1, [r2, #0]
 800e978:	290a      	cmp	r1, #10
 800e97a:	d10b      	bne.n	800e994 <GUI_DispString+0xe4>
 800e97c:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 800e97e:	448b      	add	fp, r1
 800e980:	f8a3 b024 	strh.w	fp, [r3, #36]	; 0x24
 800e984:	e006      	b.n	800e994 <GUI_DispString+0xe4>
 800e986:	4b0b      	ldr	r3, [pc, #44]	; (800e9b4 <GUI_DispString+0x104>)
 800e988:	f8bd 0000 	ldrh.w	r0, [sp]
 800e98c:	681b      	ldr	r3, [r3, #0]
 800e98e:	4482      	add	sl, r0
 800e990:	f8a3 a022 	strh.w	sl, [r3, #34]	; 0x22
 800e994:	7813      	ldrb	r3, [r2, #0]
 800e996:	b943      	cbnz	r3, 800e9aa <GUI_DispString+0xfa>
 800e998:	682b      	ldr	r3, [r5, #0]
 800e99a:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 800e99c:	4417      	add	r7, r2
 800e99e:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800e9a0:	849f      	strh	r7, [r3, #36]	; 0x24
 800e9a2:	f022 0203 	bic.w	r2, r2, #3
 800e9a6:	859a      	strh	r2, [r3, #44]	; 0x2c
 800e9a8:	e001      	b.n	800e9ae <GUI_DispString+0xfe>
 800e9aa:	1c54      	adds	r4, r2, #1
 800e9ac:	e793      	b.n	800e8d6 <GUI_DispString+0x26>
 800e9ae:	b003      	add	sp, #12
 800e9b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e9b4:	20000274 	.word	0x20000274

0800e9b8 <GUI_DEVICE__GetpDriver>:
 800e9b8:	2801      	cmp	r0, #1
 800e9ba:	dc09      	bgt.n	800e9d0 <GUI_DEVICE__GetpDriver+0x18>
 800e9bc:	4b05      	ldr	r3, [pc, #20]	; (800e9d4 <GUI_DEVICE__GetpDriver+0x1c>)
 800e9be:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800e9c2:	b120      	cbz	r0, 800e9ce <GUI_DEVICE__GetpDriver+0x16>
 800e9c4:	68c3      	ldr	r3, [r0, #12]
 800e9c6:	681b      	ldr	r3, [r3, #0]
 800e9c8:	b11b      	cbz	r3, 800e9d2 <GUI_DEVICE__GetpDriver+0x1a>
 800e9ca:	6800      	ldr	r0, [r0, #0]
 800e9cc:	e7f9      	b.n	800e9c2 <GUI_DEVICE__GetpDriver+0xa>
 800e9ce:	4770      	bx	lr
 800e9d0:	2000      	movs	r0, #0
 800e9d2:	4770      	bx	lr
 800e9d4:	2001ba34 	.word	0x2001ba34

0800e9d8 <GUI_DEVICE_Delete>:
 800e9d8:	f000 bd34 	b.w	800f444 <GUI_ALLOC_FreeFixedBlock>

0800e9dc <GUI_DEVICE_Create>:
 800e9dc:	2b01      	cmp	r3, #1
 800e9de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e9e0:	4606      	mov	r6, r0
 800e9e2:	460d      	mov	r5, r1
 800e9e4:	4617      	mov	r7, r2
 800e9e6:	461c      	mov	r4, r3
 800e9e8:	dd01      	ble.n	800e9ee <GUI_DEVICE_Create+0x12>
 800e9ea:	2000      	movs	r0, #0
 800e9ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e9ee:	201c      	movs	r0, #28
 800e9f0:	f000 fe94 	bl	800f71c <GUI_ALLOC_GetFixedBlock>
 800e9f4:	2800      	cmp	r0, #0
 800e9f6:	d0f8      	beq.n	800e9ea <GUI_DEVICE_Create+0xe>
 800e9f8:	b10d      	cbz	r5, 800e9fe <GUI_DEVICE_Create+0x22>
 800e9fa:	6105      	str	r5, [r0, #16]
 800e9fc:	e009      	b.n	800ea12 <GUI_DEVICE_Create+0x36>
 800e9fe:	4b09      	ldr	r3, [pc, #36]	; (800ea24 <GUI_DEVICE_Create+0x48>)
 800ea00:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 800ea04:	b129      	cbz	r1, 800ea12 <GUI_DEVICE_Create+0x36>
 800ea06:	680b      	ldr	r3, [r1, #0]
 800ea08:	b10b      	cbz	r3, 800ea0e <GUI_DEVICE_Create+0x32>
 800ea0a:	4619      	mov	r1, r3
 800ea0c:	e7fb      	b.n	800ea06 <GUI_DEVICE_Create+0x2a>
 800ea0e:	690b      	ldr	r3, [r1, #16]
 800ea10:	6103      	str	r3, [r0, #16]
 800ea12:	2300      	movs	r3, #0
 800ea14:	6083      	str	r3, [r0, #8]
 800ea16:	6184      	str	r4, [r0, #24]
 800ea18:	8287      	strh	r7, [r0, #20]
 800ea1a:	60c6      	str	r6, [r0, #12]
 800ea1c:	6003      	str	r3, [r0, #0]
 800ea1e:	6043      	str	r3, [r0, #4]
 800ea20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ea22:	bf00      	nop
 800ea24:	2001ba34 	.word	0x2001ba34

0800ea28 <GUI_DEVICE_Unlink>:
 800ea28:	4b09      	ldr	r3, [pc, #36]	; (800ea50 <GUI_DEVICE_Unlink+0x28>)
 800ea2a:	6982      	ldr	r2, [r0, #24]
 800ea2c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800ea30:	4281      	cmp	r1, r0
 800ea32:	bf04      	itt	eq
 800ea34:	6801      	ldreq	r1, [r0, #0]
 800ea36:	f843 1022 	streq.w	r1, [r3, r2, lsl #2]
 800ea3a:	6843      	ldr	r3, [r0, #4]
 800ea3c:	b10b      	cbz	r3, 800ea42 <GUI_DEVICE_Unlink+0x1a>
 800ea3e:	6802      	ldr	r2, [r0, #0]
 800ea40:	601a      	str	r2, [r3, #0]
 800ea42:	6802      	ldr	r2, [r0, #0]
 800ea44:	b102      	cbz	r2, 800ea48 <GUI_DEVICE_Unlink+0x20>
 800ea46:	6053      	str	r3, [r2, #4]
 800ea48:	2300      	movs	r3, #0
 800ea4a:	6003      	str	r3, [r0, #0]
 800ea4c:	6043      	str	r3, [r0, #4]
 800ea4e:	4770      	bx	lr
 800ea50:	2001ba34 	.word	0x2001ba34

0800ea54 <GUI_DEVICE_Link>:
 800ea54:	b570      	push	{r4, r5, r6, lr}
 800ea56:	b338      	cbz	r0, 800eaa8 <GUI_DEVICE_Link+0x54>
 800ea58:	6982      	ldr	r2, [r0, #24]
 800ea5a:	2a01      	cmp	r2, #1
 800ea5c:	dc24      	bgt.n	800eaa8 <GUI_DEVICE_Link+0x54>
 800ea5e:	4919      	ldr	r1, [pc, #100]	; (800eac4 <GUI_DEVICE_Link+0x70>)
 800ea60:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 800ea64:	460d      	mov	r5, r1
 800ea66:	b913      	cbnz	r3, 800ea6e <GUI_DEVICE_Link+0x1a>
 800ea68:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 800ea6c:	e01a      	b.n	800eaa4 <GUI_DEVICE_Link+0x50>
 800ea6e:	6859      	ldr	r1, [r3, #4]
 800ea70:	b109      	cbz	r1, 800ea76 <GUI_DEVICE_Link+0x22>
 800ea72:	460b      	mov	r3, r1
 800ea74:	e7fb      	b.n	800ea6e <GUI_DEVICE_Link+0x1a>
 800ea76:	68c1      	ldr	r1, [r0, #12]
 800ea78:	680e      	ldr	r6, [r1, #0]
 800ea7a:	68d9      	ldr	r1, [r3, #12]
 800ea7c:	680c      	ldr	r4, [r1, #0]
 800ea7e:	42b4      	cmp	r4, r6
 800ea80:	dd03      	ble.n	800ea8a <GUI_DEVICE_Link+0x36>
 800ea82:	681b      	ldr	r3, [r3, #0]
 800ea84:	2b00      	cmp	r3, #0
 800ea86:	d1f8      	bne.n	800ea7a <GUI_DEVICE_Link+0x26>
 800ea88:	e00e      	b.n	800eaa8 <GUI_DEVICE_Link+0x54>
 800ea8a:	d102      	bne.n	800ea92 <GUI_DEVICE_Link+0x3e>
 800ea8c:	8a81      	ldrh	r1, [r0, #20]
 800ea8e:	2901      	cmp	r1, #1
 800ea90:	d011      	beq.n	800eab6 <GUI_DEVICE_Link+0x62>
 800ea92:	6859      	ldr	r1, [r3, #4]
 800ea94:	b199      	cbz	r1, 800eabe <GUI_DEVICE_Link+0x6a>
 800ea96:	6008      	str	r0, [r1, #0]
 800ea98:	6041      	str	r1, [r0, #4]
 800ea9a:	6058      	str	r0, [r3, #4]
 800ea9c:	4298      	cmp	r0, r3
 800ea9e:	bf08      	it	eq
 800eaa0:	2300      	moveq	r3, #0
 800eaa2:	6003      	str	r3, [r0, #0]
 800eaa4:	2000      	movs	r0, #0
 800eaa6:	bd70      	pop	{r4, r5, r6, pc}
 800eaa8:	2001      	movs	r0, #1
 800eaaa:	bd70      	pop	{r4, r5, r6, pc}
 800eaac:	68cb      	ldr	r3, [r1, #12]
 800eaae:	681b      	ldr	r3, [r3, #0]
 800eab0:	42a3      	cmp	r3, r4
 800eab2:	460b      	mov	r3, r1
 800eab4:	dbed      	blt.n	800ea92 <GUI_DEVICE_Link+0x3e>
 800eab6:	6819      	ldr	r1, [r3, #0]
 800eab8:	2900      	cmp	r1, #0
 800eaba:	d1f7      	bne.n	800eaac <GUI_DEVICE_Link+0x58>
 800eabc:	e7e9      	b.n	800ea92 <GUI_DEVICE_Link+0x3e>
 800eabe:	f845 0022 	str.w	r0, [r5, r2, lsl #2]
 800eac2:	e7ea      	b.n	800ea9a <GUI_DEVICE_Link+0x46>
 800eac4:	2001ba34 	.word	0x2001ba34

0800eac8 <GUI_DEVICE_CreateAndLink>:
 800eac8:	b538      	push	{r3, r4, r5, lr}
 800eaca:	461d      	mov	r5, r3
 800eacc:	f7ff ff86 	bl	800e9dc <GUI_DEVICE_Create>
 800ead0:	4604      	mov	r4, r0
 800ead2:	b148      	cbz	r0, 800eae8 <GUI_DEVICE_CreateAndLink+0x20>
 800ead4:	f7ff ffbe 	bl	800ea54 <GUI_DEVICE_Link>
 800ead8:	68e3      	ldr	r3, [r4, #12]
 800eada:	681b      	ldr	r3, [r3, #0]
 800eadc:	b923      	cbnz	r3, 800eae8 <GUI_DEVICE_CreateAndLink+0x20>
 800eade:	4b03      	ldr	r3, [pc, #12]	; (800eaec <GUI_DEVICE_CreateAndLink+0x24>)
 800eae0:	3516      	adds	r5, #22
 800eae2:	681b      	ldr	r3, [r3, #0]
 800eae4:	f843 4025 	str.w	r4, [r3, r5, lsl #2]
 800eae8:	4620      	mov	r0, r4
 800eaea:	bd38      	pop	{r3, r4, r5, pc}
 800eaec:	20000274 	.word	0x20000274

0800eaf0 <_OnExit>:
 800eaf0:	b510      	push	{r4, lr}
 800eaf2:	4b07      	ldr	r3, [pc, #28]	; (800eb10 <_OnExit+0x20>)
 800eaf4:	4807      	ldr	r0, [pc, #28]	; (800eb14 <_OnExit+0x24>)
 800eaf6:	2400      	movs	r4, #0
 800eaf8:	4621      	mov	r1, r4
 800eafa:	2270      	movs	r2, #112	; 0x70
 800eafc:	601c      	str	r4, [r3, #0]
 800eafe:	f7fd fe81 	bl	800c804 <GUI__memset>
 800eb02:	4621      	mov	r1, r4
 800eb04:	4804      	ldr	r0, [pc, #16]	; (800eb18 <_OnExit+0x28>)
 800eb06:	2208      	movs	r2, #8
 800eb08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800eb0c:	f7fd be7a 	b.w	800c804 <GUI__memset>
 800eb10:	20019ef8 	.word	0x20019ef8
 800eb14:	20019e80 	.word	0x20019e80
 800eb18:	2001ba34 	.word	0x2001ba34

0800eb1c <_InitContext>:
 800eb1c:	b538      	push	{r3, r4, r5, lr}
 800eb1e:	4d19      	ldr	r5, [pc, #100]	; (800eb84 <_InitContext+0x68>)
 800eb20:	682b      	ldr	r3, [r5, #0]
 800eb22:	1d1a      	adds	r2, r3, #4
 800eb24:	63da      	str	r2, [r3, #60]	; 0x3c
 800eb26:	f103 0208 	add.w	r2, r3, #8
 800eb2a:	639b      	str	r3, [r3, #56]	; 0x38
 800eb2c:	641b      	str	r3, [r3, #64]	; 0x40
 800eb2e:	6142      	str	r2, [r0, #20]
 800eb30:	7c5a      	ldrb	r2, [r3, #17]
 800eb32:	4b15      	ldr	r3, [pc, #84]	; (800eb88 <_InitContext+0x6c>)
 800eb34:	4604      	mov	r4, r0
 800eb36:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800eb3a:	68c3      	ldr	r3, [r0, #12]
 800eb3c:	f104 0108 	add.w	r1, r4, #8
 800eb40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800eb42:	4798      	blx	r3
 800eb44:	4b11      	ldr	r3, [pc, #68]	; (800eb8c <_InitContext+0x70>)
 800eb46:	6663      	str	r3, [r4, #100]	; 0x64
 800eb48:	4b11      	ldr	r3, [pc, #68]	; (800eb90 <_InitContext+0x74>)
 800eb4a:	681b      	ldr	r3, [r3, #0]
 800eb4c:	61e3      	str	r3, [r4, #28]
 800eb4e:	682b      	ldr	r3, [r5, #0]
 800eb50:	3308      	adds	r3, #8
 800eb52:	6163      	str	r3, [r4, #20]
 800eb54:	2301      	movs	r3, #1
 800eb56:	7623      	strb	r3, [r4, #24]
 800eb58:	f7f9 fe14 	bl	8008784 <WM_GetDesktopWindow>
 800eb5c:	2303      	movs	r3, #3
 800eb5e:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 800eb62:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800eb66:	6323      	str	r3, [r4, #48]	; 0x30
 800eb68:	6363      	str	r3, [r4, #52]	; 0x34
 800eb6a:	64a0      	str	r0, [r4, #72]	; 0x48
 800eb6c:	2000      	movs	r0, #0
 800eb6e:	f7fd fe0b 	bl	800c788 <LCD_SetBkColor>
 800eb72:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 800eb76:	f7fd fe0f 	bl	800c798 <LCD_SetColor>
 800eb7a:	4b06      	ldr	r3, [pc, #24]	; (800eb94 <_InitContext+0x78>)
 800eb7c:	4a06      	ldr	r2, [pc, #24]	; (800eb98 <_InitContext+0x7c>)
 800eb7e:	601a      	str	r2, [r3, #0]
 800eb80:	bd38      	pop	{r3, r4, r5, pc}
 800eb82:	bf00      	nop
 800eb84:	20000274 	.word	0x20000274
 800eb88:	2001ba34 	.word	0x2001ba34
 800eb8c:	080172d0 	.word	0x080172d0
 800eb90:	20000278 	.word	0x20000278
 800eb94:	2001ba2c 	.word	0x2001ba2c
 800eb98:	08017e4c 	.word	0x08017e4c

0800eb9c <GUI_SetDefaultFont>:
 800eb9c:	4b01      	ldr	r3, [pc, #4]	; (800eba4 <GUI_SetDefaultFont+0x8>)
 800eb9e:	6018      	str	r0, [r3, #0]
 800eba0:	4770      	bx	lr
 800eba2:	bf00      	nop
 800eba4:	20000278 	.word	0x20000278

0800eba8 <GUI_ClearRect>:
 800eba8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800ebac:	4607      	mov	r7, r0
 800ebae:	2004      	movs	r0, #4
 800ebb0:	469a      	mov	sl, r3
 800ebb2:	460e      	mov	r6, r1
 800ebb4:	4691      	mov	r9, r2
 800ebb6:	f7fd fa9f 	bl	800c0f8 <LCD_SetDrawMode>
 800ebba:	4b13      	ldr	r3, [pc, #76]	; (800ec08 <GUI_ClearRect+0x60>)
 800ebbc:	681c      	ldr	r4, [r3, #0]
 800ebbe:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800ebc0:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800ebc2:	442f      	add	r7, r5
 800ebc4:	4426      	add	r6, r4
 800ebc6:	4680      	mov	r8, r0
 800ebc8:	444d      	add	r5, r9
 800ebca:	4454      	add	r4, sl
 800ebcc:	4668      	mov	r0, sp
 800ebce:	f8ad 7000 	strh.w	r7, [sp]
 800ebd2:	f8ad 5004 	strh.w	r5, [sp, #4]
 800ebd6:	f8ad 6002 	strh.w	r6, [sp, #2]
 800ebda:	f8ad 4006 	strh.w	r4, [sp, #6]
 800ebde:	f7fa fd33 	bl	8009648 <WM__InitIVRSearch>
 800ebe2:	b928      	cbnz	r0, 800ebf0 <GUI_ClearRect+0x48>
 800ebe4:	4640      	mov	r0, r8
 800ebe6:	f7fd fa87 	bl	800c0f8 <LCD_SetDrawMode>
 800ebea:	b002      	add	sp, #8
 800ebec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ebf0:	4638      	mov	r0, r7
 800ebf2:	4631      	mov	r1, r6
 800ebf4:	462a      	mov	r2, r5
 800ebf6:	4623      	mov	r3, r4
 800ebf8:	f7fd fb00 	bl	800c1fc <LCD_FillRect>
 800ebfc:	f7fa fc62 	bl	80094c4 <WM__GetNextIVR>
 800ec00:	2800      	cmp	r0, #0
 800ec02:	d1f5      	bne.n	800ebf0 <GUI_ClearRect+0x48>
 800ec04:	e7ee      	b.n	800ebe4 <GUI_ClearRect+0x3c>
 800ec06:	bf00      	nop
 800ec08:	20000274 	.word	0x20000274

0800ec0c <GUI_Clear>:
 800ec0c:	b510      	push	{r4, lr}
 800ec0e:	2000      	movs	r0, #0
 800ec10:	4601      	mov	r1, r0
 800ec12:	f7ff f947 	bl	800dea4 <GUI_GotoXY>
 800ec16:	4804      	ldr	r0, [pc, #16]	; (800ec28 <GUI_Clear+0x1c>)
 800ec18:	f643 72ff 	movw	r2, #16383	; 0x3fff
 800ec1c:	4601      	mov	r1, r0
 800ec1e:	4613      	mov	r3, r2
 800ec20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ec24:	f7ff bfc0 	b.w	800eba8 <GUI_ClearRect>
 800ec28:	ffffc001 	.word	0xffffc001

0800ec2c <GUI__RegisterExit>:
 800ec2c:	b480      	push	{r7}
 800ec2e:	b083      	sub	sp, #12
 800ec30:	af00      	add	r7, sp, #0
 800ec32:	6078      	str	r0, [r7, #4]
 800ec34:	4b05      	ldr	r3, [pc, #20]	; (800ec4c <GUI__RegisterExit+0x20>)
 800ec36:	681a      	ldr	r2, [r3, #0]
 800ec38:	687b      	ldr	r3, [r7, #4]
 800ec3a:	605a      	str	r2, [r3, #4]
 800ec3c:	4b03      	ldr	r3, [pc, #12]	; (800ec4c <GUI__RegisterExit+0x20>)
 800ec3e:	687a      	ldr	r2, [r7, #4]
 800ec40:	601a      	str	r2, [r3, #0]
 800ec42:	370c      	adds	r7, #12
 800ec44:	46bd      	mov	sp, r7
 800ec46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec4a:	4770      	bx	lr
 800ec4c:	20019e7c 	.word	0x20019e7c

0800ec50 <GUI__Config>:
 800ec50:	b508      	push	{r3, lr}
 800ec52:	4b08      	ldr	r3, [pc, #32]	; (800ec74 <GUI__Config+0x24>)
 800ec54:	681a      	ldr	r2, [r3, #0]
 800ec56:	b962      	cbnz	r2, 800ec72 <GUI__Config+0x22>
 800ec58:	2201      	movs	r2, #1
 800ec5a:	601a      	str	r2, [r3, #0]
 800ec5c:	f7f6 fb7c 	bl	8005358 <GUI_X_Config>
 800ec60:	f7f6 fba6 	bl	80053b0 <LCD_X_Config>
 800ec64:	4804      	ldr	r0, [pc, #16]	; (800ec78 <GUI__Config+0x28>)
 800ec66:	4b05      	ldr	r3, [pc, #20]	; (800ec7c <GUI__Config+0x2c>)
 800ec68:	6003      	str	r3, [r0, #0]
 800ec6a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ec6e:	f7ff bfdd 	b.w	800ec2c <GUI__RegisterExit>
 800ec72:	bd08      	pop	{r3, pc}
 800ec74:	20019ef8 	.word	0x20019ef8
 800ec78:	20019ef0 	.word	0x20019ef0
 800ec7c:	0800eaf1 	.word	0x0800eaf1

0800ec80 <GUI_Init>:
 800ec80:	b590      	push	{r4, r7, lr}
 800ec82:	b083      	sub	sp, #12
 800ec84:	af00      	add	r7, sp, #0
 800ec86:	4b20      	ldr	r3, [pc, #128]	; (800ed08 <GUI_Init+0x88>)
 800ec88:	4a1f      	ldr	r2, [pc, #124]	; (800ed08 <GUI_Init+0x88>)
 800ec8a:	6812      	ldr	r2, [r2, #0]
 800ec8c:	f022 0201 	bic.w	r2, r2, #1
 800ec90:	601a      	str	r2, [r3, #0]
 800ec92:	4b1e      	ldr	r3, [pc, #120]	; (800ed0c <GUI_Init+0x8c>)
 800ec94:	2201      	movs	r2, #1
 800ec96:	601a      	str	r2, [r3, #0]
 800ec98:	4b1d      	ldr	r3, [pc, #116]	; (800ed10 <GUI_Init+0x90>)
 800ec9a:	4a1e      	ldr	r2, [pc, #120]	; (800ed14 <GUI_Init+0x94>)
 800ec9c:	601a      	str	r2, [r3, #0]
 800ec9e:	4b1c      	ldr	r3, [pc, #112]	; (800ed10 <GUI_Init+0x90>)
 800eca0:	681a      	ldr	r2, [r3, #0]
 800eca2:	4b1d      	ldr	r3, [pc, #116]	; (800ed18 <GUI_Init+0x98>)
 800eca4:	429a      	cmp	r2, r3
 800eca6:	d000      	beq.n	800ecaa <GUI_Init+0x2a>
 800eca8:	e7fe      	b.n	800eca8 <GUI_Init+0x28>
 800ecaa:	f7ff ffd1 	bl	800ec50 <GUI__Config>
 800ecae:	4b1b      	ldr	r3, [pc, #108]	; (800ed1c <GUI_Init+0x9c>)
 800ecb0:	222e      	movs	r2, #46	; 0x2e
 800ecb2:	701a      	strb	r2, [r3, #0]
 800ecb4:	f7f6 fb70 	bl	8005398 <GUI_X_Init>
 800ecb8:	4819      	ldr	r0, [pc, #100]	; (800ed20 <GUI_Init+0xa0>)
 800ecba:	f7ff ff2f 	bl	800eb1c <_InitContext>
 800ecbe:	f7fd fcc1 	bl	800c644 <emWin_LCD_Init>
 800ecc2:	6078      	str	r0, [r7, #4]
 800ecc4:	f7fd f9a2 	bl	800c00c <LCD_GetXSizeDisplay>
 800ecc8:	4603      	mov	r3, r0
 800ecca:	2b00      	cmp	r3, #0
 800eccc:	d004      	beq.n	800ecd8 <GUI_Init+0x58>
 800ecce:	f7fd f9a3 	bl	800c018 <LCD_GetYSizeDisplay>
 800ecd2:	4603      	mov	r3, r0
 800ecd4:	2b00      	cmp	r3, #0
 800ecd6:	d109      	bne.n	800ecec <GUI_Init+0x6c>
 800ecd8:	f7fd f984 	bl	800bfe4 <LCD_GetXSizeMax>
 800ecdc:	4604      	mov	r4, r0
 800ecde:	f7fd f984 	bl	800bfea <LCD_GetYSizeMax>
 800ece2:	4603      	mov	r3, r0
 800ece4:	4620      	mov	r0, r4
 800ece6:	4619      	mov	r1, r3
 800ece8:	f7fd f986 	bl	800bff8 <LCD_SetDisplaySize>
 800ecec:	2000      	movs	r0, #0
 800ecee:	2100      	movs	r1, #0
 800ecf0:	f004 fd9a 	bl	8013828 <GUI_SetOrg>
 800ecf4:	f7fa fef4 	bl	8009ae0 <WM_Init>
 800ecf8:	4b0a      	ldr	r3, [pc, #40]	; (800ed24 <GUI_Init+0xa4>)
 800ecfa:	2201      	movs	r2, #1
 800ecfc:	701a      	strb	r2, [r3, #0]
 800ecfe:	687b      	ldr	r3, [r7, #4]
 800ed00:	4618      	mov	r0, r3
 800ed02:	370c      	adds	r7, #12
 800ed04:	46bd      	mov	sp, r7
 800ed06:	bd90      	pop	{r4, r7, pc}
 800ed08:	e0002000 	.word	0xe0002000
 800ed0c:	40023008 	.word	0x40023008
 800ed10:	40023000 	.word	0x40023000
 800ed14:	f407a5c2 	.word	0xf407a5c2
 800ed18:	b5e8b5cd 	.word	0xb5e8b5cd
 800ed1c:	2001ba06 	.word	0x2001ba06
 800ed20:	20019e80 	.word	0x20019e80
 800ed24:	2001ba24 	.word	0x2001ba24

0800ed28 <GUIPROP__FindChar>:
 800ed28:	b138      	cbz	r0, 800ed3a <GUIPROP__FindChar+0x12>
 800ed2a:	8803      	ldrh	r3, [r0, #0]
 800ed2c:	428b      	cmp	r3, r1
 800ed2e:	d802      	bhi.n	800ed36 <GUIPROP__FindChar+0xe>
 800ed30:	8843      	ldrh	r3, [r0, #2]
 800ed32:	428b      	cmp	r3, r1
 800ed34:	d201      	bcs.n	800ed3a <GUIPROP__FindChar+0x12>
 800ed36:	6880      	ldr	r0, [r0, #8]
 800ed38:	e7f6      	b.n	800ed28 <GUIPROP__FindChar>
 800ed3a:	4770      	bx	lr

0800ed3c <GUIPROP_DispChar>:
 800ed3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed40:	4c38      	ldr	r4, [pc, #224]	; (800ee24 <GUIPROP_DispChar+0xe8>)
 800ed42:	6823      	ldr	r3, [r4, #0]
 800ed44:	f9b3 902a 	ldrsh.w	r9, [r3, #42]	; 0x2a
 800ed48:	69db      	ldr	r3, [r3, #28]
 800ed4a:	4605      	mov	r5, r0
 800ed4c:	b089      	sub	sp, #36	; 0x24
 800ed4e:	69d8      	ldr	r0, [r3, #28]
 800ed50:	4629      	mov	r1, r5
 800ed52:	f7ff ffe9 	bl	800ed28 <GUIPROP__FindChar>
 800ed56:	2800      	cmp	r0, #0
 800ed58:	d061      	beq.n	800ee1e <GUIPROP_DispChar+0xe2>
 800ed5a:	f8b0 8000 	ldrh.w	r8, [r0]
 800ed5e:	6847      	ldr	r7, [r0, #4]
 800ed60:	ebc8 0805 	rsb	r8, r8, r5
 800ed64:	eb07 06c8 	add.w	r6, r7, r8, lsl #3
 800ed68:	4648      	mov	r0, r9
 800ed6a:	f896 b002 	ldrb.w	fp, [r6, #2]
 800ed6e:	f7fd f9c3 	bl	800c0f8 <LCD_SetDrawMode>
 800ed72:	6825      	ldr	r5, [r4, #0]
 800ed74:	f817 2038 	ldrb.w	r2, [r7, r8, lsl #3]
 800ed78:	f8d5 e01c 	ldr.w	lr, [r5, #28]
 800ed7c:	f9b5 1024 	ldrsh.w	r1, [r5, #36]	; 0x24
 800ed80:	f89e c01a 	ldrb.w	ip, [lr, #26]
 800ed84:	f89e 3018 	ldrb.w	r3, [lr, #24]
 800ed88:	9306      	str	r3, [sp, #24]
 800ed8a:	4682      	mov	sl, r0
 800ed8c:	f9b5 0022 	ldrsh.w	r0, [r5, #34]	; 0x22
 800ed90:	f8cd c000 	str.w	ip, [sp]
 800ed94:	f89e e01b 	ldrb.w	lr, [lr, #27]
 800ed98:	f8cd e004 	str.w	lr, [sp, #4]
 800ed9c:	f04f 0e01 	mov.w	lr, #1
 800eda0:	f8cd b00c 	str.w	fp, [sp, #12]
 800eda4:	f8cd e008 	str.w	lr, [sp, #8]
 800eda8:	6873      	ldr	r3, [r6, #4]
 800edaa:	9304      	str	r3, [sp, #16]
 800edac:	6bad      	ldr	r5, [r5, #56]	; 0x38
 800edae:	9b06      	ldr	r3, [sp, #24]
 800edb0:	9505      	str	r5, [sp, #20]
 800edb2:	f7fd fb2b 	bl	800c40c <LCD_DrawBitmap>
 800edb6:	6823      	ldr	r3, [r4, #0]
 800edb8:	69da      	ldr	r2, [r3, #28]
 800edba:	f892 b019 	ldrb.w	fp, [r2, #25]
 800edbe:	7e11      	ldrb	r1, [r2, #24]
 800edc0:	458b      	cmp	fp, r1
 800edc2:	d920      	bls.n	800ee06 <GUIPROP_DispChar+0xca>
 800edc4:	f1b9 0f02 	cmp.w	r9, #2
 800edc8:	7ed5      	ldrb	r5, [r2, #27]
 800edca:	d01c      	beq.n	800ee06 <GUIPROP_DispChar+0xca>
 800edcc:	9107      	str	r1, [sp, #28]
 800edce:	f004 fd77 	bl	80138c0 <GUI_GetColor>
 800edd2:	4681      	mov	r9, r0
 800edd4:	f004 fd6d 	bl	80138b2 <GUI_GetBkColor>
 800edd8:	f7fe fef0 	bl	800dbbc <GUI_SetColor>
 800eddc:	6824      	ldr	r4, [r4, #0]
 800edde:	f817 7038 	ldrb.w	r7, [r7, r8, lsl #3]
 800ede2:	69e2      	ldr	r2, [r4, #28]
 800ede4:	f9b4 3024 	ldrsh.w	r3, [r4, #36]	; 0x24
 800ede8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800edec:	7ed2      	ldrb	r2, [r2, #27]
 800edee:	9907      	ldr	r1, [sp, #28]
 800edf0:	fb07 0202 	mla	r2, r7, r2, r0
 800edf4:	fb01 3105 	mla	r1, r1, r5, r3
 800edf8:	fb0b 3305 	mla	r3, fp, r5, r3
 800edfc:	f7fd f9fe 	bl	800c1fc <LCD_FillRect>
 800ee00:	4648      	mov	r0, r9
 800ee02:	f7fe fedb 	bl	800dbbc <GUI_SetColor>
 800ee06:	4650      	mov	r0, sl
 800ee08:	f7fd f976 	bl	800c0f8 <LCD_SetDrawMode>
 800ee0c:	4b05      	ldr	r3, [pc, #20]	; (800ee24 <GUIPROP_DispChar+0xe8>)
 800ee0e:	681b      	ldr	r3, [r3, #0]
 800ee10:	69da      	ldr	r2, [r3, #28]
 800ee12:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800ee14:	7e90      	ldrb	r0, [r2, #26]
 800ee16:	7872      	ldrb	r2, [r6, #1]
 800ee18:	fb00 1202 	mla	r2, r0, r2, r1
 800ee1c:	845a      	strh	r2, [r3, #34]	; 0x22
 800ee1e:	b009      	add	sp, #36	; 0x24
 800ee20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ee24:	20000274 	.word	0x20000274

0800ee28 <GUIPROP_GetCharDistX>:
 800ee28:	4b0d      	ldr	r3, [pc, #52]	; (800ee60 <GUIPROP_GetCharDistX+0x38>)
 800ee2a:	b570      	push	{r4, r5, r6, lr}
 800ee2c:	681b      	ldr	r3, [r3, #0]
 800ee2e:	69dd      	ldr	r5, [r3, #28]
 800ee30:	4606      	mov	r6, r0
 800ee32:	460c      	mov	r4, r1
 800ee34:	69e8      	ldr	r0, [r5, #28]
 800ee36:	4631      	mov	r1, r6
 800ee38:	f7ff ff76 	bl	800ed28 <GUIPROP__FindChar>
 800ee3c:	b170      	cbz	r0, 800ee5c <GUIPROP_GetCharDistX+0x34>
 800ee3e:	8803      	ldrh	r3, [r0, #0]
 800ee40:	6842      	ldr	r2, [r0, #4]
 800ee42:	1af6      	subs	r6, r6, r3
 800ee44:	eb02 03c6 	add.w	r3, r2, r6, lsl #3
 800ee48:	7858      	ldrb	r0, [r3, #1]
 800ee4a:	7eab      	ldrb	r3, [r5, #26]
 800ee4c:	fb10 f003 	smulbb	r0, r0, r3
 800ee50:	b124      	cbz	r4, 800ee5c <GUIPROP_GetCharDistX+0x34>
 800ee52:	f812 2036 	ldrb.w	r2, [r2, r6, lsl #3]
 800ee56:	fb12 f303 	smulbb	r3, r2, r3
 800ee5a:	6023      	str	r3, [r4, #0]
 800ee5c:	bd70      	pop	{r4, r5, r6, pc}
 800ee5e:	bf00      	nop
 800ee60:	20000274 	.word	0x20000274

0800ee64 <GUIPROP_GetFontInfo>:
 800ee64:	2301      	movs	r3, #1
 800ee66:	800b      	strh	r3, [r1, #0]
 800ee68:	4770      	bx	lr

0800ee6a <GUIPROP_IsInFont>:
 800ee6a:	b508      	push	{r3, lr}
 800ee6c:	69c0      	ldr	r0, [r0, #28]
 800ee6e:	f7ff ff5b 	bl	800ed28 <GUIPROP__FindChar>
 800ee72:	3000      	adds	r0, #0
 800ee74:	bf18      	it	ne
 800ee76:	2001      	movne	r0, #1
 800ee78:	bd08      	pop	{r3, pc}
	...

0800ee7c <GUIMONO_DispChar>:
 800ee7c:	4b52      	ldr	r3, [pc, #328]	; (800efc8 <GUIMONO_DispChar+0x14c>)
 800ee7e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ee82:	681b      	ldr	r3, [r3, #0]
 800ee84:	69d9      	ldr	r1, [r3, #28]
 800ee86:	8c5f      	ldrh	r7, [r3, #34]	; 0x22
 800ee88:	69cc      	ldr	r4, [r1, #28]
 800ee8a:	8c9d      	ldrh	r5, [r3, #36]	; 0x24
 800ee8c:	89a2      	ldrh	r2, [r4, #12]
 800ee8e:	4290      	cmp	r0, r2
 800ee90:	b08b      	sub	sp, #44	; 0x2c
 800ee92:	d308      	bcc.n	800eea6 <GUIMONO_DispChar+0x2a>
 800ee94:	89e6      	ldrh	r6, [r4, #14]
 800ee96:	4286      	cmp	r6, r0
 800ee98:	d305      	bcc.n	800eea6 <GUIMONO_DispChar+0x2a>
 800ee9a:	f8d4 9000 	ldr.w	r9, [r4]
 800ee9e:	1a82      	subs	r2, r0, r2
 800eea0:	f04f 3bff 	mov.w	fp, #4294967295
 800eea4:	e015      	b.n	800eed2 <GUIMONO_DispChar+0x56>
 800eea6:	68a2      	ldr	r2, [r4, #8]
 800eea8:	f8d4 9004 	ldr.w	r9, [r4, #4]
 800eeac:	2a00      	cmp	r2, #0
 800eeae:	f000 8081 	beq.w	800efb4 <GUIMONO_DispChar+0x138>
 800eeb2:	8816      	ldrh	r6, [r2, #0]
 800eeb4:	42b0      	cmp	r0, r6
 800eeb6:	d37d      	bcc.n	800efb4 <GUIMONO_DispChar+0x138>
 800eeb8:	f8b2 c002 	ldrh.w	ip, [r2, #2]
 800eebc:	4584      	cmp	ip, r0
 800eebe:	d379      	bcc.n	800efb4 <GUIMONO_DispChar+0x138>
 800eec0:	6852      	ldr	r2, [r2, #4]
 800eec2:	1b80      	subs	r0, r0, r6
 800eec4:	b280      	uxth	r0, r0
 800eec6:	eb02 0680 	add.w	r6, r2, r0, lsl #2
 800eeca:	f932 2020 	ldrsh.w	r2, [r2, r0, lsl #2]
 800eece:	f9b6 b002 	ldrsh.w	fp, [r6, #2]
 800eed2:	1c50      	adds	r0, r2, #1
 800eed4:	d06e      	beq.n	800efb4 <GUIMONO_DispChar+0x138>
 800eed6:	f891 8018 	ldrb.w	r8, [r1, #24]
 800eeda:	7ca1      	ldrb	r1, [r4, #18]
 800eedc:	f8b3 a02a 	ldrh.w	sl, [r3, #42]	; 0x2a
 800eee0:	7c26      	ldrb	r6, [r4, #16]
 800eee2:	9206      	str	r2, [sp, #24]
 800eee4:	fb18 f101 	smulbb	r1, r8, r1
 800eee8:	9107      	str	r1, [sp, #28]
 800eeea:	fa0f f18a 	sxth.w	r1, sl
 800eeee:	4608      	mov	r0, r1
 800eef0:	9108      	str	r1, [sp, #32]
 800eef2:	f7fd f901 	bl	800c0f8 <LCD_SetDrawMode>
 800eef6:	4934      	ldr	r1, [pc, #208]	; (800efc8 <GUIMONO_DispChar+0x14c>)
 800eef8:	9009      	str	r0, [sp, #36]	; 0x24
 800eefa:	680b      	ldr	r3, [r1, #0]
 800eefc:	9a06      	ldr	r2, [sp, #24]
 800eefe:	69d9      	ldr	r1, [r3, #28]
 800ef00:	7e88      	ldrb	r0, [r1, #26]
 800ef02:	9000      	str	r0, [sp, #0]
 800ef04:	7ec9      	ldrb	r1, [r1, #27]
 800ef06:	9101      	str	r1, [sp, #4]
 800ef08:	2101      	movs	r1, #1
 800ef0a:	9102      	str	r1, [sp, #8]
 800ef0c:	7ca1      	ldrb	r1, [r4, #18]
 800ef0e:	9103      	str	r1, [sp, #12]
 800ef10:	9907      	ldr	r1, [sp, #28]
 800ef12:	fb01 9202 	mla	r2, r1, r2, r9
 800ef16:	9204      	str	r2, [sp, #16]
 800ef18:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ef1a:	9305      	str	r3, [sp, #20]
 800ef1c:	b23f      	sxth	r7, r7
 800ef1e:	b22d      	sxth	r5, r5
 800ef20:	4638      	mov	r0, r7
 800ef22:	4629      	mov	r1, r5
 800ef24:	4632      	mov	r2, r6
 800ef26:	4643      	mov	r3, r8
 800ef28:	f7fd fa70 	bl	800c40c <LCD_DrawBitmap>
 800ef2c:	f1bb 3fff 	cmp.w	fp, #4294967295
 800ef30:	d01b      	beq.n	800ef6a <GUIMONO_DispChar+0xee>
 800ef32:	f04a 0002 	orr.w	r0, sl, #2
 800ef36:	b200      	sxth	r0, r0
 800ef38:	f7fd f8de 	bl	800c0f8 <LCD_SetDrawMode>
 800ef3c:	4a22      	ldr	r2, [pc, #136]	; (800efc8 <GUIMONO_DispChar+0x14c>)
 800ef3e:	6813      	ldr	r3, [r2, #0]
 800ef40:	69da      	ldr	r2, [r3, #28]
 800ef42:	7e91      	ldrb	r1, [r2, #26]
 800ef44:	9100      	str	r1, [sp, #0]
 800ef46:	7ed2      	ldrb	r2, [r2, #27]
 800ef48:	9201      	str	r2, [sp, #4]
 800ef4a:	2101      	movs	r1, #1
 800ef4c:	9102      	str	r1, [sp, #8]
 800ef4e:	9907      	ldr	r1, [sp, #28]
 800ef50:	7ca2      	ldrb	r2, [r4, #18]
 800ef52:	9203      	str	r2, [sp, #12]
 800ef54:	fb01 920b 	mla	r2, r1, fp, r9
 800ef58:	9204      	str	r2, [sp, #16]
 800ef5a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ef5c:	9305      	str	r3, [sp, #20]
 800ef5e:	4638      	mov	r0, r7
 800ef60:	4629      	mov	r1, r5
 800ef62:	4632      	mov	r2, r6
 800ef64:	4643      	mov	r3, r8
 800ef66:	f7fd fa51 	bl	800c40c <LCD_DrawBitmap>
 800ef6a:	f8df 805c 	ldr.w	r8, [pc, #92]	; 800efc8 <GUIMONO_DispChar+0x14c>
 800ef6e:	f8d8 3000 	ldr.w	r3, [r8]
 800ef72:	69db      	ldr	r3, [r3, #28]
 800ef74:	7e5a      	ldrb	r2, [r3, #25]
 800ef76:	7e1b      	ldrb	r3, [r3, #24]
 800ef78:	429a      	cmp	r2, r3
 800ef7a:	d917      	bls.n	800efac <GUIMONO_DispChar+0x130>
 800ef7c:	9a08      	ldr	r2, [sp, #32]
 800ef7e:	2a02      	cmp	r2, #2
 800ef80:	d014      	beq.n	800efac <GUIMONO_DispChar+0x130>
 800ef82:	f08a 0004 	eor.w	r0, sl, #4
 800ef86:	b200      	sxth	r0, r0
 800ef88:	f7fd f8b6 	bl	800c0f8 <LCD_SetDrawMode>
 800ef8c:	f8d8 3000 	ldr.w	r3, [r8]
 800ef90:	69db      	ldr	r3, [r3, #28]
 800ef92:	f893 e018 	ldrb.w	lr, [r3, #24]
 800ef96:	7ed9      	ldrb	r1, [r3, #27]
 800ef98:	7e9a      	ldrb	r2, [r3, #26]
 800ef9a:	7e5b      	ldrb	r3, [r3, #25]
 800ef9c:	4638      	mov	r0, r7
 800ef9e:	fb0e 5101 	mla	r1, lr, r1, r5
 800efa2:	fb06 7202 	mla	r2, r6, r2, r7
 800efa6:	442b      	add	r3, r5
 800efa8:	f7fd f928 	bl	800c1fc <LCD_FillRect>
 800efac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800efae:	b2d8      	uxtb	r0, r3
 800efb0:	f7fd f8a2 	bl	800c0f8 <LCD_SetDrawMode>
 800efb4:	4b04      	ldr	r3, [pc, #16]	; (800efc8 <GUIMONO_DispChar+0x14c>)
 800efb6:	7c61      	ldrb	r1, [r4, #17]
 800efb8:	681b      	ldr	r3, [r3, #0]
 800efba:	8c5a      	ldrh	r2, [r3, #34]	; 0x22
 800efbc:	440a      	add	r2, r1
 800efbe:	845a      	strh	r2, [r3, #34]	; 0x22
 800efc0:	b00b      	add	sp, #44	; 0x2c
 800efc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800efc6:	bf00      	nop
 800efc8:	20000274 	.word	0x20000274

0800efcc <GUIMONO_GetCharDistX>:
 800efcc:	4b04      	ldr	r3, [pc, #16]	; (800efe0 <GUIMONO_GetCharDistX+0x14>)
 800efce:	681b      	ldr	r3, [r3, #0]
 800efd0:	69db      	ldr	r3, [r3, #28]
 800efd2:	69db      	ldr	r3, [r3, #28]
 800efd4:	b109      	cbz	r1, 800efda <GUIMONO_GetCharDistX+0xe>
 800efd6:	7c1a      	ldrb	r2, [r3, #16]
 800efd8:	600a      	str	r2, [r1, #0]
 800efda:	7c58      	ldrb	r0, [r3, #17]
 800efdc:	4770      	bx	lr
 800efde:	bf00      	nop
 800efe0:	20000274 	.word	0x20000274

0800efe4 <GUIMONO_GetFontInfo>:
 800efe4:	2302      	movs	r3, #2
 800efe6:	800b      	strh	r3, [r1, #0]
 800efe8:	4770      	bx	lr

0800efea <GUIMONO_IsInFont>:
 800efea:	69c3      	ldr	r3, [r0, #28]
 800efec:	899a      	ldrh	r2, [r3, #12]
 800efee:	428a      	cmp	r2, r1
 800eff0:	d802      	bhi.n	800eff8 <GUIMONO_IsInFont+0xe>
 800eff2:	89da      	ldrh	r2, [r3, #14]
 800eff4:	428a      	cmp	r2, r1
 800eff6:	d20f      	bcs.n	800f018 <GUIMONO_IsInFont+0x2e>
 800eff8:	6898      	ldr	r0, [r3, #8]
 800effa:	b180      	cbz	r0, 800f01e <GUIMONO_IsInFont+0x34>
 800effc:	8803      	ldrh	r3, [r0, #0]
 800effe:	4299      	cmp	r1, r3
 800f000:	d30c      	bcc.n	800f01c <GUIMONO_IsInFont+0x32>
 800f002:	8842      	ldrh	r2, [r0, #2]
 800f004:	428a      	cmp	r2, r1
 800f006:	d309      	bcc.n	800f01c <GUIMONO_IsInFont+0x32>
 800f008:	1ac9      	subs	r1, r1, r3
 800f00a:	6842      	ldr	r2, [r0, #4]
 800f00c:	f832 0021 	ldrh.w	r0, [r2, r1, lsl #2]
 800f010:	43c0      	mvns	r0, r0
 800f012:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 800f016:	4770      	bx	lr
 800f018:	2001      	movs	r0, #1
 800f01a:	4770      	bx	lr
 800f01c:	2000      	movs	r0, #0
 800f01e:	4770      	bx	lr

0800f020 <_Log2VisBuffered>:
 800f020:	4770      	bx	lr
	...

0800f024 <_DispLine>:
 800f024:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f026:	4615      	mov	r5, r2
 800f028:	ab02      	add	r3, sp, #8
 800f02a:	4a1a      	ldr	r2, [pc, #104]	; (800f094 <_DispLine+0x70>)
 800f02c:	f843 1d08 	str.w	r1, [r3, #-8]!
 800f030:	9001      	str	r0, [sp, #4]
 800f032:	6812      	ldr	r2, [r2, #0]
 800f034:	4c18      	ldr	r4, [pc, #96]	; (800f098 <_DispLine+0x74>)
 800f036:	4669      	mov	r1, sp
 800f038:	4790      	blx	r2
 800f03a:	6823      	ldr	r3, [r4, #0]
 800f03c:	9001      	str	r0, [sp, #4]
 800f03e:	6958      	ldr	r0, [r3, #20]
 800f040:	b958      	cbnz	r0, 800f05a <_DispLine+0x36>
 800f042:	2001      	movs	r0, #1
 800f044:	f7fd fcc6 	bl	800c9d4 <GUI__ManageCache>
 800f048:	6823      	ldr	r3, [r4, #0]
 800f04a:	69db      	ldr	r3, [r3, #28]
 800f04c:	695b      	ldr	r3, [r3, #20]
 800f04e:	b1bb      	cbz	r3, 800f080 <_DispLine+0x5c>
 800f050:	689b      	ldr	r3, [r3, #8]
 800f052:	9801      	ldr	r0, [sp, #4]
 800f054:	9900      	ldr	r1, [sp, #0]
 800f056:	4798      	blx	r3
 800f058:	e017      	b.n	800f08a <_DispLine+0x66>
 800f05a:	4629      	mov	r1, r5
 800f05c:	f7fe fe0c 	bl	800dc78 <GUI_RectsIntersect>
 800f060:	2800      	cmp	r0, #0
 800f062:	d1ee      	bne.n	800f042 <_DispLine+0x1e>
 800f064:	e014      	b.n	800f090 <_DispLine+0x6c>
 800f066:	a801      	add	r0, sp, #4
 800f068:	f004 fbb2 	bl	80137d0 <GUI_UC__GetCharCodeInc>
 800f06c:	6823      	ldr	r3, [r4, #0]
 800f06e:	69db      	ldr	r3, [r3, #28]
 800f070:	681b      	ldr	r3, [r3, #0]
 800f072:	4605      	mov	r5, r0
 800f074:	4798      	blx	r3
 800f076:	4b09      	ldr	r3, [pc, #36]	; (800f09c <_DispLine+0x78>)
 800f078:	681b      	ldr	r3, [r3, #0]
 800f07a:	b10b      	cbz	r3, 800f080 <_DispLine+0x5c>
 800f07c:	4628      	mov	r0, r5
 800f07e:	4798      	blx	r3
 800f080:	9b00      	ldr	r3, [sp, #0]
 800f082:	3b01      	subs	r3, #1
 800f084:	2b00      	cmp	r3, #0
 800f086:	9300      	str	r3, [sp, #0]
 800f088:	daed      	bge.n	800f066 <_DispLine+0x42>
 800f08a:	2000      	movs	r0, #0
 800f08c:	f7fd fca2 	bl	800c9d4 <GUI__ManageCache>
 800f090:	b003      	add	sp, #12
 800f092:	bd30      	pop	{r4, r5, pc}
 800f094:	2000027c 	.word	0x2000027c
 800f098:	20000274 	.word	0x20000274
 800f09c:	2001ba20 	.word	0x2001ba20

0800f0a0 <GUI__GetLineNumChars>:
 800f0a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f0a2:	460d      	mov	r5, r1
 800f0a4:	9001      	str	r0, [sp, #4]
 800f0a6:	4604      	mov	r4, r0
 800f0a8:	b198      	cbz	r0, 800f0d2 <GUI__GetLineNumChars+0x32>
 800f0aa:	4b0b      	ldr	r3, [pc, #44]	; (800f0d8 <GUI__GetLineNumChars+0x38>)
 800f0ac:	681b      	ldr	r3, [r3, #0]
 800f0ae:	69db      	ldr	r3, [r3, #28]
 800f0b0:	695b      	ldr	r3, [r3, #20]
 800f0b2:	b10b      	cbz	r3, 800f0b8 <GUI__GetLineNumChars+0x18>
 800f0b4:	685b      	ldr	r3, [r3, #4]
 800f0b6:	b90b      	cbnz	r3, 800f0bc <GUI__GetLineNumChars+0x1c>
 800f0b8:	2400      	movs	r4, #0
 800f0ba:	e008      	b.n	800f0ce <GUI__GetLineNumChars+0x2e>
 800f0bc:	4798      	blx	r3
 800f0be:	e009      	b.n	800f0d4 <GUI__GetLineNumChars+0x34>
 800f0c0:	a801      	add	r0, sp, #4
 800f0c2:	f004 fb85 	bl	80137d0 <GUI_UC__GetCharCodeInc>
 800f0c6:	b120      	cbz	r0, 800f0d2 <GUI__GetLineNumChars+0x32>
 800f0c8:	280a      	cmp	r0, #10
 800f0ca:	d002      	beq.n	800f0d2 <GUI__GetLineNumChars+0x32>
 800f0cc:	3401      	adds	r4, #1
 800f0ce:	42ac      	cmp	r4, r5
 800f0d0:	dbf6      	blt.n	800f0c0 <GUI__GetLineNumChars+0x20>
 800f0d2:	4620      	mov	r0, r4
 800f0d4:	b003      	add	sp, #12
 800f0d6:	bd30      	pop	{r4, r5, pc}
 800f0d8:	20000274 	.word	0x20000274

0800f0dc <GUI__GetOverlap>:
 800f0dc:	b513      	push	{r0, r1, r4, lr}
 800f0de:	a902      	add	r1, sp, #8
 800f0e0:	2400      	movs	r4, #0
 800f0e2:	f841 4d04 	str.w	r4, [r1, #-4]!
 800f0e6:	f000 f8b7 	bl	800f258 <GUI_GetCharDistXEx>
 800f0ea:	9b01      	ldr	r3, [sp, #4]
 800f0ec:	4283      	cmp	r3, r0
 800f0ee:	bfcc      	ite	gt
 800f0f0:	ebc0 0003 	rsbgt	r0, r0, r3
 800f0f4:	4620      	movle	r0, r4
 800f0f6:	b002      	add	sp, #8
 800f0f8:	bd10      	pop	{r4, pc}
	...

0800f0fc <GUI__GetLineDistX>:
 800f0fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f0fe:	4a15      	ldr	r2, [pc, #84]	; (800f154 <GUI__GetLineDistX+0x58>)
 800f100:	9001      	str	r0, [sp, #4]
 800f102:	ab02      	add	r3, sp, #8
 800f104:	6812      	ldr	r2, [r2, #0]
 800f106:	f843 1d08 	str.w	r1, [r3, #-8]!
 800f10a:	4669      	mov	r1, sp
 800f10c:	4790      	blx	r2
 800f10e:	9001      	str	r0, [sp, #4]
 800f110:	b1f0      	cbz	r0, 800f150 <GUI__GetLineDistX+0x54>
 800f112:	4b11      	ldr	r3, [pc, #68]	; (800f158 <GUI__GetLineDistX+0x5c>)
 800f114:	681b      	ldr	r3, [r3, #0]
 800f116:	69db      	ldr	r3, [r3, #28]
 800f118:	695b      	ldr	r3, [r3, #20]
 800f11a:	b10b      	cbz	r3, 800f120 <GUI__GetLineDistX+0x24>
 800f11c:	681b      	ldr	r3, [r3, #0]
 800f11e:	b913      	cbnz	r3, 800f126 <GUI__GetLineDistX+0x2a>
 800f120:	2500      	movs	r5, #0
 800f122:	462c      	mov	r4, r5
 800f124:	e002      	b.n	800f12c <GUI__GetLineDistX+0x30>
 800f126:	9900      	ldr	r1, [sp, #0]
 800f128:	4798      	blx	r3
 800f12a:	e011      	b.n	800f150 <GUI__GetLineDistX+0x54>
 800f12c:	9b00      	ldr	r3, [sp, #0]
 800f12e:	3b01      	subs	r3, #1
 800f130:	2b00      	cmp	r3, #0
 800f132:	9300      	str	r3, [sp, #0]
 800f134:	db07      	blt.n	800f146 <GUI__GetLineDistX+0x4a>
 800f136:	a801      	add	r0, sp, #4
 800f138:	f004 fb4a 	bl	80137d0 <GUI_UC__GetCharCodeInc>
 800f13c:	4605      	mov	r5, r0
 800f13e:	f000 f881 	bl	800f244 <GUI_GetCharDistX>
 800f142:	4404      	add	r4, r0
 800f144:	e7f2      	b.n	800f12c <GUI__GetLineDistX+0x30>
 800f146:	4628      	mov	r0, r5
 800f148:	f7ff ffc8 	bl	800f0dc <GUI__GetOverlap>
 800f14c:	4420      	add	r0, r4
 800f14e:	e7ff      	b.n	800f150 <GUI__GetLineDistX+0x54>
 800f150:	b003      	add	sp, #12
 800f152:	bd30      	pop	{r4, r5, pc}
 800f154:	2000027c 	.word	0x2000027c
 800f158:	20000274 	.word	0x20000274

0800f15c <GUI__DispLine>:
 800f15c:	4b27      	ldr	r3, [pc, #156]	; (800f1fc <GUI__DispLine+0xa0>)
 800f15e:	681b      	ldr	r3, [r3, #0]
 800f160:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f162:	4605      	mov	r5, r0
 800f164:	460c      	mov	r4, r1
 800f166:	b163      	cbz	r3, 800f182 <GUI__DispLine+0x26>
 800f168:	2000      	movs	r0, #0
 800f16a:	f7fa fa6d 	bl	8009648 <WM__InitIVRSearch>
 800f16e:	2800      	cmp	r0, #0
 800f170:	d041      	beq.n	800f1f6 <GUI__DispLine+0x9a>
 800f172:	4628      	mov	r0, r5
 800f174:	4621      	mov	r1, r4
 800f176:	466a      	mov	r2, sp
 800f178:	f7ff ff54 	bl	800f024 <_DispLine>
 800f17c:	f7fa f9a2 	bl	80094c4 <WM__GetNextIVR>
 800f180:	e7f5      	b.n	800f16e <GUI__DispLine+0x12>
 800f182:	6810      	ldr	r0, [r2, #0]
 800f184:	6851      	ldr	r1, [r2, #4]
 800f186:	4e1e      	ldr	r6, [pc, #120]	; (800f200 <GUI__DispLine+0xa4>)
 800f188:	466b      	mov	r3, sp
 800f18a:	c303      	stmia	r3!, {r0, r1}
 800f18c:	6833      	ldr	r3, [r6, #0]
 800f18e:	f8bd 1000 	ldrh.w	r1, [sp]
 800f192:	f8b3 204c 	ldrh.w	r2, [r3, #76]	; 0x4c
 800f196:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 800f19a:	4411      	add	r1, r2
 800f19c:	f8ad 1000 	strh.w	r1, [sp]
 800f1a0:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800f1a4:	4419      	add	r1, r3
 800f1a6:	f8ad 1002 	strh.w	r1, [sp, #2]
 800f1aa:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 800f1ae:	440a      	add	r2, r1
 800f1b0:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f1b4:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800f1b8:	4668      	mov	r0, sp
 800f1ba:	4413      	add	r3, r2
 800f1bc:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f1c0:	f7fa fa42 	bl	8009648 <WM__InitIVRSearch>
 800f1c4:	6833      	ldr	r3, [r6, #0]
 800f1c6:	b940      	cbnz	r0, 800f1da <GUI__DispLine+0x7e>
 800f1c8:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800f1ca:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800f1cc:	1a8a      	subs	r2, r1, r2
 800f1ce:	845a      	strh	r2, [r3, #34]	; 0x22
 800f1d0:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 800f1d2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800f1d4:	1a8a      	subs	r2, r1, r2
 800f1d6:	849a      	strh	r2, [r3, #36]	; 0x24
 800f1d8:	e00d      	b.n	800f1f6 <GUI__DispLine+0x9a>
 800f1da:	f8bd 2000 	ldrh.w	r2, [sp]
 800f1de:	845a      	strh	r2, [r3, #34]	; 0x22
 800f1e0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800f1e4:	849a      	strh	r2, [r3, #36]	; 0x24
 800f1e6:	4628      	mov	r0, r5
 800f1e8:	4621      	mov	r1, r4
 800f1ea:	466a      	mov	r2, sp
 800f1ec:	f7ff ff1a 	bl	800f024 <_DispLine>
 800f1f0:	f7fa f968 	bl	80094c4 <WM__GetNextIVR>
 800f1f4:	e7e6      	b.n	800f1c4 <GUI__DispLine+0x68>
 800f1f6:	b002      	add	sp, #8
 800f1f8:	bd70      	pop	{r4, r5, r6, pc}
 800f1fa:	bf00      	nop
 800f1fc:	2001ba08 	.word	0x2001ba08
 800f200:	20000274 	.word	0x20000274

0800f204 <GUI_GetYAdjust>:
 800f204:	4b0a      	ldr	r3, [pc, #40]	; (800f230 <GUI_GetYAdjust+0x2c>)
 800f206:	681b      	ldr	r3, [r3, #0]
 800f208:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800f20a:	f002 020c 	and.w	r2, r2, #12
 800f20e:	2a08      	cmp	r2, #8
 800f210:	d007      	beq.n	800f222 <GUI_GetYAdjust+0x1e>
 800f212:	2a0c      	cmp	r2, #12
 800f214:	d005      	beq.n	800f222 <GUI_GetYAdjust+0x1e>
 800f216:	2a04      	cmp	r2, #4
 800f218:	d107      	bne.n	800f22a <GUI_GetYAdjust+0x26>
 800f21a:	69db      	ldr	r3, [r3, #28]
 800f21c:	7e18      	ldrb	r0, [r3, #24]
 800f21e:	3801      	subs	r0, #1
 800f220:	4770      	bx	lr
 800f222:	69db      	ldr	r3, [r3, #28]
 800f224:	7e18      	ldrb	r0, [r3, #24]
 800f226:	0840      	lsrs	r0, r0, #1
 800f228:	4770      	bx	lr
 800f22a:	2000      	movs	r0, #0
 800f22c:	4770      	bx	lr
 800f22e:	bf00      	nop
 800f230:	20000274 	.word	0x20000274

0800f234 <GUI_GetFontDistY>:
 800f234:	4b02      	ldr	r3, [pc, #8]	; (800f240 <GUI_GetFontDistY+0xc>)
 800f236:	681b      	ldr	r3, [r3, #0]
 800f238:	69db      	ldr	r3, [r3, #28]
 800f23a:	7e58      	ldrb	r0, [r3, #25]
 800f23c:	4770      	bx	lr
 800f23e:	bf00      	nop
 800f240:	20000274 	.word	0x20000274

0800f244 <GUI_GetCharDistX>:
 800f244:	b508      	push	{r3, lr}
 800f246:	4b03      	ldr	r3, [pc, #12]	; (800f254 <GUI_GetCharDistX+0x10>)
 800f248:	681b      	ldr	r3, [r3, #0]
 800f24a:	69db      	ldr	r3, [r3, #28]
 800f24c:	2100      	movs	r1, #0
 800f24e:	685b      	ldr	r3, [r3, #4]
 800f250:	4798      	blx	r3
 800f252:	bd08      	pop	{r3, pc}
 800f254:	20000274 	.word	0x20000274

0800f258 <GUI_GetCharDistXEx>:
 800f258:	b508      	push	{r3, lr}
 800f25a:	4b03      	ldr	r3, [pc, #12]	; (800f268 <GUI_GetCharDistXEx+0x10>)
 800f25c:	681b      	ldr	r3, [r3, #0]
 800f25e:	69db      	ldr	r3, [r3, #28]
 800f260:	685b      	ldr	r3, [r3, #4]
 800f262:	4798      	blx	r3
 800f264:	bd08      	pop	{r3, pc}
 800f266:	bf00      	nop
 800f268:	20000274 	.word	0x20000274

0800f26c <_PushFreeBlock>:
 800f26c:	4b07      	ldr	r3, [pc, #28]	; (800f28c <_PushFreeBlock+0x20>)
 800f26e:	685a      	ldr	r2, [r3, #4]
 800f270:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800f272:	3201      	adds	r2, #1
 800f274:	b510      	push	{r4, lr}
 800f276:	605a      	str	r2, [r3, #4]
 800f278:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800f27a:	eb02 04c0 	add.w	r4, r2, r0, lsl #3
 800f27e:	6061      	str	r1, [r4, #4]
 800f280:	2100      	movs	r1, #0
 800f282:	f802 1030 	strb.w	r1, [r2, r0, lsl #3]
 800f286:	6258      	str	r0, [r3, #36]	; 0x24
 800f288:	bd10      	pop	{r4, pc}
 800f28a:	bf00      	nop
 800f28c:	2001ba44 	.word	0x2001ba44

0800f290 <_OnExit>:
 800f290:	b538      	push	{r3, r4, r5, lr}
 800f292:	4d0b      	ldr	r5, [pc, #44]	; (800f2c0 <_OnExit+0x30>)
 800f294:	2400      	movs	r4, #0
 800f296:	f105 0040 	add.w	r0, r5, #64	; 0x40
 800f29a:	4621      	mov	r1, r4
 800f29c:	2280      	movs	r2, #128	; 0x80
 800f29e:	f885 4028 	strb.w	r4, [r5, #40]	; 0x28
 800f2a2:	f7fd faaf 	bl	800c804 <GUI__memset>
 800f2a6:	4628      	mov	r0, r5
 800f2a8:	4621      	mov	r1, r4
 800f2aa:	22c0      	movs	r2, #192	; 0xc0
 800f2ac:	f7fd faaa 	bl	800c804 <GUI__memset>
 800f2b0:	4621      	mov	r1, r4
 800f2b2:	4804      	ldr	r0, [pc, #16]	; (800f2c4 <_OnExit+0x34>)
 800f2b4:	220c      	movs	r2, #12
 800f2b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f2ba:	f7fd baa3 	b.w	800c804 <GUI__memset>
 800f2be:	bf00      	nop
 800f2c0:	2001ba44 	.word	0x2001ba44
 800f2c4:	20019efc 	.word	0x20019efc

0800f2c8 <_RemoveFreeBlock>:
 800f2c8:	b510      	push	{r4, lr}
 800f2ca:	6842      	ldr	r2, [r0, #4]
 800f2cc:	230f      	movs	r3, #15
 800f2ce:	490d      	ldr	r1, [pc, #52]	; (800f304 <_RemoveFreeBlock+0x3c>)
 800f2d0:	eb01 04c3 	add.w	r4, r1, r3, lsl #3
 800f2d4:	6c24      	ldr	r4, [r4, #64]	; 0x40
 800f2d6:	42a2      	cmp	r2, r4
 800f2d8:	d203      	bcs.n	800f2e2 <_RemoveFreeBlock+0x1a>
 800f2da:	f113 33ff 	adds.w	r3, r3, #4294967295
 800f2de:	d2f6      	bcs.n	800f2ce <_RemoveFreeBlock+0x6>
 800f2e0:	bd10      	pop	{r4, pc}
 800f2e2:	2b0f      	cmp	r3, #15
 800f2e4:	d80c      	bhi.n	800f300 <_RemoveFreeBlock+0x38>
 800f2e6:	680c      	ldr	r4, [r1, #0]
 800f2e8:	1aa2      	subs	r2, r4, r2
 800f2ea:	600a      	str	r2, [r1, #0]
 800f2ec:	6882      	ldr	r2, [r0, #8]
 800f2ee:	68c0      	ldr	r0, [r0, #12]
 800f2f0:	b102      	cbz	r2, 800f2f4 <_RemoveFreeBlock+0x2c>
 800f2f2:	6050      	str	r0, [r2, #4]
 800f2f4:	b108      	cbz	r0, 800f2fa <_RemoveFreeBlock+0x32>
 800f2f6:	6002      	str	r2, [r0, #0]
 800f2f8:	bd10      	pop	{r4, pc}
 800f2fa:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800f2fe:	645a      	str	r2, [r3, #68]	; 0x44
 800f300:	bd10      	pop	{r4, pc}
 800f302:	bf00      	nop
 800f304:	2001ba44 	.word	0x2001ba44

0800f308 <_AddFreeMemory>:
 800f308:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f30a:	4e26      	ldr	r6, [pc, #152]	; (800f3a4 <_AddFreeMemory+0x9c>)
 800f30c:	68f3      	ldr	r3, [r6, #12]
 800f30e:	1e5a      	subs	r2, r3, #1
 800f310:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 800f312:	4605      	mov	r5, r0
 800f314:	4413      	add	r3, r2
 800f316:	1808      	adds	r0, r1, r0
 800f318:	4298      	cmp	r0, r3
 800f31a:	460c      	mov	r4, r1
 800f31c:	d805      	bhi.n	800f32a <_AddFreeMemory+0x22>
 800f31e:	594b      	ldr	r3, [r1, r5]
 800f320:	b91b      	cbnz	r3, 800f32a <_AddFreeMemory+0x22>
 800f322:	6843      	ldr	r3, [r0, #4]
 800f324:	441d      	add	r5, r3
 800f326:	f7ff ffcf 	bl	800f2c8 <_RemoveFreeBlock>
 800f32a:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 800f32c:	429c      	cmp	r4, r3
 800f32e:	d90a      	bls.n	800f346 <_AddFreeMemory+0x3e>
 800f330:	f854 7c04 	ldr.w	r7, [r4, #-4]
 800f334:	1be7      	subs	r7, r4, r7
 800f336:	683b      	ldr	r3, [r7, #0]
 800f338:	b92b      	cbnz	r3, 800f346 <_AddFreeMemory+0x3e>
 800f33a:	687b      	ldr	r3, [r7, #4]
 800f33c:	4638      	mov	r0, r7
 800f33e:	441d      	add	r5, r3
 800f340:	f7ff ffc2 	bl	800f2c8 <_RemoveFreeBlock>
 800f344:	463c      	mov	r4, r7
 800f346:	230f      	movs	r3, #15
 800f348:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800f34c:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800f34e:	4295      	cmp	r5, r2
 800f350:	d203      	bcs.n	800f35a <_AddFreeMemory+0x52>
 800f352:	f113 33ff 	adds.w	r3, r3, #4294967295
 800f356:	d2f7      	bcs.n	800f348 <_AddFreeMemory+0x40>
 800f358:	e022      	b.n	800f3a0 <_AddFreeMemory+0x98>
 800f35a:	2b0f      	cmp	r3, #15
 800f35c:	d820      	bhi.n	800f3a0 <_AddFreeMemory+0x98>
 800f35e:	3308      	adds	r3, #8
 800f360:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800f364:	1961      	adds	r1, r4, r5
 800f366:	6852      	ldr	r2, [r2, #4]
 800f368:	60a2      	str	r2, [r4, #8]
 800f36a:	2000      	movs	r0, #0
 800f36c:	e884 0021 	stmia.w	r4, {r0, r5}
 800f370:	6124      	str	r4, [r4, #16]
 800f372:	f841 5c04 	str.w	r5, [r1, #-4]
 800f376:	f104 0108 	add.w	r1, r4, #8
 800f37a:	b102      	cbz	r2, 800f37e <_AddFreeMemory+0x76>
 800f37c:	6051      	str	r1, [r2, #4]
 800f37e:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 800f382:	60e0      	str	r0, [r4, #12]
 800f384:	6059      	str	r1, [r3, #4]
 800f386:	6833      	ldr	r3, [r6, #0]
 800f388:	f896 1029 	ldrb.w	r1, [r6, #41]	; 0x29
 800f38c:	4a05      	ldr	r2, [pc, #20]	; (800f3a4 <_AddFreeMemory+0x9c>)
 800f38e:	442b      	add	r3, r5
 800f390:	6033      	str	r3, [r6, #0]
 800f392:	b929      	cbnz	r1, 800f3a0 <_AddFreeMemory+0x98>
 800f394:	68d1      	ldr	r1, [r2, #12]
 800f396:	1acb      	subs	r3, r1, r3
 800f398:	6891      	ldr	r1, [r2, #8]
 800f39a:	4299      	cmp	r1, r3
 800f39c:	bf38      	it	cc
 800f39e:	6093      	strcc	r3, [r2, #8]
 800f3a0:	4628      	mov	r0, r5
 800f3a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f3a4:	2001ba44 	.word	0x2001ba44

0800f3a8 <_RemoveHoles>:
 800f3a8:	4b25      	ldr	r3, [pc, #148]	; (800f440 <_RemoveHoles+0x98>)
 800f3aa:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f3ae:	68da      	ldr	r2, [r3, #12]
 800f3b0:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800f3b2:	3a01      	subs	r2, #1
 800f3b4:	4682      	mov	sl, r0
 800f3b6:	eb02 0904 	add.w	r9, r2, r4
 800f3ba:	469b      	mov	fp, r3
 800f3bc:	e894 0028 	ldmia.w	r4, {r3, r5}
 800f3c0:	2b00      	cmp	r3, #0
 800f3c2:	d133      	bne.n	800f42c <_RemoveHoles+0x84>
 800f3c4:	eb04 0805 	add.w	r8, r4, r5
 800f3c8:	45c8      	cmp	r8, r9
 800f3ca:	d22f      	bcs.n	800f42c <_RemoveHoles+0x84>
 800f3cc:	f854 c005 	ldr.w	ip, [r4, r5]
 800f3d0:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800f3d4:	f1bc 0f00 	cmp.w	ip, #0
 800f3d8:	d028      	beq.n	800f42c <_RemoveHoles+0x84>
 800f3da:	f8db 3034 	ldr.w	r3, [fp, #52]	; 0x34
 800f3de:	4f18      	ldr	r7, [pc, #96]	; (800f440 <_RemoveHoles+0x98>)
 800f3e0:	f813 303c 	ldrb.w	r3, [r3, ip, lsl #3]
 800f3e4:	2b01      	cmp	r3, #1
 800f3e6:	d121      	bne.n	800f42c <_RemoveHoles+0x84>
 800f3e8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800f3ea:	4620      	mov	r0, r4
 800f3ec:	e88d 1008 	stmia.w	sp, {r3, ip}
 800f3f0:	f7ff ff6a 	bl	800f2c8 <_RemoveFreeBlock>
 800f3f4:	f8d8 1000 	ldr.w	r1, [r8]
 800f3f8:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800f3fa:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 800f3fe:	4620      	mov	r0, r4
 800f400:	6054      	str	r4, [r2, #4]
 800f402:	4641      	mov	r1, r8
 800f404:	4632      	mov	r2, r6
 800f406:	f005 ff45 	bl	8015294 <memmove>
 800f40a:	e89d 1008 	ldmia.w	sp, {r3, ip}
 800f40e:	459c      	cmp	ip, r3
 800f410:	d102      	bne.n	800f418 <_RemoveHoles+0x70>
 800f412:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800f414:	1b5b      	subs	r3, r3, r5
 800f416:	637b      	str	r3, [r7, #52]	; 0x34
 800f418:	4628      	mov	r0, r5
 800f41a:	19a1      	adds	r1, r4, r6
 800f41c:	f7ff ff74 	bl	800f308 <_AddFreeMemory>
 800f420:	f1ba 0f00 	cmp.w	sl, #0
 800f424:	d001      	beq.n	800f42a <_RemoveHoles+0x82>
 800f426:	4582      	cmp	sl, r0
 800f428:	d905      	bls.n	800f436 <_RemoveHoles+0x8e>
 800f42a:	4635      	mov	r5, r6
 800f42c:	442c      	add	r4, r5
 800f42e:	454c      	cmp	r4, r9
 800f430:	d3c4      	bcc.n	800f3bc <_RemoveHoles+0x14>
 800f432:	2001      	movs	r0, #1
 800f434:	e000      	b.n	800f438 <_RemoveHoles+0x90>
 800f436:	2000      	movs	r0, #0
 800f438:	b003      	add	sp, #12
 800f43a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f43e:	bf00      	nop
 800f440:	2001ba44 	.word	0x2001ba44

0800f444 <GUI_ALLOC_FreeFixedBlock>:
 800f444:	b128      	cbz	r0, 800f452 <GUI_ALLOC_FreeFixedBlock+0xe>
 800f446:	4a03      	ldr	r2, [pc, #12]	; (800f454 <GUI_ALLOC_FreeFixedBlock+0x10>)
 800f448:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 800f44a:	6003      	str	r3, [r0, #0]
 800f44c:	b103      	cbz	r3, 800f450 <GUI_ALLOC_FreeFixedBlock+0xc>
 800f44e:	6058      	str	r0, [r3, #4]
 800f450:	63d0      	str	r0, [r2, #60]	; 0x3c
 800f452:	4770      	bx	lr
 800f454:	2001ba44 	.word	0x2001ba44

0800f458 <GUI_ALLOC_h2p>:
 800f458:	b128      	cbz	r0, 800f466 <GUI_ALLOC_h2p+0xe>
 800f45a:	4b03      	ldr	r3, [pc, #12]	; (800f468 <GUI_ALLOC_h2p+0x10>)
 800f45c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800f45e:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800f462:	6840      	ldr	r0, [r0, #4]
 800f464:	3008      	adds	r0, #8
 800f466:	4770      	bx	lr
 800f468:	2001ba44 	.word	0x2001ba44

0800f46c <GUI_ALLOC_LockH>:
 800f46c:	4b05      	ldr	r3, [pc, #20]	; (800f484 <GUI_ALLOC_LockH+0x18>)
 800f46e:	69d9      	ldr	r1, [r3, #28]
 800f470:	3101      	adds	r1, #1
 800f472:	61d9      	str	r1, [r3, #28]
 800f474:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800f476:	f813 1030 	ldrb.w	r1, [r3, r0, lsl #3]
 800f47a:	3101      	adds	r1, #1
 800f47c:	f803 1030 	strb.w	r1, [r3, r0, lsl #3]
 800f480:	f7ff bfea 	b.w	800f458 <GUI_ALLOC_h2p>
 800f484:	2001ba44 	.word	0x2001ba44

0800f488 <GUI_ALLOC_UnlockH>:
 800f488:	b530      	push	{r4, r5, lr}
 800f48a:	6802      	ldr	r2, [r0, #0]
 800f48c:	4b09      	ldr	r3, [pc, #36]	; (800f4b4 <GUI_ALLOC_UnlockH+0x2c>)
 800f48e:	f852 1c08 	ldr.w	r1, [r2, #-8]
 800f492:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800f494:	f812 4031 	ldrb.w	r4, [r2, r1, lsl #3]
 800f498:	2c01      	cmp	r4, #1
 800f49a:	d903      	bls.n	800f4a4 <GUI_ALLOC_UnlockH+0x1c>
 800f49c:	69dd      	ldr	r5, [r3, #28]
 800f49e:	b10d      	cbz	r5, 800f4a4 <GUI_ALLOC_UnlockH+0x1c>
 800f4a0:	3d01      	subs	r5, #1
 800f4a2:	61dd      	str	r5, [r3, #28]
 800f4a4:	3c01      	subs	r4, #1
 800f4a6:	f802 4031 	strb.w	r4, [r2, r1, lsl #3]
 800f4aa:	2300      	movs	r3, #0
 800f4ac:	6003      	str	r3, [r0, #0]
 800f4ae:	4618      	mov	r0, r3
 800f4b0:	bd30      	pop	{r4, r5, pc}
 800f4b2:	bf00      	nop
 800f4b4:	2001ba44 	.word	0x2001ba44

0800f4b8 <GUI_ALLOC_AssignMemory>:
 800f4b8:	4b02      	ldr	r3, [pc, #8]	; (800f4c4 <GUI_ALLOC_AssignMemory+0xc>)
 800f4ba:	f021 0103 	bic.w	r1, r1, #3
 800f4be:	6018      	str	r0, [r3, #0]
 800f4c0:	6059      	str	r1, [r3, #4]
 800f4c2:	4770      	bx	lr
 800f4c4:	20019efc 	.word	0x20019efc

0800f4c8 <GUI_ALLOC_GetSize>:
 800f4c8:	b130      	cbz	r0, 800f4d8 <GUI_ALLOC_GetSize+0x10>
 800f4ca:	4b04      	ldr	r3, [pc, #16]	; (800f4dc <GUI_ALLOC_GetSize+0x14>)
 800f4cc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800f4ce:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800f4d2:	6843      	ldr	r3, [r0, #4]
 800f4d4:	6858      	ldr	r0, [r3, #4]
 800f4d6:	380c      	subs	r0, #12
 800f4d8:	4770      	bx	lr
 800f4da:	bf00      	nop
 800f4dc:	2001ba44 	.word	0x2001ba44

0800f4e0 <GUI_ALLOC_Free>:
 800f4e0:	b510      	push	{r4, lr}
 800f4e2:	4604      	mov	r4, r0
 800f4e4:	b180      	cbz	r0, 800f508 <GUI_ALLOC_Free+0x28>
 800f4e6:	4b09      	ldr	r3, [pc, #36]	; (800f50c <GUI_ALLOC_Free+0x2c>)
 800f4e8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800f4ea:	eb03 02c0 	add.w	r2, r3, r0, lsl #3
 800f4ee:	f813 3030 	ldrb.w	r3, [r3, r0, lsl #3]
 800f4f2:	2b01      	cmp	r3, #1
 800f4f4:	d108      	bne.n	800f508 <GUI_ALLOC_Free+0x28>
 800f4f6:	6851      	ldr	r1, [r2, #4]
 800f4f8:	6848      	ldr	r0, [r1, #4]
 800f4fa:	f7ff ff05 	bl	800f308 <_AddFreeMemory>
 800f4fe:	4620      	mov	r0, r4
 800f500:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f504:	f7ff beb2 	b.w	800f26c <_PushFreeBlock>
 800f508:	bd10      	pop	{r4, pc}
 800f50a:	bf00      	nop
 800f50c:	2001ba44 	.word	0x2001ba44

0800f510 <_EnlargeBlocks>:
 800f510:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f514:	4c22      	ldr	r4, [pc, #136]	; (800f5a0 <_EnlargeBlocks+0x90>)
 800f516:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f518:	b93b      	cbnz	r3, 800f52a <_EnlargeBlocks+0x1a>
 800f51a:	4b22      	ldr	r3, [pc, #136]	; (800f5a4 <_EnlargeBlocks+0x94>)
 800f51c:	689d      	ldr	r5, [r3, #8]
 800f51e:	685b      	ldr	r3, [r3, #4]
 800f520:	3508      	adds	r5, #8
 800f522:	fbb3 f5f5 	udiv	r5, r3, r5
 800f526:	3502      	adds	r5, #2
 800f528:	e003      	b.n	800f532 <_EnlargeBlocks+0x22>
 800f52a:	6923      	ldr	r3, [r4, #16]
 800f52c:	1d1d      	adds	r5, r3, #4
 800f52e:	eb05 05d3 	add.w	r5, r5, r3, lsr #3
 800f532:	00e8      	lsls	r0, r5, #3
 800f534:	f000 f978 	bl	800f828 <_Alloc>
 800f538:	4680      	mov	r8, r0
 800f53a:	b360      	cbz	r0, 800f596 <_EnlargeBlocks+0x86>
 800f53c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800f53e:	6922      	ldr	r2, [r4, #16]
 800f540:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800f542:	eb01 03c0 	add.w	r3, r1, r0, lsl #3
 800f546:	00d2      	lsls	r2, r2, #3
 800f548:	685e      	ldr	r6, [r3, #4]
 800f54a:	3608      	adds	r6, #8
 800f54c:	4630      	mov	r0, r6
 800f54e:	f005 fe96 	bl	801527e <memcpy>
 800f552:	6922      	ldr	r2, [r4, #16]
 800f554:	6366      	str	r6, [r4, #52]	; 0x34
 800f556:	eb06 01c2 	add.w	r1, r6, r2, lsl #3
 800f55a:	f8c4 802c 	str.w	r8, [r4, #44]	; 0x2c
 800f55e:	3104      	adds	r1, #4
 800f560:	4613      	mov	r3, r2
 800f562:	1e68      	subs	r0, r5, #1
 800f564:	4283      	cmp	r3, r0
 800f566:	f101 0108 	add.w	r1, r1, #8
 800f56a:	d203      	bcs.n	800f574 <_EnlargeBlocks+0x64>
 800f56c:	3301      	adds	r3, #1
 800f56e:	f841 3c08 	str.w	r3, [r1, #-8]
 800f572:	e7f6      	b.n	800f562 <_EnlargeBlocks+0x52>
 800f574:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 800f578:	2600      	movs	r6, #0
 800f57a:	605e      	str	r6, [r3, #4]
 800f57c:	6863      	ldr	r3, [r4, #4]
 800f57e:	6262      	str	r2, [r4, #36]	; 0x24
 800f580:	1a9b      	subs	r3, r3, r2
 800f582:	442b      	add	r3, r5
 800f584:	6063      	str	r3, [r4, #4]
 800f586:	6125      	str	r5, [r4, #16]
 800f588:	4638      	mov	r0, r7
 800f58a:	b13f      	cbz	r7, 800f59c <_EnlargeBlocks+0x8c>
 800f58c:	f7ff ffa8 	bl	800f4e0 <GUI_ALLOC_Free>
 800f590:	4630      	mov	r0, r6
 800f592:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f596:	2001      	movs	r0, #1
 800f598:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f59c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f5a0:	2001ba44 	.word	0x2001ba44
 800f5a4:	20019efc 	.word	0x20019efc

0800f5a8 <_InitOnce>:
 800f5a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f5aa:	4e58      	ldr	r6, [pc, #352]	; (800f70c <_InitOnce+0x164>)
 800f5ac:	f896 1028 	ldrb.w	r1, [r6, #40]	; 0x28
 800f5b0:	2900      	cmp	r1, #0
 800f5b2:	f040 80aa 	bne.w	800f70a <_InitOnce+0x162>
 800f5b6:	4d56      	ldr	r5, [pc, #344]	; (800f710 <_InitOnce+0x168>)
 800f5b8:	686a      	ldr	r2, [r5, #4]
 800f5ba:	2301      	movs	r3, #1
 800f5bc:	f886 3028 	strb.w	r3, [r6, #40]	; 0x28
 800f5c0:	f5b2 5f20 	cmp.w	r2, #10240	; 0x2800
 800f5c4:	bf28      	it	cs
 800f5c6:	f44f 5220 	movcs.w	r2, #10240	; 0x2800
 800f5ca:	682b      	ldr	r3, [r5, #0]
 800f5cc:	0894      	lsrs	r4, r2, #2
 800f5ce:	2000      	movs	r0, #0
 800f5d0:	42a0      	cmp	r0, r4
 800f5d2:	d00c      	beq.n	800f5ee <_InitOnce+0x46>
 800f5d4:	1847      	adds	r7, r0, r1
 800f5d6:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800f5da:	fbb7 fefe 	udiv	lr, r7, lr
 800f5de:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 800f5e2:	ebce 0707 	rsb	r7, lr, r7
 800f5e6:	f843 7020 	str.w	r7, [r3, r0, lsl #2]
 800f5ea:	3001      	adds	r0, #1
 800f5ec:	e7f0      	b.n	800f5d0 <_InitOnce+0x28>
 800f5ee:	2000      	movs	r0, #0
 800f5f0:	42a0      	cmp	r0, r4
 800f5f2:	d016      	beq.n	800f622 <_InitOnce+0x7a>
 800f5f4:	1847      	adds	r7, r0, r1
 800f5f6:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800f5fa:	fbb7 fefe 	udiv	lr, r7, lr
 800f5fe:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 800f602:	ebce 0e07 	rsb	lr, lr, r7
 800f606:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 800f60a:	4577      	cmp	r7, lr
 800f60c:	d007      	beq.n	800f61e <_InitOnce+0x76>
 800f60e:	68aa      	ldr	r2, [r5, #8]
 800f610:	4b3f      	ldr	r3, [pc, #252]	; (800f710 <_InitOnce+0x168>)
 800f612:	2a00      	cmp	r2, #0
 800f614:	d155      	bne.n	800f6c2 <_InitOnce+0x11a>
 800f616:	685a      	ldr	r2, [r3, #4]
 800f618:	0892      	lsrs	r2, r2, #2
 800f61a:	609a      	str	r2, [r3, #8]
 800f61c:	e051      	b.n	800f6c2 <_InitOnce+0x11a>
 800f61e:	3001      	adds	r0, #1
 800f620:	e7e6      	b.n	800f5f0 <_InitOnce+0x48>
 800f622:	3101      	adds	r1, #1
 800f624:	2902      	cmp	r1, #2
 800f626:	d1d2      	bne.n	800f5ce <_InitOnce+0x26>
 800f628:	0854      	lsrs	r4, r2, #1
 800f62a:	2100      	movs	r1, #0
 800f62c:	2000      	movs	r0, #0
 800f62e:	42a0      	cmp	r0, r4
 800f630:	d00c      	beq.n	800f64c <_InitOnce+0xa4>
 800f632:	1847      	adds	r7, r0, r1
 800f634:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800f638:	fbb7 fefe 	udiv	lr, r7, lr
 800f63c:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 800f640:	ebce 0707 	rsb	r7, lr, r7
 800f644:	f823 7010 	strh.w	r7, [r3, r0, lsl #1]
 800f648:	3001      	adds	r0, #1
 800f64a:	e7f0      	b.n	800f62e <_InitOnce+0x86>
 800f64c:	2000      	movs	r0, #0
 800f64e:	42a0      	cmp	r0, r4
 800f650:	d00f      	beq.n	800f672 <_InitOnce+0xca>
 800f652:	1847      	adds	r7, r0, r1
 800f654:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800f658:	fbb7 fefe 	udiv	lr, r7, lr
 800f65c:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 800f660:	ebce 0707 	rsb	r7, lr, r7
 800f664:	f833 c010 	ldrh.w	ip, [r3, r0, lsl #1]
 800f668:	b2bf      	uxth	r7, r7
 800f66a:	45bc      	cmp	ip, r7
 800f66c:	d1cf      	bne.n	800f60e <_InitOnce+0x66>
 800f66e:	3001      	adds	r0, #1
 800f670:	e7ed      	b.n	800f64e <_InitOnce+0xa6>
 800f672:	3101      	adds	r1, #1
 800f674:	2902      	cmp	r1, #2
 800f676:	d1d9      	bne.n	800f62c <_InitOnce+0x84>
 800f678:	2100      	movs	r1, #0
 800f67a:	2000      	movs	r0, #0
 800f67c:	4290      	cmp	r0, r2
 800f67e:	d007      	beq.n	800f690 <_InitOnce+0xe8>
 800f680:	1844      	adds	r4, r0, r1
 800f682:	27ff      	movs	r7, #255	; 0xff
 800f684:	fbb4 f7f7 	udiv	r7, r4, r7
 800f688:	443c      	add	r4, r7
 800f68a:	541c      	strb	r4, [r3, r0]
 800f68c:	3001      	adds	r0, #1
 800f68e:	e7f5      	b.n	800f67c <_InitOnce+0xd4>
 800f690:	2000      	movs	r0, #0
 800f692:	4290      	cmp	r0, r2
 800f694:	d00b      	beq.n	800f6ae <_InitOnce+0x106>
 800f696:	1844      	adds	r4, r0, r1
 800f698:	27ff      	movs	r7, #255	; 0xff
 800f69a:	fbb4 f7f7 	udiv	r7, r4, r7
 800f69e:	443c      	add	r4, r7
 800f6a0:	5c1f      	ldrb	r7, [r3, r0]
 800f6a2:	f004 04ff 	and.w	r4, r4, #255	; 0xff
 800f6a6:	42a7      	cmp	r7, r4
 800f6a8:	d1b1      	bne.n	800f60e <_InitOnce+0x66>
 800f6aa:	3001      	adds	r0, #1
 800f6ac:	e7f1      	b.n	800f692 <_InitOnce+0xea>
 800f6ae:	3101      	adds	r1, #1
 800f6b0:	2902      	cmp	r1, #2
 800f6b2:	d1e2      	bne.n	800f67a <_InitOnce+0xd2>
 800f6b4:	2100      	movs	r1, #0
 800f6b6:	4291      	cmp	r1, r2
 800f6b8:	d0a9      	beq.n	800f60e <_InitOnce+0x66>
 800f6ba:	2000      	movs	r0, #0
 800f6bc:	5458      	strb	r0, [r3, r1]
 800f6be:	3101      	adds	r1, #1
 800f6c0:	e7f9      	b.n	800f6b6 <_InitOnce+0x10e>
 800f6c2:	4814      	ldr	r0, [pc, #80]	; (800f714 <_InitOnce+0x16c>)
 800f6c4:	4b14      	ldr	r3, [pc, #80]	; (800f718 <_InitOnce+0x170>)
 800f6c6:	6003      	str	r3, [r0, #0]
 800f6c8:	f7ff fab0 	bl	800ec2c <GUI__RegisterExit>
 800f6cc:	235a      	movs	r3, #90	; 0x5a
 800f6ce:	6233      	str	r3, [r6, #32]
 800f6d0:	2300      	movs	r3, #0
 800f6d2:	2110      	movs	r1, #16
 800f6d4:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800f6d8:	4099      	lsls	r1, r3
 800f6da:	3301      	adds	r3, #1
 800f6dc:	2b10      	cmp	r3, #16
 800f6de:	4c0b      	ldr	r4, [pc, #44]	; (800f70c <_InitOnce+0x164>)
 800f6e0:	6411      	str	r1, [r2, #64]	; 0x40
 800f6e2:	d1f6      	bne.n	800f6d2 <_InitOnce+0x12a>
 800f6e4:	6868      	ldr	r0, [r5, #4]
 800f6e6:	6829      	ldr	r1, [r5, #0]
 800f6e8:	63a1      	str	r1, [r4, #56]	; 0x38
 800f6ea:	2302      	movs	r3, #2
 800f6ec:	6123      	str	r3, [r4, #16]
 800f6ee:	f1a0 0314 	sub.w	r3, r0, #20
 800f6f2:	440b      	add	r3, r1
 800f6f4:	2501      	movs	r5, #1
 800f6f6:	6363      	str	r3, [r4, #52]	; 0x34
 800f6f8:	60e0      	str	r0, [r4, #12]
 800f6fa:	605d      	str	r5, [r3, #4]
 800f6fc:	6265      	str	r5, [r4, #36]	; 0x24
 800f6fe:	6065      	str	r5, [r4, #4]
 800f700:	f7ff fe02 	bl	800f308 <_AddFreeMemory>
 800f704:	f7ff ff04 	bl	800f510 <_EnlargeBlocks>
 800f708:	6325      	str	r5, [r4, #48]	; 0x30
 800f70a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f70c:	2001ba44 	.word	0x2001ba44
 800f710:	20019efc 	.word	0x20019efc
 800f714:	20019f08 	.word	0x20019f08
 800f718:	0800f291 	.word	0x0800f291

0800f71c <GUI_ALLOC_GetFixedBlock>:
 800f71c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f720:	4605      	mov	r5, r0
 800f722:	4e26      	ldr	r6, [pc, #152]	; (800f7bc <GUI_ALLOC_GetFixedBlock+0xa0>)
 800f724:	3503      	adds	r5, #3
 800f726:	f7ff ff3f 	bl	800f5a8 <_InitOnce>
 800f72a:	f025 0503 	bic.w	r5, r5, #3
 800f72e:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800f730:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800f732:	3504      	adds	r5, #4
 800f734:	429d      	cmp	r5, r3
 800f736:	bf38      	it	cc
 800f738:	461d      	movcc	r5, r3
 800f73a:	4614      	mov	r4, r2
 800f73c:	b12c      	cbz	r4, 800f74a <GUI_ALLOC_GetFixedBlock+0x2e>
 800f73e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800f742:	42ab      	cmp	r3, r5
 800f744:	d02c      	beq.n	800f7a0 <GUI_ALLOC_GetFixedBlock+0x84>
 800f746:	6824      	ldr	r4, [r4, #0]
 800f748:	e7f8      	b.n	800f73c <GUI_ALLOC_GetFixedBlock+0x20>
 800f74a:	68f3      	ldr	r3, [r6, #12]
 800f74c:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 800f74e:	eb02 0803 	add.w	r8, r2, r3
 800f752:	f858 7c04 	ldr.w	r7, [r8, #-4]
 800f756:	ebc7 0708 	rsb	r7, r7, r8
 800f75a:	683b      	ldr	r3, [r7, #0]
 800f75c:	b133      	cbz	r3, 800f76c <GUI_ALLOC_GetFixedBlock+0x50>
 800f75e:	4620      	mov	r0, r4
 800f760:	f7ff fe22 	bl	800f3a8 <_RemoveHoles>
 800f764:	f858 7c04 	ldr.w	r7, [r8, #-4]
 800f768:	ebc7 0708 	rsb	r7, r7, r8
 800f76c:	683b      	ldr	r3, [r7, #0]
 800f76e:	bb13      	cbnz	r3, 800f7b6 <GUI_ALLOC_GetFixedBlock+0x9a>
 800f770:	687b      	ldr	r3, [r7, #4]
 800f772:	42ab      	cmp	r3, r5
 800f774:	db1f      	blt.n	800f7b6 <GUI_ALLOC_GetFixedBlock+0x9a>
 800f776:	4638      	mov	r0, r7
 800f778:	1d1c      	adds	r4, r3, #4
 800f77a:	f7ff fda5 	bl	800f2c8 <_RemoveFreeBlock>
 800f77e:	68f3      	ldr	r3, [r6, #12]
 800f780:	6878      	ldr	r0, [r7, #4]
 800f782:	1b5b      	subs	r3, r3, r5
 800f784:	60f3      	str	r3, [r6, #12]
 800f786:	6973      	ldr	r3, [r6, #20]
 800f788:	1b64      	subs	r4, r4, r5
 800f78a:	442b      	add	r3, r5
 800f78c:	1b40      	subs	r0, r0, r5
 800f78e:	443c      	add	r4, r7
 800f790:	6173      	str	r3, [r6, #20]
 800f792:	d002      	beq.n	800f79a <GUI_ALLOC_GetFixedBlock+0x7e>
 800f794:	4639      	mov	r1, r7
 800f796:	f7ff fdb7 	bl	800f308 <_AddFreeMemory>
 800f79a:	f844 5c04 	str.w	r5, [r4, #-4]
 800f79e:	e00a      	b.n	800f7b6 <GUI_ALLOC_GetFixedBlock+0x9a>
 800f7a0:	6823      	ldr	r3, [r4, #0]
 800f7a2:	b10b      	cbz	r3, 800f7a8 <GUI_ALLOC_GetFixedBlock+0x8c>
 800f7a4:	6861      	ldr	r1, [r4, #4]
 800f7a6:	6059      	str	r1, [r3, #4]
 800f7a8:	6861      	ldr	r1, [r4, #4]
 800f7aa:	b101      	cbz	r1, 800f7ae <GUI_ALLOC_GetFixedBlock+0x92>
 800f7ac:	600b      	str	r3, [r1, #0]
 800f7ae:	42a2      	cmp	r2, r4
 800f7b0:	d101      	bne.n	800f7b6 <GUI_ALLOC_GetFixedBlock+0x9a>
 800f7b2:	6823      	ldr	r3, [r4, #0]
 800f7b4:	63f3      	str	r3, [r6, #60]	; 0x3c
 800f7b6:	4620      	mov	r0, r4
 800f7b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f7bc:	2001ba44 	.word	0x2001ba44

0800f7c0 <GUI_ALLOC_GetMaxSize>:
 800f7c0:	b508      	push	{r3, lr}
 800f7c2:	f7ff fef1 	bl	800f5a8 <_InitOnce>
 800f7c6:	2200      	movs	r2, #0
 800f7c8:	4b0b      	ldr	r3, [pc, #44]	; (800f7f8 <GUI_ALLOC_GetMaxSize+0x38>)
 800f7ca:	4413      	add	r3, r2
 800f7cc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800f7d0:	b113      	cbz	r3, 800f7d8 <GUI_ALLOC_GetMaxSize+0x18>
 800f7d2:	689b      	ldr	r3, [r3, #8]
 800f7d4:	2000      	movs	r0, #0
 800f7d6:	e00b      	b.n	800f7f0 <GUI_ALLOC_GetMaxSize+0x30>
 800f7d8:	3a08      	subs	r2, #8
 800f7da:	f112 0f80 	cmn.w	r2, #128	; 0x80
 800f7de:	d1f3      	bne.n	800f7c8 <GUI_ALLOC_GetMaxSize+0x8>
 800f7e0:	e7f8      	b.n	800f7d4 <GUI_ALLOC_GetMaxSize+0x14>
 800f7e2:	685a      	ldr	r2, [r3, #4]
 800f7e4:	689b      	ldr	r3, [r3, #8]
 800f7e6:	4290      	cmp	r0, r2
 800f7e8:	bf38      	it	cc
 800f7ea:	4610      	movcc	r0, r2
 800f7ec:	b113      	cbz	r3, 800f7f4 <GUI_ALLOC_GetMaxSize+0x34>
 800f7ee:	689b      	ldr	r3, [r3, #8]
 800f7f0:	2b00      	cmp	r3, #0
 800f7f2:	d1f6      	bne.n	800f7e2 <GUI_ALLOC_GetMaxSize+0x22>
 800f7f4:	380c      	subs	r0, #12
 800f7f6:	bd08      	pop	{r3, pc}
 800f7f8:	2001ba44 	.word	0x2001ba44

0800f7fc <GUI_ALLOC_RequestSize>:
 800f7fc:	b508      	push	{r3, lr}
 800f7fe:	f7ff ffdf 	bl	800f7c0 <GUI_ALLOC_GetMaxSize>
 800f802:	f5b0 0f80 	cmp.w	r0, #4194304	; 0x400000
 800f806:	f04f 0364 	mov.w	r3, #100	; 0x64
 800f80a:	4a06      	ldr	r2, [pc, #24]	; (800f824 <GUI_ALLOC_RequestSize+0x28>)
 800f80c:	d904      	bls.n	800f818 <GUI_ALLOC_RequestSize+0x1c>
 800f80e:	fb90 f0f3 	sdiv	r0, r0, r3
 800f812:	6a13      	ldr	r3, [r2, #32]
 800f814:	4358      	muls	r0, r3
 800f816:	bd08      	pop	{r3, pc}
 800f818:	6a12      	ldr	r2, [r2, #32]
 800f81a:	4350      	muls	r0, r2
 800f81c:	fbb0 f0f3 	udiv	r0, r0, r3
 800f820:	bd08      	pop	{r3, pc}
 800f822:	bf00      	nop
 800f824:	2001ba44 	.word	0x2001ba44

0800f828 <_Alloc>:
 800f828:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f82c:	4d38      	ldr	r5, [pc, #224]	; (800f910 <_Alloc+0xe8>)
 800f82e:	4604      	mov	r4, r0
 800f830:	f7ff feba 	bl	800f5a8 <_InitOnce>
 800f834:	6c2f      	ldr	r7, [r5, #64]	; 0x40
 800f836:	682b      	ldr	r3, [r5, #0]
 800f838:	42bc      	cmp	r4, r7
 800f83a:	bf24      	itt	cs
 800f83c:	1ce7      	addcs	r7, r4, #3
 800f83e:	f027 0703 	biccs.w	r7, r7, #3
 800f842:	370c      	adds	r7, #12
 800f844:	429f      	cmp	r7, r3
 800f846:	4c32      	ldr	r4, [pc, #200]	; (800f910 <_Alloc+0xe8>)
 800f848:	d83e      	bhi.n	800f8c8 <_Alloc+0xa0>
 800f84a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f84c:	6862      	ldr	r2, [r4, #4]
 800f84e:	429a      	cmp	r2, r3
 800f850:	d90f      	bls.n	800f872 <_Alloc+0x4a>
 800f852:	686b      	ldr	r3, [r5, #4]
 800f854:	6a6e      	ldr	r6, [r5, #36]	; 0x24
 800f856:	3b01      	subs	r3, #1
 800f858:	606b      	str	r3, [r5, #4]
 800f85a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800f85c:	ea4f 09c6 	mov.w	r9, r6, lsl #3
 800f860:	eb03 0209 	add.w	r2, r3, r9
 800f864:	6852      	ldr	r2, [r2, #4]
 800f866:	626a      	str	r2, [r5, #36]	; 0x24
 800f868:	2201      	movs	r2, #1
 800f86a:	f803 2036 	strb.w	r2, [r3, r6, lsl #3]
 800f86e:	b956      	cbnz	r6, 800f886 <_Alloc+0x5e>
 800f870:	e02a      	b.n	800f8c8 <_Alloc+0xa0>
 800f872:	3b01      	subs	r3, #1
 800f874:	6323      	str	r3, [r4, #48]	; 0x30
 800f876:	f7ff fe4b 	bl	800f510 <_EnlargeBlocks>
 800f87a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f87c:	3301      	adds	r3, #1
 800f87e:	6323      	str	r3, [r4, #48]	; 0x30
 800f880:	2800      	cmp	r0, #0
 800f882:	d0e6      	beq.n	800f852 <_Alloc+0x2a>
 800f884:	e020      	b.n	800f8c8 <_Alloc+0xa0>
 800f886:	230f      	movs	r3, #15
 800f888:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 800f88c:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800f88e:	4297      	cmp	r7, r2
 800f890:	d20c      	bcs.n	800f8ac <_Alloc+0x84>
 800f892:	f113 33ff 	adds.w	r3, r3, #4294967295
 800f896:	d2f7      	bcs.n	800f888 <_Alloc+0x60>
 800f898:	e008      	b.n	800f8ac <_Alloc+0x84>
 800f89a:	6894      	ldr	r4, [r2, #8]
 800f89c:	b12c      	cbz	r4, 800f8aa <_Alloc+0x82>
 800f89e:	6862      	ldr	r2, [r4, #4]
 800f8a0:	4297      	cmp	r7, r2
 800f8a2:	d914      	bls.n	800f8ce <_Alloc+0xa6>
 800f8a4:	68a2      	ldr	r2, [r4, #8]
 800f8a6:	2a00      	cmp	r2, #0
 800f8a8:	d1f7      	bne.n	800f89a <_Alloc+0x72>
 800f8aa:	3301      	adds	r3, #1
 800f8ac:	2b0f      	cmp	r3, #15
 800f8ae:	d803      	bhi.n	800f8b8 <_Alloc+0x90>
 800f8b0:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 800f8b4:	6c52      	ldr	r2, [r2, #68]	; 0x44
 800f8b6:	e7f6      	b.n	800f8a6 <_Alloc+0x7e>
 800f8b8:	4638      	mov	r0, r7
 800f8ba:	f7ff fd75 	bl	800f3a8 <_RemoveHoles>
 800f8be:	2800      	cmp	r0, #0
 800f8c0:	d0e1      	beq.n	800f886 <_Alloc+0x5e>
 800f8c2:	4630      	mov	r0, r6
 800f8c4:	f7ff fcd2 	bl	800f26c <_PushFreeBlock>
 800f8c8:	2000      	movs	r0, #0
 800f8ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f8ce:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800f8d2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800f8d4:	ebc7 0208 	rsb	r2, r7, r8
 800f8d8:	330c      	adds	r3, #12
 800f8da:	4620      	mov	r0, r4
 800f8dc:	429a      	cmp	r2, r3
 800f8de:	bf38      	it	cc
 800f8e0:	4647      	movcc	r7, r8
 800f8e2:	f7ff fcf1 	bl	800f2c8 <_RemoveFreeBlock>
 800f8e6:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800f8e8:	444b      	add	r3, r9
 800f8ea:	19e1      	adds	r1, r4, r7
 800f8ec:	605c      	str	r4, [r3, #4]
 800f8ee:	45b8      	cmp	r8, r7
 800f8f0:	f04f 0300 	mov.w	r3, #0
 800f8f4:	e884 00c0 	stmia.w	r4, {r6, r7}
 800f8f8:	60a3      	str	r3, [r4, #8]
 800f8fa:	6124      	str	r4, [r4, #16]
 800f8fc:	f841 7c04 	str.w	r7, [r1, #-4]
 800f900:	dd03      	ble.n	800f90a <_Alloc+0xe2>
 800f902:	ebc7 0008 	rsb	r0, r7, r8
 800f906:	f7ff fcff 	bl	800f308 <_AddFreeMemory>
 800f90a:	4630      	mov	r0, r6
 800f90c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f910:	2001ba44 	.word	0x2001ba44

0800f914 <GUI_ALLOC_AllocNoInit>:
 800f914:	b108      	cbz	r0, 800f91a <GUI_ALLOC_AllocNoInit+0x6>
 800f916:	f7ff bf87 	b.w	800f828 <_Alloc>
 800f91a:	4770      	bx	lr

0800f91c <GUI_ALLOC_FreePtr>:
 800f91c:	b510      	push	{r4, lr}
 800f91e:	4604      	mov	r4, r0
 800f920:	6800      	ldr	r0, [r0, #0]
 800f922:	f7ff fddd 	bl	800f4e0 <GUI_ALLOC_Free>
 800f926:	2300      	movs	r3, #0
 800f928:	6023      	str	r3, [r4, #0]
 800f92a:	bd10      	pop	{r4, pc}

0800f92c <GUI_ALLOC_FreePtrArray>:
 800f92c:	b570      	push	{r4, r5, r6, lr}
 800f92e:	4605      	mov	r5, r0
 800f930:	460e      	mov	r6, r1
 800f932:	2400      	movs	r4, #0
 800f934:	42b4      	cmp	r4, r6
 800f936:	da05      	bge.n	800f944 <GUI_ALLOC_FreePtrArray+0x18>
 800f938:	eb05 0084 	add.w	r0, r5, r4, lsl #2
 800f93c:	f7ff ffee 	bl	800f91c <GUI_ALLOC_FreePtr>
 800f940:	3401      	adds	r4, #1
 800f942:	e7f7      	b.n	800f934 <GUI_ALLOC_FreePtrArray+0x8>
 800f944:	bd70      	pop	{r4, r5, r6, pc}
	...

0800f948 <GUI_Long2Len>:
 800f948:	b510      	push	{r4, lr}
 800f94a:	ea80 71e0 	eor.w	r1, r0, r0, asr #31
 800f94e:	eba1 71e0 	sub.w	r1, r1, r0, asr #31
 800f952:	2200      	movs	r2, #0
 800f954:	1c53      	adds	r3, r2, #1
 800f956:	2b0a      	cmp	r3, #10
 800f958:	d006      	beq.n	800f968 <GUI_Long2Len+0x20>
 800f95a:	4c06      	ldr	r4, [pc, #24]	; (800f974 <GUI_Long2Len+0x2c>)
 800f95c:	f854 4023 	ldr.w	r4, [r4, r3, lsl #2]
 800f960:	42a1      	cmp	r1, r4
 800f962:	d301      	bcc.n	800f968 <GUI_Long2Len+0x20>
 800f964:	461a      	mov	r2, r3
 800f966:	e7f5      	b.n	800f954 <GUI_Long2Len+0xc>
 800f968:	2800      	cmp	r0, #0
 800f96a:	bfb8      	it	lt
 800f96c:	1c93      	addlt	r3, r2, #2
 800f96e:	4618      	mov	r0, r3
 800f970:	bd10      	pop	{r4, pc}
 800f972:	bf00      	nop
 800f974:	080172d8 	.word	0x080172d8

0800f978 <GUI_AddSign>:
 800f978:	2800      	cmp	r0, #0
 800f97a:	dd07      	ble.n	800f98c <GUI_AddSign+0x14>
 800f97c:	680b      	ldr	r3, [r1, #0]
 800f97e:	1c5a      	adds	r2, r3, #1
 800f980:	600a      	str	r2, [r1, #0]
 800f982:	222b      	movs	r2, #43	; 0x2b
 800f984:	701a      	strb	r2, [r3, #0]
 800f986:	680b      	ldr	r3, [r1, #0]
 800f988:	2200      	movs	r2, #0
 800f98a:	701a      	strb	r2, [r3, #0]
 800f98c:	4770      	bx	lr
	...

0800f990 <GUI_AddDecShift>:
 800f990:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
 800f994:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f996:	681c      	ldr	r4, [r3, #0]
 800f998:	d109      	bne.n	800f9ae <GUI_AddDecShift+0x1e>
 800f99a:	1c60      	adds	r0, r4, #1
 800f99c:	6018      	str	r0, [r3, #0]
 800f99e:	3901      	subs	r1, #1
 800f9a0:	202d      	movs	r0, #45	; 0x2d
 800f9a2:	7020      	strb	r0, [r4, #0]
 800f9a4:	b2c9      	uxtb	r1, r1
 800f9a6:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800f9aa:	2601      	movs	r6, #1
 800f9ac:	e00c      	b.n	800f9c8 <GUI_AddDecShift+0x38>
 800f9ae:	2800      	cmp	r0, #0
 800f9b0:	da06      	bge.n	800f9c0 <GUI_AddDecShift+0x30>
 800f9b2:	1c65      	adds	r5, r4, #1
 800f9b4:	601d      	str	r5, [r3, #0]
 800f9b6:	252d      	movs	r5, #45	; 0x2d
 800f9b8:	7025      	strb	r5, [r4, #0]
 800f9ba:	4240      	negs	r0, r0
 800f9bc:	2401      	movs	r4, #1
 800f9be:	e000      	b.n	800f9c2 <GUI_AddDecShift+0x32>
 800f9c0:	2400      	movs	r4, #0
 800f9c2:	1b09      	subs	r1, r1, r4
 800f9c4:	b2c9      	uxtb	r1, r1
 800f9c6:	2600      	movs	r6, #0
 800f9c8:	b30a      	cbz	r2, 800fa0e <GUI_AddDecShift+0x7e>
 800f9ca:	3901      	subs	r1, #1
 800f9cc:	b2c9      	uxtb	r1, r1
 800f9ce:	e01e      	b.n	800fa0e <GUI_AddDecShift+0x7e>
 800f9d0:	1e4d      	subs	r5, r1, #1
 800f9d2:	4291      	cmp	r1, r2
 800f9d4:	b2ed      	uxtb	r5, r5
 800f9d6:	d105      	bne.n	800f9e4 <GUI_AddDecShift+0x54>
 800f9d8:	681c      	ldr	r4, [r3, #0]
 800f9da:	1c67      	adds	r7, r4, #1
 800f9dc:	601f      	str	r7, [r3, #0]
 800f9de:	4f11      	ldr	r7, [pc, #68]	; (800fa24 <GUI_AddDecShift+0x94>)
 800f9e0:	783f      	ldrb	r7, [r7, #0]
 800f9e2:	7027      	strb	r7, [r4, #0]
 800f9e4:	4c10      	ldr	r4, [pc, #64]	; (800fa28 <GUI_AddDecShift+0x98>)
 800f9e6:	f854 7025 	ldr.w	r7, [r4, r5, lsl #2]
 800f9ea:	fb90 f4f7 	sdiv	r4, r0, r7
 800f9ee:	b2e4      	uxtb	r4, r4
 800f9f0:	2c0a      	cmp	r4, #10
 800f9f2:	d80e      	bhi.n	800fa12 <GUI_AddDecShift+0x82>
 800f9f4:	fb07 0014 	mls	r0, r7, r4, r0
 800f9f8:	b17d      	cbz	r5, 800fa1a <GUI_AddDecShift+0x8a>
 800f9fa:	2c0a      	cmp	r4, #10
 800f9fc:	bf18      	it	ne
 800f9fe:	4629      	movne	r1, r5
 800fa00:	681d      	ldr	r5, [r3, #0]
 800fa02:	bf08      	it	eq
 800fa04:	2401      	moveq	r4, #1
 800fa06:	1c6f      	adds	r7, r5, #1
 800fa08:	3430      	adds	r4, #48	; 0x30
 800fa0a:	601f      	str	r7, [r3, #0]
 800fa0c:	702c      	strb	r4, [r5, #0]
 800fa0e:	2900      	cmp	r1, #0
 800fa10:	d1de      	bne.n	800f9d0 <GUI_AddDecShift+0x40>
 800fa12:	681b      	ldr	r3, [r3, #0]
 800fa14:	2200      	movs	r2, #0
 800fa16:	701a      	strb	r2, [r3, #0]
 800fa18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fa1a:	2e00      	cmp	r6, #0
 800fa1c:	d0ed      	beq.n	800f9fa <GUI_AddDecShift+0x6a>
 800fa1e:	3401      	adds	r4, #1
 800fa20:	b2e4      	uxtb	r4, r4
 800fa22:	e7ea      	b.n	800f9fa <GUI_AddDecShift+0x6a>
 800fa24:	2001ba06 	.word	0x2001ba06
 800fa28:	080172d8 	.word	0x080172d8

0800fa2c <GUI_ALLOC_AllocZero>:
 800fa2c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fa2e:	4605      	mov	r5, r0
 800fa30:	f7ff ff70 	bl	800f914 <GUI_ALLOC_AllocNoInit>
 800fa34:	4606      	mov	r6, r0
 800fa36:	b158      	cbz	r0, 800fa50 <GUI_ALLOC_AllocZero+0x24>
 800fa38:	f7ff fd18 	bl	800f46c <GUI_ALLOC_LockH>
 800fa3c:	ac02      	add	r4, sp, #8
 800fa3e:	2100      	movs	r1, #0
 800fa40:	f844 0d04 	str.w	r0, [r4, #-4]!
 800fa44:	462a      	mov	r2, r5
 800fa46:	f7fc fedd 	bl	800c804 <GUI__memset>
 800fa4a:	4620      	mov	r0, r4
 800fa4c:	f7ff fd1c 	bl	800f488 <GUI_ALLOC_UnlockH>
 800fa50:	4630      	mov	r0, r6
 800fa52:	b002      	add	sp, #8
 800fa54:	bd70      	pop	{r4, r5, r6, pc}
	...

0800fa58 <GUI_DrawRect>:
 800fa58:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800fa5c:	4c1e      	ldr	r4, [pc, #120]	; (800fad8 <GUI_DrawRect+0x80>)
 800fa5e:	f8d4 e000 	ldr.w	lr, [r4]
 800fa62:	f8de 404c 	ldr.w	r4, [lr, #76]	; 0x4c
 800fa66:	f8de 6050 	ldr.w	r6, [lr, #80]	; 0x50
 800fa6a:	1905      	adds	r5, r0, r4
 800fa6c:	4414      	add	r4, r2
 800fa6e:	f89e 2018 	ldrb.w	r2, [lr, #24]
 800fa72:	3a01      	subs	r2, #1
 800fa74:	b292      	uxth	r2, r2
 800fa76:	198f      	adds	r7, r1, r6
 800fa78:	441e      	add	r6, r3
 800fa7a:	1aab      	subs	r3, r5, r2
 800fa7c:	f8ad 3000 	strh.w	r3, [sp]
 800fa80:	1913      	adds	r3, r2, r4
 800fa82:	f8ad 3004 	strh.w	r3, [sp, #4]
 800fa86:	4668      	mov	r0, sp
 800fa88:	1abb      	subs	r3, r7, r2
 800fa8a:	4432      	add	r2, r6
 800fa8c:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fa90:	f8ad 2006 	strh.w	r2, [sp, #6]
 800fa94:	f7f9 fdd8 	bl	8009648 <WM__InitIVRSearch>
 800fa98:	b1d0      	cbz	r0, 800fad0 <GUI_DrawRect+0x78>
 800fa9a:	4628      	mov	r0, r5
 800fa9c:	4639      	mov	r1, r7
 800fa9e:	4622      	mov	r2, r4
 800faa0:	f7fc fb60 	bl	800c164 <LCD_DrawHLine>
 800faa4:	f107 0901 	add.w	r9, r7, #1
 800faa8:	4628      	mov	r0, r5
 800faaa:	4631      	mov	r1, r6
 800faac:	4622      	mov	r2, r4
 800faae:	f106 38ff 	add.w	r8, r6, #4294967295
 800fab2:	f7fc fb57 	bl	800c164 <LCD_DrawHLine>
 800fab6:	4628      	mov	r0, r5
 800fab8:	4649      	mov	r1, r9
 800faba:	4642      	mov	r2, r8
 800fabc:	f7fc fb78 	bl	800c1b0 <LCD_DrawVLine>
 800fac0:	4620      	mov	r0, r4
 800fac2:	4649      	mov	r1, r9
 800fac4:	4642      	mov	r2, r8
 800fac6:	f7fc fb73 	bl	800c1b0 <LCD_DrawVLine>
 800faca:	f7f9 fcfb 	bl	80094c4 <WM__GetNextIVR>
 800face:	e7e3      	b.n	800fa98 <GUI_DrawRect+0x40>
 800fad0:	b003      	add	sp, #12
 800fad2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fad6:	bf00      	nop
 800fad8:	20000274 	.word	0x20000274

0800fadc <LCD_Index2Color_M565>:
 800fadc:	f3c0 21c4 	ubfx	r1, r0, #11, #5
 800fae0:	4b06      	ldr	r3, [pc, #24]	; (800fafc <LCD_Index2Color_M565+0x20>)
 800fae2:	f000 021f 	and.w	r2, r0, #31
 800fae6:	f3c0 1045 	ubfx	r0, r0, #5, #6
 800faea:	5c9a      	ldrb	r2, [r3, r2]
 800faec:	5c5b      	ldrb	r3, [r3, r1]
 800faee:	eb03 4302 	add.w	r3, r3, r2, lsl #16
 800faf2:	4a03      	ldr	r2, [pc, #12]	; (800fb00 <LCD_Index2Color_M565+0x24>)
 800faf4:	5c10      	ldrb	r0, [r2, r0]
 800faf6:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 800fafa:	4770      	bx	lr
 800fafc:	08017c2a 	.word	0x08017c2a
 800fb00:	08017bea 	.word	0x08017bea

0800fb04 <_Color2Index_M565>:
 800fb04:	f3c0 4107 	ubfx	r1, r0, #16, #8
 800fb08:	4b06      	ldr	r3, [pc, #24]	; (800fb24 <_Color2Index_M565+0x20>)
 800fb0a:	b2c2      	uxtb	r2, r0
 800fb0c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 800fb10:	5c9a      	ldrb	r2, [r3, r2]
 800fb12:	5c5b      	ldrb	r3, [r3, r1]
 800fb14:	eb03 23c2 	add.w	r3, r3, r2, lsl #11
 800fb18:	4a03      	ldr	r2, [pc, #12]	; (800fb28 <_Color2Index_M565+0x24>)
 800fb1a:	5c10      	ldrb	r0, [r2, r0]
 800fb1c:	eb03 1040 	add.w	r0, r3, r0, lsl #5
 800fb20:	4770      	bx	lr
 800fb22:	bf00      	nop
 800fb24:	08017d4a 	.word	0x08017d4a
 800fb28:	08017c4a 	.word	0x08017c4a

0800fb2c <_GetIndexMask_M565>:
 800fb2c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800fb30:	4770      	bx	lr
	...

0800fb34 <_Color2IndexBulk>:
 800fb34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fb36:	4f0f      	ldr	r7, [pc, #60]	; (800fb74 <_Color2IndexBulk+0x40>)
 800fb38:	683f      	ldr	r7, [r7, #0]
 800fb3a:	4606      	mov	r6, r0
 800fb3c:	460d      	mov	r5, r1
 800fb3e:	4614      	mov	r4, r2
 800fb40:	469c      	mov	ip, r3
 800fb42:	b10f      	cbz	r7, 800fb48 <_Color2IndexBulk+0x14>
 800fb44:	47b8      	blx	r7
 800fb46:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fb48:	f856 2b04 	ldr.w	r2, [r6], #4
 800fb4c:	490a      	ldr	r1, [pc, #40]	; (800fb78 <_Color2IndexBulk+0x44>)
 800fb4e:	b2d3      	uxtb	r3, r2
 800fb50:	3c01      	subs	r4, #1
 800fb52:	5cc8      	ldrb	r0, [r1, r3]
 800fb54:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800fb58:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800fb5c:	5ccb      	ldrb	r3, [r1, r3]
 800fb5e:	4907      	ldr	r1, [pc, #28]	; (800fb7c <_Color2IndexBulk+0x48>)
 800fb60:	5c8a      	ldrb	r2, [r1, r2]
 800fb62:	eb03 23c0 	add.w	r3, r3, r0, lsl #11
 800fb66:	eb03 1342 	add.w	r3, r3, r2, lsl #5
 800fb6a:	802b      	strh	r3, [r5, #0]
 800fb6c:	4465      	add	r5, ip
 800fb6e:	d1eb      	bne.n	800fb48 <_Color2IndexBulk+0x14>
 800fb70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fb72:	bf00      	nop
 800fb74:	20019f14 	.word	0x20019f14
 800fb78:	08017d4a 	.word	0x08017d4a
 800fb7c:	08017c4a 	.word	0x08017c4a

0800fb80 <_Index2ColorBulk>:
 800fb80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fb82:	4e13      	ldr	r6, [pc, #76]	; (800fbd0 <_Index2ColorBulk+0x50>)
 800fb84:	6836      	ldr	r6, [r6, #0]
 800fb86:	4684      	mov	ip, r0
 800fb88:	4614      	mov	r4, r2
 800fb8a:	461d      	mov	r5, r3
 800fb8c:	b10e      	cbz	r6, 800fb92 <_Index2ColorBulk+0x12>
 800fb8e:	47b0      	blx	r6
 800fb90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fb92:	1e50      	subs	r0, r2, #1
 800fb94:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 800fb98:	3a01      	subs	r2, #1
 800fb9a:	fb03 c000 	mla	r0, r3, r0, ip
 800fb9e:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800fba2:	8802      	ldrh	r2, [r0, #0]
 800fba4:	4b0b      	ldr	r3, [pc, #44]	; (800fbd4 <_Index2ColorBulk+0x54>)
 800fba6:	f002 061f 	and.w	r6, r2, #31
 800fbaa:	0ad7      	lsrs	r7, r2, #11
 800fbac:	5d9e      	ldrb	r6, [r3, r6]
 800fbae:	5ddb      	ldrb	r3, [r3, r7]
 800fbb0:	f3c2 1245 	ubfx	r2, r2, #5, #6
 800fbb4:	eb03 4306 	add.w	r3, r3, r6, lsl #16
 800fbb8:	4e07      	ldr	r6, [pc, #28]	; (800fbd8 <_Index2ColorBulk+0x58>)
 800fbba:	5cb2      	ldrb	r2, [r6, r2]
 800fbbc:	3c01      	subs	r4, #1
 800fbbe:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800fbc2:	f841 3904 	str.w	r3, [r1], #-4
 800fbc6:	ebc5 0000 	rsb	r0, r5, r0
 800fbca:	d1ea      	bne.n	800fba2 <_Index2ColorBulk+0x22>
 800fbcc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fbce:	bf00      	nop
 800fbd0:	20019f10 	.word	0x20019f10
 800fbd4:	08017c2a 	.word	0x08017c2a
 800fbd8:	08017bea 	.word	0x08017bea

0800fbdc <LCD_Index2Color_888>:
 800fbdc:	4770      	bx	lr

0800fbde <LCD_Index2Color_8888>:
 800fbde:	4770      	bx	lr

0800fbe0 <_Color2Index_8888>:
 800fbe0:	4770      	bx	lr

0800fbe2 <_GetIndexMask_8888>:
 800fbe2:	f04f 30ff 	mov.w	r0, #4294967295
 800fbe6:	4770      	bx	lr

0800fbe8 <_Color2IndexBulk>:
 800fbe8:	b510      	push	{r4, lr}
 800fbea:	f850 4b04 	ldr.w	r4, [r0], #4
 800fbee:	600c      	str	r4, [r1, #0]
 800fbf0:	3a01      	subs	r2, #1
 800fbf2:	4419      	add	r1, r3
 800fbf4:	d1f9      	bne.n	800fbea <_Color2IndexBulk+0x2>
 800fbf6:	bd10      	pop	{r4, pc}

0800fbf8 <_Index2ColorBulk>:
 800fbf8:	b510      	push	{r4, lr}
 800fbfa:	6804      	ldr	r4, [r0, #0]
 800fbfc:	f841 4b04 	str.w	r4, [r1], #4
 800fc00:	3a01      	subs	r2, #1
 800fc02:	4418      	add	r0, r3
 800fc04:	d1f9      	bne.n	800fbfa <_Index2ColorBulk+0x2>
 800fc06:	bd10      	pop	{r4, pc}

0800fc08 <_DrawDownRect>:
 800fc08:	b510      	push	{r4, lr}
 800fc0a:	b09c      	sub	sp, #112	; 0x70
 800fc0c:	4604      	mov	r4, r0
 800fc0e:	4668      	mov	r0, sp
 800fc10:	f7fe f81e 	bl	800dc50 <GUI_SaveContext_W>
 800fc14:	4b09      	ldr	r3, [pc, #36]	; (800fc3c <_DrawDownRect+0x34>)
 800fc16:	6818      	ldr	r0, [r3, #0]
 800fc18:	f7fc fdbe 	bl	800c798 <LCD_SetColor>
 800fc1c:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fc20:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fc24:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800fc28:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800fc2c:	f7ff ff14 	bl	800fa58 <GUI_DrawRect>
 800fc30:	4668      	mov	r0, sp
 800fc32:	f7fe f817 	bl	800dc64 <GUI_RestoreContext>
 800fc36:	b01c      	add	sp, #112	; 0x70
 800fc38:	bd10      	pop	{r4, pc}
 800fc3a:	bf00      	nop
 800fc3c:	20019f18 	.word	0x20019f18

0800fc40 <_DrawUpRect>:
 800fc40:	b510      	push	{r4, lr}
 800fc42:	b09c      	sub	sp, #112	; 0x70
 800fc44:	4604      	mov	r4, r0
 800fc46:	4668      	mov	r0, sp
 800fc48:	f7fe f802 	bl	800dc50 <GUI_SaveContext_W>
 800fc4c:	4b09      	ldr	r3, [pc, #36]	; (800fc74 <_DrawUpRect+0x34>)
 800fc4e:	6818      	ldr	r0, [r3, #0]
 800fc50:	f7fc fda2 	bl	800c798 <LCD_SetColor>
 800fc54:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fc58:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fc5c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800fc60:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800fc64:	f7ff fef8 	bl	800fa58 <GUI_DrawRect>
 800fc68:	4668      	mov	r0, sp
 800fc6a:	f7fd fffb 	bl	800dc64 <GUI_RestoreContext>
 800fc6e:	b01c      	add	sp, #112	; 0x70
 800fc70:	bd10      	pop	{r4, pc}
 800fc72:	bf00      	nop
 800fc74:	20019f18 	.word	0x20019f18

0800fc78 <_DrawDown>:
 800fc78:	b507      	push	{r0, r1, r2, lr}
 800fc7a:	4668      	mov	r0, sp
 800fc7c:	f7f8 fdb0 	bl	80087e0 <WM_GetClientRect>
 800fc80:	4668      	mov	r0, sp
 800fc82:	f7ff ffc1 	bl	800fc08 <_DrawDownRect>
 800fc86:	b003      	add	sp, #12
 800fc88:	f85d fb04 	ldr.w	pc, [sp], #4

0800fc8c <_DrawUp>:
 800fc8c:	b507      	push	{r0, r1, r2, lr}
 800fc8e:	4668      	mov	r0, sp
 800fc90:	f7f8 fda6 	bl	80087e0 <WM_GetClientRect>
 800fc94:	4668      	mov	r0, sp
 800fc96:	f7ff ffd3 	bl	800fc40 <_DrawUpRect>
 800fc9a:	b003      	add	sp, #12
 800fc9c:	f85d fb04 	ldr.w	pc, [sp], #4

0800fca0 <SLIDER_DrawSkinFlex>:
 800fca0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800fca4:	6a03      	ldr	r3, [r0, #32]
 800fca6:	4604      	mov	r4, r0
 800fca8:	2b00      	cmp	r3, #0
 800fcaa:	f000 81d7 	beq.w	801005c <SLIDER_DrawSkinFlex+0x3bc>
 800fcae:	68da      	ldr	r2, [r3, #12]
 800fcb0:	4984      	ldr	r1, [pc, #528]	; (800fec4 <SLIDER_DrawSkinFlex+0x224>)
 800fcb2:	4d85      	ldr	r5, [pc, #532]	; (800fec8 <SLIDER_DrawSkinFlex+0x228>)
 800fcb4:	2a00      	cmp	r2, #0
 800fcb6:	bf18      	it	ne
 800fcb8:	460d      	movne	r5, r1
 800fcba:	6842      	ldr	r2, [r0, #4]
 800fcbc:	3a0a      	subs	r2, #10
 800fcbe:	2a0a      	cmp	r2, #10
 800fcc0:	f200 81cc 	bhi.w	801005c <SLIDER_DrawSkinFlex+0x3bc>
 800fcc4:	e8df f012 	tbh	[pc, r2, lsl #1]
 800fcc8:	01ca01b2 	.word	0x01ca01b2
 800fccc:	01ca01ca 	.word	0x01ca01ca
 800fcd0:	000b01ca 	.word	0x000b01ca
 800fcd4:	01ca01ca 	.word	0x01ca01ca
 800fcd8:	008001ca 	.word	0x008001ca
 800fcdc:	017a      	.short	0x017a
 800fcde:	6919      	ldr	r1, [r3, #16]
 800fce0:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 800fce2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800fce4:	2900      	cmp	r1, #0
 800fce6:	d035      	beq.n	800fd54 <SLIDER_DrawSkinFlex+0xb4>
 800fce8:	6901      	ldr	r1, [r0, #16]
 800fcea:	6980      	ldr	r0, [r0, #24]
 800fcec:	1a46      	subs	r6, r0, r1
 800fcee:	1af6      	subs	r6, r6, r3
 800fcf0:	1ab6      	subs	r6, r6, r2
 800fcf2:	2702      	movs	r7, #2
 800fcf4:	fb96 f6f7 	sdiv	r6, r6, r7
 800fcf8:	440e      	add	r6, r1
 800fcfa:	eb06 0802 	add.w	r8, r6, r2
 800fcfe:	f108 37ff 	add.w	r7, r8, #4294967295
 800fd02:	6928      	ldr	r0, [r5, #16]
 800fd04:	f7fd ff5a 	bl	800dbbc <GUI_SetColor>
 800fd08:	4631      	mov	r1, r6
 800fd0a:	6960      	ldr	r0, [r4, #20]
 800fd0c:	463a      	mov	r2, r7
 800fd0e:	f7fe fba5 	bl	800e45c <GUI_DrawHLine>
 800fd12:	6961      	ldr	r1, [r4, #20]
 800fd14:	69e2      	ldr	r2, [r4, #28]
 800fd16:	4630      	mov	r0, r6
 800fd18:	3101      	adds	r1, #1
 800fd1a:	f7fe f927 	bl	800df6c <GUI_DrawVLine>
 800fd1e:	3601      	adds	r6, #1
 800fd20:	6968      	ldr	r0, [r5, #20]
 800fd22:	f1a8 0802 	sub.w	r8, r8, #2
 800fd26:	f7fd ff49 	bl	800dbbc <GUI_SetColor>
 800fd2a:	69e0      	ldr	r0, [r4, #28]
 800fd2c:	4631      	mov	r1, r6
 800fd2e:	4642      	mov	r2, r8
 800fd30:	f7fe fb94 	bl	800e45c <GUI_DrawHLine>
 800fd34:	6961      	ldr	r1, [r4, #20]
 800fd36:	69e2      	ldr	r2, [r4, #28]
 800fd38:	3101      	adds	r1, #1
 800fd3a:	4638      	mov	r0, r7
 800fd3c:	f7fe f916 	bl	800df6c <GUI_DrawVLine>
 800fd40:	69a8      	ldr	r0, [r5, #24]
 800fd42:	f7fd ff3b 	bl	800dbbc <GUI_SetColor>
 800fd46:	6961      	ldr	r1, [r4, #20]
 800fd48:	69e3      	ldr	r3, [r4, #28]
 800fd4a:	4630      	mov	r0, r6
 800fd4c:	3101      	adds	r1, #1
 800fd4e:	4642      	mov	r2, r8
 800fd50:	3b01      	subs	r3, #1
 800fd52:	e036      	b.n	800fdc2 <SLIDER_DrawSkinFlex+0x122>
 800fd54:	6941      	ldr	r1, [r0, #20]
 800fd56:	69c0      	ldr	r0, [r0, #28]
 800fd58:	18ce      	adds	r6, r1, r3
 800fd5a:	1a41      	subs	r1, r0, r1
 800fd5c:	1acb      	subs	r3, r1, r3
 800fd5e:	1a9b      	subs	r3, r3, r2
 800fd60:	2702      	movs	r7, #2
 800fd62:	fb93 f3f7 	sdiv	r3, r3, r7
 800fd66:	3601      	adds	r6, #1
 800fd68:	441e      	add	r6, r3
 800fd6a:	eb06 0802 	add.w	r8, r6, r2
 800fd6e:	f108 37ff 	add.w	r7, r8, #4294967295
 800fd72:	6928      	ldr	r0, [r5, #16]
 800fd74:	f7fd ff22 	bl	800dbbc <GUI_SetColor>
 800fd78:	4631      	mov	r1, r6
 800fd7a:	6920      	ldr	r0, [r4, #16]
 800fd7c:	463a      	mov	r2, r7
 800fd7e:	f7fe f8f5 	bl	800df6c <GUI_DrawVLine>
 800fd82:	6921      	ldr	r1, [r4, #16]
 800fd84:	69a2      	ldr	r2, [r4, #24]
 800fd86:	4630      	mov	r0, r6
 800fd88:	3101      	adds	r1, #1
 800fd8a:	f7fe fb67 	bl	800e45c <GUI_DrawHLine>
 800fd8e:	3601      	adds	r6, #1
 800fd90:	6968      	ldr	r0, [r5, #20]
 800fd92:	f1a8 0802 	sub.w	r8, r8, #2
 800fd96:	f7fd ff11 	bl	800dbbc <GUI_SetColor>
 800fd9a:	69a0      	ldr	r0, [r4, #24]
 800fd9c:	4631      	mov	r1, r6
 800fd9e:	4642      	mov	r2, r8
 800fda0:	f7fe f8e4 	bl	800df6c <GUI_DrawVLine>
 800fda4:	6921      	ldr	r1, [r4, #16]
 800fda6:	69a2      	ldr	r2, [r4, #24]
 800fda8:	3101      	adds	r1, #1
 800fdaa:	4638      	mov	r0, r7
 800fdac:	f7fe fb56 	bl	800e45c <GUI_DrawHLine>
 800fdb0:	69a8      	ldr	r0, [r5, #24]
 800fdb2:	f7fd ff03 	bl	800dbbc <GUI_SetColor>
 800fdb6:	6920      	ldr	r0, [r4, #16]
 800fdb8:	69a2      	ldr	r2, [r4, #24]
 800fdba:	3001      	adds	r0, #1
 800fdbc:	4631      	mov	r1, r6
 800fdbe:	3a01      	subs	r2, #1
 800fdc0:	4643      	mov	r3, r8
 800fdc2:	f7fe f88d 	bl	800dee0 <GUI_FillRect>
 800fdc6:	e149      	b.n	801005c <SLIDER_DrawSkinFlex+0x3bc>
 800fdc8:	681e      	ldr	r6, [r3, #0]
 800fdca:	6919      	ldr	r1, [r3, #16]
 800fdcc:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 800fdce:	3601      	adds	r6, #1
 800fdd0:	1076      	asrs	r6, r6, #1
 800fdd2:	2900      	cmp	r1, #0
 800fdd4:	d07a      	beq.n	800fecc <SLIDER_DrawSkinFlex+0x22c>
 800fdd6:	6983      	ldr	r3, [r0, #24]
 800fdd8:	6828      	ldr	r0, [r5, #0]
 800fdda:	ebc2 0a03 	rsb	sl, r2, r3
 800fdde:	f10a 39ff 	add.w	r9, sl, #4294967295
 800fde2:	f7fd feeb 	bl	800dbbc <GUI_SetColor>
 800fde6:	6961      	ldr	r1, [r4, #20]
 800fde8:	ebc6 0809 	rsb	r8, r6, r9
 800fdec:	f108 0701 	add.w	r7, r8, #1
 800fdf0:	198b      	adds	r3, r1, r6
 800fdf2:	4638      	mov	r0, r7
 800fdf4:	464a      	mov	r2, r9
 800fdf6:	3b01      	subs	r3, #1
 800fdf8:	f7fe fb12 	bl	800e420 <GUI_DrawLine>
 800fdfc:	69e1      	ldr	r1, [r4, #28]
 800fdfe:	1b8b      	subs	r3, r1, r6
 800fe00:	3301      	adds	r3, #1
 800fe02:	4638      	mov	r0, r7
 800fe04:	464a      	mov	r2, r9
 800fe06:	f7fe fb0b 	bl	800e420 <GUI_DrawLine>
 800fe0a:	6960      	ldr	r0, [r4, #20]
 800fe0c:	6921      	ldr	r1, [r4, #16]
 800fe0e:	4642      	mov	r2, r8
 800fe10:	f7fe fb24 	bl	800e45c <GUI_DrawHLine>
 800fe14:	69e0      	ldr	r0, [r4, #28]
 800fe16:	6921      	ldr	r1, [r4, #16]
 800fe18:	4642      	mov	r2, r8
 800fe1a:	f7fe fb1f 	bl	800e45c <GUI_DrawHLine>
 800fe1e:	6961      	ldr	r1, [r4, #20]
 800fe20:	69e2      	ldr	r2, [r4, #28]
 800fe22:	6920      	ldr	r0, [r4, #16]
 800fe24:	f7fe f8a2 	bl	800df6c <GUI_DrawVLine>
 800fe28:	6868      	ldr	r0, [r5, #4]
 800fe2a:	f7fd fec7 	bl	800dbbc <GUI_SetColor>
 800fe2e:	6961      	ldr	r1, [r4, #20]
 800fe30:	f1aa 0a02 	sub.w	sl, sl, #2
 800fe34:	198b      	adds	r3, r1, r6
 800fe36:	4638      	mov	r0, r7
 800fe38:	3101      	adds	r1, #1
 800fe3a:	4652      	mov	r2, sl
 800fe3c:	3b01      	subs	r3, #1
 800fe3e:	f7fe faef 	bl	800e420 <GUI_DrawLine>
 800fe42:	69e1      	ldr	r1, [r4, #28]
 800fe44:	1b8b      	subs	r3, r1, r6
 800fe46:	3301      	adds	r3, #1
 800fe48:	4638      	mov	r0, r7
 800fe4a:	3901      	subs	r1, #1
 800fe4c:	4652      	mov	r2, sl
 800fe4e:	f7fe fae7 	bl	800e420 <GUI_DrawLine>
 800fe52:	6960      	ldr	r0, [r4, #20]
 800fe54:	6921      	ldr	r1, [r4, #16]
 800fe56:	3001      	adds	r0, #1
 800fe58:	3101      	adds	r1, #1
 800fe5a:	4642      	mov	r2, r8
 800fe5c:	f7fe fafe 	bl	800e45c <GUI_DrawHLine>
 800fe60:	69e0      	ldr	r0, [r4, #28]
 800fe62:	6921      	ldr	r1, [r4, #16]
 800fe64:	3801      	subs	r0, #1
 800fe66:	3101      	adds	r1, #1
 800fe68:	4642      	mov	r2, r8
 800fe6a:	f7fe faf7 	bl	800e45c <GUI_DrawHLine>
 800fe6e:	6920      	ldr	r0, [r4, #16]
 800fe70:	6961      	ldr	r1, [r4, #20]
 800fe72:	69e2      	ldr	r2, [r4, #28]
 800fe74:	3001      	adds	r0, #1
 800fe76:	3101      	adds	r1, #1
 800fe78:	3a01      	subs	r2, #1
 800fe7a:	f7fe f877 	bl	800df6c <GUI_DrawVLine>
 800fe7e:	68aa      	ldr	r2, [r5, #8]
 800fe80:	6920      	ldr	r0, [r4, #16]
 800fe82:	6961      	ldr	r1, [r4, #20]
 800fe84:	69e3      	ldr	r3, [r4, #28]
 800fe86:	9200      	str	r2, [sp, #0]
 800fe88:	68ea      	ldr	r2, [r5, #12]
 800fe8a:	9201      	str	r2, [sp, #4]
 800fe8c:	3002      	adds	r0, #2
 800fe8e:	3102      	adds	r1, #2
 800fe90:	463a      	mov	r2, r7
 800fe92:	3b02      	subs	r3, #2
 800fe94:	f003 ff56 	bl	8013d44 <GUI_DrawGradientH>
 800fe98:	68e8      	ldr	r0, [r5, #12]
 800fe9a:	f7fd fe8f 	bl	800dbbc <GUI_SetColor>
 800fe9e:	2502      	movs	r5, #2
 800fea0:	1e73      	subs	r3, r6, #1
 800fea2:	429d      	cmp	r5, r3
 800fea4:	f280 80da 	bge.w	801005c <SLIDER_DrawSkinFlex+0x3bc>
 800fea8:	6963      	ldr	r3, [r4, #20]
 800feaa:	4433      	add	r3, r6
 800feac:	1b59      	subs	r1, r3, r5
 800feae:	69e3      	ldr	r3, [r4, #28]
 800feb0:	1b9b      	subs	r3, r3, r6
 800feb2:	195a      	adds	r2, r3, r5
 800feb4:	ebc5 0009 	rsb	r0, r5, r9
 800feb8:	3101      	adds	r1, #1
 800feba:	3a01      	subs	r2, #1
 800febc:	f7fe f856 	bl	800df6c <GUI_DrawVLine>
 800fec0:	3501      	adds	r5, #1
 800fec2:	e7ed      	b.n	800fea0 <SLIDER_DrawSkinFlex+0x200>
 800fec4:	20000280 	.word	0x20000280
 800fec8:	200002ac 	.word	0x200002ac
 800fecc:	6943      	ldr	r3, [r0, #20]
 800fece:	6828      	ldr	r0, [r5, #0]
 800fed0:	eb03 0a02 	add.w	sl, r3, r2
 800fed4:	f10a 0901 	add.w	r9, sl, #1
 800fed8:	f7fd fe70 	bl	800dbbc <GUI_SetColor>
 800fedc:	6922      	ldr	r2, [r4, #16]
 800fede:	eb09 0806 	add.w	r8, r9, r6
 800fee2:	f108 37ff 	add.w	r7, r8, #4294967295
 800fee6:	1990      	adds	r0, r2, r6
 800fee8:	3801      	subs	r0, #1
 800feea:	4649      	mov	r1, r9
 800feec:	463b      	mov	r3, r7
 800feee:	f7fe fa97 	bl	800e420 <GUI_DrawLine>
 800fef2:	69a2      	ldr	r2, [r4, #24]
 800fef4:	1b90      	subs	r0, r2, r6
 800fef6:	463b      	mov	r3, r7
 800fef8:	3001      	adds	r0, #1
 800fefa:	4649      	mov	r1, r9
 800fefc:	f7fe fa90 	bl	800e420 <GUI_DrawLine>
 800ff00:	6920      	ldr	r0, [r4, #16]
 800ff02:	69e2      	ldr	r2, [r4, #28]
 800ff04:	4641      	mov	r1, r8
 800ff06:	f7fe f831 	bl	800df6c <GUI_DrawVLine>
 800ff0a:	69a0      	ldr	r0, [r4, #24]
 800ff0c:	69e2      	ldr	r2, [r4, #28]
 800ff0e:	4641      	mov	r1, r8
 800ff10:	f7fe f82c 	bl	800df6c <GUI_DrawVLine>
 800ff14:	6921      	ldr	r1, [r4, #16]
 800ff16:	69a2      	ldr	r2, [r4, #24]
 800ff18:	69e0      	ldr	r0, [r4, #28]
 800ff1a:	3101      	adds	r1, #1
 800ff1c:	3a01      	subs	r2, #1
 800ff1e:	f7fe fa9d 	bl	800e45c <GUI_DrawHLine>
 800ff22:	6868      	ldr	r0, [r5, #4]
 800ff24:	f7fd fe4a 	bl	800dbbc <GUI_SetColor>
 800ff28:	6922      	ldr	r2, [r4, #16]
 800ff2a:	f10a 0a02 	add.w	sl, sl, #2
 800ff2e:	1990      	adds	r0, r2, r6
 800ff30:	3801      	subs	r0, #1
 800ff32:	4651      	mov	r1, sl
 800ff34:	3201      	adds	r2, #1
 800ff36:	463b      	mov	r3, r7
 800ff38:	f7fe fa72 	bl	800e420 <GUI_DrawLine>
 800ff3c:	69a2      	ldr	r2, [r4, #24]
 800ff3e:	1b90      	subs	r0, r2, r6
 800ff40:	463b      	mov	r3, r7
 800ff42:	3001      	adds	r0, #1
 800ff44:	4651      	mov	r1, sl
 800ff46:	3a01      	subs	r2, #1
 800ff48:	f7fe fa6a 	bl	800e420 <GUI_DrawLine>
 800ff4c:	6920      	ldr	r0, [r4, #16]
 800ff4e:	69e2      	ldr	r2, [r4, #28]
 800ff50:	3001      	adds	r0, #1
 800ff52:	4641      	mov	r1, r8
 800ff54:	3a01      	subs	r2, #1
 800ff56:	f7fe f809 	bl	800df6c <GUI_DrawVLine>
 800ff5a:	69a0      	ldr	r0, [r4, #24]
 800ff5c:	69e2      	ldr	r2, [r4, #28]
 800ff5e:	3801      	subs	r0, #1
 800ff60:	4641      	mov	r1, r8
 800ff62:	3a01      	subs	r2, #1
 800ff64:	f7fe f802 	bl	800df6c <GUI_DrawVLine>
 800ff68:	69e0      	ldr	r0, [r4, #28]
 800ff6a:	6921      	ldr	r1, [r4, #16]
 800ff6c:	69a2      	ldr	r2, [r4, #24]
 800ff6e:	3801      	subs	r0, #1
 800ff70:	3102      	adds	r1, #2
 800ff72:	3a02      	subs	r2, #2
 800ff74:	f7fe fa72 	bl	800e45c <GUI_DrawHLine>
 800ff78:	68a9      	ldr	r1, [r5, #8]
 800ff7a:	6920      	ldr	r0, [r4, #16]
 800ff7c:	69a2      	ldr	r2, [r4, #24]
 800ff7e:	69e3      	ldr	r3, [r4, #28]
 800ff80:	9100      	str	r1, [sp, #0]
 800ff82:	68e9      	ldr	r1, [r5, #12]
 800ff84:	9101      	str	r1, [sp, #4]
 800ff86:	3002      	adds	r0, #2
 800ff88:	4639      	mov	r1, r7
 800ff8a:	3a02      	subs	r2, #2
 800ff8c:	3b02      	subs	r3, #2
 800ff8e:	f003 fea7 	bl	8013ce0 <GUI_DrawGradientV>
 800ff92:	68a8      	ldr	r0, [r5, #8]
 800ff94:	f7fd fe12 	bl	800dbbc <GUI_SetColor>
 800ff98:	2502      	movs	r5, #2
 800ff9a:	1e73      	subs	r3, r6, #1
 800ff9c:	429d      	cmp	r5, r3
 800ff9e:	da5d      	bge.n	801005c <SLIDER_DrawSkinFlex+0x3bc>
 800ffa0:	6923      	ldr	r3, [r4, #16]
 800ffa2:	4433      	add	r3, r6
 800ffa4:	1b59      	subs	r1, r3, r5
 800ffa6:	69a3      	ldr	r3, [r4, #24]
 800ffa8:	1b9b      	subs	r3, r3, r6
 800ffaa:	195a      	adds	r2, r3, r5
 800ffac:	eb09 0005 	add.w	r0, r9, r5
 800ffb0:	3101      	adds	r1, #1
 800ffb2:	3a01      	subs	r2, #1
 800ffb4:	f7fe fa52 	bl	800e45c <GUI_DrawHLine>
 800ffb8:	3501      	adds	r5, #1
 800ffba:	e7ee      	b.n	800ff9a <SLIDER_DrawSkinFlex+0x2fa>
 800ffbc:	691e      	ldr	r6, [r3, #16]
 800ffbe:	69e8      	ldr	r0, [r5, #28]
 800ffc0:	b1d6      	cbz	r6, 800fff8 <SLIDER_DrawSkinFlex+0x358>
 800ffc2:	f7fd fdfb 	bl	800dbbc <GUI_SetColor>
 800ffc6:	6a27      	ldr	r7, [r4, #32]
 800ffc8:	2600      	movs	r6, #0
 800ffca:	687b      	ldr	r3, [r7, #4]
 800ffcc:	429e      	cmp	r6, r3
 800ffce:	da45      	bge.n	801005c <SLIDER_DrawSkinFlex+0x3bc>
 800ffd0:	6839      	ldr	r1, [r7, #0]
 800ffd2:	69a2      	ldr	r2, [r4, #24]
 800ffd4:	2002      	movs	r0, #2
 800ffd6:	fb91 f0f0 	sdiv	r0, r1, r0
 800ffda:	6961      	ldr	r1, [r4, #20]
 800ffdc:	4408      	add	r0, r1
 800ffde:	68b9      	ldr	r1, [r7, #8]
 800ffe0:	3b01      	subs	r3, #1
 800ffe2:	4371      	muls	r1, r6
 800ffe4:	fb91 f3f3 	sdiv	r3, r1, r3
 800ffe8:	6a69      	ldr	r1, [r5, #36]	; 0x24
 800ffea:	1a51      	subs	r1, r2, r1
 800ffec:	4418      	add	r0, r3
 800ffee:	3101      	adds	r1, #1
 800fff0:	f7fe fa34 	bl	800e45c <GUI_DrawHLine>
 800fff4:	3601      	adds	r6, #1
 800fff6:	e7e8      	b.n	800ffca <SLIDER_DrawSkinFlex+0x32a>
 800fff8:	f7fd fde0 	bl	800dbbc <GUI_SetColor>
 800fffc:	6a27      	ldr	r7, [r4, #32]
 800fffe:	687b      	ldr	r3, [r7, #4]
 8010000:	429e      	cmp	r6, r3
 8010002:	da2b      	bge.n	801005c <SLIDER_DrawSkinFlex+0x3bc>
 8010004:	683a      	ldr	r2, [r7, #0]
 8010006:	6961      	ldr	r1, [r4, #20]
 8010008:	2002      	movs	r0, #2
 801000a:	fb92 f0f0 	sdiv	r0, r2, r0
 801000e:	6922      	ldr	r2, [r4, #16]
 8010010:	4410      	add	r0, r2
 8010012:	68ba      	ldr	r2, [r7, #8]
 8010014:	3b01      	subs	r3, #1
 8010016:	4372      	muls	r2, r6
 8010018:	fb92 f3f3 	sdiv	r3, r2, r3
 801001c:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 801001e:	440a      	add	r2, r1
 8010020:	4418      	add	r0, r3
 8010022:	3a01      	subs	r2, #1
 8010024:	f7fd ffa2 	bl	800df6c <GUI_DrawVLine>
 8010028:	3601      	adds	r6, #1
 801002a:	e7e8      	b.n	800fffe <SLIDER_DrawSkinFlex+0x35e>
 801002c:	6800      	ldr	r0, [r0, #0]
 801002e:	2101      	movs	r1, #1
 8010030:	f7f6 fd72 	bl	8006b18 <SLIDER_GetFlag>
 8010034:	b190      	cbz	r0, 801005c <SLIDER_DrawSkinFlex+0x3bc>
 8010036:	6a28      	ldr	r0, [r5, #32]
 8010038:	f7fd fdc0 	bl	800dbbc <GUI_SetColor>
 801003c:	6923      	ldr	r3, [r4, #16]
 801003e:	f8ad 3008 	strh.w	r3, [sp, #8]
 8010042:	6963      	ldr	r3, [r4, #20]
 8010044:	f8ad 300a 	strh.w	r3, [sp, #10]
 8010048:	69a3      	ldr	r3, [r4, #24]
 801004a:	f8ad 300c 	strh.w	r3, [sp, #12]
 801004e:	a802      	add	r0, sp, #8
 8010050:	69e3      	ldr	r3, [r4, #28]
 8010052:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010056:	2100      	movs	r1, #0
 8010058:	f7fe fb2c 	bl	800e6b4 <GUI_DrawFocusRect>
 801005c:	2000      	movs	r0, #0
 801005e:	b004      	add	sp, #16
 8010060:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08010064 <_Create>:
 8010064:	b530      	push	{r4, r5, lr}
 8010066:	b08b      	sub	sp, #44	; 0x2c
 8010068:	4605      	mov	r5, r0
 801006a:	f7ff f9ff 	bl	800f46c <GUI_ALLOC_LockH>
 801006e:	ab0a      	add	r3, sp, #40	; 0x28
 8010070:	6c84      	ldr	r4, [r0, #72]	; 0x48
 8010072:	f843 0d28 	str.w	r0, [r3, #-40]!
 8010076:	4668      	mov	r0, sp
 8010078:	f7ff fa06 	bl	800f488 <GUI_ALLOC_UnlockH>
 801007c:	2300      	movs	r3, #0
 801007e:	9302      	str	r3, [sp, #8]
 8010080:	9501      	str	r5, [sp, #4]
 8010082:	9309      	str	r3, [sp, #36]	; 0x24
 8010084:	a801      	add	r0, sp, #4
 8010086:	47a0      	blx	r4
 8010088:	b00b      	add	sp, #44	; 0x2c
 801008a:	bd30      	pop	{r4, r5, pc}

0801008c <_Paint>:
 801008c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010090:	b097      	sub	sp, #92	; 0x5c
 8010092:	4607      	mov	r7, r0
 8010094:	f7ff f9ea 	bl	800f46c <GUI_ALLOC_LockH>
 8010098:	f100 0350 	add.w	r3, r0, #80	; 0x50
 801009c:	e893 0168 	ldmia.w	r3, {r3, r5, r6, r8}
 80100a0:	9309      	str	r3, [sp, #36]	; 0x24
 80100a2:	f9b0 3060 	ldrsh.w	r3, [r0, #96]	; 0x60
 80100a6:	9308      	str	r3, [sp, #32]
 80100a8:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 80100aa:	9003      	str	r0, [sp, #12]
 80100ac:	f3c3 2200 	ubfx	r2, r3, #8, #1
 80100b0:	6c84      	ldr	r4, [r0, #72]	; 0x48
 80100b2:	920b      	str	r2, [sp, #44]	; 0x2c
 80100b4:	a803      	add	r0, sp, #12
 80100b6:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 80100ba:	f003 0301 	and.w	r3, r3, #1
 80100be:	920c      	str	r2, [sp, #48]	; 0x30
 80100c0:	9301      	str	r3, [sp, #4]
 80100c2:	f7ff f9e1 	bl	800f488 <GUI_ALLOC_UnlockH>
 80100c6:	a904      	add	r1, sp, #16
 80100c8:	4638      	mov	r0, r7
 80100ca:	f7f8 fb86 	bl	80087da <WM_GetClientRectEx>
 80100ce:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80100d2:	f9bd c016 	ldrsh.w	ip, [sp, #22]
 80100d6:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80100da:	9b08      	ldr	r3, [sp, #32]
 80100dc:	f9bd e014 	ldrsh.w	lr, [sp, #20]
 80100e0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80100e4:	42b5      	cmp	r5, r6
 80100e6:	bf14      	ite	ne
 80100e8:	ebc6 0505 	rsbne	r5, r6, r5
 80100ec:	2501      	moveq	r5, #1
 80100ee:	f1ba 0f00 	cmp.w	sl, #0
 80100f2:	d002      	beq.n	80100fa <_Paint+0x6e>
 80100f4:	ebc1 090c 	rsb	r9, r1, ip
 80100f8:	e001      	b.n	80100fe <_Paint+0x72>
 80100fa:	ebc2 090e 	rsb	r9, r2, lr
 80100fe:	43d8      	mvns	r0, r3
 8010100:	4481      	add	r9, r0
 8010102:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010104:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8010108:	2800      	cmp	r0, #0
 801010a:	da08      	bge.n	801011e <_Paint+0x92>
 801010c:	f04f 0b05 	mov.w	fp, #5
 8010110:	1c68      	adds	r0, r5, #1
 8010112:	fb99 f9fb 	sdiv	r9, r9, fp
 8010116:	4548      	cmp	r0, r9
 8010118:	bfc8      	it	gt
 801011a:	200b      	movgt	r0, #11
 801011c:	9009      	str	r0, [sp, #36]	; 0x24
 801011e:	ebc6 0608 	rsb	r6, r6, r8
 8010122:	f1ba 0f00 	cmp.w	sl, #0
 8010126:	d003      	beq.n	8010130 <_Paint+0xa4>
 8010128:	1c48      	adds	r0, r1, #1
 801012a:	ebc1 080c 	rsb	r8, r1, ip
 801012e:	e002      	b.n	8010136 <_Paint+0xaa>
 8010130:	1c50      	adds	r0, r2, #1
 8010132:	ebc2 080e 	rsb	r8, r2, lr
 8010136:	f108 38ff 	add.w	r8, r8, #4294967295
 801013a:	ebc3 0808 	rsb	r8, r3, r8
 801013e:	fb06 f608 	mul.w	r6, r6, r8
 8010142:	fb96 f6f5 	sdiv	r6, r6, r5
 8010146:	4605      	mov	r5, r0
 8010148:	4435      	add	r5, r6
 801014a:	442b      	add	r3, r5
 801014c:	1e5e      	subs	r6, r3, #1
 801014e:	ab08      	add	r3, sp, #32
 8010150:	f10e 30ff 	add.w	r0, lr, #4294967295
 8010154:	9315      	str	r3, [sp, #84]	; 0x54
 8010156:	230f      	movs	r3, #15
 8010158:	3101      	adds	r1, #1
 801015a:	3201      	adds	r2, #1
 801015c:	930e      	str	r3, [sp, #56]	; 0x38
 801015e:	9013      	str	r0, [sp, #76]	; 0x4c
 8010160:	f10c 33ff 	add.w	r3, ip, #4294967295
 8010164:	f8ad 001c 	strh.w	r0, [sp, #28]
 8010168:	a806      	add	r0, sp, #24
 801016a:	9314      	str	r3, [sp, #80]	; 0x50
 801016c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010170:	9112      	str	r1, [sp, #72]	; 0x48
 8010172:	9211      	str	r2, [sp, #68]	; 0x44
 8010174:	f8ad 2018 	strh.w	r2, [sp, #24]
 8010178:	f8ad 101a 	strh.w	r1, [sp, #26]
 801017c:	970d      	str	r7, [sp, #52]	; 0x34
 801017e:	f7f7 ff1d 	bl	8007fbc <WM_SetUserClipRect>
 8010182:	a80d      	add	r0, sp, #52	; 0x34
 8010184:	47a0      	blx	r4
 8010186:	2000      	movs	r0, #0
 8010188:	f7f7 ff18 	bl	8007fbc <WM_SetUserClipRect>
 801018c:	2313      	movs	r3, #19
 801018e:	930e      	str	r3, [sp, #56]	; 0x38
 8010190:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010192:	b113      	cbz	r3, 801019a <_Paint+0x10e>
 8010194:	9512      	str	r5, [sp, #72]	; 0x48
 8010196:	9614      	str	r6, [sp, #80]	; 0x50
 8010198:	e001      	b.n	801019e <_Paint+0x112>
 801019a:	9511      	str	r5, [sp, #68]	; 0x44
 801019c:	9613      	str	r6, [sp, #76]	; 0x4c
 801019e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80101a0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80101a4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80101a6:	f8ad 301a 	strh.w	r3, [sp, #26]
 80101aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80101ac:	f8ad 301c 	strh.w	r3, [sp, #28]
 80101b0:	a806      	add	r0, sp, #24
 80101b2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80101b4:	f8ad 301e 	strh.w	r3, [sp, #30]
 80101b8:	f7f7 ff00 	bl	8007fbc <WM_SetUserClipRect>
 80101bc:	a80d      	add	r0, sp, #52	; 0x34
 80101be:	47a0      	blx	r4
 80101c0:	2000      	movs	r0, #0
 80101c2:	f7f7 fefb 	bl	8007fbc <WM_SetUserClipRect>
 80101c6:	2314      	movs	r3, #20
 80101c8:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 80101cc:	930e      	str	r3, [sp, #56]	; 0x38
 80101ce:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80101d2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80101d6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80101da:	3001      	adds	r0, #1
 80101dc:	3b01      	subs	r3, #1
 80101de:	3101      	adds	r1, #1
 80101e0:	3a01      	subs	r2, #1
 80101e2:	9011      	str	r0, [sp, #68]	; 0x44
 80101e4:	f8ad 0018 	strh.w	r0, [sp, #24]
 80101e8:	a806      	add	r0, sp, #24
 80101ea:	9314      	str	r3, [sp, #80]	; 0x50
 80101ec:	f8ad 301e 	strh.w	r3, [sp, #30]
 80101f0:	9112      	str	r1, [sp, #72]	; 0x48
 80101f2:	9213      	str	r2, [sp, #76]	; 0x4c
 80101f4:	f8ad 101a 	strh.w	r1, [sp, #26]
 80101f8:	f8ad 201c 	strh.w	r2, [sp, #28]
 80101fc:	f7f7 fede 	bl	8007fbc <WM_SetUserClipRect>
 8010200:	a80d      	add	r0, sp, #52	; 0x34
 8010202:	47a0      	blx	r4
 8010204:	2000      	movs	r0, #0
 8010206:	f7f7 fed9 	bl	8007fbc <WM_SetUserClipRect>
 801020a:	9b01      	ldr	r3, [sp, #4]
 801020c:	b30b      	cbz	r3, 8010252 <_Paint+0x1c6>
 801020e:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 8010212:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8010216:	f8ad 0018 	strh.w	r0, [sp, #24]
 801021a:	230a      	movs	r3, #10
 801021c:	930e      	str	r3, [sp, #56]	; 0x38
 801021e:	b20b      	sxth	r3, r1
 8010220:	9312      	str	r3, [sp, #72]	; 0x48
 8010222:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8010226:	f8ad 101a 	strh.w	r1, [sp, #26]
 801022a:	b21a      	sxth	r2, r3
 801022c:	9214      	str	r2, [sp, #80]	; 0x50
 801022e:	b202      	sxth	r2, r0
 8010230:	9211      	str	r2, [sp, #68]	; 0x44
 8010232:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8010236:	f8ad 201c 	strh.w	r2, [sp, #28]
 801023a:	b215      	sxth	r5, r2
 801023c:	a806      	add	r0, sp, #24
 801023e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010242:	9513      	str	r5, [sp, #76]	; 0x4c
 8010244:	f7f7 feba 	bl	8007fbc <WM_SetUserClipRect>
 8010248:	a80d      	add	r0, sp, #52	; 0x34
 801024a:	47a0      	blx	r4
 801024c:	2000      	movs	r0, #0
 801024e:	f7f7 feb5 	bl	8007fbc <WM_SetUserClipRect>
 8010252:	b017      	add	sp, #92	; 0x5c
 8010254:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010258 <SCROLLBAR_GetValue>:
 8010258:	b513      	push	{r0, r1, r4, lr}
 801025a:	4604      	mov	r4, r0
 801025c:	b140      	cbz	r0, 8010270 <SCROLLBAR_GetValue+0x18>
 801025e:	f7ff f905 	bl	800f46c <GUI_ALLOC_LockH>
 8010262:	ab02      	add	r3, sp, #8
 8010264:	6d04      	ldr	r4, [r0, #80]	; 0x50
 8010266:	f843 0d04 	str.w	r0, [r3, #-4]!
 801026a:	4618      	mov	r0, r3
 801026c:	f7ff f90c 	bl	800f488 <GUI_ALLOC_UnlockH>
 8010270:	4620      	mov	r0, r4
 8010272:	b002      	add	sp, #8
 8010274:	bd10      	pop	{r4, pc}

08010276 <SCROLLBAR_CreateAttached>:
 8010276:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010278:	f001 0308 	and.w	r3, r1, #8
 801027c:	2b00      	cmp	r3, #0
 801027e:	f240 348a 	movw	r4, #906	; 0x38a
 8010282:	f240 528a 	movw	r2, #1418	; 0x58a
 8010286:	bf08      	it	eq
 8010288:	4622      	moveq	r2, r4
 801028a:	bf0c      	ite	eq
 801028c:	23ff      	moveq	r3, #255	; 0xff
 801028e:	23fe      	movne	r3, #254	; 0xfe
 8010290:	e88d 0005 	stmia.w	sp, {r0, r2}
 8010294:	2000      	movs	r0, #0
 8010296:	9102      	str	r1, [sp, #8]
 8010298:	9303      	str	r3, [sp, #12]
 801029a:	4602      	mov	r2, r0
 801029c:	4603      	mov	r3, r0
 801029e:	4601      	mov	r1, r0
 80102a0:	f000 f8ae 	bl	8010400 <SCROLLBAR_CreateEx>
 80102a4:	2106      	movs	r1, #6
 80102a6:	4604      	mov	r4, r0
 80102a8:	f7f8 f86f 	bl	800838a <WM_NotifyParent>
 80102ac:	4620      	mov	r0, r4
 80102ae:	b004      	add	sp, #16
 80102b0:	bd10      	pop	{r4, pc}

080102b2 <_DeleteTimer>:
 80102b2:	b507      	push	{r0, r1, r2, lr}
 80102b4:	f7ff f8da 	bl	800f46c <GUI_ALLOC_LockH>
 80102b8:	9001      	str	r0, [sp, #4]
 80102ba:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80102bc:	f000 ffb6 	bl	801122c <WM_DeleteTimer>
 80102c0:	a802      	add	r0, sp, #8
 80102c2:	2200      	movs	r2, #0
 80102c4:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 80102c8:	665a      	str	r2, [r3, #100]	; 0x64
 80102ca:	65da      	str	r2, [r3, #92]	; 0x5c
 80102cc:	f7ff f8dc 	bl	800f488 <GUI_ALLOC_UnlockH>
 80102d0:	b003      	add	sp, #12
 80102d2:	f85d fb04 	ldr.w	pc, [sp], #4

080102d6 <SCROLLBAR__Rect2VRect>:
 80102d6:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 80102d8:	071b      	lsls	r3, r3, #28
 80102da:	b510      	push	{r4, lr}
 80102dc:	d512      	bpl.n	8010304 <SCROLLBAR__Rect2VRect+0x2e>
 80102de:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80102e2:	f9b0 3000 	ldrsh.w	r3, [r0]
 80102e6:	8808      	ldrh	r0, [r1, #0]
 80102e8:	884c      	ldrh	r4, [r1, #2]
 80102ea:	800c      	strh	r4, [r1, #0]
 80102ec:	1ad3      	subs	r3, r2, r3
 80102ee:	888a      	ldrh	r2, [r1, #4]
 80102f0:	88cc      	ldrh	r4, [r1, #6]
 80102f2:	808c      	strh	r4, [r1, #4]
 80102f4:	3301      	adds	r3, #1
 80102f6:	b29b      	uxth	r3, r3
 80102f8:	43c0      	mvns	r0, r0
 80102fa:	43d2      	mvns	r2, r2
 80102fc:	4418      	add	r0, r3
 80102fe:	4413      	add	r3, r2
 8010300:	80c8      	strh	r0, [r1, #6]
 8010302:	804b      	strh	r3, [r1, #2]
 8010304:	bd10      	pop	{r4, pc}

08010306 <SCROLLBAR__InvalidatePartner>:
 8010306:	b510      	push	{r4, lr}
 8010308:	4604      	mov	r4, r0
 801030a:	f001 f8ca 	bl	80114a2 <WM_GetScrollPartner>
 801030e:	f7f8 ff5e 	bl	80091ce <WM_InvalidateWindow>
 8010312:	4620      	mov	r0, r4
 8010314:	f7f8 f964 	bl	80085e0 <WM_GetParent>
 8010318:	2125      	movs	r1, #37	; 0x25
 801031a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801031e:	f7f7 bfb7 	b.w	8008290 <WM_SendMessageNoPara>
	...

08010324 <SCROLLBAR_CreateUser>:
 8010324:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010326:	b089      	sub	sp, #36	; 0x24
 8010328:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801032a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801032c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801032e:	b9fa      	cbnz	r2, 8010370 <SCROLLBAR_CreateUser+0x4c>
 8010330:	b9f3      	cbnz	r3, 8010370 <SCROLLBAR_CreateUser+0x4c>
 8010332:	4630      	mov	r0, r6
 8010334:	a906      	add	r1, sp, #24
 8010336:	f7f8 f9cf 	bl	80086d8 <WM_GetInsideRectEx>
 801033a:	f014 0f08 	tst.w	r4, #8
 801033e:	4b2c      	ldr	r3, [pc, #176]	; (80103f0 <SCROLLBAR_CreateUser+0xcc>)
 8010340:	f9bd 701c 	ldrsh.w	r7, [sp, #28]
 8010344:	f9bd e01e 	ldrsh.w	lr, [sp, #30]
 8010348:	d009      	beq.n	801035e <SCROLLBAR_CreateUser+0x3a>
 801034a:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 801034e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010352:	1c78      	adds	r0, r7, #1
 8010354:	ebc1 030e 	rsb	r3, r1, lr
 8010358:	1a80      	subs	r0, r0, r2
 801035a:	3301      	adds	r3, #1
 801035c:	e008      	b.n	8010370 <SCROLLBAR_CreateUser+0x4c>
 801035e:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 8010362:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010366:	f10e 0101 	add.w	r1, lr, #1
 801036a:	1a3a      	subs	r2, r7, r0
 801036c:	1ac9      	subs	r1, r1, r3
 801036e:	3201      	adds	r2, #1
 8010370:	9600      	str	r6, [sp, #0]
 8010372:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8010374:	9601      	str	r6, [sp, #4]
 8010376:	4e1f      	ldr	r6, [pc, #124]	; (80103f4 <SCROLLBAR_CreateUser+0xd0>)
 8010378:	9602      	str	r6, [sp, #8]
 801037a:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801037c:	363c      	adds	r6, #60	; 0x3c
 801037e:	9603      	str	r6, [sp, #12]
 8010380:	f7f8 ff66 	bl	8009250 <WM_CreateWindowAsChild>
 8010384:	4606      	mov	r6, r0
 8010386:	2800      	cmp	r0, #0
 8010388:	d02f      	beq.n	80103ea <SCROLLBAR_CreateUser+0xc6>
 801038a:	f7ff f86f 	bl	800f46c <GUI_ALLOC_LockH>
 801038e:	f004 0208 	and.w	r2, r4, #8
 8010392:	06e3      	lsls	r3, r4, #27
 8010394:	bf48      	it	mi
 8010396:	f042 0210 	orrmi.w	r2, r2, #16
 801039a:	f1a5 03fe 	sub.w	r3, r5, #254	; 0xfe
 801039e:	bf48      	it	mi
 80103a0:	b292      	uxthmi	r2, r2
 80103a2:	2b01      	cmp	r3, #1
 80103a4:	bf88      	it	hi
 80103a6:	f042 0210 	orrhi.w	r2, r2, #16
 80103aa:	4629      	mov	r1, r5
 80103ac:	9005      	str	r0, [sp, #20]
 80103ae:	f7f6 f94f 	bl	8006650 <WIDGET__Init>
 80103b2:	4b11      	ldr	r3, [pc, #68]	; (80103f8 <SCROLLBAR_CreateUser+0xd4>)
 80103b4:	af08      	add	r7, sp, #32
 80103b6:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80103b8:	f857 4d0c 	ldr.w	r4, [r7, #-12]!
 80103bc:	f104 0534 	add.w	r5, r4, #52	; 0x34
 80103c0:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 80103c4:	2364      	movs	r3, #100	; 0x64
 80103c6:	64e3      	str	r3, [r4, #76]	; 0x4c
 80103c8:	4d0c      	ldr	r5, [pc, #48]	; (80103fc <SCROLLBAR_CreateUser+0xd8>)
 80103ca:	230a      	movs	r3, #10
 80103cc:	6563      	str	r3, [r4, #84]	; 0x54
 80103ce:	2300      	movs	r3, #0
 80103d0:	6523      	str	r3, [r4, #80]	; 0x50
 80103d2:	682b      	ldr	r3, [r5, #0]
 80103d4:	6463      	str	r3, [r4, #68]	; 0x44
 80103d6:	4638      	mov	r0, r7
 80103d8:	f7ff f856 	bl	800f488 <GUI_ALLOC_UnlockH>
 80103dc:	682b      	ldr	r3, [r5, #0]
 80103de:	4630      	mov	r0, r6
 80103e0:	685b      	ldr	r3, [r3, #4]
 80103e2:	4798      	blx	r3
 80103e4:	4630      	mov	r0, r6
 80103e6:	f7ff ff8e 	bl	8010306 <SCROLLBAR__InvalidatePartner>
 80103ea:	4630      	mov	r0, r6
 80103ec:	b009      	add	sp, #36	; 0x24
 80103ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80103f0:	200002f8 	.word	0x200002f8
 80103f4:	080104a3 	.word	0x080104a3
 80103f8:	200002e4 	.word	0x200002e4
 80103fc:	200002f4 	.word	0x200002f4

08010400 <SCROLLBAR_CreateEx>:
 8010400:	b510      	push	{r4, lr}
 8010402:	b086      	sub	sp, #24
 8010404:	9c08      	ldr	r4, [sp, #32]
 8010406:	9400      	str	r4, [sp, #0]
 8010408:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801040a:	9401      	str	r4, [sp, #4]
 801040c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801040e:	9402      	str	r4, [sp, #8]
 8010410:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8010412:	9403      	str	r4, [sp, #12]
 8010414:	2400      	movs	r4, #0
 8010416:	9404      	str	r4, [sp, #16]
 8010418:	f7ff ff84 	bl	8010324 <SCROLLBAR_CreateUser>
 801041c:	b006      	add	sp, #24
 801041e:	bd10      	pop	{r4, pc}

08010420 <SCROLLBAR_SetValue>:
 8010420:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010422:	460c      	mov	r4, r1
 8010424:	4605      	mov	r5, r0
 8010426:	b300      	cbz	r0, 801046a <SCROLLBAR_SetValue+0x4a>
 8010428:	f7ff f820 	bl	800f46c <GUI_ALLOC_LockH>
 801042c:	2c00      	cmp	r4, #0
 801042e:	9001      	str	r0, [sp, #4]
 8010430:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 8010432:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8010434:	db05      	blt.n	8010442 <SCROLLBAR_SetValue+0x22>
 8010436:	1a8a      	subs	r2, r1, r2
 8010438:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 801043c:	4294      	cmp	r4, r2
 801043e:	dc02      	bgt.n	8010446 <SCROLLBAR_SetValue+0x26>
 8010440:	e000      	b.n	8010444 <SCROLLBAR_SetValue+0x24>
 8010442:	2400      	movs	r4, #0
 8010444:	4622      	mov	r2, r4
 8010446:	6d01      	ldr	r1, [r0, #80]	; 0x50
 8010448:	4291      	cmp	r1, r2
 801044a:	d00b      	beq.n	8010464 <SCROLLBAR_SetValue+0x44>
 801044c:	6502      	str	r2, [r0, #80]	; 0x50
 801044e:	4628      	mov	r0, r5
 8010450:	f7f8 febd 	bl	80091ce <WM_InvalidateWindow>
 8010454:	a801      	add	r0, sp, #4
 8010456:	f7ff f817 	bl	800f488 <GUI_ALLOC_UnlockH>
 801045a:	4628      	mov	r0, r5
 801045c:	2105      	movs	r1, #5
 801045e:	f7f7 ff94 	bl	800838a <WM_NotifyParent>
 8010462:	e002      	b.n	801046a <SCROLLBAR_SetValue+0x4a>
 8010464:	a801      	add	r0, sp, #4
 8010466:	f7ff f80f 	bl	800f488 <GUI_ALLOC_UnlockH>
 801046a:	b003      	add	sp, #12
 801046c:	bd30      	pop	{r4, r5, pc}

0801046e <SCROLLBAR_AddValue>:
 801046e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010470:	460d      	mov	r5, r1
 8010472:	4606      	mov	r6, r0
 8010474:	b160      	cbz	r0, 8010490 <SCROLLBAR_AddValue+0x22>
 8010476:	f7fe fff9 	bl	800f46c <GUI_ALLOC_LockH>
 801047a:	4602      	mov	r2, r0
 801047c:	a802      	add	r0, sp, #8
 801047e:	6d14      	ldr	r4, [r2, #80]	; 0x50
 8010480:	f840 2d04 	str.w	r2, [r0, #-4]!
 8010484:	f7ff f800 	bl	800f488 <GUI_ALLOC_UnlockH>
 8010488:	4630      	mov	r0, r6
 801048a:	1961      	adds	r1, r4, r5
 801048c:	f7ff ffc8 	bl	8010420 <SCROLLBAR_SetValue>
 8010490:	b002      	add	sp, #8
 8010492:	bd70      	pop	{r4, r5, r6, pc}

08010494 <SCROLLBAR_Dec>:
 8010494:	f04f 31ff 	mov.w	r1, #4294967295
 8010498:	f7ff bfe9 	b.w	801046e <SCROLLBAR_AddValue>

0801049c <SCROLLBAR_Inc>:
 801049c:	2101      	movs	r1, #1
 801049e:	f7ff bfe6 	b.w	801046e <SCROLLBAR_AddValue>

080104a2 <SCROLLBAR_Callback>:
 80104a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80104a6:	6844      	ldr	r4, [r0, #4]
 80104a8:	4680      	mov	r8, r0
 80104aa:	b08f      	sub	sp, #60	; 0x3c
 80104ac:	4620      	mov	r0, r4
 80104ae:	4641      	mov	r1, r8
 80104b0:	f7f6 f8d6 	bl	8006660 <WIDGET_HandleActive>
 80104b4:	2800      	cmp	r0, #0
 80104b6:	f000 81c0 	beq.w	801083a <SCROLLBAR_Callback+0x398>
 80104ba:	f8d8 3000 	ldr.w	r3, [r8]
 80104be:	2b23      	cmp	r3, #35	; 0x23
 80104c0:	f000 8182 	beq.w	80107c8 <SCROLLBAR_Callback+0x326>
 80104c4:	dc0b      	bgt.n	80104de <SCROLLBAR_Callback+0x3c>
 80104c6:	2b0e      	cmp	r3, #14
 80104c8:	f000 812a 	beq.w	8010720 <SCROLLBAR_Callback+0x27e>
 80104cc:	2b0f      	cmp	r3, #15
 80104ce:	d012      	beq.n	80104f6 <SCROLLBAR_Callback+0x54>
 80104d0:	2b0b      	cmp	r3, #11
 80104d2:	f040 81af 	bne.w	8010834 <SCROLLBAR_Callback+0x392>
 80104d6:	4620      	mov	r0, r4
 80104d8:	f7ff ff15 	bl	8010306 <SCROLLBAR__InvalidatePartner>
 80104dc:	e1aa      	b.n	8010834 <SCROLLBAR_Callback+0x392>
 80104de:	f240 1213 	movw	r2, #275	; 0x113
 80104e2:	4293      	cmp	r3, r2
 80104e4:	f000 817f 	beq.w	80107e6 <SCROLLBAR_Callback+0x344>
 80104e8:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 80104ec:	d012      	beq.n	8010514 <SCROLLBAR_Callback+0x72>
 80104ee:	2b24      	cmp	r3, #36	; 0x24
 80104f0:	f040 81a0 	bne.w	8010834 <SCROLLBAR_Callback+0x392>
 80104f4:	e143      	b.n	801077e <SCROLLBAR_Callback+0x2dc>
 80104f6:	4620      	mov	r0, r4
 80104f8:	f7fe ffb8 	bl	800f46c <GUI_ALLOC_LockH>
 80104fc:	9005      	str	r0, [sp, #20]
 80104fe:	2800      	cmp	r0, #0
 8010500:	f000 819b 	beq.w	801083a <SCROLLBAR_Callback+0x398>
 8010504:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8010506:	a805      	add	r0, sp, #20
 8010508:	681d      	ldr	r5, [r3, #0]
 801050a:	f7fe ffbd 	bl	800f488 <GUI_ALLOC_UnlockH>
 801050e:	4620      	mov	r0, r4
 8010510:	47a8      	blx	r5
 8010512:	e192      	b.n	801083a <SCROLLBAR_Callback+0x398>
 8010514:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8010518:	2f00      	cmp	r7, #0
 801051a:	f000 818b 	beq.w	8010834 <SCROLLBAR_Callback+0x392>
 801051e:	7a3b      	ldrb	r3, [r7, #8]
 8010520:	4620      	mov	r0, r4
 8010522:	2b00      	cmp	r3, #0
 8010524:	f000 80d6 	beq.w	80106d4 <SCROLLBAR_Callback+0x232>
 8010528:	f7fe ffa0 	bl	800f46c <GUI_ALLOC_LockH>
 801052c:	a905      	add	r1, sp, #20
 801052e:	6c83      	ldr	r3, [r0, #72]	; 0x48
 8010530:	9003      	str	r0, [sp, #12]
 8010532:	6d06      	ldr	r6, [r0, #80]	; 0x50
 8010534:	4620      	mov	r0, r4
 8010536:	4798      	blx	r3
 8010538:	9b03      	ldr	r3, [sp, #12]
 801053a:	f8b3 a032 	ldrh.w	sl, [r3, #50]	; 0x32
 801053e:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 8010540:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8010542:	f01a 0f08 	tst.w	sl, #8
 8010546:	ebc5 0902 	rsb	r9, r5, r2
 801054a:	d003      	beq.n	8010554 <SCROLLBAR_Callback+0xb2>
 801054c:	e897 0006 	ldmia.w	r7, {r1, r2}
 8010550:	603a      	str	r2, [r7, #0]
 8010552:	6079      	str	r1, [r7, #4]
 8010554:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8010556:	683f      	ldr	r7, [r7, #0]
 8010558:	2a03      	cmp	r2, #3
 801055a:	d114      	bne.n	8010586 <SCROLLBAR_Callback+0xe4>
 801055c:	4620      	mov	r0, r4
 801055e:	f7ff fea8 	bl	80102b2 <_DeleteTimer>
 8010562:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010564:	990c      	ldr	r1, [sp, #48]	; 0x30
 8010566:	2002      	movs	r0, #2
 8010568:	fb93 f3f0 	sdiv	r3, r3, r0
 801056c:	1aff      	subs	r7, r7, r3
 801056e:	9b06      	ldr	r3, [sp, #24]
 8010570:	1afb      	subs	r3, r7, r3
 8010572:	1e58      	subs	r0, r3, #1
 8010574:	fb00 f009 	mul.w	r0, r0, r9
 8010578:	f002 ff82 	bl	8013480 <GUI__DivideRound32>
 801057c:	9b03      	ldr	r3, [sp, #12]
 801057e:	4606      	mov	r6, r0
 8010580:	6618      	str	r0, [r3, #96]	; 0x60
 8010582:	a803      	add	r0, sp, #12
 8010584:	e07e      	b.n	8010684 <SCROLLBAR_Callback+0x1e2>
 8010586:	9806      	ldr	r0, [sp, #24]
 8010588:	4287      	cmp	r7, r0
 801058a:	dc0b      	bgt.n	80105a4 <SCROLLBAR_Callback+0x102>
 801058c:	2a02      	cmp	r2, #2
 801058e:	d039      	beq.n	8010604 <SCROLLBAR_Callback+0x162>
 8010590:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8010592:	b113      	cbz	r3, 801059a <SCROLLBAR_Callback+0xf8>
 8010594:	4620      	mov	r0, r4
 8010596:	f7ff fe8c 	bl	80102b2 <_DeleteTimer>
 801059a:	9b03      	ldr	r3, [sp, #12]
 801059c:	2202      	movs	r2, #2
 801059e:	3e01      	subs	r6, #1
 80105a0:	659a      	str	r2, [r3, #88]	; 0x58
 80105a2:	e02f      	b.n	8010604 <SCROLLBAR_Callback+0x162>
 80105a4:	9907      	ldr	r1, [sp, #28]
 80105a6:	428f      	cmp	r7, r1
 80105a8:	da02      	bge.n	80105b0 <SCROLLBAR_Callback+0x10e>
 80105aa:	1b76      	subs	r6, r6, r5
 80105ac:	426d      	negs	r5, r5
 80105ae:	e02f      	b.n	8010610 <SCROLLBAR_Callback+0x16e>
 80105b0:	9908      	ldr	r1, [sp, #32]
 80105b2:	428f      	cmp	r7, r1
 80105b4:	dc12      	bgt.n	80105dc <SCROLLBAR_Callback+0x13a>
 80105b6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80105b8:	2900      	cmp	r1, #0
 80105ba:	dd0b      	ble.n	80105d4 <SCROLLBAR_Callback+0x132>
 80105bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80105be:	2202      	movs	r2, #2
 80105c0:	fb93 f3f2 	sdiv	r3, r3, r2
 80105c4:	1aff      	subs	r7, r7, r3
 80105c6:	1a3f      	subs	r7, r7, r0
 80105c8:	3f01      	subs	r7, #1
 80105ca:	fb07 f009 	mul.w	r0, r7, r9
 80105ce:	f002 ff57 	bl	8013480 <GUI__DivideRound32>
 80105d2:	4606      	mov	r6, r0
 80105d4:	9b03      	ldr	r3, [sp, #12]
 80105d6:	2203      	movs	r2, #3
 80105d8:	659a      	str	r2, [r3, #88]	; 0x58
 80105da:	e016      	b.n	801060a <SCROLLBAR_Callback+0x168>
 80105dc:	9909      	ldr	r1, [sp, #36]	; 0x24
 80105de:	428f      	cmp	r7, r1
 80105e0:	da01      	bge.n	80105e6 <SCROLLBAR_Callback+0x144>
 80105e2:	442e      	add	r6, r5
 80105e4:	e014      	b.n	8010610 <SCROLLBAR_Callback+0x16e>
 80105e6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80105e8:	428f      	cmp	r7, r1
 80105ea:	dc0e      	bgt.n	801060a <SCROLLBAR_Callback+0x168>
 80105ec:	2a01      	cmp	r2, #1
 80105ee:	d00e      	beq.n	801060e <SCROLLBAR_Callback+0x16c>
 80105f0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80105f2:	b113      	cbz	r3, 80105fa <SCROLLBAR_Callback+0x158>
 80105f4:	4620      	mov	r0, r4
 80105f6:	f7ff fe5c 	bl	80102b2 <_DeleteTimer>
 80105fa:	9b03      	ldr	r3, [sp, #12]
 80105fc:	2501      	movs	r5, #1
 80105fe:	3601      	adds	r6, #1
 8010600:	659d      	str	r5, [r3, #88]	; 0x58
 8010602:	e005      	b.n	8010610 <SCROLLBAR_Callback+0x16e>
 8010604:	f04f 35ff 	mov.w	r5, #4294967295
 8010608:	e002      	b.n	8010610 <SCROLLBAR_Callback+0x16e>
 801060a:	2500      	movs	r5, #0
 801060c:	e000      	b.n	8010610 <SCROLLBAR_Callback+0x16e>
 801060e:	4615      	mov	r5, r2
 8010610:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8010614:	990c      	ldr	r1, [sp, #48]	; 0x30
 8010616:	f8db 305c 	ldr.w	r3, [fp, #92]	; 0x5c
 801061a:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 801061e:	9a06      	ldr	r2, [sp, #24]
 8010620:	b171      	cbz	r1, 8010640 <SCROLLBAR_Callback+0x19e>
 8010622:	2002      	movs	r0, #2
 8010624:	fb9e f0f0 	sdiv	r0, lr, r0
 8010628:	1a38      	subs	r0, r7, r0
 801062a:	1a80      	subs	r0, r0, r2
 801062c:	3801      	subs	r0, #1
 801062e:	fb00 f009 	mul.w	r0, r0, r9
 8010632:	9301      	str	r3, [sp, #4]
 8010634:	f002 ff24 	bl	8013480 <GUI__DivideRound32>
 8010638:	9b01      	ldr	r3, [sp, #4]
 801063a:	f8cb 0060 	str.w	r0, [fp, #96]	; 0x60
 801063e:	e009      	b.n	8010654 <SCROLLBAR_Callback+0x1b2>
 8010640:	f8db 2058 	ldr.w	r2, [fp, #88]	; 0x58
 8010644:	2a01      	cmp	r2, #1
 8010646:	bf04      	itt	eq
 8010648:	f8db 104c 	ldreq.w	r1, [fp, #76]	; 0x4c
 801064c:	f101 31ff 	addeq.w	r1, r1, #4294967295
 8010650:	f8cb 1060 	str.w	r1, [fp, #96]	; 0x60
 8010654:	a803      	add	r0, sp, #12
 8010656:	9301      	str	r3, [sp, #4]
 8010658:	f7fe ff16 	bl	800f488 <GUI_ALLOC_UnlockH>
 801065c:	9b01      	ldr	r3, [sp, #4]
 801065e:	b1a5      	cbz	r5, 801068a <SCROLLBAR_Callback+0x1e8>
 8010660:	b9bb      	cbnz	r3, 8010692 <SCROLLBAR_Callback+0x1f0>
 8010662:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8010666:	f240 41d2 	movw	r1, #1234	; 0x4d2
 801066a:	4620      	mov	r0, r4
 801066c:	f000 fe16 	bl	801129c <WM_CreateTimer>
 8010670:	4607      	mov	r7, r0
 8010672:	4620      	mov	r0, r4
 8010674:	f7fe fefa 	bl	800f46c <GUI_ALLOC_LockH>
 8010678:	4602      	mov	r2, r0
 801067a:	a80e      	add	r0, sp, #56	; 0x38
 801067c:	f840 2d28 	str.w	r2, [r0, #-40]!
 8010680:	6657      	str	r7, [r2, #100]	; 0x64
 8010682:	65d5      	str	r5, [r2, #92]	; 0x5c
 8010684:	f7fe ff00 	bl	800f488 <GUI_ALLOC_UnlockH>
 8010688:	e003      	b.n	8010692 <SCROLLBAR_Callback+0x1f0>
 801068a:	b113      	cbz	r3, 8010692 <SCROLLBAR_Callback+0x1f0>
 801068c:	4620      	mov	r0, r4
 801068e:	f7ff fe10 	bl	80102b2 <_DeleteTimer>
 8010692:	4620      	mov	r0, r4
 8010694:	2101      	movs	r1, #1
 8010696:	f7f7 fddf 	bl	8008258 <WM_SetCapture>
 801069a:	4620      	mov	r0, r4
 801069c:	4631      	mov	r1, r6
 801069e:	f7ff febf 	bl	8010420 <SCROLLBAR_SetValue>
 80106a2:	f41a 7f80 	tst.w	sl, #256	; 0x100
 80106a6:	f040 80c5 	bne.w	8010834 <SCROLLBAR_Callback+0x392>
 80106aa:	4620      	mov	r0, r4
 80106ac:	f7fe fede 	bl	800f46c <GUI_ALLOC_LockH>
 80106b0:	ab0e      	add	r3, sp, #56	; 0x38
 80106b2:	6a85      	ldr	r5, [r0, #40]	; 0x28
 80106b4:	f843 0d28 	str.w	r0, [r3, #-40]!
 80106b8:	4618      	mov	r0, r3
 80106ba:	f7fe fee5 	bl	800f488 <GUI_ALLOC_UnlockH>
 80106be:	f44f 7180 	mov.w	r1, #256	; 0x100
 80106c2:	4620      	mov	r0, r4
 80106c4:	f7f5 ff99 	bl	80065fa <WIDGET_OrState>
 80106c8:	07a9      	lsls	r1, r5, #30
 80106ca:	f140 80b3 	bpl.w	8010834 <SCROLLBAR_Callback+0x392>
 80106ce:	4620      	mov	r0, r4
 80106d0:	2101      	movs	r1, #1
 80106d2:	e074      	b.n	80107be <SCROLLBAR_Callback+0x31c>
 80106d4:	f7fe feca 	bl	800f46c <GUI_ALLOC_LockH>
 80106d8:	8e45      	ldrh	r5, [r0, #50]	; 0x32
 80106da:	9003      	str	r0, [sp, #12]
 80106dc:	a803      	add	r0, sp, #12
 80106de:	f7fe fed3 	bl	800f488 <GUI_ALLOC_UnlockH>
 80106e2:	05ea      	lsls	r2, r5, #23
 80106e4:	f140 80a6 	bpl.w	8010834 <SCROLLBAR_Callback+0x392>
 80106e8:	4620      	mov	r0, r4
 80106ea:	f44f 7180 	mov.w	r1, #256	; 0x100
 80106ee:	f7f5 ff9a 	bl	8006626 <WIDGET_AndState>
 80106f2:	4620      	mov	r0, r4
 80106f4:	f7fe feba 	bl	800f46c <GUI_ALLOC_LockH>
 80106f8:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 80106fa:	9005      	str	r0, [sp, #20]
 80106fc:	b113      	cbz	r3, 8010704 <SCROLLBAR_Callback+0x262>
 80106fe:	4620      	mov	r0, r4
 8010700:	f7ff fdd7 	bl	80102b2 <_DeleteTimer>
 8010704:	a80e      	add	r0, sp, #56	; 0x38
 8010706:	2200      	movs	r2, #0
 8010708:	f850 3d24 	ldr.w	r3, [r0, #-36]!
 801070c:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 801070e:	659a      	str	r2, [r3, #88]	; 0x58
 8010710:	f7fe feba 	bl	800f488 <GUI_ALLOC_UnlockH>
 8010714:	07ab      	lsls	r3, r5, #30
 8010716:	f140 808d 	bpl.w	8010834 <SCROLLBAR_Callback+0x392>
 801071a:	4620      	mov	r0, r4
 801071c:	2102      	movs	r1, #2
 801071e:	e04e      	b.n	80107be <SCROLLBAR_Callback+0x31c>
 8010720:	4620      	mov	r0, r4
 8010722:	f7fe fea3 	bl	800f46c <GUI_ALLOC_LockH>
 8010726:	ab0e      	add	r3, sp, #56	; 0x38
 8010728:	6d45      	ldr	r5, [r0, #84]	; 0x54
 801072a:	f843 0d24 	str.w	r0, [r3, #-36]!
 801072e:	4618      	mov	r0, r3
 8010730:	f7fe feaa 	bl	800f488 <GUI_ALLOC_UnlockH>
 8010734:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8010738:	6813      	ldr	r3, [r2, #0]
 801073a:	6852      	ldr	r2, [r2, #4]
 801073c:	2a00      	cmp	r2, #0
 801073e:	dd79      	ble.n	8010834 <SCROLLBAR_Callback+0x392>
 8010740:	3b10      	subs	r3, #16
 8010742:	2b12      	cmp	r3, #18
 8010744:	d876      	bhi.n	8010834 <SCROLLBAR_Callback+0x392>
 8010746:	e8df f003 	tbb	[pc, r3]
 801074a:	1616      	.short	0x1616
 801074c:	75751212 	.word	0x75751212
 8010750:	75757575 	.word	0x75757575
 8010754:	75757575 	.word	0x75757575
 8010758:	0a757575 	.word	0x0a757575
 801075c:	0d          	.byte	0x0d
 801075d:	00          	.byte	0x00
 801075e:	4620      	mov	r0, r4
 8010760:	4629      	mov	r1, r5
 8010762:	e001      	b.n	8010768 <SCROLLBAR_Callback+0x2c6>
 8010764:	4620      	mov	r0, r4
 8010766:	4269      	negs	r1, r5
 8010768:	f7ff fe81 	bl	801046e <SCROLLBAR_AddValue>
 801076c:	e062      	b.n	8010834 <SCROLLBAR_Callback+0x392>
 801076e:	4620      	mov	r0, r4
 8010770:	f7ff fe94 	bl	801049c <SCROLLBAR_Inc>
 8010774:	e05e      	b.n	8010834 <SCROLLBAR_Callback+0x392>
 8010776:	4620      	mov	r0, r4
 8010778:	f7ff fe8c 	bl	8010494 <SCROLLBAR_Dec>
 801077c:	e05a      	b.n	8010834 <SCROLLBAR_Callback+0x392>
 801077e:	4620      	mov	r0, r4
 8010780:	f8d8 600c 	ldr.w	r6, [r8, #12]
 8010784:	f7fe fe72 	bl	800f46c <GUI_ALLOC_LockH>
 8010788:	ad0e      	add	r5, sp, #56	; 0x38
 801078a:	4603      	mov	r3, r0
 801078c:	f845 0d24 	str.w	r0, [r5, #-36]!
 8010790:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8010792:	6830      	ldr	r0, [r6, #0]
 8010794:	68b1      	ldr	r1, [r6, #8]
 8010796:	4290      	cmp	r0, r2
 8010798:	6872      	ldr	r2, [r6, #4]
 801079a:	d105      	bne.n	80107a8 <SCROLLBAR_Callback+0x306>
 801079c:	6d5e      	ldr	r6, [r3, #84]	; 0x54
 801079e:	428e      	cmp	r6, r1
 80107a0:	d102      	bne.n	80107a8 <SCROLLBAR_Callback+0x306>
 80107a2:	6d1e      	ldr	r6, [r3, #80]	; 0x50
 80107a4:	4296      	cmp	r6, r2
 80107a6:	d00d      	beq.n	80107c4 <SCROLLBAR_Callback+0x322>
 80107a8:	64d8      	str	r0, [r3, #76]	; 0x4c
 80107aa:	6559      	str	r1, [r3, #84]	; 0x54
 80107ac:	651a      	str	r2, [r3, #80]	; 0x50
 80107ae:	4620      	mov	r0, r4
 80107b0:	f7f8 fd0d 	bl	80091ce <WM_InvalidateWindow>
 80107b4:	4628      	mov	r0, r5
 80107b6:	f7fe fe67 	bl	800f488 <GUI_ALLOC_UnlockH>
 80107ba:	4620      	mov	r0, r4
 80107bc:	2105      	movs	r1, #5
 80107be:	f7f7 fde4 	bl	800838a <WM_NotifyParent>
 80107c2:	e037      	b.n	8010834 <SCROLLBAR_Callback+0x392>
 80107c4:	4628      	mov	r0, r5
 80107c6:	e033      	b.n	8010830 <SCROLLBAR_Callback+0x38e>
 80107c8:	4620      	mov	r0, r4
 80107ca:	f7fe fe4f 	bl	800f46c <GUI_ALLOC_LockH>
 80107ce:	9005      	str	r0, [sp, #20]
 80107d0:	2800      	cmp	r0, #0
 80107d2:	d02f      	beq.n	8010834 <SCROLLBAR_Callback+0x392>
 80107d4:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80107d8:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 80107da:	601a      	str	r2, [r3, #0]
 80107dc:	6d42      	ldr	r2, [r0, #84]	; 0x54
 80107de:	609a      	str	r2, [r3, #8]
 80107e0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 80107e2:	605a      	str	r2, [r3, #4]
 80107e4:	e023      	b.n	801082e <SCROLLBAR_Callback+0x38c>
 80107e6:	4620      	mov	r0, r4
 80107e8:	f7fe fe40 	bl	800f46c <GUI_ALLOC_LockH>
 80107ec:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 80107ee:	9005      	str	r0, [sp, #20]
 80107f0:	b111      	cbz	r1, 80107f8 <SCROLLBAR_Callback+0x356>
 80107f2:	4620      	mov	r0, r4
 80107f4:	f7ff fe3b 	bl	801046e <SCROLLBAR_AddValue>
 80107f8:	9b05      	ldr	r3, [sp, #20]
 80107fa:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 80107fc:	6d19      	ldr	r1, [r3, #80]	; 0x50
 80107fe:	2a00      	cmp	r2, #0
 8010800:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8010802:	dd05      	ble.n	8010810 <SCROLLBAR_Callback+0x36e>
 8010804:	4291      	cmp	r1, r2
 8010806:	bfb4      	ite	lt
 8010808:	2100      	movlt	r1, #0
 801080a:	2101      	movge	r1, #1
 801080c:	dd06      	ble.n	801081c <SCROLLBAR_Callback+0x37a>
 801080e:	e004      	b.n	801081a <SCROLLBAR_Callback+0x378>
 8010810:	4291      	cmp	r1, r2
 8010812:	bfcc      	ite	gt
 8010814:	2100      	movgt	r1, #0
 8010816:	2101      	movle	r1, #1
 8010818:	da00      	bge.n	801081c <SCROLLBAR_Callback+0x37a>
 801081a:	651a      	str	r2, [r3, #80]	; 0x50
 801081c:	b119      	cbz	r1, 8010826 <SCROLLBAR_Callback+0x384>
 801081e:	4620      	mov	r0, r4
 8010820:	f7ff fd47 	bl	80102b2 <_DeleteTimer>
 8010824:	e003      	b.n	801082e <SCROLLBAR_Callback+0x38c>
 8010826:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8010828:	2132      	movs	r1, #50	; 0x32
 801082a:	f000 fd67 	bl	80112fc <WM_RestartTimer>
 801082e:	a805      	add	r0, sp, #20
 8010830:	f7fe fe2a 	bl	800f488 <GUI_ALLOC_UnlockH>
 8010834:	4640      	mov	r0, r8
 8010836:	f7f9 f8fb 	bl	8009a30 <WM_DefaultProc>
 801083a:	b00f      	add	sp, #60	; 0x3c
 801083c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010840 <GUI_ARRAY__GethItem>:
 8010840:	8803      	ldrh	r3, [r0, #0]
 8010842:	4299      	cmp	r1, r3
 8010844:	b513      	push	{r0, r1, r4, lr}
 8010846:	460c      	mov	r4, r1
 8010848:	d20e      	bcs.n	8010868 <GUI_ARRAY__GethItem+0x28>
 801084a:	6840      	ldr	r0, [r0, #4]
 801084c:	b150      	cbz	r0, 8010864 <GUI_ARRAY__GethItem+0x24>
 801084e:	f7fe fe0d 	bl	800f46c <GUI_ALLOC_LockH>
 8010852:	ab02      	add	r3, sp, #8
 8010854:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
 8010858:	f843 0d04 	str.w	r0, [r3, #-4]!
 801085c:	4618      	mov	r0, r3
 801085e:	f7fe fe13 	bl	800f488 <GUI_ALLOC_UnlockH>
 8010862:	e002      	b.n	801086a <GUI_ARRAY__GethItem+0x2a>
 8010864:	4604      	mov	r4, r0
 8010866:	e000      	b.n	801086a <GUI_ARRAY__GethItem+0x2a>
 8010868:	2400      	movs	r4, #0
 801086a:	4620      	mov	r0, r4
 801086c:	b002      	add	sp, #8
 801086e:	bd10      	pop	{r4, pc}

08010870 <GUI_ARRAY_GetNumItems>:
 8010870:	b513      	push	{r0, r1, r4, lr}
 8010872:	4604      	mov	r4, r0
 8010874:	b140      	cbz	r0, 8010888 <GUI_ARRAY_GetNumItems+0x18>
 8010876:	f7fe fdf9 	bl	800f46c <GUI_ALLOC_LockH>
 801087a:	ab02      	add	r3, sp, #8
 801087c:	8804      	ldrh	r4, [r0, #0]
 801087e:	f843 0d04 	str.w	r0, [r3, #-4]!
 8010882:	4618      	mov	r0, r3
 8010884:	f7fe fe00 	bl	800f488 <GUI_ALLOC_UnlockH>
 8010888:	4620      	mov	r0, r4
 801088a:	b002      	add	sp, #8
 801088c:	bd10      	pop	{r4, pc}

0801088e <GUI_ARRAY_AddItem>:
 801088e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8010892:	4605      	mov	r5, r0
 8010894:	2800      	cmp	r0, #0
 8010896:	d03d      	beq.n	8010914 <GUI_ARRAY_AddItem+0x86>
 8010898:	b14a      	cbz	r2, 80108ae <GUI_ARRAY_AddItem+0x20>
 801089a:	4608      	mov	r0, r1
 801089c:	4611      	mov	r1, r2
 801089e:	f003 fbe7 	bl	8014070 <GUI_ALLOC_AllocInit>
 80108a2:	f1d0 0401 	rsbs	r4, r0, #1
 80108a6:	4607      	mov	r7, r0
 80108a8:	bf38      	it	cc
 80108aa:	2400      	movcc	r4, #0
 80108ac:	e001      	b.n	80108b2 <GUI_ARRAY_AddItem+0x24>
 80108ae:	4614      	mov	r4, r2
 80108b0:	4617      	mov	r7, r2
 80108b2:	4628      	mov	r0, r5
 80108b4:	f7fe fdda 	bl	800f46c <GUI_ALLOC_LockH>
 80108b8:	ae02      	add	r6, sp, #8
 80108ba:	f8b0 8000 	ldrh.w	r8, [r0]
 80108be:	f846 0d08 	str.w	r0, [r6, #-8]!
 80108c2:	f8d0 9004 	ldr.w	r9, [r0, #4]
 80108c6:	4668      	mov	r0, sp
 80108c8:	f7fe fdde 	bl	800f488 <GUI_ALLOC_UnlockH>
 80108cc:	bb24      	cbnz	r4, 8010918 <GUI_ARRAY_AddItem+0x8a>
 80108ce:	f108 0101 	add.w	r1, r8, #1
 80108d2:	4648      	mov	r0, r9
 80108d4:	0089      	lsls	r1, r1, #2
 80108d6:	f002 ffc1 	bl	801385c <GUI_ALLOC_Realloc>
 80108da:	4681      	mov	r9, r0
 80108dc:	b918      	cbnz	r0, 80108e6 <GUI_ARRAY_AddItem+0x58>
 80108de:	4638      	mov	r0, r7
 80108e0:	f7fe fdfe 	bl	800f4e0 <GUI_ALLOC_Free>
 80108e4:	e018      	b.n	8010918 <GUI_ARRAY_AddItem+0x8a>
 80108e6:	f7fe fdc1 	bl	800f46c <GUI_ALLOC_LockH>
 80108ea:	ab02      	add	r3, sp, #8
 80108ec:	f843 0d04 	str.w	r0, [r3, #-4]!
 80108f0:	f840 7028 	str.w	r7, [r0, r8, lsl #2]
 80108f4:	4618      	mov	r0, r3
 80108f6:	f7fe fdc7 	bl	800f488 <GUI_ALLOC_UnlockH>
 80108fa:	4628      	mov	r0, r5
 80108fc:	f7fe fdb6 	bl	800f46c <GUI_ALLOC_LockH>
 8010900:	8803      	ldrh	r3, [r0, #0]
 8010902:	9000      	str	r0, [sp, #0]
 8010904:	3301      	adds	r3, #1
 8010906:	f8c0 9004 	str.w	r9, [r0, #4]
 801090a:	8003      	strh	r3, [r0, #0]
 801090c:	4668      	mov	r0, sp
 801090e:	f7fe fdbb 	bl	800f488 <GUI_ALLOC_UnlockH>
 8010912:	e002      	b.n	801091a <GUI_ARRAY_AddItem+0x8c>
 8010914:	4604      	mov	r4, r0
 8010916:	e000      	b.n	801091a <GUI_ARRAY_AddItem+0x8c>
 8010918:	2401      	movs	r4, #1
 801091a:	4620      	mov	r0, r4
 801091c:	b003      	add	sp, #12
 801091e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08010922 <GUI_ARRAY_Delete>:
 8010922:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010924:	4605      	mov	r5, r0
 8010926:	b318      	cbz	r0, 8010970 <GUI_ARRAY_Delete+0x4e>
 8010928:	f7fe fda0 	bl	800f46c <GUI_ALLOC_LockH>
 801092c:	9000      	str	r0, [sp, #0]
 801092e:	6840      	ldr	r0, [r0, #4]
 8010930:	b1c0      	cbz	r0, 8010964 <GUI_ARRAY_Delete+0x42>
 8010932:	f7fe fd9b 	bl	800f46c <GUI_ALLOC_LockH>
 8010936:	2400      	movs	r4, #0
 8010938:	9001      	str	r0, [sp, #4]
 801093a:	9b00      	ldr	r3, [sp, #0]
 801093c:	881b      	ldrh	r3, [r3, #0]
 801093e:	429c      	cmp	r4, r3
 8010940:	da06      	bge.n	8010950 <GUI_ARRAY_Delete+0x2e>
 8010942:	9801      	ldr	r0, [sp, #4]
 8010944:	eb00 0084 	add.w	r0, r0, r4, lsl #2
 8010948:	f7fe ffe8 	bl	800f91c <GUI_ALLOC_FreePtr>
 801094c:	3401      	adds	r4, #1
 801094e:	e7f4      	b.n	801093a <GUI_ARRAY_Delete+0x18>
 8010950:	a801      	add	r0, sp, #4
 8010952:	f7fe fd99 	bl	800f488 <GUI_ALLOC_UnlockH>
 8010956:	9800      	ldr	r0, [sp, #0]
 8010958:	3004      	adds	r0, #4
 801095a:	f7fe ffdf 	bl	800f91c <GUI_ALLOC_FreePtr>
 801095e:	9b00      	ldr	r3, [sp, #0]
 8010960:	2200      	movs	r2, #0
 8010962:	801a      	strh	r2, [r3, #0]
 8010964:	4668      	mov	r0, sp
 8010966:	f7fe fd8f 	bl	800f488 <GUI_ALLOC_UnlockH>
 801096a:	4628      	mov	r0, r5
 801096c:	f7fe fdb8 	bl	800f4e0 <GUI_ALLOC_Free>
 8010970:	b003      	add	sp, #12
 8010972:	bd30      	pop	{r4, r5, pc}

08010974 <GUI_ARRAY_GethItem>:
 8010974:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010976:	460e      	mov	r6, r1
 8010978:	4605      	mov	r5, r0
 801097a:	b158      	cbz	r0, 8010994 <GUI_ARRAY_GethItem+0x20>
 801097c:	f7fe fd76 	bl	800f46c <GUI_ALLOC_LockH>
 8010980:	ac02      	add	r4, sp, #8
 8010982:	4631      	mov	r1, r6
 8010984:	f844 0d04 	str.w	r0, [r4, #-4]!
 8010988:	f7ff ff5a 	bl	8010840 <GUI_ARRAY__GethItem>
 801098c:	4605      	mov	r5, r0
 801098e:	4620      	mov	r0, r4
 8010990:	f7fe fd7a 	bl	800f488 <GUI_ALLOC_UnlockH>
 8010994:	4628      	mov	r0, r5
 8010996:	b002      	add	sp, #8
 8010998:	bd70      	pop	{r4, r5, r6, pc}

0801099a <GUI_ARRAY_Create>:
 801099a:	2008      	movs	r0, #8
 801099c:	f7ff b846 	b.w	800fa2c <GUI_ALLOC_AllocZero>

080109a0 <BUTTON_DrawSkinFlex>:
 80109a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80109a4:	6883      	ldr	r3, [r0, #8]
 80109a6:	4a8a      	ldr	r2, [pc, #552]	; (8010bd0 <BUTTON_DrawSkinFlex+0x230>)
 80109a8:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
 80109ac:	6843      	ldr	r3, [r0, #4]
 80109ae:	2b05      	cmp	r3, #5
 80109b0:	b088      	sub	sp, #32
 80109b2:	4604      	mov	r4, r0
 80109b4:	d00e      	beq.n	80109d4 <BUTTON_DrawSkinFlex+0x34>
 80109b6:	dc06      	bgt.n	80109c6 <BUTTON_DrawSkinFlex+0x26>
 80109b8:	2b00      	cmp	r3, #0
 80109ba:	f040 8104 	bne.w	8010bc6 <BUTTON_DrawSkinFlex+0x226>
 80109be:	6800      	ldr	r0, [r0, #0]
 80109c0:	f7f7 fb08 	bl	8007fd4 <WM_SetHasTrans>
 80109c4:	e0ff      	b.n	8010bc6 <BUTTON_DrawSkinFlex+0x226>
 80109c6:	2b06      	cmp	r3, #6
 80109c8:	f000 8088 	beq.w	8010adc <BUTTON_DrawSkinFlex+0x13c>
 80109cc:	2b12      	cmp	r3, #18
 80109ce:	f000 80a9 	beq.w	8010b24 <BUTTON_DrawSkinFlex+0x184>
 80109d2:	e0f8      	b.n	8010bc6 <BUTTON_DrawSkinFlex+0x226>
 80109d4:	69ee      	ldr	r6, [r5, #28]
 80109d6:	2e00      	cmp	r6, #0
 80109d8:	d051      	beq.n	8010a7e <BUTTON_DrawSkinFlex+0xde>
 80109da:	9600      	str	r6, [sp, #0]
 80109dc:	682b      	ldr	r3, [r5, #0]
 80109de:	9301      	str	r3, [sp, #4]
 80109e0:	686b      	ldr	r3, [r5, #4]
 80109e2:	9302      	str	r3, [sp, #8]
 80109e4:	68ab      	ldr	r3, [r5, #8]
 80109e6:	9303      	str	r3, [sp, #12]
 80109e8:	3010      	adds	r0, #16
 80109ea:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 80109ec:	f002 fc56 	bl	801329c <GUI__DrawTwinArc4>
 80109f0:	2600      	movs	r6, #0
 80109f2:	f855 0026 	ldr.w	r0, [r5, r6, lsl #2]
 80109f6:	f7fd f8e1 	bl	800dbbc <GUI_SetColor>
 80109fa:	69eb      	ldr	r3, [r5, #28]
 80109fc:	6960      	ldr	r0, [r4, #20]
 80109fe:	6921      	ldr	r1, [r4, #16]
 8010a00:	69a2      	ldr	r2, [r4, #24]
 8010a02:	4430      	add	r0, r6
 8010a04:	4419      	add	r1, r3
 8010a06:	1ad2      	subs	r2, r2, r3
 8010a08:	f7fd fd28 	bl	800e45c <GUI_DrawHLine>
 8010a0c:	69eb      	ldr	r3, [r5, #28]
 8010a0e:	69e0      	ldr	r0, [r4, #28]
 8010a10:	6921      	ldr	r1, [r4, #16]
 8010a12:	69a2      	ldr	r2, [r4, #24]
 8010a14:	1b80      	subs	r0, r0, r6
 8010a16:	4419      	add	r1, r3
 8010a18:	1ad2      	subs	r2, r2, r3
 8010a1a:	f7fd fd1f 	bl	800e45c <GUI_DrawHLine>
 8010a1e:	69eb      	ldr	r3, [r5, #28]
 8010a20:	6920      	ldr	r0, [r4, #16]
 8010a22:	6961      	ldr	r1, [r4, #20]
 8010a24:	69e2      	ldr	r2, [r4, #28]
 8010a26:	4430      	add	r0, r6
 8010a28:	4419      	add	r1, r3
 8010a2a:	1ad2      	subs	r2, r2, r3
 8010a2c:	f7fd fa9e 	bl	800df6c <GUI_DrawVLine>
 8010a30:	69eb      	ldr	r3, [r5, #28]
 8010a32:	69a0      	ldr	r0, [r4, #24]
 8010a34:	6961      	ldr	r1, [r4, #20]
 8010a36:	69e2      	ldr	r2, [r4, #28]
 8010a38:	1b80      	subs	r0, r0, r6
 8010a3a:	4419      	add	r1, r3
 8010a3c:	1ad2      	subs	r2, r2, r3
 8010a3e:	3601      	adds	r6, #1
 8010a40:	f7fd fa94 	bl	800df6c <GUI_DrawVLine>
 8010a44:	2e02      	cmp	r6, #2
 8010a46:	d1d4      	bne.n	80109f2 <BUTTON_DrawSkinFlex+0x52>
 8010a48:	68a8      	ldr	r0, [r5, #8]
 8010a4a:	f7fd f8b7 	bl	800dbbc <GUI_SetColor>
 8010a4e:	69eb      	ldr	r3, [r5, #28]
 8010a50:	6920      	ldr	r0, [r4, #16]
 8010a52:	69e6      	ldr	r6, [r4, #28]
 8010a54:	6961      	ldr	r1, [r4, #20]
 8010a56:	18c2      	adds	r2, r0, r3
 8010a58:	4419      	add	r1, r3
 8010a5a:	3002      	adds	r0, #2
 8010a5c:	1af3      	subs	r3, r6, r3
 8010a5e:	3a01      	subs	r2, #1
 8010a60:	f7fd fa3e 	bl	800dee0 <GUI_FillRect>
 8010a64:	69eb      	ldr	r3, [r5, #28]
 8010a66:	69a2      	ldr	r2, [r4, #24]
 8010a68:	69e6      	ldr	r6, [r4, #28]
 8010a6a:	6961      	ldr	r1, [r4, #20]
 8010a6c:	1ad0      	subs	r0, r2, r3
 8010a6e:	4419      	add	r1, r3
 8010a70:	3001      	adds	r0, #1
 8010a72:	1af3      	subs	r3, r6, r3
 8010a74:	3a02      	subs	r2, #2
 8010a76:	f7fd fa33 	bl	800dee0 <GUI_FillRect>
 8010a7a:	69ee      	ldr	r6, [r5, #28]
 8010a7c:	e00f      	b.n	8010a9e <BUTTON_DrawSkinFlex+0xfe>
 8010a7e:	f855 0026 	ldr.w	r0, [r5, r6, lsl #2]
 8010a82:	f7fd f89b 	bl	800dbbc <GUI_SetColor>
 8010a86:	f104 0010 	add.w	r0, r4, #16
 8010a8a:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 8010a8c:	4430      	add	r0, r6
 8010a8e:	4431      	add	r1, r6
 8010a90:	1b92      	subs	r2, r2, r6
 8010a92:	1b9b      	subs	r3, r3, r6
 8010a94:	3601      	adds	r6, #1
 8010a96:	f7fe ffdf 	bl	800fa58 <GUI_DrawRect>
 8010a9a:	2e02      	cmp	r6, #2
 8010a9c:	d1ef      	bne.n	8010a7e <BUTTON_DrawSkinFlex+0xde>
 8010a9e:	f104 0010 	add.w	r0, r4, #16
 8010aa2:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 8010aa4:	68ef      	ldr	r7, [r5, #12]
 8010aa6:	9700      	str	r7, [sp, #0]
 8010aa8:	692f      	ldr	r7, [r5, #16]
 8010aaa:	9701      	str	r7, [sp, #4]
 8010aac:	440b      	add	r3, r1
 8010aae:	4430      	add	r0, r6
 8010ab0:	1b92      	subs	r2, r2, r6
 8010ab2:	3102      	adds	r1, #2
 8010ab4:	105b      	asrs	r3, r3, #1
 8010ab6:	f003 f913 	bl	8013ce0 <GUI_DrawGradientV>
 8010aba:	69e3      	ldr	r3, [r4, #28]
 8010abc:	6962      	ldr	r2, [r4, #20]
 8010abe:	6920      	ldr	r0, [r4, #16]
 8010ac0:	441a      	add	r2, r3
 8010ac2:	1051      	asrs	r1, r2, #1
 8010ac4:	69a2      	ldr	r2, [r4, #24]
 8010ac6:	696c      	ldr	r4, [r5, #20]
 8010ac8:	9400      	str	r4, [sp, #0]
 8010aca:	69ac      	ldr	r4, [r5, #24]
 8010acc:	9401      	str	r4, [sp, #4]
 8010ace:	4430      	add	r0, r6
 8010ad0:	3101      	adds	r1, #1
 8010ad2:	1b92      	subs	r2, r2, r6
 8010ad4:	3b02      	subs	r3, #2
 8010ad6:	f003 f903 	bl	8013ce0 <GUI_DrawGradientV>
 8010ada:	e074      	b.n	8010bc6 <BUTTON_DrawSkinFlex+0x226>
 8010adc:	6800      	ldr	r0, [r0, #0]
 8010ade:	f7fe fcc5 	bl	800f46c <GUI_ALLOC_LockH>
 8010ae2:	9004      	str	r0, [sp, #16]
 8010ae4:	6820      	ldr	r0, [r4, #0]
 8010ae6:	f000 f903 	bl	8010cf0 <WM__IsEnabled>
 8010aea:	9b04      	ldr	r3, [sp, #16]
 8010aec:	b130      	cbz	r0, 8010afc <BUTTON_DrawSkinFlex+0x15c>
 8010aee:	68a2      	ldr	r2, [r4, #8]
 8010af0:	b952      	cbnz	r2, 8010b08 <BUTTON_DrawSkinFlex+0x168>
 8010af2:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8010af4:	3200      	adds	r2, #0
 8010af6:	bf18      	it	ne
 8010af8:	2201      	movne	r2, #1
 8010afa:	e006      	b.n	8010b0a <BUTTON_DrawSkinFlex+0x16a>
 8010afc:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8010afe:	2a00      	cmp	r2, #0
 8010b00:	bf0c      	ite	eq
 8010b02:	2200      	moveq	r2, #0
 8010b04:	2202      	movne	r2, #2
 8010b06:	e000      	b.n	8010b0a <BUTTON_DrawSkinFlex+0x16a>
 8010b08:	2200      	movs	r2, #0
 8010b0a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010b0e:	a804      	add	r0, sp, #16
 8010b10:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 8010b12:	f7fe fcb9 	bl	800f488 <GUI_ALLOC_UnlockH>
 8010b16:	2200      	movs	r2, #0
 8010b18:	4628      	mov	r0, r5
 8010b1a:	6821      	ldr	r1, [r4, #0]
 8010b1c:	4613      	mov	r3, r2
 8010b1e:	f003 fe64 	bl	80147ea <GUI_DRAW__Draw>
 8010b22:	e050      	b.n	8010bc6 <BUTTON_DrawSkinFlex+0x226>
 8010b24:	6800      	ldr	r0, [r0, #0]
 8010b26:	f7fe fca1 	bl	800f46c <GUI_ALLOC_LockH>
 8010b2a:	ae08      	add	r6, sp, #32
 8010b2c:	6e87      	ldr	r7, [r0, #104]	; 0x68
 8010b2e:	f846 0d10 	str.w	r0, [r6, #-16]!
 8010b32:	2f00      	cmp	r7, #0
 8010b34:	d044      	beq.n	8010bc0 <BUTTON_DrawSkinFlex+0x220>
 8010b36:	68a2      	ldr	r2, [r4, #8]
 8010b38:	f9b0 805c 	ldrsh.w	r8, [r0, #92]	; 0x5c
 8010b3c:	b122      	cbz	r2, 8010b48 <BUTTON_DrawSkinFlex+0x1a8>
 8010b3e:	2a03      	cmp	r2, #3
 8010b40:	bf14      	ite	ne
 8010b42:	2100      	movne	r1, #0
 8010b44:	2102      	moveq	r1, #2
 8010b46:	e000      	b.n	8010b4a <BUTTON_DrawSkinFlex+0x1aa>
 8010b48:	2101      	movs	r1, #1
 8010b4a:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8010b4e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8010b50:	6c0c      	ldr	r4, [r1, #64]	; 0x40
 8010b52:	f7fd f805 	bl	800db60 <GUI_SetFont>
 8010b56:	4620      	mov	r0, r4
 8010b58:	f7fd f830 	bl	800dbbc <GUI_SetColor>
 8010b5c:	a806      	add	r0, sp, #24
 8010b5e:	f002 feb6 	bl	80138ce <GUI_GetClientRect>
 8010b62:	8bab      	ldrh	r3, [r5, #28]
 8010b64:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 8010b68:	441a      	add	r2, r3
 8010b6a:	f8ad 2018 	strh.w	r2, [sp, #24]
 8010b6e:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 8010b72:	1ad3      	subs	r3, r2, r3
 8010b74:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010b78:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8010b7c:	3302      	adds	r3, #2
 8010b7e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010b82:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 8010b86:	3b02      	subs	r3, #2
 8010b88:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010b8c:	9b04      	ldr	r3, [sp, #16]
 8010b8e:	a806      	add	r0, sp, #24
 8010b90:	f9b3 105e 	ldrsh.w	r1, [r3, #94]	; 0x5e
 8010b94:	f9b3 2060 	ldrsh.w	r2, [r3, #96]	; 0x60
 8010b98:	f7fd f948 	bl	800de2c <GUI_MoveRect>
 8010b9c:	4630      	mov	r0, r6
 8010b9e:	f7fe fc73 	bl	800f488 <GUI_ALLOC_UnlockH>
 8010ba2:	2002      	movs	r0, #2
 8010ba4:	f7fc ffc0 	bl	800db28 <GUI_SetTextMode>
 8010ba8:	4638      	mov	r0, r7
 8010baa:	f7fe fc5f 	bl	800f46c <GUI_ALLOC_LockH>
 8010bae:	ac08      	add	r4, sp, #32
 8010bb0:	a906      	add	r1, sp, #24
 8010bb2:	f844 0d0c 	str.w	r0, [r4, #-12]!
 8010bb6:	4642      	mov	r2, r8
 8010bb8:	f003 f9bf 	bl	8013f3a <GUI_DispStringInRect>
 8010bbc:	4620      	mov	r0, r4
 8010bbe:	e000      	b.n	8010bc2 <BUTTON_DrawSkinFlex+0x222>
 8010bc0:	4630      	mov	r0, r6
 8010bc2:	f7fe fc61 	bl	800f488 <GUI_ALLOC_UnlockH>
 8010bc6:	2000      	movs	r0, #0
 8010bc8:	b008      	add	sp, #32
 8010bca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010bce:	bf00      	nop
 8010bd0:	0801734c 	.word	0x0801734c

08010bd4 <_Create>:
 8010bd4:	b530      	push	{r4, r5, lr}
 8010bd6:	b08b      	sub	sp, #44	; 0x2c
 8010bd8:	2100      	movs	r1, #0
 8010bda:	4604      	mov	r4, r0
 8010bdc:	2224      	movs	r2, #36	; 0x24
 8010bde:	a801      	add	r0, sp, #4
 8010be0:	f004 fb71 	bl	80152c6 <memset>
 8010be4:	4620      	mov	r0, r4
 8010be6:	f7fe fc41 	bl	800f46c <GUI_ALLOC_LockH>
 8010bea:	ab0a      	add	r3, sp, #40	; 0x28
 8010bec:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8010bee:	f843 0d28 	str.w	r0, [r3, #-40]!
 8010bf2:	6895      	ldr	r5, [r2, #8]
 8010bf4:	4668      	mov	r0, sp
 8010bf6:	f7fe fc47 	bl	800f488 <GUI_ALLOC_UnlockH>
 8010bfa:	2300      	movs	r3, #0
 8010bfc:	9302      	str	r3, [sp, #8]
 8010bfe:	9401      	str	r4, [sp, #4]
 8010c00:	682b      	ldr	r3, [r5, #0]
 8010c02:	a801      	add	r0, sp, #4
 8010c04:	4798      	blx	r3
 8010c06:	b00b      	add	sp, #44	; 0x2c
 8010c08:	bd30      	pop	{r4, r5, pc}

08010c0a <_Paint>:
 8010c0a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010c0e:	b08a      	sub	sp, #40	; 0x28
 8010c10:	4605      	mov	r5, r0
 8010c12:	f7fe fc2b 	bl	800f46c <GUI_ALLOC_LockH>
 8010c16:	4603      	mov	r3, r0
 8010c18:	a80a      	add	r0, sp, #40	; 0x28
 8010c1a:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 8010c1c:	f840 3d28 	str.w	r3, [r0, #-40]!
 8010c20:	4668      	mov	r0, sp
 8010c22:	6d9c      	ldr	r4, [r3, #88]	; 0x58
 8010c24:	8e5f      	ldrh	r7, [r3, #50]	; 0x32
 8010c26:	f7fe fc2f 	bl	800f488 <GUI_ALLOC_UnlockH>
 8010c2a:	4628      	mov	r0, r5
 8010c2c:	f7f7 fc82 	bl	8008534 <WM_GetWindowSizeX>
 8010c30:	4680      	mov	r8, r0
 8010c32:	4628      	mov	r0, r5
 8010c34:	f7f7 fc93 	bl	800855e <WM_GetWindowSizeY>
 8010c38:	2300      	movs	r3, #0
 8010c3a:	9306      	str	r3, [sp, #24]
 8010c3c:	9305      	str	r3, [sp, #20]
 8010c3e:	3801      	subs	r0, #1
 8010c40:	f108 33ff 	add.w	r3, r8, #4294967295
 8010c44:	f016 0610 	ands.w	r6, r6, #16
 8010c48:	9501      	str	r5, [sp, #4]
 8010c4a:	9307      	str	r3, [sp, #28]
 8010c4c:	9008      	str	r0, [sp, #32]
 8010c4e:	d001      	beq.n	8010c54 <_Paint+0x4a>
 8010c50:	2303      	movs	r3, #3
 8010c52:	e007      	b.n	8010c64 <_Paint+0x5a>
 8010c54:	05fa      	lsls	r2, r7, #23
 8010c56:	d501      	bpl.n	8010c5c <_Paint+0x52>
 8010c58:	9603      	str	r6, [sp, #12]
 8010c5a:	e004      	b.n	8010c66 <_Paint+0x5c>
 8010c5c:	07fb      	lsls	r3, r7, #31
 8010c5e:	bf4c      	ite	mi
 8010c60:	2301      	movmi	r3, #1
 8010c62:	2302      	movpl	r3, #2
 8010c64:	9303      	str	r3, [sp, #12]
 8010c66:	2305      	movs	r3, #5
 8010c68:	9302      	str	r3, [sp, #8]
 8010c6a:	a801      	add	r0, sp, #4
 8010c6c:	47a0      	blx	r4
 8010c6e:	2306      	movs	r3, #6
 8010c70:	9302      	str	r3, [sp, #8]
 8010c72:	a801      	add	r0, sp, #4
 8010c74:	47a0      	blx	r4
 8010c76:	2312      	movs	r3, #18
 8010c78:	9302      	str	r3, [sp, #8]
 8010c7a:	a801      	add	r0, sp, #4
 8010c7c:	47a0      	blx	r4
 8010c7e:	230a      	movs	r3, #10
 8010c80:	9302      	str	r3, [sp, #8]
 8010c82:	a801      	add	r0, sp, #4
 8010c84:	47a0      	blx	r4
 8010c86:	b00a      	add	sp, #40	; 0x28
 8010c88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010c8c <WM__SendMessageNoPara>:
 8010c8c:	b530      	push	{r4, r5, lr}
 8010c8e:	b085      	sub	sp, #20
 8010c90:	4604      	mov	r4, r0
 8010c92:	2210      	movs	r2, #16
 8010c94:	460d      	mov	r5, r1
 8010c96:	4668      	mov	r0, sp
 8010c98:	2100      	movs	r1, #0
 8010c9a:	f004 fb14 	bl	80152c6 <memset>
 8010c9e:	4620      	mov	r0, r4
 8010ca0:	f7fe fbda 	bl	800f458 <GUI_ALLOC_h2p>
 8010ca4:	6903      	ldr	r3, [r0, #16]
 8010ca6:	b11b      	cbz	r3, 8010cb0 <WM__SendMessageNoPara+0x24>
 8010ca8:	9401      	str	r4, [sp, #4]
 8010caa:	9500      	str	r5, [sp, #0]
 8010cac:	4668      	mov	r0, sp
 8010cae:	4798      	blx	r3
 8010cb0:	b005      	add	sp, #20
 8010cb2:	bd30      	pop	{r4, r5, pc}

08010cb4 <WM__SendMessage>:
 8010cb4:	b570      	push	{r4, r5, r6, lr}
 8010cb6:	4c0d      	ldr	r4, [pc, #52]	; (8010cec <WM__SendMessage+0x38>)
 8010cb8:	6823      	ldr	r3, [r4, #0]
 8010cba:	2b13      	cmp	r3, #19
 8010cbc:	4606      	mov	r6, r0
 8010cbe:	460d      	mov	r5, r1
 8010cc0:	dc12      	bgt.n	8010ce8 <WM__SendMessage+0x34>
 8010cc2:	f7fe fbc9 	bl	800f458 <GUI_ALLOC_h2p>
 8010cc6:	6903      	ldr	r3, [r0, #16]
 8010cc8:	606e      	str	r6, [r5, #4]
 8010cca:	b143      	cbz	r3, 8010cde <WM__SendMessage+0x2a>
 8010ccc:	6822      	ldr	r2, [r4, #0]
 8010cce:	4628      	mov	r0, r5
 8010cd0:	3201      	adds	r2, #1
 8010cd2:	6022      	str	r2, [r4, #0]
 8010cd4:	4798      	blx	r3
 8010cd6:	6823      	ldr	r3, [r4, #0]
 8010cd8:	3b01      	subs	r3, #1
 8010cda:	6023      	str	r3, [r4, #0]
 8010cdc:	bd70      	pop	{r4, r5, r6, pc}
 8010cde:	4628      	mov	r0, r5
 8010ce0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010ce4:	f7f8 bea4 	b.w	8009a30 <WM_DefaultProc>
 8010ce8:	bd70      	pop	{r4, r5, r6, pc}
 8010cea:	bf00      	nop
 8010cec:	20019f1c 	.word	0x20019f1c

08010cf0 <WM__IsEnabled>:
 8010cf0:	b508      	push	{r3, lr}
 8010cf2:	f7fe fbb1 	bl	800f458 <GUI_ALLOC_h2p>
 8010cf6:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8010cf8:	f080 0010 	eor.w	r0, r0, #16
 8010cfc:	f3c0 1000 	ubfx	r0, r0, #4, #1
 8010d00:	bd08      	pop	{r3, pc}

08010d02 <WM__GetPrevSibling>:
 8010d02:	b538      	push	{r3, r4, r5, lr}
 8010d04:	4605      	mov	r5, r0
 8010d06:	f000 f82d 	bl	8010d64 <WM__GetFirstSibling>
 8010d0a:	4604      	mov	r4, r0
 8010d0c:	b154      	cbz	r4, 8010d24 <WM__GetPrevSibling+0x22>
 8010d0e:	42ac      	cmp	r4, r5
 8010d10:	d007      	beq.n	8010d22 <WM__GetPrevSibling+0x20>
 8010d12:	4620      	mov	r0, r4
 8010d14:	f7fe fba0 	bl	800f458 <GUI_ALLOC_h2p>
 8010d18:	6a03      	ldr	r3, [r0, #32]
 8010d1a:	42ab      	cmp	r3, r5
 8010d1c:	d002      	beq.n	8010d24 <WM__GetPrevSibling+0x22>
 8010d1e:	461c      	mov	r4, r3
 8010d20:	e7f4      	b.n	8010d0c <WM__GetPrevSibling+0xa>
 8010d22:	2400      	movs	r4, #0
 8010d24:	4620      	mov	r0, r4
 8010d26:	bd38      	pop	{r3, r4, r5, pc}

08010d28 <WM__GetLastSibling>:
 8010d28:	b510      	push	{r4, lr}
 8010d2a:	4604      	mov	r4, r0
 8010d2c:	b130      	cbz	r0, 8010d3c <WM__GetLastSibling+0x14>
 8010d2e:	4620      	mov	r0, r4
 8010d30:	f7fe fb92 	bl	800f458 <GUI_ALLOC_h2p>
 8010d34:	6a03      	ldr	r3, [r0, #32]
 8010d36:	b10b      	cbz	r3, 8010d3c <WM__GetLastSibling+0x14>
 8010d38:	461c      	mov	r4, r3
 8010d3a:	e7f8      	b.n	8010d2e <WM__GetLastSibling+0x6>
 8010d3c:	4620      	mov	r0, r4
 8010d3e:	bd10      	pop	{r4, pc}

08010d40 <WM__GetFocussedChild>:
 8010d40:	b538      	push	{r3, r4, r5, lr}
 8010d42:	4d06      	ldr	r5, [pc, #24]	; (8010d5c <WM__GetFocussedChild+0x1c>)
 8010d44:	4c06      	ldr	r4, [pc, #24]	; (8010d60 <WM__GetFocussedChild+0x20>)
 8010d46:	682b      	ldr	r3, [r5, #0]
 8010d48:	4601      	mov	r1, r0
 8010d4a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8010d4e:	f003 fd72 	bl	8014836 <WM__IsChild>
 8010d52:	b110      	cbz	r0, 8010d5a <WM__GetFocussedChild+0x1a>
 8010d54:	682b      	ldr	r3, [r5, #0]
 8010d56:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8010d5a:	bd38      	pop	{r3, r4, r5, pc}
 8010d5c:	2001b9d8 	.word	0x2001b9d8
 8010d60:	2001b9c8 	.word	0x2001b9c8

08010d64 <WM__GetFirstSibling>:
 8010d64:	b508      	push	{r3, lr}
 8010d66:	f7f7 fc3b 	bl	80085e0 <WM_GetParent>
 8010d6a:	b118      	cbz	r0, 8010d74 <WM__GetFirstSibling+0x10>
 8010d6c:	f7fe fb74 	bl	800f458 <GUI_ALLOC_h2p>
 8010d70:	69c0      	ldr	r0, [r0, #28]
 8010d72:	bd08      	pop	{r3, pc}
 8010d74:	bd08      	pop	{r3, pc}
	...

08010d78 <WM_ValidateWindow>:
 8010d78:	b507      	push	{r0, r1, r2, lr}
 8010d7a:	b178      	cbz	r0, 8010d9c <WM_ValidateWindow+0x24>
 8010d7c:	f7fe fb76 	bl	800f46c <GUI_ALLOC_LockH>
 8010d80:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010d82:	9001      	str	r0, [sp, #4]
 8010d84:	069a      	lsls	r2, r3, #26
 8010d86:	d506      	bpl.n	8010d96 <WM_ValidateWindow+0x1e>
 8010d88:	f023 0320 	bic.w	r3, r3, #32
 8010d8c:	6283      	str	r3, [r0, #40]	; 0x28
 8010d8e:	4b05      	ldr	r3, [pc, #20]	; (8010da4 <WM_ValidateWindow+0x2c>)
 8010d90:	881a      	ldrh	r2, [r3, #0]
 8010d92:	3a01      	subs	r2, #1
 8010d94:	801a      	strh	r2, [r3, #0]
 8010d96:	a801      	add	r0, sp, #4
 8010d98:	f7fe fb76 	bl	800f488 <GUI_ALLOC_UnlockH>
 8010d9c:	b003      	add	sp, #12
 8010d9e:	f85d fb04 	ldr.w	pc, [sp], #4
 8010da2:	bf00      	nop
 8010da4:	2001b9d0 	.word	0x2001b9d0

08010da8 <WM__IsInModalArea>:
 8010da8:	4b12      	ldr	r3, [pc, #72]	; (8010df4 <WM__IsInModalArea+0x4c>)
 8010daa:	681b      	ldr	r3, [r3, #0]
 8010dac:	2b00      	cmp	r3, #0
 8010dae:	b570      	push	{r4, r5, r6, lr}
 8010db0:	4604      	mov	r4, r0
 8010db2:	da0f      	bge.n	8010dd4 <WM__IsInModalArea+0x2c>
 8010db4:	4e10      	ldr	r6, [pc, #64]	; (8010df8 <WM__IsInModalArea+0x50>)
 8010db6:	4d11      	ldr	r5, [pc, #68]	; (8010dfc <WM__IsInModalArea+0x54>)
 8010db8:	6833      	ldr	r3, [r6, #0]
 8010dba:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
 8010dbe:	4620      	mov	r0, r4
 8010dc0:	6859      	ldr	r1, [r3, #4]
 8010dc2:	f7f7 f8bd 	bl	8007f40 <WM__IsAncestor>
 8010dc6:	6833      	ldr	r3, [r6, #0]
 8010dc8:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 8010dcc:	686a      	ldr	r2, [r5, #4]
 8010dce:	686b      	ldr	r3, [r5, #4]
 8010dd0:	b942      	cbnz	r2, 8010de4 <WM__IsInModalArea+0x3c>
 8010dd2:	e00c      	b.n	8010dee <WM__IsInModalArea+0x46>
 8010dd4:	4a0a      	ldr	r2, [pc, #40]	; (8010e00 <WM__IsInModalArea+0x58>)
 8010dd6:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8010dda:	f7f7 f8b1 	bl	8007f40 <WM__IsAncestor>
 8010dde:	2800      	cmp	r0, #0
 8010de0:	d1e8      	bne.n	8010db4 <WM__IsInModalArea+0xc>
 8010de2:	bd70      	pop	{r4, r5, r6, pc}
 8010de4:	b918      	cbnz	r0, 8010dee <WM__IsInModalArea+0x46>
 8010de6:	1ae3      	subs	r3, r4, r3
 8010de8:	4258      	negs	r0, r3
 8010dea:	4158      	adcs	r0, r3
 8010dec:	bd70      	pop	{r4, r5, r6, pc}
 8010dee:	2001      	movs	r0, #1
 8010df0:	bd70      	pop	{r4, r5, r6, pc}
 8010df2:	bf00      	nop
 8010df4:	20000388 	.word	0x20000388
 8010df8:	2001b9d8 	.word	0x2001b9d8
 8010dfc:	2001bb24 	.word	0x2001bb24
 8010e00:	2001b9b8 	.word	0x2001b9b8

08010e04 <WM__SendPIDMessage>:
 8010e04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010e06:	4606      	mov	r6, r0
 8010e08:	460c      	mov	r4, r1
 8010e0a:	c90f      	ldmia	r1, {r0, r1, r2, r3}
 8010e0c:	b085      	sub	sp, #20
 8010e0e:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
 8010e12:	230d      	movs	r3, #13
 8010e14:	9602      	str	r6, [sp, #8]
 8010e16:	9300      	str	r3, [sp, #0]
 8010e18:	4637      	mov	r7, r6
 8010e1a:	4638      	mov	r0, r7
 8010e1c:	f7f7 fb4b 	bl	80084b6 <WM_IsWindow>
 8010e20:	b150      	cbz	r0, 8010e38 <WM__SendPIDMessage+0x34>
 8010e22:	4638      	mov	r0, r7
 8010e24:	f7f7 fbdc 	bl	80085e0 <WM_GetParent>
 8010e28:	4607      	mov	r7, r0
 8010e2a:	2800      	cmp	r0, #0
 8010e2c:	d0f5      	beq.n	8010e1a <WM__SendPIDMessage+0x16>
 8010e2e:	4669      	mov	r1, sp
 8010e30:	9403      	str	r4, [sp, #12]
 8010e32:	f003 fcf3 	bl	801481c <WM__SendMessageIfEnabled>
 8010e36:	e7f0      	b.n	8010e1a <WM__SendPIDMessage+0x16>
 8010e38:	4630      	mov	r0, r6
 8010e3a:	4621      	mov	r1, r4
 8010e3c:	f003 fcee 	bl	801481c <WM__SendMessageIfEnabled>
 8010e40:	b005      	add	sp, #20
 8010e42:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010e44 <WM__SendTouchMessage>:
 8010e44:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010e46:	68cc      	ldr	r4, [r1, #12]
 8010e48:	4606      	mov	r6, r0
 8010e4a:	460d      	mov	r5, r1
 8010e4c:	b194      	cbz	r4, 8010e74 <WM__SendTouchMessage+0x30>
 8010e4e:	f7fe fb0d 	bl	800f46c <GUI_ALLOC_LockH>
 8010e52:	ab02      	add	r3, sp, #8
 8010e54:	4602      	mov	r2, r0
 8010e56:	f843 0d04 	str.w	r0, [r3, #-4]!
 8010e5a:	6821      	ldr	r1, [r4, #0]
 8010e5c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8010e60:	1a09      	subs	r1, r1, r0
 8010e62:	6021      	str	r1, [r4, #0]
 8010e64:	f9b2 1002 	ldrsh.w	r1, [r2, #2]
 8010e68:	6862      	ldr	r2, [r4, #4]
 8010e6a:	1a52      	subs	r2, r2, r1
 8010e6c:	6062      	str	r2, [r4, #4]
 8010e6e:	4618      	mov	r0, r3
 8010e70:	f7fe fb0a 	bl	800f488 <GUI_ALLOC_UnlockH>
 8010e74:	4630      	mov	r0, r6
 8010e76:	4629      	mov	r1, r5
 8010e78:	f7ff ffc4 	bl	8010e04 <WM__SendPIDMessage>
 8010e7c:	b002      	add	sp, #8
 8010e7e:	bd70      	pop	{r4, r5, r6, pc}

08010e80 <WM_HandlePID>:
 8010e80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e84:	b097      	sub	sp, #92	; 0x5c
 8010e86:	ae06      	add	r6, sp, #24
 8010e88:	f04f 080c 	mov.w	r8, #12
 8010e8c:	2100      	movs	r1, #0
 8010e8e:	4642      	mov	r2, r8
 8010e90:	4630      	mov	r0, r6
 8010e92:	f004 fa18 	bl	80152c6 <memset>
 8010e96:	f7fc ff91 	bl	800ddbc <GUI_PID_IsEmpty>
 8010e9a:	b108      	cbz	r0, 8010ea0 <WM_HandlePID+0x20>
 8010e9c:	2000      	movs	r0, #0
 8010e9e:	e1aa      	b.n	80111f6 <WM_HandlePID+0x376>
 8010ea0:	ac09      	add	r4, sp, #36	; 0x24
 8010ea2:	4620      	mov	r0, r4
 8010ea4:	f7fc ff0e 	bl	800dcc4 <GUI_PID_GetState>
 8010ea8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010eaa:	4dad      	ldr	r5, [pc, #692]	; (8011160 <WM_HandlePID+0x2e0>)
 8010eac:	4fad      	ldr	r7, [pc, #692]	; (8011164 <WM_HandlePID+0x2e4>)
 8010eae:	1c5a      	adds	r2, r3, #1
 8010eb0:	d112      	bne.n	8010ed8 <WM_HandlePID+0x58>
 8010eb2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010eb4:	3301      	adds	r3, #1
 8010eb6:	d11e      	bne.n	8010ef6 <WM_HandlePID+0x76>
 8010eb8:	682b      	ldr	r3, [r5, #0]
 8010eba:	f89d 202c 	ldrb.w	r2, [sp, #44]	; 0x2c
 8010ebe:	fb08 f803 	mul.w	r8, r8, r3
 8010ec2:	eb07 0308 	add.w	r3, r7, r8
 8010ec6:	7a19      	ldrb	r1, [r3, #8]
 8010ec8:	4291      	cmp	r1, r2
 8010eca:	d0e7      	beq.n	8010e9c <WM_HandlePID+0x1c>
 8010ecc:	f857 2008 	ldr.w	r2, [r7, r8]
 8010ed0:	685b      	ldr	r3, [r3, #4]
 8010ed2:	9209      	str	r2, [sp, #36]	; 0x24
 8010ed4:	930a      	str	r3, [sp, #40]	; 0x28
 8010ed6:	e00e      	b.n	8010ef6 <WM_HandlePID+0x76>
 8010ed8:	2b00      	cmp	r3, #0
 8010eda:	db0c      	blt.n	8010ef6 <WM_HandlePID+0x76>
 8010edc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010ede:	2a00      	cmp	r2, #0
 8010ee0:	db09      	blt.n	8010ef6 <WM_HandlePID+0x76>
 8010ee2:	49a1      	ldr	r1, [pc, #644]	; (8011168 <WM_HandlePID+0x2e8>)
 8010ee4:	f9b1 1000 	ldrsh.w	r1, [r1]
 8010ee8:	440b      	add	r3, r1
 8010eea:	9309      	str	r3, [sp, #36]	; 0x24
 8010eec:	4b9f      	ldr	r3, [pc, #636]	; (801116c <WM_HandlePID+0x2ec>)
 8010eee:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010ef2:	441a      	add	r2, r3
 8010ef4:	920a      	str	r2, [sp, #40]	; 0x28
 8010ef6:	a804      	add	r0, sp, #16
 8010ef8:	f000 faf4 	bl	80114e4 <WM__AddCriticalHandle>
 8010efc:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8010f00:	2b01      	cmp	r3, #1
 8010f02:	bf98      	it	ls
 8010f04:	602b      	strls	r3, [r5, #0]
 8010f06:	6828      	ldr	r0, [r5, #0]
 8010f08:	a901      	add	r1, sp, #4
 8010f0a:	aa02      	add	r2, sp, #8
 8010f0c:	f7fc fe74 	bl	800dbf8 <GUI_GetLayerPosEx>
 8010f10:	9b01      	ldr	r3, [sp, #4]
 8010f12:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010f14:	990a      	ldr	r1, [sp, #40]	; 0x28
 8010f16:	1ac0      	subs	r0, r0, r3
 8010f18:	9b02      	ldr	r3, [sp, #8]
 8010f1a:	9009      	str	r0, [sp, #36]	; 0x24
 8010f1c:	1ac9      	subs	r1, r1, r3
 8010f1e:	682b      	ldr	r3, [r5, #0]
 8010f20:	910a      	str	r1, [sp, #40]	; 0x28
 8010f22:	220c      	movs	r2, #12
 8010f24:	435a      	muls	r2, r3
 8010f26:	18bb      	adds	r3, r7, r2
 8010f28:	58ba      	ldr	r2, [r7, r2]
 8010f2a:	4282      	cmp	r2, r0
 8010f2c:	d108      	bne.n	8010f40 <WM_HandlePID+0xc0>
 8010f2e:	685a      	ldr	r2, [r3, #4]
 8010f30:	428a      	cmp	r2, r1
 8010f32:	d105      	bne.n	8010f40 <WM_HandlePID+0xc0>
 8010f34:	7a1a      	ldrb	r2, [r3, #8]
 8010f36:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8010f3a:	429a      	cmp	r2, r3
 8010f3c:	f000 8156 	beq.w	80111ec <WM_HandlePID+0x36c>
 8010f40:	f89d 202d 	ldrb.w	r2, [sp, #45]	; 0x2d
 8010f44:	f002 fffe 	bl	8013f44 <GUI_CURSOR_SetPositionEx>
 8010f48:	4b89      	ldr	r3, [pc, #548]	; (8011170 <WM_HandlePID+0x2f0>)
 8010f4a:	681b      	ldr	r3, [r3, #0]
 8010f4c:	b113      	cbz	r3, 8010f54 <WM_HandlePID+0xd4>
 8010f4e:	4620      	mov	r0, r4
 8010f50:	2100      	movs	r1, #0
 8010f52:	4798      	blx	r3
 8010f54:	682b      	ldr	r3, [r5, #0]
 8010f56:	4a87      	ldr	r2, [pc, #540]	; (8011174 <WM_HandlePID+0x2f4>)
 8010f58:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8010f5c:	b918      	cbnz	r0, 8010f66 <WM_HandlePID+0xe6>
 8010f5e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010f60:	990a      	ldr	r1, [sp, #40]	; 0x28
 8010f62:	f000 fa5f 	bl	8011424 <WM_Screen2hWin>
 8010f66:	4b84      	ldr	r3, [pc, #528]	; (8011178 <WM_HandlePID+0x2f8>)
 8010f68:	9005      	str	r0, [sp, #20]
 8010f6a:	681b      	ldr	r3, [r3, #0]
 8010f6c:	b113      	cbz	r3, 8010f74 <WM_HandlePID+0xf4>
 8010f6e:	9905      	ldr	r1, [sp, #20]
 8010f70:	4620      	mov	r0, r4
 8010f72:	4798      	blx	r3
 8010f74:	4981      	ldr	r1, [pc, #516]	; (801117c <WM_HandlePID+0x2fc>)
 8010f76:	682b      	ldr	r3, [r5, #0]
 8010f78:	f8df 91e4 	ldr.w	r9, [pc, #484]	; 8011160 <WM_HandlePID+0x2e0>
 8010f7c:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 8010f80:	4688      	mov	r8, r1
 8010f82:	685a      	ldr	r2, [r3, #4]
 8010f84:	9805      	ldr	r0, [sp, #20]
 8010f86:	b312      	cbz	r2, 8010fce <WM_HandlePID+0x14e>
 8010f88:	4282      	cmp	r2, r0
 8010f8a:	d020      	beq.n	8010fce <WM_HandlePID+0x14e>
 8010f8c:	6858      	ldr	r0, [r3, #4]
 8010f8e:	f7ff ff0b 	bl	8010da8 <WM__IsInModalArea>
 8010f92:	b1e0      	cbz	r0, 8010fce <WM_HandlePID+0x14e>
 8010f94:	f8d9 3000 	ldr.w	r3, [r9]
 8010f98:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8010f9c:	6858      	ldr	r0, [r3, #4]
 8010f9e:	f7ff fea7 	bl	8010cf0 <WM__IsEnabled>
 8010fa2:	b1a0      	cbz	r0, 8010fce <WM_HandlePID+0x14e>
 8010fa4:	2312      	movs	r3, #18
 8010fa6:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8010faa:	9312      	str	r3, [sp, #72]	; 0x48
 8010fac:	f8d9 3000 	ldr.w	r3, [r9]
 8010fb0:	9615      	str	r6, [sp, #84]	; 0x54
 8010fb2:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8010fb6:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8010fba:	6858      	ldr	r0, [r3, #4]
 8010fbc:	a912      	add	r1, sp, #72	; 0x48
 8010fbe:	f7ff ff41 	bl	8010e44 <WM__SendTouchMessage>
 8010fc2:	f8d9 3000 	ldr.w	r3, [r9]
 8010fc6:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8010fca:	2200      	movs	r2, #0
 8010fcc:	605a      	str	r2, [r3, #4]
 8010fce:	9805      	ldr	r0, [sp, #20]
 8010fd0:	f7ff feea 	bl	8010da8 <WM__IsInModalArea>
 8010fd4:	b908      	cbnz	r0, 8010fda <WM_HandlePID+0x15a>
 8010fd6:	2600      	movs	r6, #0
 8010fd8:	e0fb      	b.n	80111d2 <WM_HandlePID+0x352>
 8010fda:	682b      	ldr	r3, [r5, #0]
 8010fdc:	9905      	ldr	r1, [sp, #20]
 8010fde:	f8df a180 	ldr.w	sl, [pc, #384]	; 8011160 <WM_HandlePID+0x2e0>
 8010fe2:	f8df 9180 	ldr.w	r9, [pc, #384]	; 8011164 <WM_HandlePID+0x2e4>
 8010fe6:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8010fea:	f04f 080c 	mov.w	r8, #12
 8010fee:	fb08 7303 	mla	r3, r8, r3, r7
 8010ff2:	6051      	str	r1, [r2, #4]
 8010ff4:	7a1a      	ldrb	r2, [r3, #8]
 8010ff6:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8010ffa:	429a      	cmp	r2, r3
 8010ffc:	d062      	beq.n	80110c4 <WM_HandlePID+0x244>
 8010ffe:	9b05      	ldr	r3, [sp, #20]
 8011000:	2b00      	cmp	r3, #0
 8011002:	d05f      	beq.n	80110c4 <WM_HandlePID+0x244>
 8011004:	9805      	ldr	r0, [sp, #20]
 8011006:	f7fe fa31 	bl	800f46c <GUI_ALLOC_LockH>
 801100a:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 801100e:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
 8011012:	f8da 3000 	ldr.w	r3, [sl]
 8011016:	9003      	str	r0, [sp, #12]
 8011018:	fb08 9303 	mla	r3, r8, r3, r9
 801101c:	7a1b      	ldrb	r3, [r3, #8]
 801101e:	f88d 3045 	strb.w	r3, [sp, #69]	; 0x45
 8011022:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011026:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011028:	1a9b      	subs	r3, r3, r2
 801102a:	930f      	str	r3, [sp, #60]	; 0x3c
 801102c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8011030:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011032:	eb0d 0008 	add.w	r0, sp, r8
 8011036:	1a9b      	subs	r3, r3, r2
 8011038:	9310      	str	r3, [sp, #64]	; 0x40
 801103a:	f7fe fa25 	bl	800f488 <GUI_ALLOC_UnlockH>
 801103e:	f8da e000 	ldr.w	lr, [sl]
 8011042:	f8df a13c 	ldr.w	sl, [pc, #316]	; 8011180 <WM_HandlePID+0x300>
 8011046:	ab0f      	add	r3, sp, #60	; 0x3c
 8011048:	9315      	str	r3, [sp, #84]	; 0x54
 801104a:	2311      	movs	r3, #17
 801104c:	9312      	str	r3, [sp, #72]	; 0x48
 801104e:	fb08 930e 	mla	r3, r8, lr, r9
 8011052:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8011056:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 801105a:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 801105e:	f89d 202c 	ldrb.w	r2, [sp, #44]	; 0x2c
 8011062:	721a      	strb	r2, [r3, #8]
 8011064:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8011068:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801106c:	b133      	cbz	r3, 801107c <WM_HandlePID+0x1fc>
 801106e:	eb0a 030e 	add.w	r3, sl, lr
 8011072:	f8d3 9004 	ldr.w	r9, [r3, #4]
 8011076:	9a05      	ldr	r2, [sp, #20]
 8011078:	605a      	str	r2, [r3, #4]
 801107a:	e000      	b.n	801107e <WM_HandlePID+0x1fe>
 801107c:	4699      	mov	r9, r3
 801107e:	eb0a 030e 	add.w	r3, sl, lr
 8011082:	a912      	add	r1, sp, #72	; 0x48
 8011084:	f8d3 b004 	ldr.w	fp, [r3, #4]
 8011088:	9805      	ldr	r0, [sp, #20]
 801108a:	f003 fbc7 	bl	801481c <WM__SendMessageIfEnabled>
 801108e:	682b      	ldr	r3, [r5, #0]
 8011090:	eb0a 02c3 	add.w	r2, sl, r3, lsl #3
 8011094:	6851      	ldr	r1, [r2, #4]
 8011096:	458b      	cmp	fp, r1
 8011098:	bf1c      	itt	ne
 801109a:	6852      	ldrne	r2, [r2, #4]
 801109c:	9205      	strne	r2, [sp, #20]
 801109e:	220c      	movs	r2, #12
 80110a0:	fb02 7303 	mla	r3, r2, r3, r7
 80110a4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80110a8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80110ac:	f1b9 0f00 	cmp.w	r9, #0
 80110b0:	d008      	beq.n	80110c4 <WM_HandlePID+0x244>
 80110b2:	4648      	mov	r0, r9
 80110b4:	f7f7 f9ff 	bl	80084b6 <WM_IsWindow>
 80110b8:	b120      	cbz	r0, 80110c4 <WM_HandlePID+0x244>
 80110ba:	682b      	ldr	r3, [r5, #0]
 80110bc:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 80110c0:	f8c3 9004 	str.w	r9, [r3, #4]
 80110c4:	682a      	ldr	r2, [r5, #0]
 80110c6:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 80110ca:	210c      	movs	r1, #12
 80110cc:	4351      	muls	r1, r2
 80110ce:	1878      	adds	r0, r7, r1
 80110d0:	f890 8008 	ldrb.w	r8, [r0, #8]
 80110d4:	ea53 0808 	orrs.w	r8, r3, r8
 80110d8:	d064      	beq.n	80111a4 <WM_HandlePID+0x324>
 80110da:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 8011180 <WM_HandlePID+0x300>
 80110de:	f44f 7e10 	mov.w	lr, #576	; 0x240
 80110e2:	00d2      	lsls	r2, r2, #3
 80110e4:	f8cd e048 	str.w	lr, [sp, #72]	; 0x48
 80110e8:	eb08 0e02 	add.w	lr, r8, r2
 80110ec:	f8de 9004 	ldr.w	r9, [lr, #4]
 80110f0:	f8dd c014 	ldr.w	ip, [sp, #20]
 80110f4:	45e1      	cmp	r9, ip
 80110f6:	d01c      	beq.n	8011132 <WM_HandlePID+0x2b2>
 80110f8:	f8de e004 	ldr.w	lr, [lr, #4]
 80110fc:	f1be 0f00 	cmp.w	lr, #0
 8011100:	d017      	beq.n	8011132 <WM_HandlePID+0x2b2>
 8011102:	b113      	cbz	r3, 801110a <WM_HandlePID+0x28a>
 8011104:	2300      	movs	r3, #0
 8011106:	9315      	str	r3, [sp, #84]	; 0x54
 8011108:	e009      	b.n	801111e <WM_HandlePID+0x29e>
 801110a:	f8df e058 	ldr.w	lr, [pc, #88]	; 8011164 <WM_HandlePID+0x2e4>
 801110e:	f88d 3020 	strb.w	r3, [sp, #32]
 8011112:	f85e 1001 	ldr.w	r1, [lr, r1]
 8011116:	9106      	str	r1, [sp, #24]
 8011118:	6841      	ldr	r1, [r0, #4]
 801111a:	9107      	str	r1, [sp, #28]
 801111c:	9615      	str	r6, [sp, #84]	; 0x54
 801111e:	4442      	add	r2, r8
 8011120:	a912      	add	r1, sp, #72	; 0x48
 8011122:	6850      	ldr	r0, [r2, #4]
 8011124:	f7ff fe8e 	bl	8010e44 <WM__SendTouchMessage>
 8011128:	682b      	ldr	r3, [r5, #0]
 801112a:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 801112e:	2200      	movs	r2, #0
 8011130:	605a      	str	r2, [r3, #4]
 8011132:	682b      	ldr	r3, [r5, #0]
 8011134:	f89d e02c 	ldrb.w	lr, [sp, #44]	; 0x2c
 8011138:	220c      	movs	r2, #12
 801113a:	fb02 7203 	mla	r2, r2, r3, r7
 801113e:	f882 e008 	strb.w	lr, [r2, #8]
 8011142:	9a05      	ldr	r2, [sp, #20]
 8011144:	2a00      	cmp	r2, #0
 8011146:	d043      	beq.n	80111d0 <WM_HandlePID+0x350>
 8011148:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 801114c:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8011150:	f1be 0f00 	cmp.w	lr, #0
 8011154:	d016      	beq.n	8011184 <WM_HandlePID+0x304>
 8011156:	9a05      	ldr	r2, [sp, #20]
 8011158:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 801115c:	e01b      	b.n	8011196 <WM_HandlePID+0x316>
 801115e:	bf00      	nop
 8011160:	2001b9d8 	.word	0x2001b9d8
 8011164:	20019f28 	.word	0x20019f28
 8011168:	2001ba1c 	.word	0x2001ba1c
 801116c:	2001ba10 	.word	0x2001ba10
 8011170:	20019f20 	.word	0x20019f20
 8011174:	2001b9f4 	.word	0x2001b9f4
 8011178:	20019f24 	.word	0x20019f24
 801117c:	2001bb04 	.word	0x2001bb04
 8011180:	2001bb14 	.word	0x2001bb14
 8011184:	4b1d      	ldr	r3, [pc, #116]	; (80111fc <WM_HandlePID+0x37c>)
 8011186:	781b      	ldrb	r3, [r3, #0]
 8011188:	b10b      	cbz	r3, 801118e <WM_HandlePID+0x30e>
 801118a:	f7f7 f87f 	bl	800828c <WM_ReleaseCapture>
 801118e:	682b      	ldr	r3, [r5, #0]
 8011190:	2200      	movs	r2, #0
 8011192:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8011196:	605a      	str	r2, [r3, #4]
 8011198:	9805      	ldr	r0, [sp, #20]
 801119a:	9615      	str	r6, [sp, #84]	; 0x54
 801119c:	a912      	add	r1, sp, #72	; 0x48
 801119e:	f7ff fe51 	bl	8010e44 <WM__SendTouchMessage>
 80111a2:	e015      	b.n	80111d0 <WM_HandlePID+0x350>
 80111a4:	9b05      	ldr	r3, [sp, #20]
 80111a6:	2b00      	cmp	r3, #0
 80111a8:	f43f af15 	beq.w	8010fd6 <WM_HandlePID+0x156>
 80111ac:	9805      	ldr	r0, [sp, #20]
 80111ae:	f7ff fd9f 	bl	8010cf0 <WM__IsEnabled>
 80111b2:	2800      	cmp	r0, #0
 80111b4:	f43f af0f 	beq.w	8010fd6 <WM_HandlePID+0x156>
 80111b8:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80111bc:	2310      	movs	r3, #16
 80111be:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 80111c2:	9805      	ldr	r0, [sp, #20]
 80111c4:	9312      	str	r3, [sp, #72]	; 0x48
 80111c6:	a912      	add	r1, sp, #72	; 0x48
 80111c8:	9615      	str	r6, [sp, #84]	; 0x54
 80111ca:	f7ff fe3b 	bl	8010e44 <WM__SendTouchMessage>
 80111ce:	e702      	b.n	8010fd6 <WM_HandlePID+0x156>
 80111d0:	2601      	movs	r6, #1
 80111d2:	682b      	ldr	r3, [r5, #0]
 80111d4:	220c      	movs	r2, #12
 80111d6:	fb02 7703 	mla	r7, r2, r3, r7
 80111da:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80111de:	e887 0007 	stmia.w	r7, {r0, r1, r2}
 80111e2:	4620      	mov	r0, r4
 80111e4:	4619      	mov	r1, r3
 80111e6:	f000 f92d 	bl	8011444 <WM_PID__SetPrevState>
 80111ea:	e000      	b.n	80111ee <WM_HandlePID+0x36e>
 80111ec:	2600      	movs	r6, #0
 80111ee:	a804      	add	r0, sp, #16
 80111f0:	f000 f980 	bl	80114f4 <WM__RemoveCriticalHandle>
 80111f4:	4630      	mov	r0, r6
 80111f6:	b017      	add	sp, #92	; 0x5c
 80111f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80111fc:	2001b9dc 	.word	0x2001b9dc

08011200 <_cbTimer>:
 8011200:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011202:	4604      	mov	r4, r0
 8011204:	2100      	movs	r1, #0
 8011206:	4668      	mov	r0, sp
 8011208:	2210      	movs	r2, #16
 801120a:	f004 f85c 	bl	80152c6 <memset>
 801120e:	6860      	ldr	r0, [r4, #4]
 8011210:	b150      	cbz	r0, 8011228 <_cbTimer+0x28>
 8011212:	f7fe f921 	bl	800f458 <GUI_ALLOC_h2p>
 8011216:	f240 1313 	movw	r3, #275	; 0x113
 801121a:	6840      	ldr	r0, [r0, #4]
 801121c:	9300      	str	r3, [sp, #0]
 801121e:	4669      	mov	r1, sp
 8011220:	6863      	ldr	r3, [r4, #4]
 8011222:	9303      	str	r3, [sp, #12]
 8011224:	f7f7 ff7c 	bl	8009120 <WM_SendMessage>
 8011228:	b004      	add	sp, #16
 801122a:	bd10      	pop	{r4, pc}

0801122c <WM_DeleteTimer>:
 801122c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801122e:	4605      	mov	r5, r0
 8011230:	b168      	cbz	r0, 801124e <WM_DeleteTimer+0x22>
 8011232:	f7fe f91b 	bl	800f46c <GUI_ALLOC_LockH>
 8011236:	ac02      	add	r4, sp, #8
 8011238:	f844 0d04 	str.w	r0, [r4, #-4]!
 801123c:	6800      	ldr	r0, [r0, #0]
 801123e:	f7fc f835 	bl	800d2ac <GUI_TIMER_Delete>
 8011242:	4620      	mov	r0, r4
 8011244:	f7fe f920 	bl	800f488 <GUI_ALLOC_UnlockH>
 8011248:	4628      	mov	r0, r5
 801124a:	f7fe f949 	bl	800f4e0 <GUI_ALLOC_Free>
 801124e:	b003      	add	sp, #12
 8011250:	bd30      	pop	{r4, r5, pc}

08011252 <WM__DeleteAssocTimer>:
 8011252:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011254:	4605      	mov	r5, r0
 8011256:	a801      	add	r0, sp, #4
 8011258:	f7fb ffa6 	bl	800d1a8 <GUI_TIMER__GetFirstTimer>
 801125c:	4604      	mov	r4, r0
 801125e:	b1dc      	cbz	r4, 8011298 <WM__DeleteAssocTimer+0x46>
 8011260:	4620      	mov	r0, r4
 8011262:	2101      	movs	r1, #1
 8011264:	f7fc f87d 	bl	800d362 <GUI_TIMER_GetFlag>
 8011268:	9b01      	ldr	r3, [sp, #4]
 801126a:	b183      	cbz	r3, 801128e <WM__DeleteAssocTimer+0x3c>
 801126c:	b178      	cbz	r0, 801128e <WM__DeleteAssocTimer+0x3c>
 801126e:	4618      	mov	r0, r3
 8011270:	f7fe f8f2 	bl	800f458 <GUI_ALLOC_h2p>
 8011274:	6843      	ldr	r3, [r0, #4]
 8011276:	42ab      	cmp	r3, r5
 8011278:	d109      	bne.n	801128e <WM__DeleteAssocTimer+0x3c>
 801127a:	4620      	mov	r0, r4
 801127c:	a901      	add	r1, sp, #4
 801127e:	9e01      	ldr	r6, [sp, #4]
 8011280:	f7fb ffaa 	bl	800d1d8 <GUI_TIMER__GetNextTimerLin>
 8011284:	4604      	mov	r4, r0
 8011286:	4630      	mov	r0, r6
 8011288:	f7ff ffd0 	bl	801122c <WM_DeleteTimer>
 801128c:	e7e7      	b.n	801125e <WM__DeleteAssocTimer+0xc>
 801128e:	4620      	mov	r0, r4
 8011290:	a901      	add	r1, sp, #4
 8011292:	f7fb ffa1 	bl	800d1d8 <GUI_TIMER__GetNextTimerLin>
 8011296:	e7e1      	b.n	801125c <WM__DeleteAssocTimer+0xa>
 8011298:	b002      	add	sp, #8
 801129a:	bd70      	pop	{r4, r5, r6, pc}

0801129c <WM_CreateTimer>:
 801129c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80112a0:	4680      	mov	r8, r0
 80112a2:	200c      	movs	r0, #12
 80112a4:	460f      	mov	r7, r1
 80112a6:	4616      	mov	r6, r2
 80112a8:	f7fe fbc0 	bl	800fa2c <GUI_ALLOC_AllocZero>
 80112ac:	4604      	mov	r4, r0
 80112ae:	b1f0      	cbz	r0, 80112ee <WM_CreateTimer+0x52>
 80112b0:	f7fc f86c 	bl	800d38c <GUI_GetTime>
 80112b4:	4622      	mov	r2, r4
 80112b6:	1981      	adds	r1, r0, r6
 80112b8:	2301      	movs	r3, #1
 80112ba:	480f      	ldr	r0, [pc, #60]	; (80112f8 <WM_CreateTimer+0x5c>)
 80112bc:	f7fb ffa8 	bl	800d210 <GUI_TIMER_Create>
 80112c0:	4605      	mov	r5, r0
 80112c2:	4620      	mov	r0, r4
 80112c4:	b185      	cbz	r5, 80112e8 <WM_CreateTimer+0x4c>
 80112c6:	f7fe f8d1 	bl	800f46c <GUI_ALLOC_LockH>
 80112ca:	4603      	mov	r3, r0
 80112cc:	a802      	add	r0, sp, #8
 80112ce:	f8c3 8004 	str.w	r8, [r3, #4]
 80112d2:	f840 3d04 	str.w	r3, [r0, #-4]!
 80112d6:	609f      	str	r7, [r3, #8]
 80112d8:	601d      	str	r5, [r3, #0]
 80112da:	f7fe f8d5 	bl	800f488 <GUI_ALLOC_UnlockH>
 80112de:	4628      	mov	r0, r5
 80112e0:	4631      	mov	r1, r6
 80112e2:	f7fc f817 	bl	800d314 <GUI_TIMER_SetPeriod>
 80112e6:	e002      	b.n	80112ee <WM_CreateTimer+0x52>
 80112e8:	f7fe f8fa 	bl	800f4e0 <GUI_ALLOC_Free>
 80112ec:	462c      	mov	r4, r5
 80112ee:	4620      	mov	r0, r4
 80112f0:	b002      	add	sp, #8
 80112f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80112f6:	bf00      	nop
 80112f8:	08011201 	.word	0x08011201

080112fc <WM_RestartTimer>:
 80112fc:	b513      	push	{r0, r1, r4, lr}
 80112fe:	460c      	mov	r4, r1
 8011300:	b180      	cbz	r0, 8011324 <WM_RestartTimer+0x28>
 8011302:	f7fe f8b3 	bl	800f46c <GUI_ALLOC_LockH>
 8011306:	9001      	str	r0, [sp, #4]
 8011308:	b11c      	cbz	r4, 8011312 <WM_RestartTimer+0x16>
 801130a:	6800      	ldr	r0, [r0, #0]
 801130c:	4621      	mov	r1, r4
 801130e:	f7fc f801 	bl	800d314 <GUI_TIMER_SetPeriod>
 8011312:	ac02      	add	r4, sp, #8
 8011314:	f854 3d04 	ldr.w	r3, [r4, #-4]!
 8011318:	6818      	ldr	r0, [r3, #0]
 801131a:	f7fc f809 	bl	800d330 <GUI_TIMER_Restart>
 801131e:	4620      	mov	r0, r4
 8011320:	f7fe f8b2 	bl	800f488 <GUI_ALLOC_UnlockH>
 8011324:	b002      	add	sp, #8
 8011326:	bd10      	pop	{r4, pc}

08011328 <WM_SetSize>:
 8011328:	e92d 41e7 	stmdb	sp!, {r0, r1, r2, r5, r6, r7, r8, lr}
 801132c:	460e      	mov	r6, r1
 801132e:	4690      	mov	r8, r2
 8011330:	4607      	mov	r7, r0
 8011332:	b1d0      	cbz	r0, 801136a <WM_SetSize+0x42>
 8011334:	f7fe f89a 	bl	800f46c <GUI_ALLOC_LockH>
 8011338:	4603      	mov	r3, r0
 801133a:	a802      	add	r0, sp, #8
 801133c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8011340:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011344:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 8011348:	f840 3d04 	str.w	r3, [r0, #-4]!
 801134c:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8011350:	1a8a      	subs	r2, r1, r2
 8011352:	1aed      	subs	r5, r5, r3
 8011354:	43d2      	mvns	r2, r2
 8011356:	43ed      	mvns	r5, r5
 8011358:	4416      	add	r6, r2
 801135a:	4445      	add	r5, r8
 801135c:	f7fe f894 	bl	800f488 <GUI_ALLOC_UnlockH>
 8011360:	4638      	mov	r0, r7
 8011362:	4631      	mov	r1, r6
 8011364:	462a      	mov	r2, r5
 8011366:	f7f6 ff95 	bl	8008294 <WM_ResizeWindow>
 801136a:	b003      	add	sp, #12
 801136c:	e8bd 81e0 	ldmia.w	sp!, {r5, r6, r7, r8, pc}

08011370 <WM_SendToParent>:
 8011370:	b538      	push	{r3, r4, r5, lr}
 8011372:	4605      	mov	r5, r0
 8011374:	460c      	mov	r4, r1
 8011376:	b141      	cbz	r1, 801138a <WM_SendToParent+0x1a>
 8011378:	f7f7 f932 	bl	80085e0 <WM_GetParent>
 801137c:	b128      	cbz	r0, 801138a <WM_SendToParent+0x1a>
 801137e:	60a5      	str	r5, [r4, #8]
 8011380:	4621      	mov	r1, r4
 8011382:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011386:	f7ff bc95 	b.w	8010cb4 <WM__SendMessage>
 801138a:	bd38      	pop	{r3, r4, r5, pc}

0801138c <WM__IsInWindow>:
 801138c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801138e:	f013 0302 	ands.w	r3, r3, #2
 8011392:	d012      	beq.n	80113ba <WM__IsInWindow+0x2e>
 8011394:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011398:	4299      	cmp	r1, r3
 801139a:	db10      	blt.n	80113be <WM__IsInWindow+0x32>
 801139c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80113a0:	4299      	cmp	r1, r3
 80113a2:	dc0c      	bgt.n	80113be <WM__IsInWindow+0x32>
 80113a4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80113a8:	429a      	cmp	r2, r3
 80113aa:	db08      	blt.n	80113be <WM__IsInWindow+0x32>
 80113ac:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 80113b0:	4282      	cmp	r2, r0
 80113b2:	bfcc      	ite	gt
 80113b4:	2000      	movgt	r0, #0
 80113b6:	2001      	movle	r0, #1
 80113b8:	4770      	bx	lr
 80113ba:	4618      	mov	r0, r3
 80113bc:	4770      	bx	lr
 80113be:	2000      	movs	r0, #0
 80113c0:	4770      	bx	lr

080113c2 <_Screen2hWin>:
 80113c2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80113c6:	460e      	mov	r6, r1
 80113c8:	4617      	mov	r7, r2
 80113ca:	4698      	mov	r8, r3
 80113cc:	4605      	mov	r5, r0
 80113ce:	b320      	cbz	r0, 801141a <_Screen2hWin+0x58>
 80113d0:	f7fe f84c 	bl	800f46c <GUI_ALLOC_LockH>
 80113d4:	4639      	mov	r1, r7
 80113d6:	4642      	mov	r2, r8
 80113d8:	4604      	mov	r4, r0
 80113da:	9001      	str	r0, [sp, #4]
 80113dc:	f7ff ffd6 	bl	801138c <WM__IsInWindow>
 80113e0:	4681      	mov	r9, r0
 80113e2:	b920      	cbnz	r0, 80113ee <_Screen2hWin+0x2c>
 80113e4:	a801      	add	r0, sp, #4
 80113e6:	f7fe f84f 	bl	800f488 <GUI_ALLOC_UnlockH>
 80113ea:	4648      	mov	r0, r9
 80113ec:	e016      	b.n	801141c <_Screen2hWin+0x5a>
 80113ee:	69e4      	ldr	r4, [r4, #28]
 80113f0:	b91c      	cbnz	r4, 80113fa <_Screen2hWin+0x38>
 80113f2:	a801      	add	r0, sp, #4
 80113f4:	f7fe f848 	bl	800f488 <GUI_ALLOC_UnlockH>
 80113f8:	e00f      	b.n	801141a <_Screen2hWin+0x58>
 80113fa:	42b4      	cmp	r4, r6
 80113fc:	d0f9      	beq.n	80113f2 <_Screen2hWin+0x30>
 80113fe:	4620      	mov	r0, r4
 8011400:	4631      	mov	r1, r6
 8011402:	463a      	mov	r2, r7
 8011404:	4643      	mov	r3, r8
 8011406:	f7ff ffdc 	bl	80113c2 <_Screen2hWin>
 801140a:	2800      	cmp	r0, #0
 801140c:	bf18      	it	ne
 801140e:	4605      	movne	r5, r0
 8011410:	4620      	mov	r0, r4
 8011412:	f7fe f821 	bl	800f458 <GUI_ALLOC_h2p>
 8011416:	6a04      	ldr	r4, [r0, #32]
 8011418:	e7ea      	b.n	80113f0 <_Screen2hWin+0x2e>
 801141a:	4628      	mov	r0, r5
 801141c:	b003      	add	sp, #12
 801141e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08011424 <WM_Screen2hWin>:
 8011424:	b570      	push	{r4, r5, r6, lr}
 8011426:	4b06      	ldr	r3, [pc, #24]	; (8011440 <WM_Screen2hWin+0x1c>)
 8011428:	460c      	mov	r4, r1
 801142a:	4605      	mov	r5, r0
 801142c:	6818      	ldr	r0, [r3, #0]
 801142e:	f000 f84d 	bl	80114cc <WM_GetDesktopWindowEx>
 8011432:	462a      	mov	r2, r5
 8011434:	4623      	mov	r3, r4
 8011436:	2100      	movs	r1, #0
 8011438:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801143c:	f7ff bfc1 	b.w	80113c2 <_Screen2hWin>
 8011440:	2001b9d8 	.word	0x2001b9d8

08011444 <WM_PID__SetPrevState>:
 8011444:	4b03      	ldr	r3, [pc, #12]	; (8011454 <WM_PID__SetPrevState+0x10>)
 8011446:	220c      	movs	r2, #12
 8011448:	fb02 3301 	mla	r3, r2, r1, r3
 801144c:	c807      	ldmia	r0, {r0, r1, r2}
 801144e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8011452:	4770      	bx	lr
 8011454:	20019f40 	.word	0x20019f40

08011458 <WM_OnKey>:
 8011458:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801145a:	4a0a      	ldr	r2, [pc, #40]	; (8011484 <WM_OnKey+0x2c>)
 801145c:	4603      	mov	r3, r0
 801145e:	6810      	ldr	r0, [r2, #0]
 8011460:	4a09      	ldr	r2, [pc, #36]	; (8011488 <WM_OnKey+0x30>)
 8011462:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8011466:	b148      	cbz	r0, 801147c <WM_OnKey+0x24>
 8011468:	9300      	str	r3, [sp, #0]
 801146a:	230e      	movs	r3, #14
 801146c:	9101      	str	r1, [sp, #4]
 801146e:	9302      	str	r3, [sp, #8]
 8011470:	a902      	add	r1, sp, #8
 8011472:	ab00      	add	r3, sp, #0
 8011474:	9305      	str	r3, [sp, #20]
 8011476:	f7ff fc1d 	bl	8010cb4 <WM__SendMessage>
 801147a:	2001      	movs	r0, #1
 801147c:	b007      	add	sp, #28
 801147e:	f85d fb04 	ldr.w	pc, [sp], #4
 8011482:	bf00      	nop
 8011484:	2001b9d8 	.word	0x2001b9d8
 8011488:	2001b9c8 	.word	0x2001b9c8

0801148c <WM_GetWindowRectEx>:
 801148c:	b510      	push	{r4, lr}
 801148e:	460c      	mov	r4, r1
 8011490:	b130      	cbz	r0, 80114a0 <WM_GetWindowRectEx+0x14>
 8011492:	b129      	cbz	r1, 80114a0 <WM_GetWindowRectEx+0x14>
 8011494:	f7fd ffe0 	bl	800f458 <GUI_ALLOC_h2p>
 8011498:	4603      	mov	r3, r0
 801149a:	cb03      	ldmia	r3!, {r0, r1}
 801149c:	6020      	str	r0, [r4, #0]
 801149e:	6061      	str	r1, [r4, #4]
 80114a0:	bd10      	pop	{r4, pc}

080114a2 <WM_GetScrollPartner>:
 80114a2:	b538      	push	{r3, r4, r5, lr}
 80114a4:	4605      	mov	r5, r0
 80114a6:	f7f7 f923 	bl	80086f0 <WM_GetId>
 80114aa:	28ff      	cmp	r0, #255	; 0xff
 80114ac:	4604      	mov	r4, r0
 80114ae:	d003      	beq.n	80114b8 <WM_GetScrollPartner+0x16>
 80114b0:	28fe      	cmp	r0, #254	; 0xfe
 80114b2:	bf08      	it	eq
 80114b4:	24ff      	moveq	r4, #255	; 0xff
 80114b6:	e000      	b.n	80114ba <WM_GetScrollPartner+0x18>
 80114b8:	24fe      	movs	r4, #254	; 0xfe
 80114ba:	4628      	mov	r0, r5
 80114bc:	f7f7 f890 	bl	80085e0 <WM_GetParent>
 80114c0:	4621      	mov	r1, r4
 80114c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80114c6:	f7f7 b959 	b.w	800877c <WM_GetDialogItem>
	...

080114cc <WM_GetDesktopWindowEx>:
 80114cc:	2801      	cmp	r0, #1
 80114ce:	bf9a      	itte	ls
 80114d0:	4b02      	ldrls	r3, [pc, #8]	; (80114dc <WM_GetDesktopWindowEx+0x10>)
 80114d2:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
 80114d6:	2000      	movhi	r0, #0
 80114d8:	4770      	bx	lr
 80114da:	bf00      	nop
 80114dc:	2001b9b8 	.word	0x2001b9b8

080114e0 <WM_ForEachDesc>:
 80114e0:	f003 b9bd 	b.w	801485e <WM__ForEachDesc>

080114e4 <WM__AddCriticalHandle>:
 80114e4:	4b02      	ldr	r3, [pc, #8]	; (80114f0 <WM__AddCriticalHandle+0xc>)
 80114e6:	681a      	ldr	r2, [r3, #0]
 80114e8:	6002      	str	r2, [r0, #0]
 80114ea:	6018      	str	r0, [r3, #0]
 80114ec:	4770      	bx	lr
 80114ee:	bf00      	nop
 80114f0:	2001b9ec 	.word	0x2001b9ec

080114f4 <WM__RemoveCriticalHandle>:
 80114f4:	4a09      	ldr	r2, [pc, #36]	; (801151c <WM__RemoveCriticalHandle+0x28>)
 80114f6:	6813      	ldr	r3, [r2, #0]
 80114f8:	b510      	push	{r4, lr}
 80114fa:	4614      	mov	r4, r2
 80114fc:	b16b      	cbz	r3, 801151a <WM__RemoveCriticalHandle+0x26>
 80114fe:	2200      	movs	r2, #0
 8011500:	4283      	cmp	r3, r0
 8011502:	d105      	bne.n	8011510 <WM__RemoveCriticalHandle+0x1c>
 8011504:	681b      	ldr	r3, [r3, #0]
 8011506:	b10a      	cbz	r2, 801150c <WM__RemoveCriticalHandle+0x18>
 8011508:	6013      	str	r3, [r2, #0]
 801150a:	bd10      	pop	{r4, pc}
 801150c:	6023      	str	r3, [r4, #0]
 801150e:	bd10      	pop	{r4, pc}
 8011510:	6819      	ldr	r1, [r3, #0]
 8011512:	b111      	cbz	r1, 801151a <WM__RemoveCriticalHandle+0x26>
 8011514:	461a      	mov	r2, r3
 8011516:	460b      	mov	r3, r1
 8011518:	e7f2      	b.n	8011500 <WM__RemoveCriticalHandle+0xc>
 801151a:	bd10      	pop	{r4, pc}
 801151c:	2001b9ec 	.word	0x2001b9ec

08011520 <WM_BringToBottom>:
 8011520:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011524:	4604      	mov	r4, r0
 8011526:	b087      	sub	sp, #28
 8011528:	2800      	cmp	r0, #0
 801152a:	d039      	beq.n	80115a0 <WM_BringToBottom+0x80>
 801152c:	f7fd ff9e 	bl	800f46c <GUI_ALLOC_LockH>
 8011530:	4603      	mov	r3, r0
 8011532:	9001      	str	r0, [sp, #4]
 8011534:	c803      	ldmia	r0, {r0, r1}
 8011536:	ad04      	add	r5, sp, #16
 8011538:	e885 0003 	stmia.w	r5, {r0, r1}
 801153c:	a801      	add	r0, sp, #4
 801153e:	6a1e      	ldr	r6, [r3, #32]
 8011540:	f8d3 9028 	ldr.w	r9, [r3, #40]	; 0x28
 8011544:	f7fd ffa0 	bl	800f488 <GUI_ALLOC_UnlockH>
 8011548:	4620      	mov	r0, r4
 801154a:	f7ff fbda 	bl	8010d02 <WM__GetPrevSibling>
 801154e:	4607      	mov	r7, r0
 8011550:	b330      	cbz	r0, 80115a0 <WM_BringToBottom+0x80>
 8011552:	4620      	mov	r0, r4
 8011554:	f7f7 f844 	bl	80085e0 <WM_GetParent>
 8011558:	f019 0f02 	tst.w	r9, #2
 801155c:	4680      	mov	r8, r0
 801155e:	d004      	beq.n	801156a <WM_BringToBottom+0x4a>
 8011560:	4628      	mov	r0, r5
 8011562:	4641      	mov	r1, r8
 8011564:	4632      	mov	r2, r6
 8011566:	f7f7 fdc3 	bl	80090f0 <WM__InvalidateRectEx>
 801156a:	4620      	mov	r0, r4
 801156c:	f7fd ff7e 	bl	800f46c <GUI_ALLOC_LockH>
 8011570:	9001      	str	r0, [sp, #4]
 8011572:	4640      	mov	r0, r8
 8011574:	f7fd ff7a 	bl	800f46c <GUI_ALLOC_LockH>
 8011578:	9003      	str	r0, [sp, #12]
 801157a:	4638      	mov	r0, r7
 801157c:	f7fd ff76 	bl	800f46c <GUI_ALLOC_LockH>
 8011580:	9b03      	ldr	r3, [sp, #12]
 8011582:	9a01      	ldr	r2, [sp, #4]
 8011584:	69d9      	ldr	r1, [r3, #28]
 8011586:	6206      	str	r6, [r0, #32]
 8011588:	9002      	str	r0, [sp, #8]
 801158a:	6211      	str	r1, [r2, #32]
 801158c:	a801      	add	r0, sp, #4
 801158e:	61dc      	str	r4, [r3, #28]
 8011590:	f7fd ff7a 	bl	800f488 <GUI_ALLOC_UnlockH>
 8011594:	a803      	add	r0, sp, #12
 8011596:	f7fd ff77 	bl	800f488 <GUI_ALLOC_UnlockH>
 801159a:	a802      	add	r0, sp, #8
 801159c:	f7fd ff74 	bl	800f488 <GUI_ALLOC_UnlockH>
 80115a0:	b007      	add	sp, #28
 80115a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080115a6 <_Convert16>:
 80115a6:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80115aa:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 80115ae:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 80115b2:	4605      	mov	r5, r0
 80115b4:	460e      	mov	r6, r1
 80115b6:	4690      	mov	r8, r2
 80115b8:	461f      	mov	r7, r3
 80115ba:	4614      	mov	r4, r2
 80115bc:	4689      	mov	r9, r1
 80115be:	f835 0b02 	ldrh.w	r0, [r5], #2
 80115c2:	47d8      	blx	fp
 80115c4:	47d0      	blx	sl
 80115c6:	3c01      	subs	r4, #1
 80115c8:	f849 0b04 	str.w	r0, [r9], #4
 80115cc:	d1f7      	bne.n	80115be <_Convert16+0x18>
 80115ce:	2f1f      	cmp	r7, #31
 80115d0:	d806      	bhi.n	80115e0 <_Convert16+0x3a>
 80115d2:	4630      	mov	r0, r6
 80115d4:	4641      	mov	r1, r8
 80115d6:	463a      	mov	r2, r7
 80115d8:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80115dc:	f001 bf5d 	b.w	801349a <GUI__CompactPixelIndices>
 80115e0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

080115e4 <_Convert8>:
 80115e4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80115e8:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 80115ec:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 80115f0:	4605      	mov	r5, r0
 80115f2:	460e      	mov	r6, r1
 80115f4:	4690      	mov	r8, r2
 80115f6:	461f      	mov	r7, r3
 80115f8:	4689      	mov	r9, r1
 80115fa:	4604      	mov	r4, r0
 80115fc:	f814 0b01 	ldrb.w	r0, [r4], #1
 8011600:	47d8      	blx	fp
 8011602:	47d0      	blx	sl
 8011604:	1b2b      	subs	r3, r5, r4
 8011606:	4443      	add	r3, r8
 8011608:	f849 0b04 	str.w	r0, [r9], #4
 801160c:	2b00      	cmp	r3, #0
 801160e:	d1f5      	bne.n	80115fc <_Convert8+0x18>
 8011610:	2f1f      	cmp	r7, #31
 8011612:	d806      	bhi.n	8011622 <_Convert8+0x3e>
 8011614:	4630      	mov	r0, r6
 8011616:	4641      	mov	r1, r8
 8011618:	463a      	mov	r2, r7
 801161a:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801161e:	f001 bf3c 	b.w	801349a <GUI__CompactPixelIndices>
 8011622:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08011628 <GUI_MEMDEV__WriteToActiveOpaque>:
 8011628:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801162c:	b09d      	sub	sp, #116	; 0x74
 801162e:	4606      	mov	r6, r0
 8011630:	910f      	str	r1, [sp, #60]	; 0x3c
 8011632:	920d      	str	r2, [sp, #52]	; 0x34
 8011634:	2800      	cmp	r0, #0
 8011636:	f000 8386 	beq.w	8011d46 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 801163a:	f7fd ff17 	bl	800f46c <GUI_ALLOC_LockH>
 801163e:	ab1c      	add	r3, sp, #112	; 0x70
 8011640:	6944      	ldr	r4, [r0, #20]
 8011642:	f843 0d1c 	str.w	r0, [r3, #-28]!
 8011646:	4618      	mov	r0, r3
 8011648:	f7fd ff1e 	bl	800f488 <GUI_ALLOC_UnlockH>
 801164c:	4630      	mov	r0, r6
 801164e:	f7f9 fa2b 	bl	800aaa8 <GUI_MEMDEV_GetBitsPerPixel>
 8011652:	2808      	cmp	r0, #8
 8011654:	4601      	mov	r1, r0
 8011656:	dd02      	ble.n	801165e <GUI_MEMDEV__WriteToActiveOpaque+0x36>
 8011658:	2c00      	cmp	r4, #0
 801165a:	f000 81c3 	beq.w	80119e4 <GUI_MEMDEV__WriteToActiveOpaque+0x3bc>
 801165e:	2201      	movs	r2, #1
 8011660:	f04f 0800 	mov.w	r8, #0
 8011664:	4630      	mov	r0, r6
 8011666:	921b      	str	r2, [sp, #108]	; 0x6c
 8011668:	920b      	str	r2, [sp, #44]	; 0x2c
 801166a:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 801166e:	f7fd fefd 	bl	800f46c <GUI_ALLOC_LockH>
 8011672:	6803      	ldr	r3, [r0, #0]
 8011674:	f8df a60c 	ldr.w	sl, [pc, #1548]	; 8011c84 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>
 8011678:	691b      	ldr	r3, [r3, #16]
 801167a:	f9b0 100a 	ldrsh.w	r1, [r0, #10]
 801167e:	685b      	ldr	r3, [r3, #4]
 8011680:	930e      	str	r3, [sp, #56]	; 0x38
 8011682:	f10d 0b70 	add.w	fp, sp, #112	; 0x70
 8011686:	f8da 3000 	ldr.w	r3, [sl]
 801168a:	f84b 0d14 	str.w	r0, [fp, #-20]!
 801168e:	6904      	ldr	r4, [r0, #16]
 8011690:	6945      	ldr	r5, [r0, #20]
 8011692:	f8d0 900c 	ldr.w	r9, [r0, #12]
 8011696:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 801169a:	7c58      	ldrb	r0, [r3, #17]
 801169c:	9112      	str	r1, [sp, #72]	; 0x48
 801169e:	f7fa fc73 	bl	800bf88 <GUI_GetBitsPerPixelEx>
 80116a2:	f8da 3000 	ldr.w	r3, [sl]
 80116a6:	9010      	str	r0, [sp, #64]	; 0x40
 80116a8:	7c58      	ldrb	r0, [r3, #17]
 80116aa:	f7fa fc8b 	bl	800bfc4 <GUI_GetpfIndex2ColorEx>
 80116ae:	4603      	mov	r3, r0
 80116b0:	4658      	mov	r0, fp
 80116b2:	9309      	str	r3, [sp, #36]	; 0x24
 80116b4:	f7fd fee8 	bl	800f488 <GUI_ALLOC_UnlockH>
 80116b8:	2c08      	cmp	r4, #8
 80116ba:	4651      	mov	r1, sl
 80116bc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80116be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80116c0:	d904      	bls.n	80116cc <GUI_MEMDEV__WriteToActiveOpaque+0xa4>
 80116c2:	2c10      	cmp	r4, #16
 80116c4:	bf8c      	ite	hi
 80116c6:	2204      	movhi	r2, #4
 80116c8:	2202      	movls	r2, #2
 80116ca:	e005      	b.n	80116d8 <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 80116cc:	2c01      	cmp	r4, #1
 80116ce:	d103      	bne.n	80116d8 <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 80116d0:	9411      	str	r4, [sp, #68]	; 0x44
 80116d2:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 80116d6:	e000      	b.n	80116da <GUI_MEMDEV__WriteToActiveOpaque+0xb2>
 80116d8:	9211      	str	r2, [sp, #68]	; 0x44
 80116da:	980e      	ldr	r0, [sp, #56]	; 0x38
 80116dc:	4298      	cmp	r0, r3
 80116de:	f000 80e2 	beq.w	80118a6 <GUI_MEMDEV__WriteToActiveOpaque+0x27e>
 80116e2:	680b      	ldr	r3, [r1, #0]
 80116e4:	7c58      	ldrb	r0, [r3, #17]
 80116e6:	f7fa fc75 	bl	800bfd4 <GUI_GetpfColor2IndexEx>
 80116ea:	9013      	str	r0, [sp, #76]	; 0x4c
 80116ec:	00b8      	lsls	r0, r7, #2
 80116ee:	f7fe f911 	bl	800f914 <GUI_ALLOC_AllocNoInit>
 80116f2:	900c      	str	r0, [sp, #48]	; 0x30
 80116f4:	2800      	cmp	r0, #0
 80116f6:	f000 8326 	beq.w	8011d46 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 80116fa:	4630      	mov	r0, r6
 80116fc:	f7f8 fb70 	bl	8009de0 <GUI_MEMDEV_GetDataPtr>
 8011700:	4606      	mov	r6, r0
 8011702:	2d00      	cmp	r5, #0
 8011704:	f000 80be 	beq.w	8011884 <GUI_MEMDEV__WriteToActiveOpaque+0x25c>
 8011708:	4628      	mov	r0, r5
 801170a:	f7fd feaf 	bl	800f46c <GUI_ALLOC_LockH>
 801170e:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
 8011712:	9018      	str	r0, [sp, #96]	; 0x60
 8011714:	f04f 0a00 	mov.w	sl, #0
 8011718:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801171a:	4592      	cmp	sl, r2
 801171c:	f280 80ae 	bge.w	801187c <GUI_MEMDEV__WriteToActiveOpaque+0x254>
 8011720:	9818      	ldr	r0, [sp, #96]	; 0x60
 8011722:	2300      	movs	r3, #0
 8011724:	9319      	str	r3, [sp, #100]	; 0x64
 8011726:	6883      	ldr	r3, [r0, #8]
 8011728:	a919      	add	r1, sp, #100	; 0x64
 801172a:	695b      	ldr	r3, [r3, #20]
 801172c:	4652      	mov	r2, sl
 801172e:	4798      	blx	r3
 8011730:	42b8      	cmp	r0, r7
 8011732:	4605      	mov	r5, r0
 8011734:	d12f      	bne.n	8011796 <GUI_MEMDEV__WriteToActiveOpaque+0x16e>
 8011736:	980c      	ldr	r0, [sp, #48]	; 0x30
 8011738:	f7fd fe98 	bl	800f46c <GUI_ALLOC_LockH>
 801173c:	2c08      	cmp	r4, #8
 801173e:	4601      	mov	r1, r0
 8011740:	9016      	str	r0, [sp, #88]	; 0x58
 8011742:	d909      	bls.n	8011758 <GUI_MEMDEV__WriteToActiveOpaque+0x130>
 8011744:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8011746:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8011748:	9200      	str	r2, [sp, #0]
 801174a:	9301      	str	r3, [sp, #4]
 801174c:	4630      	mov	r0, r6
 801174e:	463a      	mov	r2, r7
 8011750:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011752:	f7ff ff28 	bl	80115a6 <_Convert16>
 8011756:	e008      	b.n	801176a <GUI_MEMDEV__WriteToActiveOpaque+0x142>
 8011758:	980e      	ldr	r0, [sp, #56]	; 0x38
 801175a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801175c:	9000      	str	r0, [sp, #0]
 801175e:	9201      	str	r2, [sp, #4]
 8011760:	4630      	mov	r0, r6
 8011762:	463a      	mov	r2, r7
 8011764:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011766:	f7ff ff3d 	bl	80115e4 <_Convert8>
 801176a:	2301      	movs	r3, #1
 801176c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801176e:	9002      	str	r0, [sp, #8]
 8011770:	ad1c      	add	r5, sp, #112	; 0x70
 8011772:	2200      	movs	r2, #0
 8011774:	9300      	str	r3, [sp, #0]
 8011776:	9301      	str	r3, [sp, #4]
 8011778:	9203      	str	r2, [sp, #12]
 801177a:	f855 2d18 	ldr.w	r2, [r5, #-24]!
 801177e:	9204      	str	r2, [sp, #16]
 8011780:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8011782:	f8cd 8014 	str.w	r8, [sp, #20]
 8011786:	4659      	mov	r1, fp
 8011788:	463a      	mov	r2, r7
 801178a:	f7fa fe3f 	bl	800c40c <LCD_DrawBitmap>
 801178e:	4628      	mov	r0, r5
 8011790:	f7fd fe7a 	bl	800f488 <GUI_ALLOC_UnlockH>
 8011794:	e060      	b.n	8011858 <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 8011796:	2c01      	cmp	r4, #1
 8011798:	d15c      	bne.n	8011854 <GUI_MEMDEV__WriteToActiveOpaque+0x22c>
 801179a:	2d00      	cmp	r5, #0
 801179c:	d05c      	beq.n	8011858 <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 801179e:	9819      	ldr	r0, [sp, #100]	; 0x64
 80117a0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80117a2:	f8cd 900c 	str.w	r9, [sp, #12]
 80117a6:	2208      	movs	r2, #8
 80117a8:	fb90 f2f2 	sdiv	r2, r0, r2
 80117ac:	4432      	add	r2, r6
 80117ae:	2301      	movs	r3, #1
 80117b0:	9204      	str	r2, [sp, #16]
 80117b2:	f000 0207 	and.w	r2, r0, #7
 80117b6:	9300      	str	r3, [sp, #0]
 80117b8:	4408      	add	r0, r1
 80117ba:	9301      	str	r3, [sp, #4]
 80117bc:	9302      	str	r3, [sp, #8]
 80117be:	9206      	str	r2, [sp, #24]
 80117c0:	4659      	mov	r1, fp
 80117c2:	462a      	mov	r2, r5
 80117c4:	f8cd 8014 	str.w	r8, [sp, #20]
 80117c8:	f7fa fd44 	bl	800c254 <LCD__DrawBitmap_1bpp>
 80117cc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80117ce:	9818      	ldr	r0, [sp, #96]	; 0x60
 80117d0:	441d      	add	r5, r3
 80117d2:	6883      	ldr	r3, [r0, #8]
 80117d4:	9519      	str	r5, [sp, #100]	; 0x64
 80117d6:	695b      	ldr	r3, [r3, #20]
 80117d8:	a919      	add	r1, sp, #100	; 0x64
 80117da:	4652      	mov	r2, sl
 80117dc:	4798      	blx	r3
 80117de:	4605      	mov	r5, r0
 80117e0:	e7db      	b.n	801179a <GUI_MEMDEV__WriteToActiveOpaque+0x172>
 80117e2:	980c      	ldr	r0, [sp, #48]	; 0x30
 80117e4:	f7fd fe42 	bl	800f46c <GUI_ALLOC_LockH>
 80117e8:	2c08      	cmp	r4, #8
 80117ea:	4601      	mov	r1, r0
 80117ec:	9016      	str	r0, [sp, #88]	; 0x58
 80117ee:	9819      	ldr	r0, [sp, #100]	; 0x64
 80117f0:	d938      	bls.n	8011864 <GUI_MEMDEV__WriteToActiveOpaque+0x23c>
 80117f2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80117f4:	9200      	str	r2, [sp, #0]
 80117f6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80117f8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80117fa:	9301      	str	r3, [sp, #4]
 80117fc:	fb00 6002 	mla	r0, r0, r2, r6
 8011800:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011802:	462a      	mov	r2, r5
 8011804:	f7ff fecf 	bl	80115a6 <_Convert16>
 8011808:	2301      	movs	r3, #1
 801180a:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
 801180e:	9810      	ldr	r0, [sp, #64]	; 0x40
 8011810:	9300      	str	r3, [sp, #0]
 8011812:	2200      	movs	r2, #0
 8011814:	9301      	str	r3, [sp, #4]
 8011816:	9002      	str	r0, [sp, #8]
 8011818:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801181a:	9203      	str	r2, [sp, #12]
 801181c:	9819      	ldr	r0, [sp, #100]	; 0x64
 801181e:	f85c 2d18 	ldr.w	r2, [ip, #-24]!
 8011822:	9204      	str	r2, [sp, #16]
 8011824:	4408      	add	r0, r1
 8011826:	462a      	mov	r2, r5
 8011828:	4659      	mov	r1, fp
 801182a:	f8cd 8014 	str.w	r8, [sp, #20]
 801182e:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 8011832:	f7fa fdeb 	bl	800c40c <LCD_DrawBitmap>
 8011836:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 801183a:	4660      	mov	r0, ip
 801183c:	f7fd fe24 	bl	800f488 <GUI_ALLOC_UnlockH>
 8011840:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8011842:	9818      	ldr	r0, [sp, #96]	; 0x60
 8011844:	441d      	add	r5, r3
 8011846:	6883      	ldr	r3, [r0, #8]
 8011848:	9519      	str	r5, [sp, #100]	; 0x64
 801184a:	695b      	ldr	r3, [r3, #20]
 801184c:	a919      	add	r1, sp, #100	; 0x64
 801184e:	4652      	mov	r2, sl
 8011850:	4798      	blx	r3
 8011852:	4605      	mov	r5, r0
 8011854:	2d00      	cmp	r5, #0
 8011856:	d1c4      	bne.n	80117e2 <GUI_MEMDEV__WriteToActiveOpaque+0x1ba>
 8011858:	444e      	add	r6, r9
 801185a:	f10a 0a01 	add.w	sl, sl, #1
 801185e:	f10b 0b01 	add.w	fp, fp, #1
 8011862:	e759      	b.n	8011718 <GUI_MEMDEV__WriteToActiveOpaque+0xf0>
 8011864:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011866:	9300      	str	r3, [sp, #0]
 8011868:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801186a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801186c:	9201      	str	r2, [sp, #4]
 801186e:	fb00 6003 	mla	r0, r0, r3, r6
 8011872:	462a      	mov	r2, r5
 8011874:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011876:	f7ff feb5 	bl	80115e4 <_Convert8>
 801187a:	e7c5      	b.n	8011808 <GUI_MEMDEV__WriteToActiveOpaque+0x1e0>
 801187c:	a818      	add	r0, sp, #96	; 0x60
 801187e:	f7fd fe03 	bl	800f488 <GUI_ALLOC_UnlockH>
 8011882:	e00e      	b.n	80118a2 <GUI_MEMDEV__WriteToActiveOpaque+0x27a>
 8011884:	2301      	movs	r3, #1
 8011886:	9300      	str	r3, [sp, #0]
 8011888:	9301      	str	r3, [sp, #4]
 801188a:	9004      	str	r0, [sp, #16]
 801188c:	9402      	str	r4, [sp, #8]
 801188e:	f8cd 900c 	str.w	r9, [sp, #12]
 8011892:	f8cd 8014 	str.w	r8, [sp, #20]
 8011896:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8011898:	990d      	ldr	r1, [sp, #52]	; 0x34
 801189a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801189c:	463a      	mov	r2, r7
 801189e:	f7fa fdb5 	bl	800c40c <LCD_DrawBitmap>
 80118a2:	980c      	ldr	r0, [sp, #48]	; 0x30
 80118a4:	e24d      	b.n	8011d42 <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 80118a6:	4630      	mov	r0, r6
 80118a8:	f7f8 fa9a 	bl	8009de0 <GUI_MEMDEV_GetDataPtr>
 80118ac:	4606      	mov	r6, r0
 80118ae:	2d00      	cmp	r5, #0
 80118b0:	f000 808a 	beq.w	80119c8 <GUI_MEMDEV__WriteToActiveOpaque+0x3a0>
 80118b4:	4628      	mov	r0, r5
 80118b6:	f7fd fdd9 	bl	800f46c <GUI_ALLOC_LockH>
 80118ba:	2500      	movs	r5, #0
 80118bc:	9018      	str	r0, [sp, #96]	; 0x60
 80118be:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80118c0:	429d      	cmp	r5, r3
 80118c2:	da7d      	bge.n	80119c0 <GUI_MEMDEV__WriteToActiveOpaque+0x398>
 80118c4:	9818      	ldr	r0, [sp, #96]	; 0x60
 80118c6:	2300      	movs	r3, #0
 80118c8:	9319      	str	r3, [sp, #100]	; 0x64
 80118ca:	6883      	ldr	r3, [r0, #8]
 80118cc:	a919      	add	r1, sp, #100	; 0x64
 80118ce:	695b      	ldr	r3, [r3, #20]
 80118d0:	462a      	mov	r2, r5
 80118d2:	4798      	blx	r3
 80118d4:	42b8      	cmp	r0, r7
 80118d6:	4682      	mov	sl, r0
 80118d8:	d124      	bne.n	8011924 <GUI_MEMDEV__WriteToActiveOpaque+0x2fc>
 80118da:	46aa      	mov	sl, r5
 80118dc:	9818      	ldr	r0, [sp, #96]	; 0x60
 80118de:	6883      	ldr	r3, [r0, #8]
 80118e0:	f10a 0b01 	add.w	fp, sl, #1
 80118e4:	695b      	ldr	r3, [r3, #20]
 80118e6:	a919      	add	r1, sp, #100	; 0x64
 80118e8:	465a      	mov	r2, fp
 80118ea:	4798      	blx	r3
 80118ec:	42b8      	cmp	r0, r7
 80118ee:	d101      	bne.n	80118f4 <GUI_MEMDEV__WriteToActiveOpaque+0x2cc>
 80118f0:	46da      	mov	sl, fp
 80118f2:	e7f3      	b.n	80118dc <GUI_MEMDEV__WriteToActiveOpaque+0x2b4>
 80118f4:	ebc5 0b0a 	rsb	fp, r5, sl
 80118f8:	990d      	ldr	r1, [sp, #52]	; 0x34
 80118fa:	9604      	str	r6, [sp, #16]
 80118fc:	2301      	movs	r3, #1
 80118fe:	f10b 0b01 	add.w	fp, fp, #1
 8011902:	9300      	str	r3, [sp, #0]
 8011904:	9301      	str	r3, [sp, #4]
 8011906:	4429      	add	r1, r5
 8011908:	9402      	str	r4, [sp, #8]
 801190a:	f8cd 900c 	str.w	r9, [sp, #12]
 801190e:	f8cd 8014 	str.w	r8, [sp, #20]
 8011912:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8011914:	463a      	mov	r2, r7
 8011916:	465b      	mov	r3, fp
 8011918:	f7fa fd78 	bl	800c40c <LCD_DrawBitmap>
 801191c:	fb09 660b 	mla	r6, r9, fp, r6
 8011920:	4655      	mov	r5, sl
 8011922:	e04b      	b.n	80119bc <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 8011924:	2c01      	cmp	r4, #1
 8011926:	d127      	bne.n	8011978 <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 8011928:	f1ba 0f00 	cmp.w	sl, #0
 801192c:	d022      	beq.n	8011974 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 801192e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8011930:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8011932:	f8cd 900c 	str.w	r9, [sp, #12]
 8011936:	2208      	movs	r2, #8
 8011938:	fb90 f2f2 	sdiv	r2, r0, r2
 801193c:	4432      	add	r2, r6
 801193e:	9204      	str	r2, [sp, #16]
 8011940:	f000 0207 	and.w	r2, r0, #7
 8011944:	4408      	add	r0, r1
 8011946:	990d      	ldr	r1, [sp, #52]	; 0x34
 8011948:	9206      	str	r2, [sp, #24]
 801194a:	2301      	movs	r3, #1
 801194c:	4652      	mov	r2, sl
 801194e:	9300      	str	r3, [sp, #0]
 8011950:	9301      	str	r3, [sp, #4]
 8011952:	9302      	str	r3, [sp, #8]
 8011954:	4429      	add	r1, r5
 8011956:	f8cd 8014 	str.w	r8, [sp, #20]
 801195a:	f7fa fc7b 	bl	800c254 <LCD__DrawBitmap_1bpp>
 801195e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8011960:	9818      	ldr	r0, [sp, #96]	; 0x60
 8011962:	4453      	add	r3, sl
 8011964:	9319      	str	r3, [sp, #100]	; 0x64
 8011966:	6883      	ldr	r3, [r0, #8]
 8011968:	a919      	add	r1, sp, #100	; 0x64
 801196a:	695b      	ldr	r3, [r3, #20]
 801196c:	462a      	mov	r2, r5
 801196e:	4798      	blx	r3
 8011970:	4682      	mov	sl, r0
 8011972:	e7d9      	b.n	8011928 <GUI_MEMDEV__WriteToActiveOpaque+0x300>
 8011974:	444e      	add	r6, r9
 8011976:	e021      	b.n	80119bc <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 8011978:	f1ba 0f00 	cmp.w	sl, #0
 801197c:	d0fa      	beq.n	8011974 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 801197e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8011980:	9911      	ldr	r1, [sp, #68]	; 0x44
 8011982:	9402      	str	r4, [sp, #8]
 8011984:	fb00 6201 	mla	r2, r0, r1, r6
 8011988:	9204      	str	r2, [sp, #16]
 801198a:	990d      	ldr	r1, [sp, #52]	; 0x34
 801198c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801198e:	f8cd 900c 	str.w	r9, [sp, #12]
 8011992:	2301      	movs	r3, #1
 8011994:	4410      	add	r0, r2
 8011996:	9300      	str	r3, [sp, #0]
 8011998:	4652      	mov	r2, sl
 801199a:	9301      	str	r3, [sp, #4]
 801199c:	4429      	add	r1, r5
 801199e:	f8cd 8014 	str.w	r8, [sp, #20]
 80119a2:	f7fa fd33 	bl	800c40c <LCD_DrawBitmap>
 80119a6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80119a8:	9818      	ldr	r0, [sp, #96]	; 0x60
 80119aa:	4453      	add	r3, sl
 80119ac:	9319      	str	r3, [sp, #100]	; 0x64
 80119ae:	6883      	ldr	r3, [r0, #8]
 80119b0:	a919      	add	r1, sp, #100	; 0x64
 80119b2:	695b      	ldr	r3, [r3, #20]
 80119b4:	462a      	mov	r2, r5
 80119b6:	4798      	blx	r3
 80119b8:	4682      	mov	sl, r0
 80119ba:	e7dd      	b.n	8011978 <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 80119bc:	3501      	adds	r5, #1
 80119be:	e77e      	b.n	80118be <GUI_MEMDEV__WriteToActiveOpaque+0x296>
 80119c0:	a818      	add	r0, sp, #96	; 0x60
 80119c2:	f7fd fd61 	bl	800f488 <GUI_ALLOC_UnlockH>
 80119c6:	e1be      	b.n	8011d46 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 80119c8:	2301      	movs	r3, #1
 80119ca:	9300      	str	r3, [sp, #0]
 80119cc:	9301      	str	r3, [sp, #4]
 80119ce:	9004      	str	r0, [sp, #16]
 80119d0:	9402      	str	r4, [sp, #8]
 80119d2:	f8cd 900c 	str.w	r9, [sp, #12]
 80119d6:	f8cd 8014 	str.w	r8, [sp, #20]
 80119da:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80119dc:	990d      	ldr	r1, [sp, #52]	; 0x34
 80119de:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80119e0:	463a      	mov	r2, r7
 80119e2:	e041      	b.n	8011a68 <GUI_MEMDEV__WriteToActiveOpaque+0x440>
 80119e4:	4630      	mov	r0, r6
 80119e6:	910a      	str	r1, [sp, #40]	; 0x28
 80119e8:	f7fd fd40 	bl	800f46c <GUI_ALLOC_LockH>
 80119ec:	4682      	mov	sl, r0
 80119ee:	a81c      	add	r0, sp, #112	; 0x70
 80119f0:	f8ba 200a 	ldrh.w	r2, [sl, #10]
 80119f4:	f840 ad10 	str.w	sl, [r0, #-16]!
 80119f8:	f8da 4000 	ldr.w	r4, [sl]
 80119fc:	9210      	str	r2, [sp, #64]	; 0x40
 80119fe:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8011a02:	f8ba 7008 	ldrh.w	r7, [sl, #8]
 8011a06:	4c9e      	ldr	r4, [pc, #632]	; (8011c80 <GUI_MEMDEV__WriteToActiveOpaque+0x658>)
 8011a08:	b213      	sxth	r3, r2
 8011a0a:	f8da 200c 	ldr.w	r2, [sl, #12]
 8011a0e:	920b      	str	r2, [sp, #44]	; 0x2c
 8011a10:	9309      	str	r3, [sp, #36]	; 0x24
 8011a12:	f7fd fd39 	bl	800f488 <GUI_ALLOC_UnlockH>
 8011a16:	f8d9 0004 	ldr.w	r0, [r9, #4]
 8011a1a:	900e      	str	r0, [sp, #56]	; 0x38
 8011a1c:	4899      	ldr	r0, [pc, #612]	; (8011c84 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>)
 8011a1e:	6800      	ldr	r0, [r0, #0]
 8011a20:	7c40      	ldrb	r0, [r0, #17]
 8011a22:	f854 4020 	ldr.w	r4, [r4, r0, lsl #2]
 8011a26:	6925      	ldr	r5, [r4, #16]
 8011a28:	f8d5 8000 	ldr.w	r8, [r5]
 8011a2c:	f7fa faac 	bl	800bf88 <GUI_GetBitsPerPixelEx>
 8011a30:	2808      	cmp	r0, #8
 8011a32:	fa0f fb87 	sxth.w	fp, r7
 8011a36:	990a      	ldr	r1, [sp, #40]	; 0x28
 8011a38:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8011a3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011a3c:	d904      	bls.n	8011a48 <GUI_MEMDEV__WriteToActiveOpaque+0x420>
 8011a3e:	2810      	cmp	r0, #16
 8011a40:	bf8c      	ite	hi
 8011a42:	2404      	movhi	r4, #4
 8011a44:	2402      	movls	r4, #2
 8011a46:	e000      	b.n	8011a4a <GUI_MEMDEV__WriteToActiveOpaque+0x422>
 8011a48:	2401      	movs	r4, #1
 8011a4a:	45a9      	cmp	r9, r5
 8011a4c:	d10f      	bne.n	8011a6e <GUI_MEMDEV__WriteToActiveOpaque+0x446>
 8011a4e:	2001      	movs	r0, #1
 8011a50:	9203      	str	r2, [sp, #12]
 8011a52:	f10a 0218 	add.w	r2, sl, #24
 8011a56:	9000      	str	r0, [sp, #0]
 8011a58:	9001      	str	r0, [sp, #4]
 8011a5a:	9102      	str	r1, [sp, #8]
 8011a5c:	9204      	str	r2, [sp, #16]
 8011a5e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8011a60:	990d      	ldr	r1, [sp, #52]	; 0x34
 8011a62:	2200      	movs	r2, #0
 8011a64:	9205      	str	r2, [sp, #20]
 8011a66:	465a      	mov	r2, fp
 8011a68:	f7fa fcd0 	bl	800c40c <LCD_DrawBitmap>
 8011a6c:	e16b      	b.n	8011d46 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8011a6e:	2920      	cmp	r1, #32
 8011a70:	f040 808e 	bne.w	8011b90 <GUI_MEMDEV__WriteToActiveOpaque+0x568>
 8011a74:	fb0b f004 	mul.w	r0, fp, r4
 8011a78:	f7fd ff4c 	bl	800f914 <GUI_ALLOC_AllocNoInit>
 8011a7c:	900e      	str	r0, [sp, #56]	; 0x38
 8011a7e:	2800      	cmp	r0, #0
 8011a80:	f000 8161 	beq.w	8011d46 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8011a84:	f7fd fcf2 	bl	800f46c <GUI_ALLOC_LockH>
 8011a88:	901a      	str	r0, [sp, #104]	; 0x68
 8011a8a:	4630      	mov	r0, r6
 8011a8c:	f7fd fcee 	bl	800f46c <GUI_ALLOC_LockH>
 8011a90:	9018      	str	r0, [sp, #96]	; 0x60
 8011a92:	692b      	ldr	r3, [r5, #16]
 8011a94:	f100 0a18 	add.w	sl, r0, #24
 8011a98:	ea4f 068b 	mov.w	r6, fp, lsl #2
 8011a9c:	ea4f 09c4 	mov.w	r9, r4, lsl #3
 8011aa0:	2b00      	cmp	r3, #0
 8011aa2:	d02f      	beq.n	8011b04 <GUI_MEMDEV__WriteToActiveOpaque+0x4dc>
 8011aa4:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 8011aa8:	2c02      	cmp	r4, #2
 8011aaa:	d003      	beq.n	8011ab4 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 8011aac:	2c04      	cmp	r4, #4
 8011aae:	d001      	beq.n	8011ab4 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 8011ab0:	2c01      	cmp	r4, #1
 8011ab2:	d106      	bne.n	8011ac2 <GUI_MEMDEV__WriteToActiveOpaque+0x49a>
 8011ab4:	4650      	mov	r0, sl
 8011ab6:	692f      	ldr	r7, [r5, #16]
 8011ab8:	991a      	ldr	r1, [sp, #104]	; 0x68
 8011aba:	465a      	mov	r2, fp
 8011abc:	4623      	mov	r3, r4
 8011abe:	47b8      	blx	r7
 8011ac0:	44b2      	add	sl, r6
 8011ac2:	2301      	movs	r3, #1
 8011ac4:	2200      	movs	r2, #0
 8011ac6:	991a      	ldr	r1, [sp, #104]	; 0x68
 8011ac8:	9300      	str	r3, [sp, #0]
 8011aca:	9301      	str	r3, [sp, #4]
 8011acc:	9203      	str	r2, [sp, #12]
 8011ace:	9104      	str	r1, [sp, #16]
 8011ad0:	9205      	str	r2, [sp, #20]
 8011ad2:	4641      	mov	r1, r8
 8011ad4:	465a      	mov	r2, fp
 8011ad6:	f8cd 9008 	str.w	r9, [sp, #8]
 8011ada:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8011adc:	f7fa fc96 	bl	800c40c <LCD_DrawBitmap>
 8011ae0:	9910      	ldr	r1, [sp, #64]	; 0x40
 8011ae2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8011ae4:	f108 0701 	add.w	r7, r8, #1
 8011ae8:	fa02 f381 	sxtah	r3, r2, r1
 8011aec:	42bb      	cmp	r3, r7
 8011aee:	d107      	bne.n	8011b00 <GUI_MEMDEV__WriteToActiveOpaque+0x4d8>
 8011af0:	a818      	add	r0, sp, #96	; 0x60
 8011af2:	f7fd fcc9 	bl	800f488 <GUI_ALLOC_UnlockH>
 8011af6:	a81a      	add	r0, sp, #104	; 0x68
 8011af8:	f7fd fcc6 	bl	800f488 <GUI_ALLOC_UnlockH>
 8011afc:	980e      	ldr	r0, [sp, #56]	; 0x38
 8011afe:	e120      	b.n	8011d42 <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 8011b00:	46b8      	mov	r8, r7
 8011b02:	e7d1      	b.n	8011aa8 <GUI_MEMDEV__WriteToActiveOpaque+0x480>
 8011b04:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8011b06:	2c02      	cmp	r4, #2
 8011b08:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8011b0a:	d00e      	beq.n	8011b2a <GUI_MEMDEV__WriteToActiveOpaque+0x502>
 8011b0c:	2c04      	cmp	r4, #4
 8011b0e:	d018      	beq.n	8011b42 <GUI_MEMDEV__WriteToActiveOpaque+0x51a>
 8011b10:	2c01      	cmp	r4, #1
 8011b12:	d125      	bne.n	8011b60 <GUI_MEMDEV__WriteToActiveOpaque+0x538>
 8011b14:	2300      	movs	r3, #0
 8011b16:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 8011b1a:	9309      	str	r3, [sp, #36]	; 0x24
 8011b1c:	47c0      	blx	r8
 8011b1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011b20:	54f8      	strb	r0, [r7, r3]
 8011b22:	3301      	adds	r3, #1
 8011b24:	459b      	cmp	fp, r3
 8011b26:	d1f6      	bne.n	8011b16 <GUI_MEMDEV__WriteToActiveOpaque+0x4ee>
 8011b28:	e019      	b.n	8011b5e <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 8011b2a:	2300      	movs	r3, #0
 8011b2c:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 8011b30:	9309      	str	r3, [sp, #36]	; 0x24
 8011b32:	47c0      	blx	r8
 8011b34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011b36:	f827 0013 	strh.w	r0, [r7, r3, lsl #1]
 8011b3a:	3301      	adds	r3, #1
 8011b3c:	459b      	cmp	fp, r3
 8011b3e:	d1f5      	bne.n	8011b2c <GUI_MEMDEV__WriteToActiveOpaque+0x504>
 8011b40:	e00d      	b.n	8011b5e <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 8011b42:	465a      	mov	r2, fp
 8011b44:	2300      	movs	r3, #0
 8011b46:	f85a 0003 	ldr.w	r0, [sl, r3]
 8011b4a:	920b      	str	r2, [sp, #44]	; 0x2c
 8011b4c:	9309      	str	r3, [sp, #36]	; 0x24
 8011b4e:	47c0      	blx	r8
 8011b50:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8011b52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011b54:	3a01      	subs	r2, #1
 8011b56:	50f8      	str	r0, [r7, r3]
 8011b58:	f103 0304 	add.w	r3, r3, #4
 8011b5c:	d1f3      	bne.n	8011b46 <GUI_MEMDEV__WriteToActiveOpaque+0x51e>
 8011b5e:	44b2      	add	sl, r6
 8011b60:	2301      	movs	r3, #1
 8011b62:	2200      	movs	r2, #0
 8011b64:	991a      	ldr	r1, [sp, #104]	; 0x68
 8011b66:	9300      	str	r3, [sp, #0]
 8011b68:	9301      	str	r3, [sp, #4]
 8011b6a:	9203      	str	r2, [sp, #12]
 8011b6c:	9104      	str	r1, [sp, #16]
 8011b6e:	9205      	str	r2, [sp, #20]
 8011b70:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8011b72:	f8cd 9008 	str.w	r9, [sp, #8]
 8011b76:	4629      	mov	r1, r5
 8011b78:	465a      	mov	r2, fp
 8011b7a:	f7fa fc47 	bl	800c40c <LCD_DrawBitmap>
 8011b7e:	9810      	ldr	r0, [sp, #64]	; 0x40
 8011b80:	990d      	ldr	r1, [sp, #52]	; 0x34
 8011b82:	1c6f      	adds	r7, r5, #1
 8011b84:	fa01 f380 	sxtah	r3, r1, r0
 8011b88:	42bb      	cmp	r3, r7
 8011b8a:	d0b1      	beq.n	8011af0 <GUI_MEMDEV__WriteToActiveOpaque+0x4c8>
 8011b8c:	463d      	mov	r5, r7
 8011b8e:	e7ba      	b.n	8011b06 <GUI_MEMDEV__WriteToActiveOpaque+0x4de>
 8011b90:	2910      	cmp	r1, #16
 8011b92:	f040 80d8 	bne.w	8011d46 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8011b96:	fa0f fa87 	sxth.w	sl, r7
 8011b9a:	fb0a f004 	mul.w	r0, sl, r4
 8011b9e:	f7fd feb9 	bl	800f914 <GUI_ALLOC_AllocNoInit>
 8011ba2:	9012      	str	r0, [sp, #72]	; 0x48
 8011ba4:	2800      	cmp	r0, #0
 8011ba6:	f000 80ce 	beq.w	8011d46 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8011baa:	f7fd fc5f 	bl	800f46c <GUI_ALLOC_LockH>
 8011bae:	901a      	str	r0, [sp, #104]	; 0x68
 8011bb0:	4630      	mov	r0, r6
 8011bb2:	f7fd fc5b 	bl	800f46c <GUI_ALLOC_LockH>
 8011bb6:	9018      	str	r0, [sp, #96]	; 0x60
 8011bb8:	692b      	ldr	r3, [r5, #16]
 8011bba:	f100 0618 	add.w	r6, r0, #24
 8011bbe:	b113      	cbz	r3, 8011bc6 <GUI_MEMDEV__WriteToActiveOpaque+0x59e>
 8011bc0:	f8d9 3014 	ldr.w	r3, [r9, #20]
 8011bc4:	b92b      	cbnz	r3, 8011bd2 <GUI_MEMDEV__WriteToActiveOpaque+0x5aa>
 8011bc6:	00e2      	lsls	r2, r4, #3
 8011bc8:	b23f      	sxth	r7, r7
 8011bca:	9211      	str	r2, [sp, #68]	; 0x44
 8011bcc:	007f      	lsls	r7, r7, #1
 8011bce:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8011bd0:	e088      	b.n	8011ce4 <GUI_MEMDEV__WriteToActiveOpaque+0x6bc>
 8011bd2:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 8011bd6:	0080      	lsls	r0, r0, #2
 8011bd8:	f7fd fe9c 	bl	800f914 <GUI_ALLOC_AllocNoInit>
 8011bdc:	9011      	str	r0, [sp, #68]	; 0x44
 8011bde:	b118      	cbz	r0, 8011be8 <GUI_MEMDEV__WriteToActiveOpaque+0x5c0>
 8011be0:	f7fd fc44 	bl	800f46c <GUI_ALLOC_LockH>
 8011be4:	9019      	str	r0, [sp, #100]	; 0x64
 8011be6:	e001      	b.n	8011bec <GUI_MEMDEV__WriteToActiveOpaque+0x5c4>
 8011be8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8011bea:	9319      	str	r3, [sp, #100]	; 0x64
 8011bec:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8011bee:	2b00      	cmp	r3, #0
 8011bf0:	f000 80a0 	beq.w	8011d34 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 8011bf4:	b23f      	sxth	r7, r7
 8011bf6:	007f      	lsls	r7, r7, #1
 8011bf8:	970e      	str	r7, [sp, #56]	; 0x38
 8011bfa:	00e7      	lsls	r7, r4, #3
 8011bfc:	9713      	str	r7, [sp, #76]	; 0x4c
 8011bfe:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8011c00:	970c      	str	r7, [sp, #48]	; 0x30
 8011c02:	2c02      	cmp	r4, #2
 8011c04:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 8011c08:	d004      	beq.n	8011c14 <GUI_MEMDEV__WriteToActiveOpaque+0x5ec>
 8011c0a:	2c04      	cmp	r4, #4
 8011c0c:	d007      	beq.n	8011c1e <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 8011c0e:	2c01      	cmp	r4, #1
 8011c10:	d114      	bne.n	8011c3c <GUI_MEMDEV__WriteToActiveOpaque+0x614>
 8011c12:	e004      	b.n	8011c1e <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 8011c14:	4630      	mov	r0, r6
 8011c16:	9919      	ldr	r1, [sp, #100]	; 0x64
 8011c18:	4652      	mov	r2, sl
 8011c1a:	4623      	mov	r3, r4
 8011c1c:	e003      	b.n	8011c26 <GUI_MEMDEV__WriteToActiveOpaque+0x5fe>
 8011c1e:	9919      	ldr	r1, [sp, #100]	; 0x64
 8011c20:	4630      	mov	r0, r6
 8011c22:	4652      	mov	r2, sl
 8011c24:	2302      	movs	r3, #2
 8011c26:	f8d9 7014 	ldr.w	r7, [r9, #20]
 8011c2a:	47b8      	blx	r7
 8011c2c:	692f      	ldr	r7, [r5, #16]
 8011c2e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8011c30:	4641      	mov	r1, r8
 8011c32:	4652      	mov	r2, sl
 8011c34:	4623      	mov	r3, r4
 8011c36:	47b8      	blx	r7
 8011c38:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8011c3a:	443e      	add	r6, r7
 8011c3c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8011c3e:	991a      	ldr	r1, [sp, #104]	; 0x68
 8011c40:	9104      	str	r1, [sp, #16]
 8011c42:	2301      	movs	r3, #1
 8011c44:	2200      	movs	r2, #0
 8011c46:	f107 0801 	add.w	r8, r7, #1
 8011c4a:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 8011c4c:	9300      	str	r3, [sp, #0]
 8011c4e:	9301      	str	r3, [sp, #4]
 8011c50:	9702      	str	r7, [sp, #8]
 8011c52:	9203      	str	r2, [sp, #12]
 8011c54:	9205      	str	r2, [sp, #20]
 8011c56:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8011c58:	990c      	ldr	r1, [sp, #48]	; 0x30
 8011c5a:	465a      	mov	r2, fp
 8011c5c:	f7fa fbd6 	bl	800c40c <LCD_DrawBitmap>
 8011c60:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8011c62:	980d      	ldr	r0, [sp, #52]	; 0x34
 8011c64:	fa00 f387 	sxtah	r3, r0, r7
 8011c68:	4543      	cmp	r3, r8
 8011c6a:	d002      	beq.n	8011c72 <GUI_MEMDEV__WriteToActiveOpaque+0x64a>
 8011c6c:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 8011c70:	e7c7      	b.n	8011c02 <GUI_MEMDEV__WriteToActiveOpaque+0x5da>
 8011c72:	a819      	add	r0, sp, #100	; 0x64
 8011c74:	f7fd fc08 	bl	800f488 <GUI_ALLOC_UnlockH>
 8011c78:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011c7a:	f7fd fc31 	bl	800f4e0 <GUI_ALLOC_Free>
 8011c7e:	e059      	b.n	8011d34 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 8011c80:	2001ba34 	.word	0x2001ba34
 8011c84:	20000274 	.word	0x20000274
 8011c88:	2c04      	cmp	r4, #4
 8011c8a:	d041      	beq.n	8011d10 <GUI_MEMDEV__WriteToActiveOpaque+0x6e8>
 8011c8c:	2c01      	cmp	r4, #1
 8011c8e:	d111      	bne.n	8011cb4 <GUI_MEMDEV__WriteToActiveOpaque+0x68c>
 8011c90:	464a      	mov	r2, r9
 8011c92:	4631      	mov	r1, r6
 8011c94:	f831 0b02 	ldrh.w	r0, [r1], #2
 8011c98:	910a      	str	r1, [sp, #40]	; 0x28
 8011c9a:	920b      	str	r2, [sp, #44]	; 0x2c
 8011c9c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011c9e:	4798      	blx	r3
 8011ca0:	47c0      	blx	r8
 8011ca2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8011ca4:	f802 0b01 	strb.w	r0, [r2], #1
 8011ca8:	eb09 000a 	add.w	r0, r9, sl
 8011cac:	4282      	cmp	r2, r0
 8011cae:	990a      	ldr	r1, [sp, #40]	; 0x28
 8011cb0:	d1f0      	bne.n	8011c94 <GUI_MEMDEV__WriteToActiveOpaque+0x66c>
 8011cb2:	443e      	add	r6, r7
 8011cb4:	2301      	movs	r3, #1
 8011cb6:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011cb8:	991a      	ldr	r1, [sp, #104]	; 0x68
 8011cba:	9300      	str	r3, [sp, #0]
 8011cbc:	2200      	movs	r2, #0
 8011cbe:	9301      	str	r3, [sp, #4]
 8011cc0:	9002      	str	r0, [sp, #8]
 8011cc2:	9203      	str	r2, [sp, #12]
 8011cc4:	9104      	str	r1, [sp, #16]
 8011cc6:	9205      	str	r2, [sp, #20]
 8011cc8:	4629      	mov	r1, r5
 8011cca:	465a      	mov	r2, fp
 8011ccc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8011cce:	f7fa fb9d 	bl	800c40c <LCD_DrawBitmap>
 8011cd2:	9910      	ldr	r1, [sp, #64]	; 0x40
 8011cd4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8011cd6:	f105 0901 	add.w	r9, r5, #1
 8011cda:	fa02 f381 	sxtah	r3, r2, r1
 8011cde:	454b      	cmp	r3, r9
 8011ce0:	d028      	beq.n	8011d34 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 8011ce2:	464d      	mov	r5, r9
 8011ce4:	2c02      	cmp	r4, #2
 8011ce6:	f8dd 9068 	ldr.w	r9, [sp, #104]	; 0x68
 8011cea:	d1cd      	bne.n	8011c88 <GUI_MEMDEV__WriteToActiveOpaque+0x660>
 8011cec:	464b      	mov	r3, r9
 8011cee:	4631      	mov	r1, r6
 8011cf0:	46d9      	mov	r9, fp
 8011cf2:	f831 0b02 	ldrh.w	r0, [r1], #2
 8011cf6:	910a      	str	r1, [sp, #40]	; 0x28
 8011cf8:	9309      	str	r3, [sp, #36]	; 0x24
 8011cfa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8011cfc:	4790      	blx	r2
 8011cfe:	47c0      	blx	r8
 8011d00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011d02:	990a      	ldr	r1, [sp, #40]	; 0x28
 8011d04:	f823 0b02 	strh.w	r0, [r3], #2
 8011d08:	f1b9 0901 	subs.w	r9, r9, #1
 8011d0c:	d1f1      	bne.n	8011cf2 <GUI_MEMDEV__WriteToActiveOpaque+0x6ca>
 8011d0e:	e7d0      	b.n	8011cb2 <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 8011d10:	464b      	mov	r3, r9
 8011d12:	4631      	mov	r1, r6
 8011d14:	46d9      	mov	r9, fp
 8011d16:	f831 0b02 	ldrh.w	r0, [r1], #2
 8011d1a:	910a      	str	r1, [sp, #40]	; 0x28
 8011d1c:	9309      	str	r3, [sp, #36]	; 0x24
 8011d1e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8011d20:	4790      	blx	r2
 8011d22:	47c0      	blx	r8
 8011d24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011d26:	990a      	ldr	r1, [sp, #40]	; 0x28
 8011d28:	f843 0b04 	str.w	r0, [r3], #4
 8011d2c:	f1b9 0901 	subs.w	r9, r9, #1
 8011d30:	d1f1      	bne.n	8011d16 <GUI_MEMDEV__WriteToActiveOpaque+0x6ee>
 8011d32:	e7be      	b.n	8011cb2 <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 8011d34:	a818      	add	r0, sp, #96	; 0x60
 8011d36:	f7fd fba7 	bl	800f488 <GUI_ALLOC_UnlockH>
 8011d3a:	a81a      	add	r0, sp, #104	; 0x68
 8011d3c:	f7fd fba4 	bl	800f488 <GUI_ALLOC_UnlockH>
 8011d40:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011d42:	f7fd fbcd 	bl	800f4e0 <GUI_ALLOC_Free>
 8011d46:	b01d      	add	sp, #116	; 0x74
 8011d48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011d4c <GUI_MEMDEV__WriteToActiveAlpha>:
 8011d4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d50:	b091      	sub	sp, #68	; 0x44
 8011d52:	460e      	mov	r6, r1
 8011d54:	4614      	mov	r4, r2
 8011d56:	900d      	str	r0, [sp, #52]	; 0x34
 8011d58:	f7fd fb88 	bl	800f46c <GUI_ALLOC_LockH>
 8011d5c:	4602      	mov	r2, r0
 8011d5e:	a810      	add	r0, sp, #64	; 0x40
 8011d60:	6813      	ldr	r3, [r2, #0]
 8011d62:	4d5b      	ldr	r5, [pc, #364]	; (8011ed0 <GUI_MEMDEV__WriteToActiveAlpha+0x184>)
 8011d64:	691b      	ldr	r3, [r3, #16]
 8011d66:	f840 2d08 	str.w	r2, [r0, #-8]!
 8011d6a:	685b      	ldr	r3, [r3, #4]
 8011d6c:	f8b2 b008 	ldrh.w	fp, [r2, #8]
 8011d70:	f8b2 900a 	ldrh.w	r9, [r2, #10]
 8011d74:	9309      	str	r3, [sp, #36]	; 0x24
 8011d76:	f7fd fb87 	bl	800f488 <GUI_ALLOC_UnlockH>
 8011d7a:	682b      	ldr	r3, [r5, #0]
 8011d7c:	4f55      	ldr	r7, [pc, #340]	; (8011ed4 <GUI_MEMDEV__WriteToActiveAlpha+0x188>)
 8011d7e:	7c5b      	ldrb	r3, [r3, #17]
 8011d80:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
 8011d84:	68c3      	ldr	r3, [r0, #12]
 8011d86:	2108      	movs	r1, #8
 8011d88:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011d8a:	4798      	blx	r3
 8011d8c:	682b      	ldr	r3, [r5, #0]
 8011d8e:	7c5b      	ldrb	r3, [r3, #17]
 8011d90:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 8011d94:	f8d3 8010 	ldr.w	r8, [r3, #16]
 8011d98:	2817      	cmp	r0, #23
 8011d9a:	bf88      	it	hi
 8011d9c:	2020      	movhi	r0, #32
 8011d9e:	9008      	str	r0, [sp, #32]
 8011da0:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8011da4:	f8d8 2000 	ldr.w	r2, [r8]
 8011da8:	910a      	str	r1, [sp, #40]	; 0x28
 8011daa:	2000      	movs	r0, #0
 8011dac:	920b      	str	r2, [sp, #44]	; 0x2c
 8011dae:	f7fb f803 	bl	800cdb8 <GUI__AllocAlphaBuffer>
 8011db2:	2800      	cmp	r0, #0
 8011db4:	f040 8089 	bne.w	8011eca <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 8011db8:	682a      	ldr	r2, [r5, #0]
 8011dba:	fa0f f78b 	sxth.w	r7, fp
 8011dbe:	19f5      	adds	r5, r6, r7
 8011dc0:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
 8011dc4:	3d01      	subs	r5, #1
 8011dc6:	1aed      	subs	r5, r5, r3
 8011dc8:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
 8011dcc:	2d00      	cmp	r5, #0
 8011dce:	bfcc      	ite	gt
 8011dd0:	ebc5 0507 	rsbgt	r5, r5, r7
 8011dd4:	463d      	movle	r5, r7
 8011dd6:	42b3      	cmp	r3, r6
 8011dd8:	bfc3      	ittte	gt
 8011dda:	ebc6 0103 	rsbgt	r1, r6, r3
 8011dde:	ebc1 0505 	rsbgt	r5, r1, r5
 8011de2:	461e      	movgt	r6, r3
 8011de4:	2100      	movle	r1, #0
 8011de6:	2d00      	cmp	r5, #0
 8011de8:	dd6f      	ble.n	8011eca <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 8011dea:	fa0f f389 	sxth.w	r3, r9
 8011dee:	18e0      	adds	r0, r4, r3
 8011df0:	f9b2 c00e 	ldrsh.w	ip, [r2, #14]
 8011df4:	f9b2 200a 	ldrsh.w	r2, [r2, #10]
 8011df8:	3801      	subs	r0, #1
 8011dfa:	ebcc 0000 	rsb	r0, ip, r0
 8011dfe:	2800      	cmp	r0, #0
 8011e00:	bfc8      	it	gt
 8011e02:	ebc0 0303 	rsbgt	r3, r0, r3
 8011e06:	4294      	cmp	r4, r2
 8011e08:	bfbd      	ittte	lt
 8011e0a:	ebc4 0a02 	rsblt	sl, r4, r2
 8011e0e:	ebca 0303 	rsblt	r3, sl, r3
 8011e12:	4614      	movlt	r4, r2
 8011e14:	f04f 0a00 	movge.w	sl, #0
 8011e18:	2b00      	cmp	r3, #0
 8011e1a:	dd56      	ble.n	8011eca <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 8011e1c:	fb07 1a0a 	mla	sl, r7, sl, r1
 8011e20:	18e3      	adds	r3, r4, r3
 8011e22:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 8011e26:	930c      	str	r3, [sp, #48]	; 0x30
 8011e28:	980d      	ldr	r0, [sp, #52]	; 0x34
 8011e2a:	f7f7 ffd9 	bl	8009de0 <GUI_MEMDEV_GetDataPtr>
 8011e2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011e30:	9300      	str	r3, [sp, #0]
 8011e32:	ab0f      	add	r3, sp, #60	; 0x3c
 8011e34:	eb00 020a 	add.w	r2, r0, sl
 8011e38:	9301      	str	r3, [sp, #4]
 8011e3a:	4630      	mov	r0, r6
 8011e3c:	4621      	mov	r1, r4
 8011e3e:	462b      	mov	r3, r5
 8011e40:	f7fa fed4 	bl	800cbec <GUI__DoAlphaBlending>
 8011e44:	4681      	mov	r9, r0
 8011e46:	2800      	cmp	r0, #0
 8011e48:	d03f      	beq.n	8011eca <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 8011e4a:	4b23      	ldr	r3, [pc, #140]	; (8011ed8 <GUI_MEMDEV__WriteToActiveAlpha+0x18c>)
 8011e4c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8011e4e:	4299      	cmp	r1, r3
 8011e50:	d01e      	beq.n	8011e90 <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 8011e52:	4629      	mov	r1, r5
 8011e54:	9a08      	ldr	r2, [sp, #32]
 8011e56:	4643      	mov	r3, r8
 8011e58:	f001 fca9 	bl	80137ae <GUI__CompactPixelIndicesEx>
 8011e5c:	b9c0      	cbnz	r0, 8011e90 <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 8011e5e:	f8d8 c010 	ldr.w	ip, [r8, #16]
 8011e62:	f1bc 0f00 	cmp.w	ip, #0
 8011e66:	d006      	beq.n	8011e76 <GUI_MEMDEV__WriteToActiveAlpha+0x12a>
 8011e68:	4648      	mov	r0, r9
 8011e6a:	4649      	mov	r1, r9
 8011e6c:	fa0f f28b 	sxth.w	r2, fp
 8011e70:	2304      	movs	r3, #4
 8011e72:	47e0      	blx	ip
 8011e74:	e00c      	b.n	8011e90 <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 8011e76:	464a      	mov	r2, r9
 8011e78:	463b      	mov	r3, r7
 8011e7a:	6810      	ldr	r0, [r2, #0]
 8011e7c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8011e7e:	9206      	str	r2, [sp, #24]
 8011e80:	9307      	str	r3, [sp, #28]
 8011e82:	4788      	blx	r1
 8011e84:	9b07      	ldr	r3, [sp, #28]
 8011e86:	9a06      	ldr	r2, [sp, #24]
 8011e88:	3b01      	subs	r3, #1
 8011e8a:	f842 0b04 	str.w	r0, [r2], #4
 8011e8e:	d1f4      	bne.n	8011e7a <GUI_MEMDEV__WriteToActiveAlpha+0x12e>
 8011e90:	9a08      	ldr	r2, [sp, #32]
 8011e92:	9202      	str	r2, [sp, #8]
 8011e94:	2301      	movs	r3, #1
 8011e96:	2200      	movs	r2, #0
 8011e98:	f104 0c01 	add.w	ip, r4, #1
 8011e9c:	9300      	str	r3, [sp, #0]
 8011e9e:	9301      	str	r3, [sp, #4]
 8011ea0:	9203      	str	r2, [sp, #12]
 8011ea2:	9205      	str	r2, [sp, #20]
 8011ea4:	f8cd 9010 	str.w	r9, [sp, #16]
 8011ea8:	4630      	mov	r0, r6
 8011eaa:	4621      	mov	r1, r4
 8011eac:	462a      	mov	r2, r5
 8011eae:	f8cd c01c 	str.w	ip, [sp, #28]
 8011eb2:	f7fa faab 	bl	800c40c <LCD_DrawBitmap>
 8011eb6:	2304      	movs	r3, #4
 8011eb8:	fb1b aa03 	smlabb	sl, fp, r3, sl
 8011ebc:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8011ec0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011ec2:	459c      	cmp	ip, r3
 8011ec4:	d001      	beq.n	8011eca <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 8011ec6:	4664      	mov	r4, ip
 8011ec8:	e7ae      	b.n	8011e28 <GUI_MEMDEV__WriteToActiveAlpha+0xdc>
 8011eca:	b011      	add	sp, #68	; 0x44
 8011ecc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011ed0:	20000274 	.word	0x20000274
 8011ed4:	2001ba34 	.word	0x2001ba34
 8011ed8:	0800fbdf 	.word	0x0800fbdf

08011edc <GUI_MEMDEV_WriteAt>:
 8011edc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011ede:	460c      	mov	r4, r1
 8011ee0:	4615      	mov	r5, r2
 8011ee2:	4606      	mov	r6, r0
 8011ee4:	b330      	cbz	r0, 8011f34 <GUI_MEMDEV_WriteAt+0x58>
 8011ee6:	f7fd fac1 	bl	800f46c <GUI_ALLOC_LockH>
 8011eea:	4a13      	ldr	r2, [pc, #76]	; (8011f38 <GUI_MEMDEV_WriteAt+0x5c>)
 8011eec:	8943      	ldrh	r3, [r0, #10]
 8011eee:	9001      	str	r0, [sp, #4]
 8011ef0:	4294      	cmp	r4, r2
 8011ef2:	8902      	ldrh	r2, [r0, #8]
 8011ef4:	bf04      	itt	eq
 8011ef6:	f9b0 4004 	ldrsheq.w	r4, [r0, #4]
 8011efa:	f9b0 5006 	ldrsheq.w	r5, [r0, #6]
 8011efe:	f8ad 4008 	strh.w	r4, [sp, #8]
 8011f02:	3a01      	subs	r2, #1
 8011f04:	3b01      	subs	r3, #1
 8011f06:	4422      	add	r2, r4
 8011f08:	442b      	add	r3, r5
 8011f0a:	a801      	add	r0, sp, #4
 8011f0c:	f8ad 200c 	strh.w	r2, [sp, #12]
 8011f10:	f8ad 500a 	strh.w	r5, [sp, #10]
 8011f14:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011f18:	f7fd fab6 	bl	800f488 <GUI_ALLOC_UnlockH>
 8011f1c:	a802      	add	r0, sp, #8
 8011f1e:	f7f7 fb93 	bl	8009648 <WM__InitIVRSearch>
 8011f22:	b138      	cbz	r0, 8011f34 <GUI_MEMDEV_WriteAt+0x58>
 8011f24:	4630      	mov	r0, r6
 8011f26:	4621      	mov	r1, r4
 8011f28:	462a      	mov	r2, r5
 8011f2a:	f7f8 fd1f 	bl	800a96c <GUI_MEMDEV__WriteToActiveAt>
 8011f2e:	f7f7 fac9 	bl	80094c4 <WM__GetNextIVR>
 8011f32:	e7f6      	b.n	8011f22 <GUI_MEMDEV_WriteAt+0x46>
 8011f34:	b004      	add	sp, #16
 8011f36:	bd70      	pop	{r4, r5, r6, pc}
 8011f38:	fffff001 	.word	0xfffff001

08011f3c <GUI_MEMDEV_Write>:
 8011f3c:	4901      	ldr	r1, [pc, #4]	; (8011f44 <GUI_MEMDEV_Write+0x8>)
 8011f3e:	460a      	mov	r2, r1
 8011f40:	f7ff bfcc 	b.w	8011edc <GUI_MEMDEV_WriteAt>
 8011f44:	fffff001 	.word	0xfffff001

08011f48 <GUI_USAGE_BM_AddPixel>:
 8011f48:	4603      	mov	r3, r0
 8011f4a:	b510      	push	{r4, lr}
 8011f4c:	f933 4b14 	ldrsh.w	r4, [r3], #20
 8011f50:	1b09      	subs	r1, r1, r4
 8011f52:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 8011f56:	6900      	ldr	r0, [r0, #16]
 8011f58:	1b12      	subs	r2, r2, r4
 8011f5a:	fb00 3302 	mla	r3, r0, r2, r3
 8011f5e:	10c8      	asrs	r0, r1, #3
 8011f60:	2280      	movs	r2, #128	; 0x80
 8011f62:	f001 0107 	and.w	r1, r1, #7
 8011f66:	fa42 f101 	asr.w	r1, r2, r1
 8011f6a:	5c1a      	ldrb	r2, [r3, r0]
 8011f6c:	4311      	orrs	r1, r2
 8011f6e:	5419      	strb	r1, [r3, r0]
 8011f70:	bd10      	pop	{r4, pc}

08011f72 <GUI_USAGE_BM_GetNextDirty>:
 8011f72:	b570      	push	{r4, r5, r6, lr}
 8011f74:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8011f78:	680b      	ldr	r3, [r1, #0]
 8011f7a:	8886      	ldrh	r6, [r0, #4]
 8011f7c:	42a2      	cmp	r2, r4
 8011f7e:	da41      	bge.n	8012004 <GUI_USAGE_BM_GetNextDirty+0x92>
 8011f80:	b236      	sxth	r6, r6
 8011f82:	42b3      	cmp	r3, r6
 8011f84:	6904      	ldr	r4, [r0, #16]
 8011f86:	da3d      	bge.n	8012004 <GUI_USAGE_BM_GetNextDirty+0x92>
 8011f88:	3014      	adds	r0, #20
 8011f8a:	fb04 0202 	mla	r2, r4, r2, r0
 8011f8e:	10dd      	asrs	r5, r3, #3
 8011f90:	1e70      	subs	r0, r6, #1
 8011f92:	1954      	adds	r4, r2, r5
 8011f94:	ebc5 00e0 	rsb	r0, r5, r0, asr #3
 8011f98:	5d55      	ldrb	r5, [r2, r5]
 8011f9a:	f003 0207 	and.w	r2, r3, #7
 8011f9e:	fa05 f202 	lsl.w	r2, r5, r2
 8011fa2:	3401      	adds	r4, #1
 8011fa4:	b2d2      	uxtb	r2, r2
 8011fa6:	b93a      	cbnz	r2, 8011fb8 <GUI_USAGE_BM_GetNextDirty+0x46>
 8011fa8:	b368      	cbz	r0, 8012006 <GUI_USAGE_BM_GetNextDirty+0x94>
 8011faa:	3308      	adds	r3, #8
 8011fac:	f814 2b01 	ldrb.w	r2, [r4], #1
 8011fb0:	3801      	subs	r0, #1
 8011fb2:	f023 0307 	bic.w	r3, r3, #7
 8011fb6:	e7f6      	b.n	8011fa6 <GUI_USAGE_BM_GetNextDirty+0x34>
 8011fb8:	0615      	lsls	r5, r2, #24
 8011fba:	d403      	bmi.n	8011fc4 <GUI_USAGE_BM_GetNextDirty+0x52>
 8011fbc:	0052      	lsls	r2, r2, #1
 8011fbe:	b2d2      	uxtb	r2, r2
 8011fc0:	3301      	adds	r3, #1
 8011fc2:	e7f9      	b.n	8011fb8 <GUI_USAGE_BM_GetNextDirty+0x46>
 8011fc4:	2aff      	cmp	r2, #255	; 0xff
 8011fc6:	461d      	mov	r5, r3
 8011fc8:	d005      	beq.n	8011fd6 <GUI_USAGE_BM_GetNextDirty+0x64>
 8011fca:	0656      	lsls	r6, r2, #25
 8011fcc:	d504      	bpl.n	8011fd8 <GUI_USAGE_BM_GetNextDirty+0x66>
 8011fce:	0052      	lsls	r2, r2, #1
 8011fd0:	b2d2      	uxtb	r2, r2
 8011fd2:	3301      	adds	r3, #1
 8011fd4:	e7f9      	b.n	8011fca <GUI_USAGE_BM_GetNextDirty+0x58>
 8011fd6:	3307      	adds	r3, #7
 8011fd8:	f003 0207 	and.w	r2, r3, #7
 8011fdc:	2a07      	cmp	r2, #7
 8011fde:	d10d      	bne.n	8011ffc <GUI_USAGE_BM_GetNextDirty+0x8a>
 8011fe0:	3801      	subs	r0, #1
 8011fe2:	d40b      	bmi.n	8011ffc <GUI_USAGE_BM_GetNextDirty+0x8a>
 8011fe4:	f814 2b01 	ldrb.w	r2, [r4], #1
 8011fe8:	2aff      	cmp	r2, #255	; 0xff
 8011fea:	d101      	bne.n	8011ff0 <GUI_USAGE_BM_GetNextDirty+0x7e>
 8011fec:	3308      	adds	r3, #8
 8011fee:	e7f7      	b.n	8011fe0 <GUI_USAGE_BM_GetNextDirty+0x6e>
 8011ff0:	0610      	lsls	r0, r2, #24
 8011ff2:	d503      	bpl.n	8011ffc <GUI_USAGE_BM_GetNextDirty+0x8a>
 8011ff4:	0052      	lsls	r2, r2, #1
 8011ff6:	b2d2      	uxtb	r2, r2
 8011ff8:	3301      	adds	r3, #1
 8011ffa:	e7f9      	b.n	8011ff0 <GUI_USAGE_BM_GetNextDirty+0x7e>
 8011ffc:	1b58      	subs	r0, r3, r5
 8011ffe:	600d      	str	r5, [r1, #0]
 8012000:	3001      	adds	r0, #1
 8012002:	bd70      	pop	{r4, r5, r6, pc}
 8012004:	2000      	movs	r0, #0
 8012006:	bd70      	pop	{r4, r5, r6, pc}

08012008 <_GUI_USAGE_BM_Delete>:
 8012008:	f7fd ba6a 	b.w	800f4e0 <GUI_ALLOC_Free>

0801200c <GUI_USAGE_BM_Clear>:
 801200c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8012010:	6902      	ldr	r2, [r0, #16]
 8012012:	2100      	movs	r1, #0
 8012014:	3014      	adds	r0, #20
 8012016:	435a      	muls	r2, r3
 8012018:	f003 b955 	b.w	80152c6 <memset>

0801201c <GUI_USAGE_BM_AddHLine>:
 801201c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801201e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8012022:	1b09      	subs	r1, r1, r4
 8012024:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8012028:	42a1      	cmp	r1, r4
 801202a:	da2f      	bge.n	801208c <GUI_USAGE_BM_AddHLine+0x70>
 801202c:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 8012030:	440b      	add	r3, r1
 8012032:	f100 0414 	add.w	r4, r0, #20
 8012036:	3b01      	subs	r3, #1
 8012038:	6900      	ldr	r0, [r0, #16]
 801203a:	1b52      	subs	r2, r2, r5
 801203c:	43de      	mvns	r6, r3
 801203e:	fb00 4202 	mla	r2, r0, r2, r4
 8012042:	f001 0707 	and.w	r7, r1, #7
 8012046:	10cc      	asrs	r4, r1, #3
 8012048:	f006 0607 	and.w	r6, r6, #7
 801204c:	21ff      	movs	r1, #255	; 0xff
 801204e:	fa41 f707 	asr.w	r7, r1, r7
 8012052:	fa01 f606 	lsl.w	r6, r1, r6
 8012056:	ebd4 03e3 	rsbs	r3, r4, r3, asr #3
 801205a:	eb02 0504 	add.w	r5, r2, r4
 801205e:	b2ff      	uxtb	r7, r7
 8012060:	b2f6      	uxtb	r6, r6
 8012062:	5d10      	ldrb	r0, [r2, r4]
 8012064:	d103      	bne.n	801206e <GUI_USAGE_BM_AddHLine+0x52>
 8012066:	403e      	ands	r6, r7
 8012068:	4330      	orrs	r0, r6
 801206a:	5510      	strb	r0, [r2, r4]
 801206c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801206e:	4338      	orrs	r0, r7
 8012070:	5510      	strb	r0, [r2, r4]
 8012072:	1e5c      	subs	r4, r3, #1
 8012074:	2c00      	cmp	r4, #0
 8012076:	f105 0501 	add.w	r5, r5, #1
 801207a:	dd04      	ble.n	8012086 <GUI_USAGE_BM_AddHLine+0x6a>
 801207c:	4628      	mov	r0, r5
 801207e:	4622      	mov	r2, r4
 8012080:	f003 f921 	bl	80152c6 <memset>
 8012084:	4425      	add	r5, r4
 8012086:	782b      	ldrb	r3, [r5, #0]
 8012088:	431e      	orrs	r6, r3
 801208a:	702e      	strb	r6, [r5, #0]
 801208c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08012090 <GUI_USAGE_BM_Create>:
 8012090:	e92d 4fd3 	stmdb	sp!, {r0, r1, r4, r6, r7, r8, r9, sl, fp, lr}
 8012094:	f102 060f 	add.w	r6, r2, #15
 8012098:	1136      	asrs	r6, r6, #4
 801209a:	0076      	lsls	r6, r6, #1
 801209c:	4682      	mov	sl, r0
 801209e:	fb06 f003 	mul.w	r0, r6, r3
 80120a2:	3014      	adds	r0, #20
 80120a4:	4689      	mov	r9, r1
 80120a6:	4690      	mov	r8, r2
 80120a8:	461f      	mov	r7, r3
 80120aa:	f7fd fcbf 	bl	800fa2c <GUI_ALLOC_AllocZero>
 80120ae:	4683      	mov	fp, r0
 80120b0:	b198      	cbz	r0, 80120da <GUI_USAGE_BM_Create+0x4a>
 80120b2:	f7fd f9db 	bl	800f46c <GUI_ALLOC_LockH>
 80120b6:	4604      	mov	r4, r0
 80120b8:	4b0a      	ldr	r3, [pc, #40]	; (80120e4 <GUI_USAGE_BM_Create+0x54>)
 80120ba:	60a3      	str	r3, [r4, #8]
 80120bc:	a802      	add	r0, sp, #8
 80120be:	2301      	movs	r3, #1
 80120c0:	f840 4d04 	str.w	r4, [r0, #-4]!
 80120c4:	f8a4 8004 	strh.w	r8, [r4, #4]
 80120c8:	f8a4 a000 	strh.w	sl, [r4]
 80120cc:	f8a4 9002 	strh.w	r9, [r4, #2]
 80120d0:	80e7      	strh	r7, [r4, #6]
 80120d2:	81a3      	strh	r3, [r4, #12]
 80120d4:	6126      	str	r6, [r4, #16]
 80120d6:	f7fd f9d7 	bl	800f488 <GUI_ALLOC_UnlockH>
 80120da:	4658      	mov	r0, fp
 80120dc:	b002      	add	sp, #8
 80120de:	e8bd 8fd0 	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
 80120e2:	bf00      	nop
 80120e4:	0801735c 	.word	0x0801735c

080120e8 <GUI_USAGE_DecUseCnt>:
 80120e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80120ea:	4605      	mov	r5, r0
 80120ec:	f7fd f9be 	bl	800f46c <GUI_ALLOC_LockH>
 80120f0:	4602      	mov	r2, r0
 80120f2:	a802      	add	r0, sp, #8
 80120f4:	8994      	ldrh	r4, [r2, #12]
 80120f6:	f840 2d04 	str.w	r2, [r0, #-4]!
 80120fa:	3c01      	subs	r4, #1
 80120fc:	b2a4      	uxth	r4, r4
 80120fe:	8194      	strh	r4, [r2, #12]
 8012100:	f7fd f9c2 	bl	800f488 <GUI_ALLOC_UnlockH>
 8012104:	b914      	cbnz	r4, 801210c <GUI_USAGE_DecUseCnt+0x24>
 8012106:	4628      	mov	r0, r5
 8012108:	f7fd f9ea 	bl	800f4e0 <GUI_ALLOC_Free>
 801210c:	b003      	add	sp, #12
 801210e:	bd30      	pop	{r4, r5, pc}

08012110 <GUI_USAGE_AddRect>:
 8012110:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012114:	4605      	mov	r5, r0
 8012116:	4688      	mov	r8, r1
 8012118:	4617      	mov	r7, r2
 801211a:	4699      	mov	r9, r3
 801211c:	68a8      	ldr	r0, [r5, #8]
 801211e:	464b      	mov	r3, r9
 8012120:	6846      	ldr	r6, [r0, #4]
 8012122:	4641      	mov	r1, r8
 8012124:	4628      	mov	r0, r5
 8012126:	1c54      	adds	r4, r2, #1
 8012128:	47b0      	blx	r6
 801212a:	9b08      	ldr	r3, [sp, #32]
 801212c:	443b      	add	r3, r7
 801212e:	42a3      	cmp	r3, r4
 8012130:	d001      	beq.n	8012136 <GUI_USAGE_AddRect+0x26>
 8012132:	4622      	mov	r2, r4
 8012134:	e7f2      	b.n	801211c <GUI_USAGE_AddRect+0xc>
 8012136:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

0801213c <GUI_MEMDEV_ReduceYSize>:
 801213c:	b513      	push	{r0, r1, r4, lr}
 801213e:	460c      	mov	r4, r1
 8012140:	b918      	cbnz	r0, 801214a <GUI_MEMDEV_ReduceYSize+0xe>
 8012142:	4b08      	ldr	r3, [pc, #32]	; (8012164 <GUI_MEMDEV_ReduceYSize+0x28>)
 8012144:	681b      	ldr	r3, [r3, #0]
 8012146:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8012148:	b150      	cbz	r0, 8012160 <GUI_MEMDEV_ReduceYSize+0x24>
 801214a:	f7fd f98f 	bl	800f46c <GUI_ALLOC_LockH>
 801214e:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012152:	9001      	str	r0, [sp, #4]
 8012154:	429c      	cmp	r4, r3
 8012156:	bfb8      	it	lt
 8012158:	8144      	strhlt	r4, [r0, #10]
 801215a:	a801      	add	r0, sp, #4
 801215c:	f7fd f994 	bl	800f488 <GUI_ALLOC_UnlockH>
 8012160:	b002      	add	sp, #8
 8012162:	bd10      	pop	{r4, pc}
 8012164:	20000274 	.word	0x20000274

08012168 <GUI_MEMDEV_Clear>:
 8012168:	b513      	push	{r0, r1, r4, lr}
 801216a:	b918      	cbnz	r0, 8012174 <GUI_MEMDEV_Clear+0xc>
 801216c:	4b0d      	ldr	r3, [pc, #52]	; (80121a4 <GUI_MEMDEV_Clear+0x3c>)
 801216e:	681b      	ldr	r3, [r3, #0]
 8012170:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8012172:	b1a8      	cbz	r0, 80121a0 <GUI_MEMDEV_Clear+0x38>
 8012174:	f7fd f97a 	bl	800f46c <GUI_ALLOC_LockH>
 8012178:	ab02      	add	r3, sp, #8
 801217a:	6944      	ldr	r4, [r0, #20]
 801217c:	f843 0d08 	str.w	r0, [r3, #-8]!
 8012180:	4668      	mov	r0, sp
 8012182:	f7fd f981 	bl	800f488 <GUI_ALLOC_UnlockH>
 8012186:	b15c      	cbz	r4, 80121a0 <GUI_MEMDEV_Clear+0x38>
 8012188:	4620      	mov	r0, r4
 801218a:	f7fd f96f 	bl	800f46c <GUI_ALLOC_LockH>
 801218e:	ac02      	add	r4, sp, #8
 8012190:	6883      	ldr	r3, [r0, #8]
 8012192:	f844 0d04 	str.w	r0, [r4, #-4]!
 8012196:	689b      	ldr	r3, [r3, #8]
 8012198:	4798      	blx	r3
 801219a:	4620      	mov	r0, r4
 801219c:	f7fd f974 	bl	800f488 <GUI_ALLOC_UnlockH>
 80121a0:	b002      	add	sp, #8
 80121a2:	bd10      	pop	{r4, pc}
 80121a4:	20000274 	.word	0x20000274

080121a8 <_GetDevData>:
 80121a8:	4802      	ldr	r0, [pc, #8]	; (80121b4 <_GetDevData+0xc>)
 80121aa:	2901      	cmp	r1, #1
 80121ac:	bf18      	it	ne
 80121ae:	2000      	movne	r0, #0
 80121b0:	4770      	bx	lr
 80121b2:	bf00      	nop
 80121b4:	080173b4 	.word	0x080173b4

080121b8 <_GetDevFunc>:
 80121b8:	4802      	ldr	r0, [pc, #8]	; (80121c4 <_GetDevFunc+0xc>)
 80121ba:	2916      	cmp	r1, #22
 80121bc:	bf18      	it	ne
 80121be:	2000      	movne	r0, #0
 80121c0:	4770      	bx	lr
 80121c2:	bf00      	nop
 80121c4:	08011629 	.word	0x08011629

080121c8 <_SetOrg>:
 80121c8:	6800      	ldr	r0, [r0, #0]
 80121ca:	b508      	push	{r3, lr}
 80121cc:	b110      	cbz	r0, 80121d4 <_SetOrg+0xc>
 80121ce:	68c3      	ldr	r3, [r0, #12]
 80121d0:	6a1b      	ldr	r3, [r3, #32]
 80121d2:	4798      	blx	r3
 80121d4:	bd08      	pop	{r3, pc}

080121d6 <_GetDevProp>:
 80121d6:	6800      	ldr	r0, [r0, #0]
 80121d8:	b508      	push	{r3, lr}
 80121da:	b118      	cbz	r0, 80121e4 <_GetDevProp+0xe>
 80121dc:	68c3      	ldr	r3, [r0, #12]
 80121de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80121e0:	4798      	blx	r3
 80121e2:	bd08      	pop	{r3, pc}
 80121e4:	f04f 30ff 	mov.w	r0, #4294967295
 80121e8:	bd08      	pop	{r3, pc}

080121ea <_GetRect>:
 80121ea:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80121ec:	6880      	ldr	r0, [r0, #8]
 80121ee:	460c      	mov	r4, r1
 80121f0:	f7fd f93c 	bl	800f46c <GUI_ALLOC_LockH>
 80121f4:	4603      	mov	r3, r0
 80121f6:	a802      	add	r0, sp, #8
 80121f8:	8899      	ldrh	r1, [r3, #4]
 80121fa:	88da      	ldrh	r2, [r3, #6]
 80121fc:	891d      	ldrh	r5, [r3, #8]
 80121fe:	f840 3d04 	str.w	r3, [r0, #-4]!
 8012202:	895b      	ldrh	r3, [r3, #10]
 8012204:	8021      	strh	r1, [r4, #0]
 8012206:	8062      	strh	r2, [r4, #2]
 8012208:	4429      	add	r1, r5
 801220a:	441a      	add	r2, r3
 801220c:	3901      	subs	r1, #1
 801220e:	3a01      	subs	r2, #1
 8012210:	80a1      	strh	r1, [r4, #4]
 8012212:	80e2      	strh	r2, [r4, #6]
 8012214:	f7fd f938 	bl	800f488 <GUI_ALLOC_UnlockH>
 8012218:	b003      	add	sp, #12
 801221a:	bd30      	pop	{r4, r5, pc}

0801221c <_XY2PTR>:
 801221c:	4b0e      	ldr	r3, [pc, #56]	; (8012258 <_XY2PTR+0x3c>)
 801221e:	681b      	ldr	r3, [r3, #0]
 8012220:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012222:	4605      	mov	r5, r0
 8012224:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8012226:	460e      	mov	r6, r1
 8012228:	f7fd f920 	bl	800f46c <GUI_ALLOC_LockH>
 801222c:	4603      	mov	r3, r0
 801222e:	a802      	add	r0, sp, #8
 8012230:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 8012234:	f840 3d04 	str.w	r3, [r0, #-4]!
 8012238:	f103 0118 	add.w	r1, r3, #24
 801223c:	1b36      	subs	r6, r6, r4
 801223e:	68dc      	ldr	r4, [r3, #12]
 8012240:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8012244:	fb04 1406 	mla	r4, r4, r6, r1
 8012248:	1aed      	subs	r5, r5, r3
 801224a:	f7fd f91d 	bl	800f488 <GUI_ALLOC_UnlockH>
 801224e:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 8012252:	4620      	mov	r0, r4
 8012254:	b002      	add	sp, #8
 8012256:	bd70      	pop	{r4, r5, r6, pc}
 8012258:	20000274 	.word	0x20000274

0801225c <_GetPixelIndex>:
 801225c:	b508      	push	{r3, lr}
 801225e:	4608      	mov	r0, r1
 8012260:	4611      	mov	r1, r2
 8012262:	f7ff ffdb 	bl	801221c <_XY2PTR>
 8012266:	8800      	ldrh	r0, [r0, #0]
 8012268:	bd08      	pop	{r3, pc}
	...

0801226c <_XorPixel>:
 801226c:	4b14      	ldr	r3, [pc, #80]	; (80122c0 <_XorPixel+0x54>)
 801226e:	681b      	ldr	r3, [r3, #0]
 8012270:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012272:	4607      	mov	r7, r0
 8012274:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8012276:	4615      	mov	r5, r2
 8012278:	460e      	mov	r6, r1
 801227a:	f7fd f8f7 	bl	800f46c <GUI_ALLOC_LockH>
 801227e:	4629      	mov	r1, r5
 8012280:	9000      	str	r0, [sp, #0]
 8012282:	4630      	mov	r0, r6
 8012284:	f7ff ffca 	bl	801221c <_XY2PTR>
 8012288:	693b      	ldr	r3, [r7, #16]
 801228a:	4604      	mov	r4, r0
 801228c:	689b      	ldr	r3, [r3, #8]
 801228e:	4798      	blx	r3
 8012290:	8823      	ldrh	r3, [r4, #0]
 8012292:	4058      	eors	r0, r3
 8012294:	9b00      	ldr	r3, [sp, #0]
 8012296:	8020      	strh	r0, [r4, #0]
 8012298:	6958      	ldr	r0, [r3, #20]
 801229a:	b160      	cbz	r0, 80122b6 <_XorPixel+0x4a>
 801229c:	f7fd f8e6 	bl	800f46c <GUI_ALLOC_LockH>
 80122a0:	ac02      	add	r4, sp, #8
 80122a2:	6883      	ldr	r3, [r0, #8]
 80122a4:	f844 0d04 	str.w	r0, [r4, #-4]!
 80122a8:	681b      	ldr	r3, [r3, #0]
 80122aa:	4631      	mov	r1, r6
 80122ac:	462a      	mov	r2, r5
 80122ae:	4798      	blx	r3
 80122b0:	4620      	mov	r0, r4
 80122b2:	f7fd f8e9 	bl	800f488 <GUI_ALLOC_UnlockH>
 80122b6:	4668      	mov	r0, sp
 80122b8:	f7fd f8e6 	bl	800f488 <GUI_ALLOC_UnlockH>
 80122bc:	b003      	add	sp, #12
 80122be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80122c0:	20000274 	.word	0x20000274

080122c4 <_SetPixelIndex>:
 80122c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80122c6:	461c      	mov	r4, r3
 80122c8:	4b10      	ldr	r3, [pc, #64]	; (801230c <_SetPixelIndex+0x48>)
 80122ca:	681b      	ldr	r3, [r3, #0]
 80122cc:	6e18      	ldr	r0, [r3, #96]	; 0x60
 80122ce:	460e      	mov	r6, r1
 80122d0:	4615      	mov	r5, r2
 80122d2:	f7fd f8cb 	bl	800f46c <GUI_ALLOC_LockH>
 80122d6:	4629      	mov	r1, r5
 80122d8:	9000      	str	r0, [sp, #0]
 80122da:	4630      	mov	r0, r6
 80122dc:	f7ff ff9e 	bl	801221c <_XY2PTR>
 80122e0:	9b00      	ldr	r3, [sp, #0]
 80122e2:	8004      	strh	r4, [r0, #0]
 80122e4:	6958      	ldr	r0, [r3, #20]
 80122e6:	b160      	cbz	r0, 8012302 <_SetPixelIndex+0x3e>
 80122e8:	f7fd f8c0 	bl	800f46c <GUI_ALLOC_LockH>
 80122ec:	ac02      	add	r4, sp, #8
 80122ee:	6883      	ldr	r3, [r0, #8]
 80122f0:	f844 0d04 	str.w	r0, [r4, #-4]!
 80122f4:	681b      	ldr	r3, [r3, #0]
 80122f6:	4631      	mov	r1, r6
 80122f8:	462a      	mov	r2, r5
 80122fa:	4798      	blx	r3
 80122fc:	4620      	mov	r0, r4
 80122fe:	f7fd f8c3 	bl	800f488 <GUI_ALLOC_UnlockH>
 8012302:	4668      	mov	r0, sp
 8012304:	f7fd f8c0 	bl	800f488 <GUI_ALLOC_UnlockH>
 8012308:	b002      	add	sp, #8
 801230a:	bd70      	pop	{r4, r5, r6, pc}
 801230c:	20000274 	.word	0x20000274

08012310 <_DrawVLine>:
 8012310:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8012314:	4d2c      	ldr	r5, [pc, #176]	; (80123c8 <_DrawVLine+0xb8>)
 8012316:	461e      	mov	r6, r3
 8012318:	682b      	ldr	r3, [r5, #0]
 801231a:	4681      	mov	r9, r0
 801231c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 801231e:	460f      	mov	r7, r1
 8012320:	4614      	mov	r4, r2
 8012322:	f7fd f8a3 	bl	800f46c <GUI_ALLOC_LockH>
 8012326:	9000      	str	r0, [sp, #0]
 8012328:	6940      	ldr	r0, [r0, #20]
 801232a:	46aa      	mov	sl, r5
 801232c:	b108      	cbz	r0, 8012332 <_DrawVLine+0x22>
 801232e:	f7fd f89d 	bl	800f46c <GUI_ALLOC_LockH>
 8012332:	9001      	str	r0, [sp, #4]
 8012334:	4621      	mov	r1, r4
 8012336:	4638      	mov	r0, r7
 8012338:	f7ff ff70 	bl	801221c <_XY2PTR>
 801233c:	9b00      	ldr	r3, [sp, #0]
 801233e:	f8d3 800c 	ldr.w	r8, [r3, #12]
 8012342:	f8da 3000 	ldr.w	r3, [sl]
 8012346:	7c1a      	ldrb	r2, [r3, #16]
 8012348:	07d2      	lsls	r2, r2, #31
 801234a:	4605      	mov	r5, r0
 801234c:	d51f      	bpl.n	801238e <_DrawVLine+0x7e>
 801234e:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8012352:	689b      	ldr	r3, [r3, #8]
 8012354:	4798      	blx	r3
 8012356:	fa1f f880 	uxth.w	r8, r0
 801235a:	9801      	ldr	r0, [sp, #4]
 801235c:	b120      	cbz	r0, 8012368 <_DrawVLine+0x58>
 801235e:	6883      	ldr	r3, [r0, #8]
 8012360:	4639      	mov	r1, r7
 8012362:	681b      	ldr	r3, [r3, #0]
 8012364:	4622      	mov	r2, r4
 8012366:	4798      	blx	r3
 8012368:	882b      	ldrh	r3, [r5, #0]
 801236a:	ea88 0303 	eor.w	r3, r8, r3
 801236e:	802b      	strh	r3, [r5, #0]
 8012370:	9b00      	ldr	r3, [sp, #0]
 8012372:	3401      	adds	r4, #1
 8012374:	68db      	ldr	r3, [r3, #12]
 8012376:	42b4      	cmp	r4, r6
 8012378:	441d      	add	r5, r3
 801237a:	ddee      	ble.n	801235a <_DrawVLine+0x4a>
 801237c:	4668      	mov	r0, sp
 801237e:	f7fd f883 	bl	800f488 <GUI_ALLOC_UnlockH>
 8012382:	9b01      	ldr	r3, [sp, #4]
 8012384:	b1eb      	cbz	r3, 80123c2 <_DrawVLine+0xb2>
 8012386:	a801      	add	r0, sp, #4
 8012388:	f7fd f87e 	bl	800f488 <GUI_ALLOC_UnlockH>
 801238c:	e019      	b.n	80123c2 <_DrawVLine+0xb2>
 801238e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012390:	f8d3 9000 	ldr.w	r9, [r3]
 8012394:	9b01      	ldr	r3, [sp, #4]
 8012396:	b163      	cbz	r3, 80123b2 <_DrawVLine+0xa2>
 8012398:	9801      	ldr	r0, [sp, #4]
 801239a:	6883      	ldr	r3, [r0, #8]
 801239c:	4622      	mov	r2, r4
 801239e:	681b      	ldr	r3, [r3, #0]
 80123a0:	4639      	mov	r1, r7
 80123a2:	3401      	adds	r4, #1
 80123a4:	4798      	blx	r3
 80123a6:	42b4      	cmp	r4, r6
 80123a8:	f8a5 9000 	strh.w	r9, [r5]
 80123ac:	4445      	add	r5, r8
 80123ae:	ddf3      	ble.n	8012398 <_DrawVLine+0x88>
 80123b0:	e7e4      	b.n	801237c <_DrawVLine+0x6c>
 80123b2:	1b34      	subs	r4, r6, r4
 80123b4:	3401      	adds	r4, #1
 80123b6:	3c01      	subs	r4, #1
 80123b8:	f8a5 9000 	strh.w	r9, [r5]
 80123bc:	4445      	add	r5, r8
 80123be:	d1fa      	bne.n	80123b6 <_DrawVLine+0xa6>
 80123c0:	e7dc      	b.n	801237c <_DrawVLine+0x6c>
 80123c2:	b002      	add	sp, #8
 80123c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80123c8:	20000274 	.word	0x20000274

080123cc <_FillRect>:
 80123cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80123d0:	4f2a      	ldr	r7, [pc, #168]	; (801247c <_FillRect+0xb0>)
 80123d2:	4614      	mov	r4, r2
 80123d4:	683a      	ldr	r2, [r7, #0]
 80123d6:	4698      	mov	r8, r3
 80123d8:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 80123da:	b087      	sub	sp, #28
 80123dc:	681b      	ldr	r3, [r3, #0]
 80123de:	9302      	str	r3, [sp, #8]
 80123e0:	4682      	mov	sl, r0
 80123e2:	6e10      	ldr	r0, [r2, #96]	; 0x60
 80123e4:	460e      	mov	r6, r1
 80123e6:	f7fd f841 	bl	800f46c <GUI_ALLOC_LockH>
 80123ea:	4621      	mov	r1, r4
 80123ec:	9004      	str	r0, [sp, #16]
 80123ee:	4630      	mov	r0, r6
 80123f0:	f7ff ff14 	bl	801221c <_XY2PTR>
 80123f4:	9a04      	ldr	r2, [sp, #16]
 80123f6:	4605      	mov	r5, r0
 80123f8:	6950      	ldr	r0, [r2, #20]
 80123fa:	68d3      	ldr	r3, [r2, #12]
 80123fc:	9303      	str	r3, [sp, #12]
 80123fe:	ebc6 0908 	rsb	r9, r6, r8
 8012402:	f109 0801 	add.w	r8, r9, #1
 8012406:	46bb      	mov	fp, r7
 8012408:	b180      	cbz	r0, 801242c <_FillRect+0x60>
 801240a:	f7fd f82f 	bl	800f46c <GUI_ALLOC_LockH>
 801240e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012410:	af06      	add	r7, sp, #24
 8012412:	1b13      	subs	r3, r2, r4
 8012414:	f847 0d04 	str.w	r0, [r7, #-4]!
 8012418:	3301      	adds	r3, #1
 801241a:	9300      	str	r3, [sp, #0]
 801241c:	4631      	mov	r1, r6
 801241e:	4622      	mov	r2, r4
 8012420:	4643      	mov	r3, r8
 8012422:	f7ff fe75 	bl	8012110 <GUI_USAGE_AddRect>
 8012426:	4638      	mov	r0, r7
 8012428:	f7fd f82e 	bl	800f488 <GUI_ALLOC_UnlockH>
 801242c:	ea4f 0649 	mov.w	r6, r9, lsl #1
 8012430:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012432:	429c      	cmp	r4, r3
 8012434:	dc1c      	bgt.n	8012470 <_FillRect+0xa4>
 8012436:	f8db 3000 	ldr.w	r3, [fp]
 801243a:	7c1b      	ldrb	r3, [r3, #16]
 801243c:	07db      	lsls	r3, r3, #31
 801243e:	d50d      	bpl.n	801245c <_FillRect+0x90>
 8012440:	f8da 3010 	ldr.w	r3, [sl, #16]
 8012444:	689b      	ldr	r3, [r3, #8]
 8012446:	4798      	blx	r3
 8012448:	19aa      	adds	r2, r5, r6
 801244a:	b280      	uxth	r0, r0
 801244c:	1eab      	subs	r3, r5, #2
 801244e:	8859      	ldrh	r1, [r3, #2]
 8012450:	4041      	eors	r1, r0
 8012452:	f823 1f02 	strh.w	r1, [r3, #2]!
 8012456:	4293      	cmp	r3, r2
 8012458:	d1f9      	bne.n	801244e <_FillRect+0x82>
 801245a:	e005      	b.n	8012468 <_FillRect+0x9c>
 801245c:	9b02      	ldr	r3, [sp, #8]
 801245e:	4628      	mov	r0, r5
 8012460:	b299      	uxth	r1, r3
 8012462:	4642      	mov	r2, r8
 8012464:	f7fa f9a0 	bl	800c7a8 <GUI__memset16>
 8012468:	9a03      	ldr	r2, [sp, #12]
 801246a:	3401      	adds	r4, #1
 801246c:	4415      	add	r5, r2
 801246e:	e7df      	b.n	8012430 <_FillRect+0x64>
 8012470:	a804      	add	r0, sp, #16
 8012472:	f7fd f809 	bl	800f488 <GUI_ALLOC_UnlockH>
 8012476:	b007      	add	sp, #28
 8012478:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801247c:	20000274 	.word	0x20000274

08012480 <_DrawHLine>:
 8012480:	b507      	push	{r0, r1, r2, lr}
 8012482:	9200      	str	r2, [sp, #0]
 8012484:	f7ff ffa2 	bl	80123cc <_FillRect>
 8012488:	b003      	add	sp, #12
 801248a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08012490 <_DrawBitmap>:
 8012490:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012494:	4c8a      	ldr	r4, [pc, #552]	; (80126c0 <_DrawBitmap+0x230>)
 8012496:	b093      	sub	sp, #76	; 0x4c
 8012498:	469b      	mov	fp, r3
 801249a:	6823      	ldr	r3, [r4, #0]
 801249c:	900d      	str	r0, [sp, #52]	; 0x34
 801249e:	6e18      	ldr	r0, [r3, #96]	; 0x60
 80124a0:	9207      	str	r2, [sp, #28]
 80124a2:	460d      	mov	r5, r1
 80124a4:	f8dd a07c 	ldr.w	sl, [sp, #124]	; 0x7c
 80124a8:	f7fc ffe0 	bl	800f46c <GUI_ALLOC_LockH>
 80124ac:	9010      	str	r0, [sp, #64]	; 0x40
 80124ae:	6940      	ldr	r0, [r0, #20]
 80124b0:	b108      	cbz	r0, 80124b6 <_DrawBitmap+0x26>
 80124b2:	f7fc ffdb 	bl	800f46c <GUI_ALLOC_LockH>
 80124b6:	9011      	str	r0, [sp, #68]	; 0x44
 80124b8:	a812      	add	r0, sp, #72	; 0x48
 80124ba:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 80124be:	68db      	ldr	r3, [r3, #12]
 80124c0:	9308      	str	r3, [sp, #32]
 80124c2:	f7fc ffe1 	bl	800f488 <GUI_ALLOC_UnlockH>
 80124c6:	9e20      	ldr	r6, [sp, #128]	; 0x80
 80124c8:	9811      	ldr	r0, [sp, #68]	; 0x44
 80124ca:	442e      	add	r6, r5
 80124cc:	9604      	str	r6, [sp, #16]
 80124ce:	b150      	cbz	r0, 80124e6 <_DrawBitmap+0x56>
 80124d0:	6823      	ldr	r3, [r4, #0]
 80124d2:	7c1b      	ldrb	r3, [r3, #16]
 80124d4:	0799      	lsls	r1, r3, #30
 80124d6:	d106      	bne.n	80124e6 <_DrawBitmap+0x56>
 80124d8:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80124da:	9700      	str	r7, [sp, #0]
 80124dc:	4631      	mov	r1, r6
 80124de:	9a07      	ldr	r2, [sp, #28]
 80124e0:	465b      	mov	r3, fp
 80124e2:	f7ff fe15 	bl	8012110 <GUI_USAGE_AddRect>
 80124e6:	9804      	ldr	r0, [sp, #16]
 80124e8:	9907      	ldr	r1, [sp, #28]
 80124ea:	f7ff fe97 	bl	801221c <_XY2PTR>
 80124ee:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80124f0:	2e10      	cmp	r6, #16
 80124f2:	4604      	mov	r4, r0
 80124f4:	d139      	bne.n	801256a <_DrawBitmap+0xda>
 80124f6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80124f8:	b11b      	cbz	r3, 8012502 <_DrawBitmap+0x72>
 80124fa:	ea4f 064b 	mov.w	r6, fp, lsl #1
 80124fe:	2500      	movs	r5, #0
 8012500:	e014      	b.n	801252c <_DrawBitmap+0x9c>
 8012502:	4b70      	ldr	r3, [pc, #448]	; (80126c4 <_DrawBitmap+0x234>)
 8012504:	681d      	ldr	r5, [r3, #0]
 8012506:	2d00      	cmp	r5, #0
 8012508:	d0f7      	beq.n	80124fa <_DrawBitmap+0x6a>
 801250a:	9e08      	ldr	r6, [sp, #32]
 801250c:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 801250e:	9600      	str	r6, [sp, #0]
 8012510:	9701      	str	r7, [sp, #4]
 8012512:	4651      	mov	r1, sl
 8012514:	465a      	mov	r2, fp
 8012516:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8012518:	47a8      	blx	r5
 801251a:	e345      	b.n	8012ba8 <_DrawBitmap+0x718>
 801251c:	f1ba 0f00 	cmp.w	sl, #0
 8012520:	d10a      	bne.n	8012538 <_DrawBitmap+0xa8>
 8012522:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8012524:	44ba      	add	sl, r7
 8012526:	9f08      	ldr	r7, [sp, #32]
 8012528:	3501      	adds	r5, #1
 801252a:	443c      	add	r4, r7
 801252c:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 801252e:	f8dd 8044 	ldr.w	r8, [sp, #68]	; 0x44
 8012532:	42bd      	cmp	r5, r7
 8012534:	dbf2      	blt.n	801251c <_DrawBitmap+0x8c>
 8012536:	e013      	b.n	8012560 <_DrawBitmap+0xd0>
 8012538:	2c00      	cmp	r4, #0
 801253a:	d0f2      	beq.n	8012522 <_DrawBitmap+0x92>
 801253c:	4620      	mov	r0, r4
 801253e:	4651      	mov	r1, sl
 8012540:	4632      	mov	r2, r6
 8012542:	f002 fe9c 	bl	801527e <memcpy>
 8012546:	f1b8 0f00 	cmp.w	r8, #0
 801254a:	d0ea      	beq.n	8012522 <_DrawBitmap+0x92>
 801254c:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8012550:	9a07      	ldr	r2, [sp, #28]
 8012552:	685f      	ldr	r7, [r3, #4]
 8012554:	9904      	ldr	r1, [sp, #16]
 8012556:	4640      	mov	r0, r8
 8012558:	442a      	add	r2, r5
 801255a:	465b      	mov	r3, fp
 801255c:	47b8      	blx	r7
 801255e:	e7e0      	b.n	8012522 <_DrawBitmap+0x92>
 8012560:	f1b8 0f00 	cmp.w	r8, #0
 8012564:	f040 831d 	bne.w	8012ba2 <_DrawBitmap+0x712>
 8012568:	e31e      	b.n	8012ba8 <_DrawBitmap+0x718>
 801256a:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801256c:	2e17      	cmp	r6, #23
 801256e:	dd38      	ble.n	80125e2 <_DrawBitmap+0x152>
 8012570:	2600      	movs	r6, #0
 8012572:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8012574:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8012576:	42be      	cmp	r6, r7
 8012578:	f280 809d 	bge.w	80126b6 <_DrawBitmap+0x226>
 801257c:	9f07      	ldr	r7, [sp, #28]
 801257e:	4437      	add	r7, r6
 8012580:	f1ba 0f00 	cmp.w	sl, #0
 8012584:	d027      	beq.n	80125d6 <_DrawBitmap+0x146>
 8012586:	b334      	cbz	r4, 80125d6 <_DrawBitmap+0x146>
 8012588:	b13d      	cbz	r5, 801259a <_DrawBitmap+0x10a>
 801258a:	68ab      	ldr	r3, [r5, #8]
 801258c:	9904      	ldr	r1, [sp, #16]
 801258e:	f8d3 c004 	ldr.w	ip, [r3, #4]
 8012592:	4628      	mov	r0, r5
 8012594:	463a      	mov	r2, r7
 8012596:	465b      	mov	r3, fp
 8012598:	47e0      	blx	ip
 801259a:	1ea3      	subs	r3, r4, #2
 801259c:	f1aa 0904 	sub.w	r9, sl, #4
 80125a0:	9303      	str	r3, [sp, #12]
 80125a2:	46d8      	mov	r8, fp
 80125a4:	9b04      	ldr	r3, [sp, #16]
 80125a6:	980d      	ldr	r0, [sp, #52]	; 0x34
 80125a8:	445b      	add	r3, fp
 80125aa:	ebc8 0103 	rsb	r1, r8, r3
 80125ae:	6903      	ldr	r3, [r0, #16]
 80125b0:	f859 0f04 	ldr.w	r0, [r9, #4]!
 80125b4:	681b      	ldr	r3, [r3, #0]
 80125b6:	9102      	str	r1, [sp, #8]
 80125b8:	4798      	blx	r3
 80125ba:	9b03      	ldr	r3, [sp, #12]
 80125bc:	9902      	ldr	r1, [sp, #8]
 80125be:	f823 0f02 	strh.w	r0, [r3, #2]!
 80125c2:	9303      	str	r3, [sp, #12]
 80125c4:	b125      	cbz	r5, 80125d0 <_DrawBitmap+0x140>
 80125c6:	68ab      	ldr	r3, [r5, #8]
 80125c8:	4628      	mov	r0, r5
 80125ca:	681b      	ldr	r3, [r3, #0]
 80125cc:	463a      	mov	r2, r7
 80125ce:	4798      	blx	r3
 80125d0:	f1b8 0801 	subs.w	r8, r8, #1
 80125d4:	d1e6      	bne.n	80125a4 <_DrawBitmap+0x114>
 80125d6:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 80125d8:	44ba      	add	sl, r7
 80125da:	9f08      	ldr	r7, [sp, #32]
 80125dc:	3601      	adds	r6, #1
 80125de:	443c      	add	r4, r7
 80125e0:	e7c7      	b.n	8012572 <_DrawBitmap+0xe2>
 80125e2:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80125e4:	2e08      	cmp	r6, #8
 80125e6:	f100 0402 	add.w	r4, r0, #2
 80125ea:	d16d      	bne.n	80126c8 <_DrawBitmap+0x238>
 80125ec:	9e07      	ldr	r6, [sp, #28]
 80125ee:	9f07      	ldr	r7, [sp, #28]
 80125f0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80125f2:	1bf3      	subs	r3, r6, r7
 80125f4:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80125f6:	42bb      	cmp	r3, r7
 80125f8:	f1a4 0002 	sub.w	r0, r4, #2
 80125fc:	da5b      	bge.n	80126b6 <_DrawBitmap+0x226>
 80125fe:	4b30      	ldr	r3, [pc, #192]	; (80126c0 <_DrawBitmap+0x230>)
 8012600:	9f21      	ldr	r7, [sp, #132]	; 0x84
 8012602:	681b      	ldr	r3, [r3, #0]
 8012604:	7c1b      	ldrb	r3, [r3, #16]
 8012606:	b367      	cbz	r7, 8012662 <_DrawBitmap+0x1d2>
 8012608:	f013 0303 	ands.w	r3, r3, #3
 801260c:	d004      	beq.n	8012618 <_DrawBitmap+0x188>
 801260e:	2b02      	cmp	r3, #2
 8012610:	d14b      	bne.n	80126aa <_DrawBitmap+0x21a>
 8012612:	46a0      	mov	r8, r4
 8012614:	9f04      	ldr	r7, [sp, #16]
 8012616:	e01d      	b.n	8012654 <_DrawBitmap+0x1c4>
 8012618:	f81a 2003 	ldrb.w	r2, [sl, r3]
 801261c:	9f21      	ldr	r7, [sp, #132]	; 0x84
 801261e:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8012622:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 8012626:	3301      	adds	r3, #1
 8012628:	455b      	cmp	r3, fp
 801262a:	d1f5      	bne.n	8012618 <_DrawBitmap+0x188>
 801262c:	e03d      	b.n	80126aa <_DrawBitmap+0x21a>
 801262e:	9921      	ldr	r1, [sp, #132]	; 0x84
 8012630:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8012634:	f828 3c02 	strh.w	r3, [r8, #-2]
 8012638:	b12d      	cbz	r5, 8012646 <_DrawBitmap+0x1b6>
 801263a:	68ab      	ldr	r3, [r5, #8]
 801263c:	4628      	mov	r0, r5
 801263e:	681b      	ldr	r3, [r3, #0]
 8012640:	4639      	mov	r1, r7
 8012642:	4632      	mov	r2, r6
 8012644:	4798      	blx	r3
 8012646:	9b04      	ldr	r3, [sp, #16]
 8012648:	3701      	adds	r7, #1
 801264a:	445b      	add	r3, fp
 801264c:	42bb      	cmp	r3, r7
 801264e:	f108 0802 	add.w	r8, r8, #2
 8012652:	d02a      	beq.n	80126aa <_DrawBitmap+0x21a>
 8012654:	9804      	ldr	r0, [sp, #16]
 8012656:	ebc0 030a 	rsb	r3, r0, sl
 801265a:	5ddb      	ldrb	r3, [r3, r7]
 801265c:	2b00      	cmp	r3, #0
 801265e:	d0f2      	beq.n	8012646 <_DrawBitmap+0x1b6>
 8012660:	e7e5      	b.n	801262e <_DrawBitmap+0x19e>
 8012662:	f013 0303 	ands.w	r3, r3, #3
 8012666:	d004      	beq.n	8012672 <_DrawBitmap+0x1e2>
 8012668:	2b02      	cmp	r3, #2
 801266a:	d11e      	bne.n	80126aa <_DrawBitmap+0x21a>
 801266c:	46a0      	mov	r8, r4
 801266e:	9f04      	ldr	r7, [sp, #16]
 8012670:	e014      	b.n	801269c <_DrawBitmap+0x20c>
 8012672:	4651      	mov	r1, sl
 8012674:	465a      	mov	r2, fp
 8012676:	f002 fe02 	bl	801527e <memcpy>
 801267a:	e016      	b.n	80126aa <_DrawBitmap+0x21a>
 801267c:	f828 3c02 	strh.w	r3, [r8, #-2]
 8012680:	b12d      	cbz	r5, 801268e <_DrawBitmap+0x1fe>
 8012682:	68ab      	ldr	r3, [r5, #8]
 8012684:	4628      	mov	r0, r5
 8012686:	681b      	ldr	r3, [r3, #0]
 8012688:	4639      	mov	r1, r7
 801268a:	4632      	mov	r2, r6
 801268c:	4798      	blx	r3
 801268e:	9b04      	ldr	r3, [sp, #16]
 8012690:	3701      	adds	r7, #1
 8012692:	445b      	add	r3, fp
 8012694:	42bb      	cmp	r3, r7
 8012696:	f108 0802 	add.w	r8, r8, #2
 801269a:	d006      	beq.n	80126aa <_DrawBitmap+0x21a>
 801269c:	9a04      	ldr	r2, [sp, #16]
 801269e:	ebc2 030a 	rsb	r3, r2, sl
 80126a2:	5ddb      	ldrb	r3, [r3, r7]
 80126a4:	2b00      	cmp	r3, #0
 80126a6:	d0f2      	beq.n	801268e <_DrawBitmap+0x1fe>
 80126a8:	e7e8      	b.n	801267c <_DrawBitmap+0x1ec>
 80126aa:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 80126ac:	44ba      	add	sl, r7
 80126ae:	9f08      	ldr	r7, [sp, #32]
 80126b0:	3601      	adds	r6, #1
 80126b2:	443c      	add	r4, r7
 80126b4:	e79b      	b.n	80125ee <_DrawBitmap+0x15e>
 80126b6:	2d00      	cmp	r5, #0
 80126b8:	f040 8273 	bne.w	8012ba2 <_DrawBitmap+0x712>
 80126bc:	e274      	b.n	8012ba8 <_DrawBitmap+0x718>
 80126be:	bf00      	nop
 80126c0:	20000274 	.word	0x20000274
 80126c4:	20019f58 	.word	0x20019f58
 80126c8:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80126ca:	4bab      	ldr	r3, [pc, #684]	; (8012978 <_DrawBitmap+0x4e8>)
 80126cc:	9f20      	ldr	r7, [sp, #128]	; 0x80
 80126ce:	9409      	str	r4, [sp, #36]	; 0x24
 80126d0:	2e00      	cmp	r6, #0
 80126d2:	bf08      	it	eq
 80126d4:	461e      	moveq	r6, r3
 80126d6:	9621      	str	r6, [sp, #132]	; 0x84
 80126d8:	9e20      	ldr	r6, [sp, #128]	; 0x80
 80126da:	0076      	lsls	r6, r6, #1
 80126dc:	960e      	str	r6, [sp, #56]	; 0x38
 80126de:	00bf      	lsls	r7, r7, #2
 80126e0:	9e07      	ldr	r6, [sp, #28]
 80126e2:	970f      	str	r7, [sp, #60]	; 0x3c
 80126e4:	9605      	str	r6, [sp, #20]
 80126e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80126e8:	9e05      	ldr	r6, [sp, #20]
 80126ea:	9f07      	ldr	r7, [sp, #28]
 80126ec:	1e9c      	subs	r4, r3, #2
 80126ee:	1bf3      	subs	r3, r6, r7
 80126f0:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 80126f2:	42b3      	cmp	r3, r6
 80126f4:	f280 8253 	bge.w	8012b9e <_DrawBitmap+0x70e>
 80126f8:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 80126fa:	2f02      	cmp	r7, #2
 80126fc:	f000 80d9 	beq.w	80128b2 <_DrawBitmap+0x422>
 8012700:	2f04      	cmp	r7, #4
 8012702:	f000 8178 	beq.w	80129f6 <_DrawBitmap+0x566>
 8012706:	2f01      	cmp	r7, #1
 8012708:	f040 823f 	bne.w	8012b8a <_DrawBitmap+0x6fa>
 801270c:	f8df 9270 	ldr.w	r9, [pc, #624]	; 8012980 <_DrawBitmap+0x4f0>
 8012710:	f8d9 3000 	ldr.w	r3, [r9]
 8012714:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8012716:	f7fc fea9 	bl	800f46c <GUI_ALLOC_LockH>
 801271a:	f89a 3000 	ldrb.w	r3, [sl]
 801271e:	4a97      	ldr	r2, [pc, #604]	; (801297c <_DrawBitmap+0x4ec>)
 8012720:	9010      	str	r0, [sp, #64]	; 0x40
 8012722:	5cd5      	ldrb	r5, [r2, r3]
 8012724:	f8d9 3000 	ldr.w	r3, [r9]
 8012728:	9820      	ldr	r0, [sp, #128]	; 0x80
 801272a:	7c1b      	ldrb	r3, [r3, #16]
 801272c:	9f11      	ldr	r7, [sp, #68]	; 0x44
 801272e:	f003 0303 	and.w	r3, r3, #3
 8012732:	2b02      	cmp	r3, #2
 8012734:	465e      	mov	r6, fp
 8012736:	f1c0 0808 	rsb	r8, r0, #8
 801273a:	fa45 f500 	asr.w	r5, r5, r0
 801273e:	d022      	beq.n	8012786 <_DrawBitmap+0x2f6>
 8012740:	2b03      	cmp	r3, #3
 8012742:	d062      	beq.n	801280a <_DrawBitmap+0x37a>
 8012744:	2b01      	cmp	r3, #1
 8012746:	d060      	beq.n	801280a <_DrawBitmap+0x37a>
 8012748:	4652      	mov	r2, sl
 801274a:	4546      	cmp	r6, r8
 801274c:	bf38      	it	cc
 801274e:	46b0      	movcc	r8, r6
 8012750:	ebc8 0606 	rsb	r6, r8, r6
 8012754:	4643      	mov	r3, r8
 8012756:	4621      	mov	r1, r4
 8012758:	f005 0001 	and.w	r0, r5, #1
 801275c:	9f21      	ldr	r7, [sp, #132]	; 0x84
 801275e:	3b01      	subs	r3, #1
 8012760:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 8012764:	f821 0b02 	strh.w	r0, [r1], #2
 8012768:	ea4f 0555 	mov.w	r5, r5, lsr #1
 801276c:	d1f4      	bne.n	8012758 <_DrawBitmap+0x2c8>
 801276e:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8012772:	2e00      	cmp	r6, #0
 8012774:	f000 8099 	beq.w	80128aa <_DrawBitmap+0x41a>
 8012778:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 801277c:	497f      	ldr	r1, [pc, #508]	; (801297c <_DrawBitmap+0x4ec>)
 801277e:	f04f 0808 	mov.w	r8, #8
 8012782:	5ccd      	ldrb	r5, [r1, r3]
 8012784:	e7e1      	b.n	801274a <_DrawBitmap+0x2ba>
 8012786:	9821      	ldr	r0, [sp, #132]	; 0x84
 8012788:	f8dd 9010 	ldr.w	r9, [sp, #16]
 801278c:	f8b0 c004 	ldrh.w	ip, [r0, #4]
 8012790:	f8cd a018 	str.w	sl, [sp, #24]
 8012794:	4546      	cmp	r6, r8
 8012796:	bf38      	it	cc
 8012798:	46b0      	movcc	r8, r6
 801279a:	ebc8 0606 	rsb	r6, r8, r6
 801279e:	b32f      	cbz	r7, 80127ec <_DrawBitmap+0x35c>
 80127a0:	b91d      	cbnz	r5, 80127aa <_DrawBitmap+0x31a>
 80127a2:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 80127a6:	44c1      	add	r9, r8
 80127a8:	e024      	b.n	80127f4 <_DrawBitmap+0x364>
 80127aa:	07ea      	lsls	r2, r5, #31
 80127ac:	d50b      	bpl.n	80127c6 <_DrawBitmap+0x336>
 80127ae:	68bb      	ldr	r3, [r7, #8]
 80127b0:	9a05      	ldr	r2, [sp, #20]
 80127b2:	681b      	ldr	r3, [r3, #0]
 80127b4:	f8cd c008 	str.w	ip, [sp, #8]
 80127b8:	4638      	mov	r0, r7
 80127ba:	4649      	mov	r1, r9
 80127bc:	4798      	blx	r3
 80127be:	f8dd c008 	ldr.w	ip, [sp, #8]
 80127c2:	f8a4 c000 	strh.w	ip, [r4]
 80127c6:	f1b8 0801 	subs.w	r8, r8, #1
 80127ca:	f109 0901 	add.w	r9, r9, #1
 80127ce:	f104 0402 	add.w	r4, r4, #2
 80127d2:	d00f      	beq.n	80127f4 <_DrawBitmap+0x364>
 80127d4:	086d      	lsrs	r5, r5, #1
 80127d6:	e7e3      	b.n	80127a0 <_DrawBitmap+0x310>
 80127d8:	07eb      	lsls	r3, r5, #31
 80127da:	bf48      	it	mi
 80127dc:	f8a4 c000 	strhmi.w	ip, [r4]
 80127e0:	f1b8 0801 	subs.w	r8, r8, #1
 80127e4:	f104 0402 	add.w	r4, r4, #2
 80127e8:	d004      	beq.n	80127f4 <_DrawBitmap+0x364>
 80127ea:	086d      	lsrs	r5, r5, #1
 80127ec:	2d00      	cmp	r5, #0
 80127ee:	d1f3      	bne.n	80127d8 <_DrawBitmap+0x348>
 80127f0:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 80127f4:	2e00      	cmp	r6, #0
 80127f6:	d058      	beq.n	80128aa <_DrawBitmap+0x41a>
 80127f8:	9906      	ldr	r1, [sp, #24]
 80127fa:	4a60      	ldr	r2, [pc, #384]	; (801297c <_DrawBitmap+0x4ec>)
 80127fc:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8012800:	9106      	str	r1, [sp, #24]
 8012802:	5cd5      	ldrb	r5, [r2, r3]
 8012804:	f04f 0808 	mov.w	r8, #8
 8012808:	e7c4      	b.n	8012794 <_DrawBitmap+0x304>
 801280a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801280c:	6913      	ldr	r3, [r2, #16]
 801280e:	689b      	ldr	r3, [r3, #8]
 8012810:	4798      	blx	r3
 8012812:	9b04      	ldr	r3, [sp, #16]
 8012814:	930b      	str	r3, [sp, #44]	; 0x2c
 8012816:	b280      	uxth	r0, r0
 8012818:	900a      	str	r0, [sp, #40]	; 0x28
 801281a:	f10a 0901 	add.w	r9, sl, #1
 801281e:	4546      	cmp	r6, r8
 8012820:	bf38      	it	cc
 8012822:	46b0      	movcc	r8, r6
 8012824:	ebc8 0606 	rsb	r6, r8, r6
 8012828:	1ca3      	adds	r3, r4, #2
 801282a:	b31f      	cbz	r7, 8012874 <_DrawBitmap+0x3e4>
 801282c:	f8cd 8018 	str.w	r8, [sp, #24]
 8012830:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8012832:	9a06      	ldr	r2, [sp, #24]
 8012834:	4440      	add	r0, r8
 8012836:	900c      	str	r0, [sp, #48]	; 0x30
 8012838:	1a81      	subs	r1, r0, r2
 801283a:	07e8      	lsls	r0, r5, #31
 801283c:	d50d      	bpl.n	801285a <_DrawBitmap+0x3ca>
 801283e:	68ba      	ldr	r2, [r7, #8]
 8012840:	4638      	mov	r0, r7
 8012842:	f8d2 c000 	ldr.w	ip, [r2]
 8012846:	9a05      	ldr	r2, [sp, #20]
 8012848:	9302      	str	r3, [sp, #8]
 801284a:	47e0      	blx	ip
 801284c:	9b02      	ldr	r3, [sp, #8]
 801284e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8012850:	f833 2c02 	ldrh.w	r2, [r3, #-2]
 8012854:	4042      	eors	r2, r0
 8012856:	f823 2c02 	strh.w	r2, [r3, #-2]
 801285a:	9906      	ldr	r1, [sp, #24]
 801285c:	3901      	subs	r1, #1
 801285e:	ea4f 0555 	mov.w	r5, r5, lsr #1
 8012862:	f103 0302 	add.w	r3, r3, #2
 8012866:	9106      	str	r1, [sp, #24]
 8012868:	d1e2      	bne.n	8012830 <_DrawBitmap+0x3a0>
 801286a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801286c:	930b      	str	r3, [sp, #44]	; 0x2c
 801286e:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8012872:	e010      	b.n	8012896 <_DrawBitmap+0x406>
 8012874:	4642      	mov	r2, r8
 8012876:	07e9      	lsls	r1, r5, #31
 8012878:	d505      	bpl.n	8012886 <_DrawBitmap+0x3f6>
 801287a:	f833 1c02 	ldrh.w	r1, [r3, #-2]
 801287e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8012880:	4041      	eors	r1, r0
 8012882:	f823 1c02 	strh.w	r1, [r3, #-2]
 8012886:	3a01      	subs	r2, #1
 8012888:	ea4f 0555 	mov.w	r5, r5, lsr #1
 801288c:	f103 0302 	add.w	r3, r3, #2
 8012890:	d1f1      	bne.n	8012876 <_DrawBitmap+0x3e6>
 8012892:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8012896:	b146      	cbz	r6, 80128aa <_DrawBitmap+0x41a>
 8012898:	f899 3000 	ldrb.w	r3, [r9]
 801289c:	4a37      	ldr	r2, [pc, #220]	; (801297c <_DrawBitmap+0x4ec>)
 801289e:	f109 0901 	add.w	r9, r9, #1
 80128a2:	5cd5      	ldrb	r5, [r2, r3]
 80128a4:	f04f 0808 	mov.w	r8, #8
 80128a8:	e7b9      	b.n	801281e <_DrawBitmap+0x38e>
 80128aa:	a810      	add	r0, sp, #64	; 0x40
 80128ac:	f7fc fdec 	bl	800f488 <GUI_ALLOC_UnlockH>
 80128b0:	e16b      	b.n	8012b8a <_DrawBitmap+0x6fa>
 80128b2:	4b33      	ldr	r3, [pc, #204]	; (8012980 <_DrawBitmap+0x4f0>)
 80128b4:	9e20      	ldr	r6, [sp, #128]	; 0x80
 80128b6:	681b      	ldr	r3, [r3, #0]
 80128b8:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80128ba:	7c1b      	ldrb	r3, [r3, #16]
 80128bc:	f8dd 9044 	ldr.w	r9, [sp, #68]	; 0x44
 80128c0:	f1c6 0504 	rsb	r5, r6, #4
 80128c4:	f89a 6000 	ldrb.w	r6, [sl]
 80128c8:	f003 0303 	and.w	r3, r3, #3
 80128cc:	40be      	lsls	r6, r7
 80128ce:	2b01      	cmp	r3, #1
 80128d0:	b2ed      	uxtb	r5, r5
 80128d2:	b2f6      	uxtb	r6, r6
 80128d4:	d06a      	beq.n	80129ac <_DrawBitmap+0x51c>
 80128d6:	d308      	bcc.n	80128ea <_DrawBitmap+0x45a>
 80128d8:	2b02      	cmp	r3, #2
 80128da:	f040 8156 	bne.w	8012b8a <_DrawBitmap+0x6fa>
 80128de:	f8cd a018 	str.w	sl, [sp, #24]
 80128e2:	465f      	mov	r7, fp
 80128e4:	f8dd c010 	ldr.w	ip, [sp, #16]
 80128e8:	e03e      	b.n	8012968 <_DrawBitmap+0x4d8>
 80128ea:	4652      	mov	r2, sl
 80128ec:	465b      	mov	r3, fp
 80128ee:	429d      	cmp	r5, r3
 80128f0:	bfc8      	it	gt
 80128f2:	b2dd      	uxtbgt	r5, r3
 80128f4:	1b5b      	subs	r3, r3, r5
 80128f6:	4629      	mov	r1, r5
 80128f8:	4620      	mov	r0, r4
 80128fa:	ea4f 1c96 	mov.w	ip, r6, lsr #6
 80128fe:	9f21      	ldr	r7, [sp, #132]	; 0x84
 8012900:	3901      	subs	r1, #1
 8012902:	f857 c02c 	ldr.w	ip, [r7, ip, lsl #2]
 8012906:	f820 cb02 	strh.w	ip, [r0], #2
 801290a:	00b6      	lsls	r6, r6, #2
 801290c:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 8012910:	b2f6      	uxtb	r6, r6
 8012912:	d1f2      	bne.n	80128fa <_DrawBitmap+0x46a>
 8012914:	3d01      	subs	r5, #1
 8012916:	b2ed      	uxtb	r5, r5
 8012918:	3501      	adds	r5, #1
 801291a:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 801291e:	2b00      	cmp	r3, #0
 8012920:	f000 8133 	beq.w	8012b8a <_DrawBitmap+0x6fa>
 8012924:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 8012928:	2504      	movs	r5, #4
 801292a:	e7e0      	b.n	80128ee <_DrawBitmap+0x45e>
 801292c:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 8012930:	eb08 010c 	add.w	r1, r8, ip
 8012934:	d126      	bne.n	8012984 <_DrawBitmap+0x4f4>
 8012936:	f108 0801 	add.w	r8, r8, #1
 801293a:	fa5f f388 	uxtb.w	r3, r8
 801293e:	00b6      	lsls	r6, r6, #2
 8012940:	429d      	cmp	r5, r3
 8012942:	b2f6      	uxtb	r6, r6
 8012944:	d1f2      	bne.n	801292c <_DrawBitmap+0x49c>
 8012946:	3d01      	subs	r5, #1
 8012948:	b2ed      	uxtb	r5, r5
 801294a:	1c6b      	adds	r3, r5, #1
 801294c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012950:	f10c 0301 	add.w	r3, ip, #1
 8012954:	eb03 0c05 	add.w	ip, r3, r5
 8012958:	2f00      	cmp	r7, #0
 801295a:	f000 8116 	beq.w	8012b8a <_DrawBitmap+0x6fa>
 801295e:	9b06      	ldr	r3, [sp, #24]
 8012960:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 8012964:	9306      	str	r3, [sp, #24]
 8012966:	2504      	movs	r5, #4
 8012968:	42bd      	cmp	r5, r7
 801296a:	bfc8      	it	gt
 801296c:	b2fd      	uxtbgt	r5, r7
 801296e:	1b7f      	subs	r7, r7, r5
 8012970:	f04f 0800 	mov.w	r8, #0
 8012974:	e7da      	b.n	801292c <_DrawBitmap+0x49c>
 8012976:	bf00      	nop
 8012978:	08017374 	.word	0x08017374
 801297c:	08017180 	.word	0x08017180
 8012980:	20000274 	.word	0x20000274
 8012984:	09b3      	lsrs	r3, r6, #6
 8012986:	9821      	ldr	r0, [sp, #132]	; 0x84
 8012988:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801298c:	f824 3018 	strh.w	r3, [r4, r8, lsl #1]
 8012990:	f1b9 0f00 	cmp.w	r9, #0
 8012994:	d0cf      	beq.n	8012936 <_DrawBitmap+0x4a6>
 8012996:	f8d9 3008 	ldr.w	r3, [r9, #8]
 801299a:	9a05      	ldr	r2, [sp, #20]
 801299c:	681b      	ldr	r3, [r3, #0]
 801299e:	f8cd c008 	str.w	ip, [sp, #8]
 80129a2:	4648      	mov	r0, r9
 80129a4:	4798      	blx	r3
 80129a6:	f8dd c008 	ldr.w	ip, [sp, #8]
 80129aa:	e7c4      	b.n	8012936 <_DrawBitmap+0x4a6>
 80129ac:	4651      	mov	r1, sl
 80129ae:	465b      	mov	r3, fp
 80129b0:	429d      	cmp	r5, r3
 80129b2:	bfc8      	it	gt
 80129b4:	b2dd      	uxtbgt	r5, r3
 80129b6:	1b5b      	subs	r3, r3, r5
 80129b8:	1ca2      	adds	r2, r4, #2
 80129ba:	4628      	mov	r0, r5
 80129bc:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 80129c0:	d005      	beq.n	80129ce <_DrawBitmap+0x53e>
 80129c2:	f832 7c02 	ldrh.w	r7, [r2, #-2]
 80129c6:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 80129ca:	f822 7c02 	strh.w	r7, [r2, #-2]
 80129ce:	3801      	subs	r0, #1
 80129d0:	00b6      	lsls	r6, r6, #2
 80129d2:	f010 00ff 	ands.w	r0, r0, #255	; 0xff
 80129d6:	b2f6      	uxtb	r6, r6
 80129d8:	f102 0202 	add.w	r2, r2, #2
 80129dc:	d1ee      	bne.n	80129bc <_DrawBitmap+0x52c>
 80129de:	3d01      	subs	r5, #1
 80129e0:	b2ed      	uxtb	r5, r5
 80129e2:	3501      	adds	r5, #1
 80129e4:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 80129e8:	2b00      	cmp	r3, #0
 80129ea:	f000 80ce 	beq.w	8012b8a <_DrawBitmap+0x6fa>
 80129ee:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 80129f2:	2504      	movs	r5, #4
 80129f4:	e7dc      	b.n	80129b0 <_DrawBitmap+0x520>
 80129f6:	4a6e      	ldr	r2, [pc, #440]	; (8012bb0 <_DrawBitmap+0x720>)
 80129f8:	f89a 3000 	ldrb.w	r3, [sl]
 80129fc:	6812      	ldr	r2, [r2, #0]
 80129fe:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8012a00:	7c12      	ldrb	r2, [r2, #16]
 8012a02:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8012a04:	f002 0203 	and.w	r2, r2, #3
 8012a08:	40bb      	lsls	r3, r7
 8012a0a:	2a01      	cmp	r2, #1
 8012a0c:	b2dd      	uxtb	r5, r3
 8012a0e:	f000 8095 	beq.w	8012b3c <_DrawBitmap+0x6ac>
 8012a12:	d302      	bcc.n	8012a1a <_DrawBitmap+0x58a>
 8012a14:	2a02      	cmp	r2, #2
 8012a16:	d036      	beq.n	8012a86 <_DrawBitmap+0x5f6>
 8012a18:	e0b7      	b.n	8012b8a <_DrawBitmap+0x6fa>
 8012a1a:	9e20      	ldr	r6, [sp, #128]	; 0x80
 8012a1c:	b166      	cbz	r6, 8012a38 <_DrawBitmap+0x5a8>
 8012a1e:	092d      	lsrs	r5, r5, #4
 8012a20:	9f21      	ldr	r7, [sp, #132]	; 0x84
 8012a22:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 8012a26:	8023      	strh	r3, [r4, #0]
 8012a28:	f10a 0201 	add.w	r2, sl, #1
 8012a2c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8012a2e:	f89a 5001 	ldrb.w	r5, [sl, #1]
 8012a32:	f10b 33ff 	add.w	r3, fp, #4294967295
 8012a36:	e001      	b.n	8012a3c <_DrawBitmap+0x5ac>
 8012a38:	465b      	mov	r3, fp
 8012a3a:	4652      	mov	r2, sl
 8012a3c:	2b01      	cmp	r3, #1
 8012a3e:	dd19      	ble.n	8012a74 <_DrawBitmap+0x5e4>
 8012a40:	1058      	asrs	r0, r3, #1
 8012a42:	1d21      	adds	r1, r4, #4
 8012a44:	f003 0301 	and.w	r3, r3, #1
 8012a48:	eb02 0c00 	add.w	ip, r2, r0
 8012a4c:	092f      	lsrs	r7, r5, #4
 8012a4e:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8012a50:	f005 050f 	and.w	r5, r5, #15
 8012a54:	f856 7027 	ldr.w	r7, [r6, r7, lsl #2]
 8012a58:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 8012a5c:	f821 7c04 	strh.w	r7, [r1, #-4]
 8012a60:	f821 5c02 	strh.w	r5, [r1, #-2]
 8012a64:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8012a68:	4562      	cmp	r2, ip
 8012a6a:	f101 0104 	add.w	r1, r1, #4
 8012a6e:	d1ed      	bne.n	8012a4c <_DrawBitmap+0x5bc>
 8012a70:	eb04 0480 	add.w	r4, r4, r0, lsl #2
 8012a74:	2b00      	cmp	r3, #0
 8012a76:	f000 8088 	beq.w	8012b8a <_DrawBitmap+0x6fa>
 8012a7a:	092d      	lsrs	r5, r5, #4
 8012a7c:	9f21      	ldr	r7, [sp, #132]	; 0x84
 8012a7e:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 8012a82:	8023      	strh	r3, [r4, #0]
 8012a84:	e081      	b.n	8012b8a <_DrawBitmap+0x6fa>
 8012a86:	9f20      	ldr	r7, [sp, #128]	; 0x80
 8012a88:	b1c7      	cbz	r7, 8012abc <_DrawBitmap+0x62c>
 8012a8a:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 8012a8e:	d00b      	beq.n	8012aa8 <_DrawBitmap+0x618>
 8012a90:	092d      	lsrs	r5, r5, #4
 8012a92:	9f21      	ldr	r7, [sp, #132]	; 0x84
 8012a94:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 8012a98:	8023      	strh	r3, [r4, #0]
 8012a9a:	b12e      	cbz	r6, 8012aa8 <_DrawBitmap+0x618>
 8012a9c:	68b3      	ldr	r3, [r6, #8]
 8012a9e:	9904      	ldr	r1, [sp, #16]
 8012aa0:	681b      	ldr	r3, [r3, #0]
 8012aa2:	9a05      	ldr	r2, [sp, #20]
 8012aa4:	4630      	mov	r0, r6
 8012aa6:	4798      	blx	r3
 8012aa8:	9804      	ldr	r0, [sp, #16]
 8012aaa:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8012aac:	f89a 5001 	ldrb.w	r5, [sl, #1]
 8012ab0:	1c47      	adds	r7, r0, #1
 8012ab2:	f10b 39ff 	add.w	r9, fp, #4294967295
 8012ab6:	f10a 0801 	add.w	r8, sl, #1
 8012aba:	e00f      	b.n	8012adc <_DrawBitmap+0x64c>
 8012abc:	46d9      	mov	r9, fp
 8012abe:	46d0      	mov	r8, sl
 8012ac0:	9f04      	ldr	r7, [sp, #16]
 8012ac2:	e00b      	b.n	8012adc <_DrawBitmap+0x64c>
 8012ac4:	f015 0ff0 	tst.w	r5, #240	; 0xf0
 8012ac8:	d10c      	bne.n	8012ae4 <_DrawBitmap+0x654>
 8012aca:	f015 050f 	ands.w	r5, r5, #15
 8012ace:	d117      	bne.n	8012b00 <_DrawBitmap+0x670>
 8012ad0:	f818 5f01 	ldrb.w	r5, [r8, #1]!
 8012ad4:	3404      	adds	r4, #4
 8012ad6:	3702      	adds	r7, #2
 8012ad8:	f1a9 0902 	sub.w	r9, r9, #2
 8012adc:	f1b9 0f01 	cmp.w	r9, #1
 8012ae0:	dcf0      	bgt.n	8012ac4 <_DrawBitmap+0x634>
 8012ae2:	e01a      	b.n	8012b1a <_DrawBitmap+0x68a>
 8012ae4:	092b      	lsrs	r3, r5, #4
 8012ae6:	9921      	ldr	r1, [sp, #132]	; 0x84
 8012ae8:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8012aec:	8023      	strh	r3, [r4, #0]
 8012aee:	2e00      	cmp	r6, #0
 8012af0:	d0eb      	beq.n	8012aca <_DrawBitmap+0x63a>
 8012af2:	68b3      	ldr	r3, [r6, #8]
 8012af4:	9a05      	ldr	r2, [sp, #20]
 8012af6:	681b      	ldr	r3, [r3, #0]
 8012af8:	4630      	mov	r0, r6
 8012afa:	4639      	mov	r1, r7
 8012afc:	4798      	blx	r3
 8012afe:	e7e4      	b.n	8012aca <_DrawBitmap+0x63a>
 8012b00:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8012b02:	f852 3025 	ldr.w	r3, [r2, r5, lsl #2]
 8012b06:	8063      	strh	r3, [r4, #2]
 8012b08:	2e00      	cmp	r6, #0
 8012b0a:	d0e1      	beq.n	8012ad0 <_DrawBitmap+0x640>
 8012b0c:	68b3      	ldr	r3, [r6, #8]
 8012b0e:	9a05      	ldr	r2, [sp, #20]
 8012b10:	681b      	ldr	r3, [r3, #0]
 8012b12:	4630      	mov	r0, r6
 8012b14:	1c79      	adds	r1, r7, #1
 8012b16:	4798      	blx	r3
 8012b18:	e7da      	b.n	8012ad0 <_DrawBitmap+0x640>
 8012b1a:	f1b9 0f00 	cmp.w	r9, #0
 8012b1e:	d034      	beq.n	8012b8a <_DrawBitmap+0x6fa>
 8012b20:	092d      	lsrs	r5, r5, #4
 8012b22:	d032      	beq.n	8012b8a <_DrawBitmap+0x6fa>
 8012b24:	9821      	ldr	r0, [sp, #132]	; 0x84
 8012b26:	f850 3025 	ldr.w	r3, [r0, r5, lsl #2]
 8012b2a:	8023      	strh	r3, [r4, #0]
 8012b2c:	b36e      	cbz	r6, 8012b8a <_DrawBitmap+0x6fa>
 8012b2e:	68b3      	ldr	r3, [r6, #8]
 8012b30:	9a05      	ldr	r2, [sp, #20]
 8012b32:	681b      	ldr	r3, [r3, #0]
 8012b34:	4630      	mov	r0, r6
 8012b36:	4639      	mov	r1, r7
 8012b38:	4798      	blx	r3
 8012b3a:	e026      	b.n	8012b8a <_DrawBitmap+0x6fa>
 8012b3c:	9e20      	ldr	r6, [sp, #128]	; 0x80
 8012b3e:	f1c6 0302 	rsb	r3, r6, #2
 8012b42:	b2db      	uxtb	r3, r3
 8012b44:	4650      	mov	r0, sl
 8012b46:	465a      	mov	r2, fp
 8012b48:	4293      	cmp	r3, r2
 8012b4a:	bfc8      	it	gt
 8012b4c:	b2d3      	uxtbgt	r3, r2
 8012b4e:	1ad2      	subs	r2, r2, r3
 8012b50:	1ca1      	adds	r1, r4, #2
 8012b52:	461e      	mov	r6, r3
 8012b54:	f015 0fc0 	tst.w	r5, #192	; 0xc0
 8012b58:	d005      	beq.n	8012b66 <_DrawBitmap+0x6d6>
 8012b5a:	f831 7c02 	ldrh.w	r7, [r1, #-2]
 8012b5e:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 8012b62:	f821 7c02 	strh.w	r7, [r1, #-2]
 8012b66:	3e01      	subs	r6, #1
 8012b68:	012d      	lsls	r5, r5, #4
 8012b6a:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
 8012b6e:	b2ed      	uxtb	r5, r5
 8012b70:	f101 0102 	add.w	r1, r1, #2
 8012b74:	d1ee      	bne.n	8012b54 <_DrawBitmap+0x6c4>
 8012b76:	3b01      	subs	r3, #1
 8012b78:	b2db      	uxtb	r3, r3
 8012b7a:	3301      	adds	r3, #1
 8012b7c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012b80:	b11a      	cbz	r2, 8012b8a <_DrawBitmap+0x6fa>
 8012b82:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 8012b86:	2302      	movs	r3, #2
 8012b88:	e7de      	b.n	8012b48 <_DrawBitmap+0x6b8>
 8012b8a:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8012b8c:	9b05      	ldr	r3, [sp, #20]
 8012b8e:	9e08      	ldr	r6, [sp, #32]
 8012b90:	44ba      	add	sl, r7
 8012b92:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8012b94:	3301      	adds	r3, #1
 8012b96:	4437      	add	r7, r6
 8012b98:	9305      	str	r3, [sp, #20]
 8012b9a:	9709      	str	r7, [sp, #36]	; 0x24
 8012b9c:	e5a3      	b.n	80126e6 <_DrawBitmap+0x256>
 8012b9e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012ba0:	b113      	cbz	r3, 8012ba8 <_DrawBitmap+0x718>
 8012ba2:	a811      	add	r0, sp, #68	; 0x44
 8012ba4:	f7fc fc70 	bl	800f488 <GUI_ALLOC_UnlockH>
 8012ba8:	b013      	add	sp, #76	; 0x4c
 8012baa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012bae:	bf00      	nop
 8012bb0:	20000274 	.word	0x20000274

08012bb4 <LCD_SelectLCD>:
 8012bb4:	b510      	push	{r4, lr}
 8012bb6:	4b0d      	ldr	r3, [pc, #52]	; (8012bec <LCD_SelectLCD+0x38>)
 8012bb8:	681a      	ldr	r2, [r3, #0]
 8012bba:	7c51      	ldrb	r1, [r2, #17]
 8012bbc:	4a0c      	ldr	r2, [pc, #48]	; (8012bf0 <LCD_SelectLCD+0x3c>)
 8012bbe:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 8012bc2:	461c      	mov	r4, r3
 8012bc4:	b140      	cbz	r0, 8012bd8 <LCD_SelectLCD+0x24>
 8012bc6:	68c3      	ldr	r3, [r0, #12]
 8012bc8:	b113      	cbz	r3, 8012bd0 <LCD_SelectLCD+0x1c>
 8012bca:	681b      	ldr	r3, [r3, #0]
 8012bcc:	2b04      	cmp	r3, #4
 8012bce:	d001      	beq.n	8012bd4 <LCD_SelectLCD+0x20>
 8012bd0:	6800      	ldr	r0, [r0, #0]
 8012bd2:	e7f7      	b.n	8012bc4 <LCD_SelectLCD+0x10>
 8012bd4:	f7fb ff28 	bl	800ea28 <GUI_DEVICE_Unlink>
 8012bd8:	6823      	ldr	r3, [r4, #0]
 8012bda:	2200      	movs	r2, #0
 8012bdc:	661a      	str	r2, [r3, #96]	; 0x60
 8012bde:	f103 0208 	add.w	r2, r3, #8
 8012be2:	615a      	str	r2, [r3, #20]
 8012be4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012be8:	f7f9 bd1c 	b.w	800c624 <LCD_SetClipRectMax>
 8012bec:	20000274 	.word	0x20000274
 8012bf0:	2001ba34 	.word	0x2001ba34

08012bf4 <LCD_ReadRectEx>:
 8012bf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012bf8:	b087      	sub	sp, #28
 8012bfa:	4617      	mov	r7, r2
 8012bfc:	9304      	str	r3, [sp, #16]
 8012bfe:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012c00:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8012c02:	68da      	ldr	r2, [r3, #12]
 8012c04:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8012c06:	f8d2 8014 	ldr.w	r8, [r2, #20]
 8012c0a:	4606      	mov	r6, r0
 8012c0c:	460d      	mov	r5, r1
 8012c0e:	b973      	cbnz	r3, 8012c2e <LCD_ReadRectEx+0x3a>
 8012c10:	4b71      	ldr	r3, [pc, #452]	; (8012dd8 <LCD_ReadRectEx+0x1e4>)
 8012c12:	681b      	ldr	r3, [r3, #0]
 8012c14:	7c58      	ldrb	r0, [r3, #17]
 8012c16:	f7f9 f9b7 	bl	800bf88 <GUI_GetBitsPerPixelEx>
 8012c1a:	2808      	cmp	r0, #8
 8012c1c:	4682      	mov	sl, r0
 8012c1e:	dd15      	ble.n	8012c4c <LCD_ReadRectEx+0x58>
 8012c20:	2810      	cmp	r0, #16
 8012c22:	bfcc      	ite	gt
 8012c24:	f04f 0904 	movgt.w	r9, #4
 8012c28:	f04f 0902 	movle.w	r9, #2
 8012c2c:	e010      	b.n	8012c50 <LCD_ReadRectEx+0x5c>
 8012c2e:	a811      	add	r0, sp, #68	; 0x44
 8012c30:	2101      	movs	r1, #1
 8012c32:	4798      	blx	r3
 8012c34:	4684      	mov	ip, r0
 8012c36:	2800      	cmp	r0, #0
 8012c38:	d0ea      	beq.n	8012c10 <LCD_ReadRectEx+0x1c>
 8012c3a:	9b04      	ldr	r3, [sp, #16]
 8012c3c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012c3e:	e88d 0018 	stmia.w	sp, {r3, r4}
 8012c42:	4631      	mov	r1, r6
 8012c44:	462a      	mov	r2, r5
 8012c46:	463b      	mov	r3, r7
 8012c48:	47e0      	blx	ip
 8012c4a:	e0c1      	b.n	8012dd0 <LCD_ReadRectEx+0x1dc>
 8012c4c:	f04f 0901 	mov.w	r9, #1
 8012c50:	f04f 0b00 	mov.w	fp, #0
 8012c54:	9b04      	ldr	r3, [sp, #16]
 8012c56:	429d      	cmp	r5, r3
 8012c58:	f300 80ba 	bgt.w	8012dd0 <LCD_ReadRectEx+0x1dc>
 8012c5c:	f1b9 0f02 	cmp.w	r9, #2
 8012c60:	d009      	beq.n	8012c76 <LCD_ReadRectEx+0x82>
 8012c62:	f1b9 0f04 	cmp.w	r9, #4
 8012c66:	d004      	beq.n	8012c72 <LCD_ReadRectEx+0x7e>
 8012c68:	f1b9 0f01 	cmp.w	r9, #1
 8012c6c:	f040 80ae 	bne.w	8012dcc <LCD_ReadRectEx+0x1d8>
 8012c70:	e003      	b.n	8012c7a <LCD_ReadRectEx+0x86>
 8012c72:	46b4      	mov	ip, r6
 8012c74:	e09b      	b.n	8012dae <LCD_ReadRectEx+0x1ba>
 8012c76:	46b4      	mov	ip, r6
 8012c78:	e08a      	b.n	8012d90 <LCD_ReadRectEx+0x19c>
 8012c7a:	f10a 32ff 	add.w	r2, sl, #4294967295
 8012c7e:	2a07      	cmp	r2, #7
 8012c80:	f200 80a4 	bhi.w	8012dcc <LCD_ReadRectEx+0x1d8>
 8012c84:	e8df f002 	tbb	[pc, r2]
 8012c88:	0606080a 	.word	0x0606080a
 8012c8c:	04040404 	.word	0x04040404
 8012c90:	46b4      	mov	ip, r6
 8012c92:	e066      	b.n	8012d62 <LCD_ReadRectEx+0x16e>
 8012c94:	46b4      	mov	ip, r6
 8012c96:	e047      	b.n	8012d28 <LCD_ReadRectEx+0x134>
 8012c98:	46b4      	mov	ip, r6
 8012c9a:	e022      	b.n	8012ce2 <LCD_ReadRectEx+0xee>
 8012c9c:	46b4      	mov	ip, r6
 8012c9e:	45bc      	cmp	ip, r7
 8012ca0:	f300 8094 	bgt.w	8012dcc <LCD_ReadRectEx+0x1d8>
 8012ca4:	4661      	mov	r1, ip
 8012ca6:	462a      	mov	r2, r5
 8012ca8:	f8cd c00c 	str.w	ip, [sp, #12]
 8012cac:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012cae:	47c0      	blx	r8
 8012cb0:	f1cb 0207 	rsb	r2, fp, #7
 8012cb4:	fa00 f202 	lsl.w	r2, r0, r2
 8012cb8:	f64f 717f 	movw	r1, #65407	; 0xff7f
 8012cbc:	7820      	ldrb	r0, [r4, #0]
 8012cbe:	fa41 f10b 	asr.w	r1, r1, fp
 8012cc2:	4001      	ands	r1, r0
 8012cc4:	430a      	orrs	r2, r1
 8012cc6:	7022      	strb	r2, [r4, #0]
 8012cc8:	f10b 0301 	add.w	r3, fp, #1
 8012ccc:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8012cd0:	f023 0207 	bic.w	r2, r3, #7
 8012cd4:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 8012cd8:	fa43 fb02 	asr.w	fp, r3, r2
 8012cdc:	f10c 0c01 	add.w	ip, ip, #1
 8012ce0:	e7dd      	b.n	8012c9e <LCD_ReadRectEx+0xaa>
 8012ce2:	45bc      	cmp	ip, r7
 8012ce4:	dc72      	bgt.n	8012dcc <LCD_ReadRectEx+0x1d8>
 8012ce6:	4661      	mov	r1, ip
 8012ce8:	462a      	mov	r2, r5
 8012cea:	f8cd c00c 	str.w	ip, [sp, #12]
 8012cee:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012cf0:	47c0      	blx	r8
 8012cf2:	ea4f 024b 	mov.w	r2, fp, lsl #1
 8012cf6:	f1c2 0106 	rsb	r1, r2, #6
 8012cfa:	fa00 f101 	lsl.w	r1, r0, r1
 8012cfe:	f64f 703f 	movw	r0, #65343	; 0xff3f
 8012d02:	fa40 f202 	asr.w	r2, r0, r2
 8012d06:	7820      	ldrb	r0, [r4, #0]
 8012d08:	4002      	ands	r2, r0
 8012d0a:	4311      	orrs	r1, r2
 8012d0c:	7021      	strb	r1, [r4, #0]
 8012d0e:	f10b 0301 	add.w	r3, fp, #1
 8012d12:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8012d16:	f023 0203 	bic.w	r2, r3, #3
 8012d1a:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 8012d1e:	fa43 fb02 	asr.w	fp, r3, r2
 8012d22:	f10c 0c01 	add.w	ip, ip, #1
 8012d26:	e7dc      	b.n	8012ce2 <LCD_ReadRectEx+0xee>
 8012d28:	45bc      	cmp	ip, r7
 8012d2a:	dc4f      	bgt.n	8012dcc <LCD_ReadRectEx+0x1d8>
 8012d2c:	4661      	mov	r1, ip
 8012d2e:	462a      	mov	r2, r5
 8012d30:	f8cd c00c 	str.w	ip, [sp, #12]
 8012d34:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012d36:	47c0      	blx	r8
 8012d38:	ea4f 028b 	mov.w	r2, fp, lsl #2
 8012d3c:	f1c2 0104 	rsb	r1, r2, #4
 8012d40:	fa00 f101 	lsl.w	r1, r0, r1
 8012d44:	200f      	movs	r0, #15
 8012d46:	fa00 f202 	lsl.w	r2, r0, r2
 8012d4a:	7820      	ldrb	r0, [r4, #0]
 8012d4c:	4002      	ands	r2, r0
 8012d4e:	4311      	orrs	r1, r2
 8012d50:	7021      	strb	r1, [r4, #0]
 8012d52:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8012d56:	445c      	add	r4, fp
 8012d58:	f10c 0c01 	add.w	ip, ip, #1
 8012d5c:	f08b 0b01 	eor.w	fp, fp, #1
 8012d60:	e7e2      	b.n	8012d28 <LCD_ReadRectEx+0x134>
 8012d62:	4273      	negs	r3, r6
 8012d64:	1ba2      	subs	r2, r4, r6
 8012d66:	45bc      	cmp	ip, r7
 8012d68:	9305      	str	r3, [sp, #20]
 8012d6a:	4462      	add	r2, ip
 8012d6c:	dc0e      	bgt.n	8012d8c <LCD_ReadRectEx+0x198>
 8012d6e:	4661      	mov	r1, ip
 8012d70:	462a      	mov	r2, r5
 8012d72:	f8cd c00c 	str.w	ip, [sp, #12]
 8012d76:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012d78:	47c0      	blx	r8
 8012d7a:	9a05      	ldr	r2, [sp, #20]
 8012d7c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8012d80:	4422      	add	r2, r4
 8012d82:	f802 000c 	strb.w	r0, [r2, ip]
 8012d86:	f10c 0c01 	add.w	ip, ip, #1
 8012d8a:	e7ea      	b.n	8012d62 <LCD_ReadRectEx+0x16e>
 8012d8c:	4614      	mov	r4, r2
 8012d8e:	e01d      	b.n	8012dcc <LCD_ReadRectEx+0x1d8>
 8012d90:	45bc      	cmp	ip, r7
 8012d92:	dc1b      	bgt.n	8012dcc <LCD_ReadRectEx+0x1d8>
 8012d94:	4661      	mov	r1, ip
 8012d96:	f8cd c00c 	str.w	ip, [sp, #12]
 8012d9a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012d9c:	462a      	mov	r2, r5
 8012d9e:	47c0      	blx	r8
 8012da0:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8012da4:	f824 0b02 	strh.w	r0, [r4], #2
 8012da8:	f10c 0c01 	add.w	ip, ip, #1
 8012dac:	e7f0      	b.n	8012d90 <LCD_ReadRectEx+0x19c>
 8012dae:	45bc      	cmp	ip, r7
 8012db0:	dc0c      	bgt.n	8012dcc <LCD_ReadRectEx+0x1d8>
 8012db2:	4661      	mov	r1, ip
 8012db4:	f8cd c00c 	str.w	ip, [sp, #12]
 8012db8:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012dba:	462a      	mov	r2, r5
 8012dbc:	47c0      	blx	r8
 8012dbe:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8012dc2:	f844 0b04 	str.w	r0, [r4], #4
 8012dc6:	f10c 0c01 	add.w	ip, ip, #1
 8012dca:	e7f0      	b.n	8012dae <LCD_ReadRectEx+0x1ba>
 8012dcc:	3501      	adds	r5, #1
 8012dce:	e741      	b.n	8012c54 <LCD_ReadRectEx+0x60>
 8012dd0:	b007      	add	sp, #28
 8012dd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012dd6:	bf00      	nop
 8012dd8:	20000274 	.word	0x20000274

08012ddc <GUI_ReadRectEx>:
 8012ddc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012dde:	4d16      	ldr	r5, [pc, #88]	; (8012e38 <GUI_ReadRectEx+0x5c>)
 8012de0:	9e05      	ldr	r6, [sp, #20]
 8012de2:	682d      	ldr	r5, [r5, #0]
 8012de4:	9c06      	ldr	r4, [sp, #24]
 8012de6:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
 8012dea:	42b8      	cmp	r0, r7
 8012dec:	bfb8      	it	lt
 8012dee:	4638      	movlt	r0, r7
 8012df0:	f9b5 700c 	ldrsh.w	r7, [r5, #12]
 8012df4:	42ba      	cmp	r2, r7
 8012df6:	bfa8      	it	ge
 8012df8:	463a      	movge	r2, r7
 8012dfa:	4282      	cmp	r2, r0
 8012dfc:	db1b      	blt.n	8012e36 <GUI_ReadRectEx+0x5a>
 8012dfe:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 8012e02:	f9b5 500e 	ldrsh.w	r5, [r5, #14]
 8012e06:	42b9      	cmp	r1, r7
 8012e08:	bfb8      	it	lt
 8012e0a:	4639      	movlt	r1, r7
 8012e0c:	42ab      	cmp	r3, r5
 8012e0e:	bfa8      	it	ge
 8012e10:	462b      	movge	r3, r5
 8012e12:	428b      	cmp	r3, r1
 8012e14:	db0f      	blt.n	8012e36 <GUI_ReadRectEx+0x5a>
 8012e16:	68e5      	ldr	r5, [r4, #12]
 8012e18:	682d      	ldr	r5, [r5, #0]
 8012e1a:	f035 0704 	bics.w	r7, r5, #4
 8012e1e:	d105      	bne.n	8012e2c <GUI_ReadRectEx+0x50>
 8012e20:	9605      	str	r6, [sp, #20]
 8012e22:	9406      	str	r4, [sp, #24]
 8012e24:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8012e28:	f7ff bee4 	b.w	8012bf4 <LCD_ReadRectEx>
 8012e2c:	6825      	ldr	r5, [r4, #0]
 8012e2e:	2d00      	cmp	r5, #0
 8012e30:	d0f6      	beq.n	8012e20 <GUI_ReadRectEx+0x44>
 8012e32:	462c      	mov	r4, r5
 8012e34:	e7ef      	b.n	8012e16 <GUI_ReadRectEx+0x3a>
 8012e36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012e38:	20000274 	.word	0x20000274

08012e3c <_OnExit>:
 8012e3c:	b510      	push	{r4, lr}
 8012e3e:	4c03      	ldr	r4, [pc, #12]	; (8012e4c <_OnExit+0x10>)
 8012e40:	6820      	ldr	r0, [r4, #0]
 8012e42:	f7fc faff 	bl	800f444 <GUI_ALLOC_FreeFixedBlock>
 8012e46:	2300      	movs	r3, #0
 8012e48:	6023      	str	r3, [r4, #0]
 8012e4a:	bd10      	pop	{r4, pc}
 8012e4c:	2001bb34 	.word	0x2001bb34

08012e50 <LCD_InitColors>:
 8012e50:	b538      	push	{r3, r4, r5, lr}
 8012e52:	4d09      	ldr	r5, [pc, #36]	; (8012e78 <LCD_InitColors+0x28>)
 8012e54:	682c      	ldr	r4, [r5, #0]
 8012e56:	b95c      	cbnz	r4, 8012e70 <LCD_InitColors+0x20>
 8012e58:	4b08      	ldr	r3, [pc, #32]	; (8012e7c <LCD_InitColors+0x2c>)
 8012e5a:	6818      	ldr	r0, [r3, #0]
 8012e5c:	0080      	lsls	r0, r0, #2
 8012e5e:	f7fc fc5d 	bl	800f71c <GUI_ALLOC_GetFixedBlock>
 8012e62:	6028      	str	r0, [r5, #0]
 8012e64:	b130      	cbz	r0, 8012e74 <LCD_InitColors+0x24>
 8012e66:	4806      	ldr	r0, [pc, #24]	; (8012e80 <LCD_InitColors+0x30>)
 8012e68:	4b06      	ldr	r3, [pc, #24]	; (8012e84 <LCD_InitColors+0x34>)
 8012e6a:	6003      	str	r3, [r0, #0]
 8012e6c:	f7fb fede 	bl	800ec2c <GUI__RegisterExit>
 8012e70:	2000      	movs	r0, #0
 8012e72:	bd38      	pop	{r3, r4, r5, pc}
 8012e74:	2001      	movs	r0, #1
 8012e76:	bd38      	pop	{r3, r4, r5, pc}
 8012e78:	2001bb34 	.word	0x2001bb34
 8012e7c:	2000038c 	.word	0x2000038c
 8012e80:	20019f5c 	.word	0x20019f5c
 8012e84:	08012e3d 	.word	0x08012e3d

08012e88 <LCD_InitLUT>:
 8012e88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012e8c:	f001 fcfc 	bl	8014888 <LCD_GetNumLayers>
 8012e90:	2400      	movs	r4, #0
 8012e92:	4680      	mov	r8, r0
 8012e94:	4544      	cmp	r4, r8
 8012e96:	da2c      	bge.n	8012ef2 <LCD_InitLUT+0x6a>
 8012e98:	4620      	mov	r0, r4
 8012e9a:	f7fb fd8d 	bl	800e9b8 <GUI_DEVICE__GetpDriver>
 8012e9e:	b330      	cbz	r0, 8012eee <LCD_InitLUT+0x66>
 8012ea0:	4e15      	ldr	r6, [pc, #84]	; (8012ef8 <LCD_InitLUT+0x70>)
 8012ea2:	6833      	ldr	r3, [r6, #0]
 8012ea4:	4620      	mov	r0, r4
 8012ea6:	f893 9011 	ldrb.w	r9, [r3, #17]
 8012eaa:	745c      	strb	r4, [r3, #17]
 8012eac:	f7f9 f84e 	bl	800bf4c <LCD_GetBitsPerPixelEx>
 8012eb0:	2808      	cmp	r0, #8
 8012eb2:	dd03      	ble.n	8012ebc <LCD_InitLUT+0x34>
 8012eb4:	6833      	ldr	r3, [r6, #0]
 8012eb6:	f883 9011 	strb.w	r9, [r3, #17]
 8012eba:	e018      	b.n	8012eee <LCD_InitLUT+0x66>
 8012ebc:	4b0f      	ldr	r3, [pc, #60]	; (8012efc <LCD_InitLUT+0x74>)
 8012ebe:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8012ec2:	691a      	ldr	r2, [r3, #16]
 8012ec4:	4b0e      	ldr	r3, [pc, #56]	; (8012f00 <LCD_InitLUT+0x78>)
 8012ec6:	429a      	cmp	r2, r3
 8012ec8:	d0f4      	beq.n	8012eb4 <LCD_InitLUT+0x2c>
 8012eca:	4620      	mov	r0, r4
 8012ecc:	f7f9 f841 	bl	800bf52 <LCD_GetNumColorsEx>
 8012ed0:	2500      	movs	r5, #0
 8012ed2:	4682      	mov	sl, r0
 8012ed4:	4555      	cmp	r5, sl
 8012ed6:	daed      	bge.n	8012eb4 <LCD_InitLUT+0x2c>
 8012ed8:	b2ef      	uxtb	r7, r5
 8012eda:	4638      	mov	r0, r7
 8012edc:	f7f9 fc0c 	bl	800c6f8 <LCD_Index2Color>
 8012ee0:	4639      	mov	r1, r7
 8012ee2:	4602      	mov	r2, r0
 8012ee4:	4620      	mov	r0, r4
 8012ee6:	f7f8 ffd5 	bl	800be94 <LCD_SetLUTEntryEx>
 8012eea:	3501      	adds	r5, #1
 8012eec:	e7f2      	b.n	8012ed4 <LCD_InitLUT+0x4c>
 8012eee:	3401      	adds	r4, #1
 8012ef0:	e7d0      	b.n	8012e94 <LCD_InitLUT+0xc>
 8012ef2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012ef6:	bf00      	nop
 8012ef8:	20000274 	.word	0x20000274
 8012efc:	2001ba34 	.word	0x2001ba34
 8012f00:	08017e5c 	.word	0x08017e5c

08012f04 <LCD_AA_SetAndMask>:
 8012f04:	4b02      	ldr	r3, [pc, #8]	; (8012f10 <LCD_AA_SetAndMask+0xc>)
 8012f06:	681a      	ldr	r2, [r3, #0]
 8012f08:	6018      	str	r0, [r3, #0]
 8012f0a:	4610      	mov	r0, r2
 8012f0c:	4770      	bx	lr
 8012f0e:	bf00      	nop
 8012f10:	20000390 	.word	0x20000390

08012f14 <GUI__strlen>:
 8012f14:	f04f 33ff 	mov.w	r3, #4294967295
 8012f18:	b118      	cbz	r0, 8012f22 <GUI__strlen+0xe>
 8012f1a:	3301      	adds	r3, #1
 8012f1c:	5cc2      	ldrb	r2, [r0, r3]
 8012f1e:	2a00      	cmp	r2, #0
 8012f20:	d1fb      	bne.n	8012f1a <GUI__strlen+0x6>
 8012f22:	4618      	mov	r0, r3
 8012f24:	4770      	bx	lr
	...

08012f28 <GUI__strcmp>:
 8012f28:	b510      	push	{r4, lr}
 8012f2a:	4b09      	ldr	r3, [pc, #36]	; (8012f50 <GUI__strcmp+0x28>)
 8012f2c:	2800      	cmp	r0, #0
 8012f2e:	bf08      	it	eq
 8012f30:	4618      	moveq	r0, r3
 8012f32:	2900      	cmp	r1, #0
 8012f34:	bf08      	it	eq
 8012f36:	4619      	moveq	r1, r3
 8012f38:	2300      	movs	r3, #0
 8012f3a:	5cc4      	ldrb	r4, [r0, r3]
 8012f3c:	5cca      	ldrb	r2, [r1, r3]
 8012f3e:	42a2      	cmp	r2, r4
 8012f40:	d104      	bne.n	8012f4c <GUI__strcmp+0x24>
 8012f42:	3301      	adds	r3, #1
 8012f44:	2a00      	cmp	r2, #0
 8012f46:	d1f8      	bne.n	8012f3a <GUI__strcmp+0x12>
 8012f48:	4610      	mov	r0, r2
 8012f4a:	bd10      	pop	{r4, pc}
 8012f4c:	2001      	movs	r0, #1
 8012f4e:	bd10      	pop	{r4, pc}
 8012f50:	08017e79 	.word	0x08017e79

08012f54 <GUI__strcmp_hp>:
 8012f54:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012f56:	460d      	mov	r5, r1
 8012f58:	b160      	cbz	r0, 8012f74 <GUI__strcmp_hp+0x20>
 8012f5a:	f7fc fa87 	bl	800f46c <GUI_ALLOC_LockH>
 8012f5e:	ac02      	add	r4, sp, #8
 8012f60:	4629      	mov	r1, r5
 8012f62:	f844 0d04 	str.w	r0, [r4, #-4]!
 8012f66:	f7ff ffdf 	bl	8012f28 <GUI__strcmp>
 8012f6a:	4605      	mov	r5, r0
 8012f6c:	4620      	mov	r0, r4
 8012f6e:	f7fc fa8b 	bl	800f488 <GUI_ALLOC_UnlockH>
 8012f72:	e000      	b.n	8012f76 <GUI__strcmp_hp+0x22>
 8012f74:	2501      	movs	r5, #1
 8012f76:	4628      	mov	r0, r5
 8012f78:	b003      	add	sp, #12
 8012f7a:	bd30      	pop	{r4, r5, pc}

08012f7c <_GetWordWrap>:
 8012f7c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8012f80:	2500      	movs	r5, #0
 8012f82:	9001      	str	r0, [sp, #4]
 8012f84:	468a      	mov	sl, r1
 8012f86:	4691      	mov	r9, r2
 8012f88:	46a8      	mov	r8, r5
 8012f8a:	462e      	mov	r6, r5
 8012f8c:	462c      	mov	r4, r5
 8012f8e:	462f      	mov	r7, r5
 8012f90:	a801      	add	r0, sp, #4
 8012f92:	f000 fc1d 	bl	80137d0 <GUI_UC__GetCharCodeInc>
 8012f96:	2d00      	cmp	r5, #0
 8012f98:	bf08      	it	eq
 8012f9a:	4605      	moveq	r5, r0
 8012f9c:	b108      	cbz	r0, 8012fa2 <_GetWordWrap+0x26>
 8012f9e:	280a      	cmp	r0, #10
 8012fa0:	d10b      	bne.n	8012fba <_GetWordWrap+0x3e>
 8012fa2:	4626      	mov	r6, r4
 8012fa4:	2e00      	cmp	r6, #0
 8012fa6:	bf18      	it	ne
 8012fa8:	4634      	movne	r4, r6
 8012faa:	f1b9 0f00 	cmp.w	r9, #0
 8012fae:	d016      	beq.n	8012fde <_GetWordWrap+0x62>
 8012fb0:	ebc8 0707 	rsb	r7, r8, r7
 8012fb4:	f8c9 7000 	str.w	r7, [r9]
 8012fb8:	e011      	b.n	8012fde <_GetWordWrap+0x62>
 8012fba:	2820      	cmp	r0, #32
 8012fbc:	d00d      	beq.n	8012fda <_GetWordWrap+0x5e>
 8012fbe:	2d20      	cmp	r5, #32
 8012fc0:	bf04      	itt	eq
 8012fc2:	4626      	moveq	r6, r4
 8012fc4:	2500      	moveq	r5, #0
 8012fc6:	f7fc f93d 	bl	800f244 <GUI_GetCharDistX>
 8012fca:	4407      	add	r7, r0
 8012fcc:	4557      	cmp	r7, sl
 8012fce:	4680      	mov	r8, r0
 8012fd0:	dd01      	ble.n	8012fd6 <_GetWordWrap+0x5a>
 8012fd2:	2c00      	cmp	r4, #0
 8012fd4:	d1e6      	bne.n	8012fa4 <_GetWordWrap+0x28>
 8012fd6:	3401      	adds	r4, #1
 8012fd8:	e7da      	b.n	8012f90 <_GetWordWrap+0x14>
 8012fda:	4626      	mov	r6, r4
 8012fdc:	e7f3      	b.n	8012fc6 <_GetWordWrap+0x4a>
 8012fde:	4620      	mov	r0, r4
 8012fe0:	b002      	add	sp, #8
 8012fe2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08012fe6 <_GetCharWrap>:
 8012fe6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012fe8:	2400      	movs	r4, #0
 8012fea:	9001      	str	r0, [sp, #4]
 8012fec:	460e      	mov	r6, r1
 8012fee:	4625      	mov	r5, r4
 8012ff0:	a801      	add	r0, sp, #4
 8012ff2:	f000 fbed 	bl	80137d0 <GUI_UC__GetCharCodeInc>
 8012ff6:	4607      	mov	r7, r0
 8012ff8:	b148      	cbz	r0, 801300e <_GetCharWrap+0x28>
 8012ffa:	f7fc f923 	bl	800f244 <GUI_GetCharDistX>
 8012ffe:	4405      	add	r5, r0
 8013000:	b10c      	cbz	r4, 8013006 <_GetCharWrap+0x20>
 8013002:	42b5      	cmp	r5, r6
 8013004:	dc03      	bgt.n	801300e <_GetCharWrap+0x28>
 8013006:	2f0a      	cmp	r7, #10
 8013008:	d001      	beq.n	801300e <_GetCharWrap+0x28>
 801300a:	3401      	adds	r4, #1
 801300c:	e7f0      	b.n	8012ff0 <_GetCharWrap+0xa>
 801300e:	4620      	mov	r0, r4
 8013010:	b003      	add	sp, #12
 8013012:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013014 <_WrapGetNumCharsDisp>:
 8013014:	2a01      	cmp	r2, #1
 8013016:	b510      	push	{r4, lr}
 8013018:	d005      	beq.n	8013026 <_WrapGetNumCharsDisp+0x12>
 801301a:	2a02      	cmp	r2, #2
 801301c:	d108      	bne.n	8013030 <_WrapGetNumCharsDisp+0x1c>
 801301e:	4b07      	ldr	r3, [pc, #28]	; (801303c <_WrapGetNumCharsDisp+0x28>)
 8013020:	681b      	ldr	r3, [r3, #0]
 8013022:	4798      	blx	r3
 8013024:	bd10      	pop	{r4, pc}
 8013026:	4a06      	ldr	r2, [pc, #24]	; (8013040 <_WrapGetNumCharsDisp+0x2c>)
 8013028:	6814      	ldr	r4, [r2, #0]
 801302a:	461a      	mov	r2, r3
 801302c:	47a0      	blx	r4
 801302e:	bd10      	pop	{r4, pc}
 8013030:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8013034:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013038:	f7fc b832 	b.w	800f0a0 <GUI__GetLineNumChars>
 801303c:	20000394 	.word	0x20000394
 8013040:	20000398 	.word	0x20000398

08013044 <GUI__WrapGetNumCharsDisp>:
 8013044:	2300      	movs	r3, #0
 8013046:	f7ff bfe5 	b.w	8013014 <_WrapGetNumCharsDisp>

0801304a <GUI__WrapGetNumCharsToNextLine>:
 801304a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801304c:	b085      	sub	sp, #20
 801304e:	ab03      	add	r3, sp, #12
 8013050:	4617      	mov	r7, r2
 8013052:	460e      	mov	r6, r1
 8013054:	9001      	str	r0, [sp, #4]
 8013056:	f7ff ffdd 	bl	8013014 <_WrapGetNumCharsDisp>
 801305a:	9d01      	ldr	r5, [sp, #4]
 801305c:	4604      	mov	r4, r0
 801305e:	4621      	mov	r1, r4
 8013060:	4628      	mov	r0, r5
 8013062:	f000 fbc9 	bl	80137f8 <GUI_UC__NumChars2NumBytes>
 8013066:	4428      	add	r0, r5
 8013068:	ad04      	add	r5, sp, #16
 801306a:	f845 0d0c 	str.w	r0, [r5, #-12]!
 801306e:	4628      	mov	r0, r5
 8013070:	f000 fbae 	bl	80137d0 <GUI_UC__GetCharCodeInc>
 8013074:	280a      	cmp	r0, #10
 8013076:	d101      	bne.n	801307c <GUI__WrapGetNumCharsToNextLine+0x32>
 8013078:	3401      	adds	r4, #1
 801307a:	e012      	b.n	80130a2 <GUI__WrapGetNumCharsToNextLine+0x58>
 801307c:	2f01      	cmp	r7, #1
 801307e:	d110      	bne.n	80130a2 <GUI__WrapGetNumCharsToNextLine+0x58>
 8013080:	2820      	cmp	r0, #32
 8013082:	d10e      	bne.n	80130a2 <GUI__WrapGetNumCharsToNextLine+0x58>
 8013084:	f7fc f8de 	bl	800f244 <GUI_GetCharDistX>
 8013088:	4607      	mov	r7, r0
 801308a:	9b03      	ldr	r3, [sp, #12]
 801308c:	429e      	cmp	r6, r3
 801308e:	db08      	blt.n	80130a2 <GUI__WrapGetNumCharsToNextLine+0x58>
 8013090:	443b      	add	r3, r7
 8013092:	4628      	mov	r0, r5
 8013094:	9303      	str	r3, [sp, #12]
 8013096:	f000 fb9b 	bl	80137d0 <GUI_UC__GetCharCodeInc>
 801309a:	2820      	cmp	r0, #32
 801309c:	f104 0401 	add.w	r4, r4, #1
 80130a0:	d0f3      	beq.n	801308a <GUI__WrapGetNumCharsToNextLine+0x40>
 80130a2:	4620      	mov	r0, r4
 80130a4:	b005      	add	sp, #20
 80130a6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080130a8 <GUI__WrapGetNumBytesToNextLine>:
 80130a8:	b510      	push	{r4, lr}
 80130aa:	4604      	mov	r4, r0
 80130ac:	f7ff ffcd 	bl	801304a <GUI__WrapGetNumCharsToNextLine>
 80130b0:	4601      	mov	r1, r0
 80130b2:	4620      	mov	r0, r4
 80130b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80130b8:	f000 bb9e 	b.w	80137f8 <GUI_UC__NumChars2NumBytes>

080130bc <GUI__GetFontSizeY>:
 80130bc:	4b03      	ldr	r3, [pc, #12]	; (80130cc <GUI__GetFontSizeY+0x10>)
 80130be:	681b      	ldr	r3, [r3, #0]
 80130c0:	69db      	ldr	r3, [r3, #28]
 80130c2:	7e18      	ldrb	r0, [r3, #24]
 80130c4:	7edb      	ldrb	r3, [r3, #27]
 80130c6:	4358      	muls	r0, r3
 80130c8:	4770      	bx	lr
 80130ca:	bf00      	nop
 80130cc:	20000274 	.word	0x20000274

080130d0 <GUI__ExpandPixelIndicesEx>:
 80130d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80130d4:	1e0c      	subs	r4, r1, #0
 80130d6:	4605      	mov	r5, r0
 80130d8:	f340 80b3 	ble.w	8013242 <GUI__ExpandPixelIndicesEx+0x172>
 80130dc:	2a08      	cmp	r2, #8
 80130de:	685f      	ldr	r7, [r3, #4]
 80130e0:	dd04      	ble.n	80130ec <GUI__ExpandPixelIndicesEx+0x1c>
 80130e2:	2a10      	cmp	r2, #16
 80130e4:	f340 8098 	ble.w	8013218 <GUI__ExpandPixelIndicesEx+0x148>
 80130e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80130ec:	3a01      	subs	r2, #1
 80130ee:	2a07      	cmp	r2, #7
 80130f0:	f200 80a7 	bhi.w	8013242 <GUI__ExpandPixelIndicesEx+0x172>
 80130f4:	e8df f002 	tbb	[pc, r2]
 80130f8:	58a52d04 	.word	0x58a52d04
 80130fc:	83a5a5a5 	.word	0x83a5a5a5
 8013100:	1e66      	subs	r6, r4, #1
 8013102:	10f2      	asrs	r2, r6, #3
 8013104:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 8013108:	3b01      	subs	r3, #1
 801310a:	eb05 0802 	add.w	r8, r5, r2
 801310e:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 8013112:	f006 0607 	and.w	r6, r6, #7
 8013116:	f815 a002 	ldrb.w	sl, [r5, r2]
 801311a:	2580      	movs	r5, #128	; 0x80
 801311c:	4135      	asrs	r5, r6
 801311e:	f108 38ff 	add.w	r8, r8, #4294967295
 8013122:	b2ed      	uxtb	r5, r5
 8013124:	f1c6 0307 	rsb	r3, r6, #7
 8013128:	ea0a 0005 	and.w	r0, sl, r5
 801312c:	4118      	asrs	r0, r3
 801312e:	47b8      	blx	r7
 8013130:	f849 0904 	str.w	r0, [r9], #-4
 8013134:	b936      	cbnz	r6, 8013144 <GUI__ExpandPixelIndicesEx+0x74>
 8013136:	f898 a000 	ldrb.w	sl, [r8]
 801313a:	2501      	movs	r5, #1
 801313c:	f108 38ff 	add.w	r8, r8, #4294967295
 8013140:	2607      	movs	r6, #7
 8013142:	e002      	b.n	801314a <GUI__ExpandPixelIndicesEx+0x7a>
 8013144:	006d      	lsls	r5, r5, #1
 8013146:	3e01      	subs	r6, #1
 8013148:	b2ed      	uxtb	r5, r5
 801314a:	3c01      	subs	r4, #1
 801314c:	d1ea      	bne.n	8013124 <GUI__ExpandPixelIndicesEx+0x54>
 801314e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013152:	1e66      	subs	r6, r4, #1
 8013154:	10b2      	asrs	r2, r6, #2
 8013156:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 801315a:	3b01      	subs	r3, #1
 801315c:	f006 0603 	and.w	r6, r6, #3
 8013160:	eb05 0802 	add.w	r8, r5, r2
 8013164:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 8013168:	f815 a002 	ldrb.w	sl, [r5, r2]
 801316c:	0073      	lsls	r3, r6, #1
 801316e:	25c0      	movs	r5, #192	; 0xc0
 8013170:	411d      	asrs	r5, r3
 8013172:	f108 38ff 	add.w	r8, r8, #4294967295
 8013176:	b2ed      	uxtb	r5, r5
 8013178:	0073      	lsls	r3, r6, #1
 801317a:	f1c3 0306 	rsb	r3, r3, #6
 801317e:	ea0a 0005 	and.w	r0, sl, r5
 8013182:	4118      	asrs	r0, r3
 8013184:	47b8      	blx	r7
 8013186:	f849 0904 	str.w	r0, [r9], #-4
 801318a:	b936      	cbnz	r6, 801319a <GUI__ExpandPixelIndicesEx+0xca>
 801318c:	2503      	movs	r5, #3
 801318e:	f898 a000 	ldrb.w	sl, [r8]
 8013192:	462e      	mov	r6, r5
 8013194:	f108 38ff 	add.w	r8, r8, #4294967295
 8013198:	e002      	b.n	80131a0 <GUI__ExpandPixelIndicesEx+0xd0>
 801319a:	00ad      	lsls	r5, r5, #2
 801319c:	3e01      	subs	r6, #1
 801319e:	b2ed      	uxtb	r5, r5
 80131a0:	3c01      	subs	r4, #1
 80131a2:	d1e9      	bne.n	8013178 <GUI__ExpandPixelIndicesEx+0xa8>
 80131a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80131a8:	1e66      	subs	r6, r4, #1
 80131aa:	1072      	asrs	r2, r6, #1
 80131ac:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 80131b0:	3b01      	subs	r3, #1
 80131b2:	f006 0601 	and.w	r6, r6, #1
 80131b6:	eb05 0802 	add.w	r8, r5, r2
 80131ba:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 80131be:	f815 a002 	ldrb.w	sl, [r5, r2]
 80131c2:	00b3      	lsls	r3, r6, #2
 80131c4:	25f0      	movs	r5, #240	; 0xf0
 80131c6:	411d      	asrs	r5, r3
 80131c8:	f108 38ff 	add.w	r8, r8, #4294967295
 80131cc:	b2ed      	uxtb	r5, r5
 80131ce:	00b3      	lsls	r3, r6, #2
 80131d0:	f1c3 0304 	rsb	r3, r3, #4
 80131d4:	ea0a 0005 	and.w	r0, sl, r5
 80131d8:	4118      	asrs	r0, r3
 80131da:	47b8      	blx	r7
 80131dc:	f849 0904 	str.w	r0, [r9], #-4
 80131e0:	b936      	cbnz	r6, 80131f0 <GUI__ExpandPixelIndicesEx+0x120>
 80131e2:	f898 a000 	ldrb.w	sl, [r8]
 80131e6:	250f      	movs	r5, #15
 80131e8:	f108 38ff 	add.w	r8, r8, #4294967295
 80131ec:	2601      	movs	r6, #1
 80131ee:	e002      	b.n	80131f6 <GUI__ExpandPixelIndicesEx+0x126>
 80131f0:	012d      	lsls	r5, r5, #4
 80131f2:	b2ed      	uxtb	r5, r5
 80131f4:	2600      	movs	r6, #0
 80131f6:	3c01      	subs	r4, #1
 80131f8:	d1e9      	bne.n	80131ce <GUI__ExpandPixelIndicesEx+0xfe>
 80131fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80131fe:	192e      	adds	r6, r5, r4
 8013200:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 8013204:	1b34      	subs	r4, r6, r4
 8013206:	f816 0d01 	ldrb.w	r0, [r6, #-1]!
 801320a:	47b8      	blx	r7
 801320c:	42a6      	cmp	r6, r4
 801320e:	f845 0d04 	str.w	r0, [r5, #-4]!
 8013212:	d1f8      	bne.n	8013206 <GUI__ExpandPixelIndicesEx+0x136>
 8013214:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013218:	695e      	ldr	r6, [r3, #20]
 801321a:	b12e      	cbz	r6, 8013228 <GUI__ExpandPixelIndicesEx+0x158>
 801321c:	4629      	mov	r1, r5
 801321e:	4622      	mov	r2, r4
 8013220:	2302      	movs	r3, #2
 8013222:	47b0      	blx	r6
 8013224:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013228:	0064      	lsls	r4, r4, #1
 801322a:	4425      	add	r5, r4
 801322c:	192e      	adds	r6, r5, r4
 801322e:	1b2c      	subs	r4, r5, r4
 8013230:	f835 0d02 	ldrh.w	r0, [r5, #-2]!
 8013234:	47b8      	blx	r7
 8013236:	42a5      	cmp	r5, r4
 8013238:	f846 0d04 	str.w	r0, [r6, #-4]!
 801323c:	d1f8      	bne.n	8013230 <GUI__ExpandPixelIndicesEx+0x160>
 801323e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013242:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08013246 <_GetTwinArcPara>:
 8013246:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801324a:	fb01 f901 	mul.w	r9, r1, r1
 801324e:	1e47      	subs	r7, r0, #1
 8013250:	4604      	mov	r4, r0
 8013252:	4340      	muls	r0, r0
 8013254:	ebc9 0000 	rsb	r0, r9, r0
 8013258:	460d      	mov	r5, r1
 801325a:	4692      	mov	sl, r2
 801325c:	4698      	mov	r8, r3
 801325e:	9e08      	ldr	r6, [sp, #32]
 8013260:	f001 fb32 	bl	80148c8 <GUI__sqrt32>
 8013264:	42bd      	cmp	r5, r7
 8013266:	f8ca 0000 	str.w	r0, [sl]
 801326a:	da10      	bge.n	801328e <_GetTwinArcPara+0x48>
 801326c:	fb07 f007 	mul.w	r0, r7, r7
 8013270:	ebc9 0000 	rsb	r0, r9, r0
 8013274:	f001 fb28 	bl	80148c8 <GUI__sqrt32>
 8013278:	3c02      	subs	r4, #2
 801327a:	42a5      	cmp	r5, r4
 801327c:	f8c8 0000 	str.w	r0, [r8]
 8013280:	da03      	bge.n	801328a <_GetTwinArcPara+0x44>
 8013282:	3801      	subs	r0, #1
 8013284:	6030      	str	r0, [r6, #0]
 8013286:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801328a:	2300      	movs	r3, #0
 801328c:	e002      	b.n	8013294 <_GetTwinArcPara+0x4e>
 801328e:	2300      	movs	r3, #0
 8013290:	f8c8 3000 	str.w	r3, [r8]
 8013294:	6033      	str	r3, [r6, #0]
 8013296:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0801329c <GUI__DrawTwinArc4>:
 801329c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80132a0:	4d76      	ldr	r5, [pc, #472]	; (801347c <GUI__DrawTwinArc4+0x1e0>)
 80132a2:	682d      	ldr	r5, [r5, #0]
 80132a4:	6cee      	ldr	r6, [r5, #76]	; 0x4c
 80132a6:	6d2f      	ldr	r7, [r5, #80]	; 0x50
 80132a8:	b08f      	sub	sp, #60	; 0x3c
 80132aa:	4430      	add	r0, r6
 80132ac:	4439      	add	r1, r7
 80132ae:	9005      	str	r0, [sp, #20]
 80132b0:	4416      	add	r6, r2
 80132b2:	441f      	add	r7, r3
 80132b4:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 80132b8:	a80c      	add	r0, sp, #48	; 0x30
 80132ba:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80132bc:	9106      	str	r1, [sp, #24]
 80132be:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80132c2:	f8ad 6034 	strh.w	r6, [sp, #52]	; 0x34
 80132c6:	f8ad 7036 	strh.w	r7, [sp, #54]	; 0x36
 80132ca:	f7f6 f9bd 	bl	8009648 <WM__InitIVRSearch>
 80132ce:	2800      	cmp	r0, #0
 80132d0:	f000 80d0 	beq.w	8013474 <GUI__DrawTwinArc4+0x1d8>
 80132d4:	2c00      	cmp	r4, #0
 80132d6:	dc02      	bgt.n	80132de <GUI__DrawTwinArc4+0x42>
 80132d8:	f7f6 f8f4 	bl	80094c4 <WM__GetNextIVR>
 80132dc:	e7f7      	b.n	80132ce <GUI__DrawTwinArc4+0x32>
 80132de:	9819      	ldr	r0, [sp, #100]	; 0x64
 80132e0:	f7fa fc6c 	bl	800dbbc <GUI_SetColor>
 80132e4:	9b06      	ldr	r3, [sp, #24]
 80132e6:	4423      	add	r3, r4
 80132e8:	9307      	str	r3, [sp, #28]
 80132ea:	9b06      	ldr	r3, [sp, #24]
 80132ec:	1e65      	subs	r5, r4, #1
 80132ee:	f103 0801 	add.w	r8, r3, #1
 80132f2:	2d00      	cmp	r5, #0
 80132f4:	d037      	beq.n	8013366 <GUI__DrawTwinArc4+0xca>
 80132f6:	ab0b      	add	r3, sp, #44	; 0x2c
 80132f8:	4629      	mov	r1, r5
 80132fa:	9300      	str	r3, [sp, #0]
 80132fc:	4620      	mov	r0, r4
 80132fe:	aa09      	add	r2, sp, #36	; 0x24
 8013300:	ab0a      	add	r3, sp, #40	; 0x28
 8013302:	f7ff ffa0 	bl	8013246 <_GetTwinArcPara>
 8013306:	9b05      	ldr	r3, [sp, #20]
 8013308:	9909      	ldr	r1, [sp, #36]	; 0x24
 801330a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801330c:	4423      	add	r3, r4
 801330e:	ebc1 0c03 	rsb	ip, r1, r3
 8013312:	ebc4 0b06 	rsb	fp, r4, r6
 8013316:	1a9b      	subs	r3, r3, r2
 8013318:	3b01      	subs	r3, #1
 801331a:	eb0b 0901 	add.w	r9, fp, r1
 801331e:	4493      	add	fp, r2
 8013320:	4660      	mov	r0, ip
 8013322:	461a      	mov	r2, r3
 8013324:	4641      	mov	r1, r8
 8013326:	f10b 0b01 	add.w	fp, fp, #1
 801332a:	9303      	str	r3, [sp, #12]
 801332c:	f8cd c010 	str.w	ip, [sp, #16]
 8013330:	f7f8 ff18 	bl	800c164 <LCD_DrawHLine>
 8013334:	4641      	mov	r1, r8
 8013336:	4658      	mov	r0, fp
 8013338:	464a      	mov	r2, r9
 801333a:	f7f8 ff13 	bl	800c164 <LCD_DrawHLine>
 801333e:	ebc4 0a07 	rsb	sl, r4, r7
 8013342:	f8dd c010 	ldr.w	ip, [sp, #16]
 8013346:	9b03      	ldr	r3, [sp, #12]
 8013348:	44aa      	add	sl, r5
 801334a:	4660      	mov	r0, ip
 801334c:	461a      	mov	r2, r3
 801334e:	4651      	mov	r1, sl
 8013350:	f7f8 ff08 	bl	800c164 <LCD_DrawHLine>
 8013354:	4658      	mov	r0, fp
 8013356:	4651      	mov	r1, sl
 8013358:	464a      	mov	r2, r9
 801335a:	f7f8 ff03 	bl	800c164 <LCD_DrawHLine>
 801335e:	3d01      	subs	r5, #1
 8013360:	f108 0801 	add.w	r8, r8, #1
 8013364:	e7c5      	b.n	80132f2 <GUI__DrawTwinArc4+0x56>
 8013366:	2c01      	cmp	r4, #1
 8013368:	d0b6      	beq.n	80132d8 <GUI__DrawTwinArc4+0x3c>
 801336a:	981a      	ldr	r0, [sp, #104]	; 0x68
 801336c:	f7fa fc26 	bl	800dbbc <GUI_SetColor>
 8013370:	9b07      	ldr	r3, [sp, #28]
 8013372:	f1c4 0802 	rsb	r8, r4, #2
 8013376:	1ea5      	subs	r5, r4, #2
 8013378:	4498      	add	r8, r3
 801337a:	2d00      	cmp	r5, #0
 801337c:	d037      	beq.n	80133ee <GUI__DrawTwinArc4+0x152>
 801337e:	ab0b      	add	r3, sp, #44	; 0x2c
 8013380:	4629      	mov	r1, r5
 8013382:	9300      	str	r3, [sp, #0]
 8013384:	4620      	mov	r0, r4
 8013386:	aa09      	add	r2, sp, #36	; 0x24
 8013388:	ab0a      	add	r3, sp, #40	; 0x28
 801338a:	f7ff ff5c 	bl	8013246 <_GetTwinArcPara>
 801338e:	9b05      	ldr	r3, [sp, #20]
 8013390:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013392:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013394:	4423      	add	r3, r4
 8013396:	ebc1 0c03 	rsb	ip, r1, r3
 801339a:	ebc4 0b06 	rsb	fp, r4, r6
 801339e:	1a9b      	subs	r3, r3, r2
 80133a0:	3b01      	subs	r3, #1
 80133a2:	eb0b 0901 	add.w	r9, fp, r1
 80133a6:	4493      	add	fp, r2
 80133a8:	4660      	mov	r0, ip
 80133aa:	461a      	mov	r2, r3
 80133ac:	4641      	mov	r1, r8
 80133ae:	f10b 0b01 	add.w	fp, fp, #1
 80133b2:	9303      	str	r3, [sp, #12]
 80133b4:	f8cd c010 	str.w	ip, [sp, #16]
 80133b8:	f7f8 fed4 	bl	800c164 <LCD_DrawHLine>
 80133bc:	4641      	mov	r1, r8
 80133be:	4658      	mov	r0, fp
 80133c0:	464a      	mov	r2, r9
 80133c2:	f7f8 fecf 	bl	800c164 <LCD_DrawHLine>
 80133c6:	ebc4 0a07 	rsb	sl, r4, r7
 80133ca:	f8dd c010 	ldr.w	ip, [sp, #16]
 80133ce:	9b03      	ldr	r3, [sp, #12]
 80133d0:	44aa      	add	sl, r5
 80133d2:	4660      	mov	r0, ip
 80133d4:	461a      	mov	r2, r3
 80133d6:	4651      	mov	r1, sl
 80133d8:	f7f8 fec4 	bl	800c164 <LCD_DrawHLine>
 80133dc:	4658      	mov	r0, fp
 80133de:	4651      	mov	r1, sl
 80133e0:	464a      	mov	r2, r9
 80133e2:	f7f8 febf 	bl	800c164 <LCD_DrawHLine>
 80133e6:	3d01      	subs	r5, #1
 80133e8:	f108 0801 	add.w	r8, r8, #1
 80133ec:	e7c5      	b.n	801337a <GUI__DrawTwinArc4+0xde>
 80133ee:	2c02      	cmp	r4, #2
 80133f0:	f43f af72 	beq.w	80132d8 <GUI__DrawTwinArc4+0x3c>
 80133f4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80133f6:	f7fa fbe1 	bl	800dbbc <GUI_SetColor>
 80133fa:	9b07      	ldr	r3, [sp, #28]
 80133fc:	f1c4 0803 	rsb	r8, r4, #3
 8013400:	1ee5      	subs	r5, r4, #3
 8013402:	4498      	add	r8, r3
 8013404:	2d00      	cmp	r5, #0
 8013406:	f43f af67 	beq.w	80132d8 <GUI__DrawTwinArc4+0x3c>
 801340a:	ab0b      	add	r3, sp, #44	; 0x2c
 801340c:	4629      	mov	r1, r5
 801340e:	9300      	str	r3, [sp, #0]
 8013410:	4620      	mov	r0, r4
 8013412:	aa09      	add	r2, sp, #36	; 0x24
 8013414:	ab0a      	add	r3, sp, #40	; 0x28
 8013416:	f7ff ff16 	bl	8013246 <_GetTwinArcPara>
 801341a:	9b05      	ldr	r3, [sp, #20]
 801341c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801341e:	4423      	add	r3, r4
 8013420:	ebc2 0c03 	rsb	ip, r2, r3
 8013424:	ebc4 0b06 	rsb	fp, r4, r6
 8013428:	3b01      	subs	r3, #1
 801342a:	eb0b 0902 	add.w	r9, fp, r2
 801342e:	4660      	mov	r0, ip
 8013430:	461a      	mov	r2, r3
 8013432:	4641      	mov	r1, r8
 8013434:	f10b 0b01 	add.w	fp, fp, #1
 8013438:	9303      	str	r3, [sp, #12]
 801343a:	f8cd c010 	str.w	ip, [sp, #16]
 801343e:	f7f8 fe91 	bl	800c164 <LCD_DrawHLine>
 8013442:	4641      	mov	r1, r8
 8013444:	4658      	mov	r0, fp
 8013446:	464a      	mov	r2, r9
 8013448:	f7f8 fe8c 	bl	800c164 <LCD_DrawHLine>
 801344c:	ebc4 0a07 	rsb	sl, r4, r7
 8013450:	f8dd c010 	ldr.w	ip, [sp, #16]
 8013454:	9b03      	ldr	r3, [sp, #12]
 8013456:	44aa      	add	sl, r5
 8013458:	4660      	mov	r0, ip
 801345a:	461a      	mov	r2, r3
 801345c:	4651      	mov	r1, sl
 801345e:	f7f8 fe81 	bl	800c164 <LCD_DrawHLine>
 8013462:	4658      	mov	r0, fp
 8013464:	4651      	mov	r1, sl
 8013466:	464a      	mov	r2, r9
 8013468:	f7f8 fe7c 	bl	800c164 <LCD_DrawHLine>
 801346c:	3d01      	subs	r5, #1
 801346e:	f108 0801 	add.w	r8, r8, #1
 8013472:	e7c7      	b.n	8013404 <GUI__DrawTwinArc4+0x168>
 8013474:	b00f      	add	sp, #60	; 0x3c
 8013476:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801347a:	bf00      	nop
 801347c:	20000274 	.word	0x20000274

08013480 <GUI__DivideRound32>:
 8013480:	b149      	cbz	r1, 8013496 <GUI__DivideRound32+0x16>
 8013482:	2800      	cmp	r0, #0
 8013484:	ea4f 0361 	mov.w	r3, r1, asr #1
 8013488:	bfb4      	ite	lt
 801348a:	ebc3 0000 	rsblt	r0, r3, r0
 801348e:	18c0      	addge	r0, r0, r3
 8013490:	fb90 f0f1 	sdiv	r0, r0, r1
 8013494:	4770      	bx	lr
 8013496:	4608      	mov	r0, r1
 8013498:	4770      	bx	lr

0801349a <GUI__CompactPixelIndices>:
 801349a:	2a08      	cmp	r2, #8
 801349c:	b510      	push	{r4, lr}
 801349e:	dd0e      	ble.n	80134be <GUI__CompactPixelIndices+0x24>
 80134a0:	2a10      	cmp	r2, #16
 80134a2:	dc0a      	bgt.n	80134ba <GUI__CompactPixelIndices+0x20>
 80134a4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80134a8:	4603      	mov	r3, r0
 80134aa:	f850 2b04 	ldr.w	r2, [r0], #4
 80134ae:	f823 2b02 	strh.w	r2, [r3], #2
 80134b2:	428b      	cmp	r3, r1
 80134b4:	d1f9      	bne.n	80134aa <GUI__CompactPixelIndices+0x10>
 80134b6:	2001      	movs	r0, #1
 80134b8:	bd10      	pop	{r4, pc}
 80134ba:	2000      	movs	r0, #0
 80134bc:	bd10      	pop	{r4, pc}
 80134be:	2a02      	cmp	r2, #2
 80134c0:	d06d      	beq.n	801359e <GUI__CompactPixelIndices+0x104>
 80134c2:	2a04      	cmp	r2, #4
 80134c4:	d054      	beq.n	8013570 <GUI__CompactPixelIndices+0xd6>
 80134c6:	2a01      	cmp	r2, #1
 80134c8:	f040 8095 	bne.w	80135f6 <GUI__CompactPixelIndices+0x15c>
 80134cc:	4604      	mov	r4, r0
 80134ce:	6803      	ldr	r3, [r0, #0]
 80134d0:	2901      	cmp	r1, #1
 80134d2:	ea4f 13c3 	mov.w	r3, r3, lsl #7
 80134d6:	b2db      	uxtb	r3, r3
 80134d8:	d047      	beq.n	801356a <GUI__CompactPixelIndices+0xd0>
 80134da:	6842      	ldr	r2, [r0, #4]
 80134dc:	2902      	cmp	r1, #2
 80134de:	f002 0201 	and.w	r2, r2, #1
 80134e2:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80134e6:	d102      	bne.n	80134ee <GUI__CompactPixelIndices+0x54>
 80134e8:	f100 0208 	add.w	r2, r0, #8
 80134ec:	e03e      	b.n	801356c <GUI__CompactPixelIndices+0xd2>
 80134ee:	6882      	ldr	r2, [r0, #8]
 80134f0:	2903      	cmp	r1, #3
 80134f2:	f002 0201 	and.w	r2, r2, #1
 80134f6:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80134fa:	d102      	bne.n	8013502 <GUI__CompactPixelIndices+0x68>
 80134fc:	f100 020c 	add.w	r2, r0, #12
 8013500:	e034      	b.n	801356c <GUI__CompactPixelIndices+0xd2>
 8013502:	68c2      	ldr	r2, [r0, #12]
 8013504:	2904      	cmp	r1, #4
 8013506:	f002 0201 	and.w	r2, r2, #1
 801350a:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 801350e:	d102      	bne.n	8013516 <GUI__CompactPixelIndices+0x7c>
 8013510:	f100 0210 	add.w	r2, r0, #16
 8013514:	e02a      	b.n	801356c <GUI__CompactPixelIndices+0xd2>
 8013516:	6902      	ldr	r2, [r0, #16]
 8013518:	2905      	cmp	r1, #5
 801351a:	f002 0201 	and.w	r2, r2, #1
 801351e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8013522:	d102      	bne.n	801352a <GUI__CompactPixelIndices+0x90>
 8013524:	f100 0214 	add.w	r2, r0, #20
 8013528:	e020      	b.n	801356c <GUI__CompactPixelIndices+0xd2>
 801352a:	6942      	ldr	r2, [r0, #20]
 801352c:	2906      	cmp	r1, #6
 801352e:	f002 0201 	and.w	r2, r2, #1
 8013532:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 8013536:	d102      	bne.n	801353e <GUI__CompactPixelIndices+0xa4>
 8013538:	f100 0218 	add.w	r2, r0, #24
 801353c:	e016      	b.n	801356c <GUI__CompactPixelIndices+0xd2>
 801353e:	6982      	ldr	r2, [r0, #24]
 8013540:	3907      	subs	r1, #7
 8013542:	f002 0201 	and.w	r2, r2, #1
 8013546:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 801354a:	d102      	bne.n	8013552 <GUI__CompactPixelIndices+0xb8>
 801354c:	f100 021c 	add.w	r2, r0, #28
 8013550:	e005      	b.n	801355e <GUI__CompactPixelIndices+0xc4>
 8013552:	f100 0220 	add.w	r2, r0, #32
 8013556:	69c0      	ldr	r0, [r0, #28]
 8013558:	f000 0001 	and.w	r0, r0, #1
 801355c:	4303      	orrs	r3, r0
 801355e:	f804 3b01 	strb.w	r3, [r4], #1
 8013562:	2900      	cmp	r1, #0
 8013564:	d0a7      	beq.n	80134b6 <GUI__CompactPixelIndices+0x1c>
 8013566:	4610      	mov	r0, r2
 8013568:	e7b1      	b.n	80134ce <GUI__CompactPixelIndices+0x34>
 801356a:	1d02      	adds	r2, r0, #4
 801356c:	2100      	movs	r1, #0
 801356e:	e7f6      	b.n	801355e <GUI__CompactPixelIndices+0xc4>
 8013570:	4602      	mov	r2, r0
 8013572:	6803      	ldr	r3, [r0, #0]
 8013574:	2901      	cmp	r1, #1
 8013576:	ea4f 1303 	mov.w	r3, r3, lsl #4
 801357a:	b2db      	uxtb	r3, r3
 801357c:	d102      	bne.n	8013584 <GUI__CompactPixelIndices+0xea>
 801357e:	1d04      	adds	r4, r0, #4
 8013580:	2100      	movs	r1, #0
 8013582:	e006      	b.n	8013592 <GUI__CompactPixelIndices+0xf8>
 8013584:	f100 0408 	add.w	r4, r0, #8
 8013588:	6840      	ldr	r0, [r0, #4]
 801358a:	f000 000f 	and.w	r0, r0, #15
 801358e:	4303      	orrs	r3, r0
 8013590:	3902      	subs	r1, #2
 8013592:	f802 3b01 	strb.w	r3, [r2], #1
 8013596:	2900      	cmp	r1, #0
 8013598:	d08d      	beq.n	80134b6 <GUI__CompactPixelIndices+0x1c>
 801359a:	4620      	mov	r0, r4
 801359c:	e7e9      	b.n	8013572 <GUI__CompactPixelIndices+0xd8>
 801359e:	4604      	mov	r4, r0
 80135a0:	6803      	ldr	r3, [r0, #0]
 80135a2:	2901      	cmp	r1, #1
 80135a4:	ea4f 1383 	mov.w	r3, r3, lsl #6
 80135a8:	b2db      	uxtb	r3, r3
 80135aa:	d021      	beq.n	80135f0 <GUI__CompactPixelIndices+0x156>
 80135ac:	6842      	ldr	r2, [r0, #4]
 80135ae:	2902      	cmp	r1, #2
 80135b0:	f002 0203 	and.w	r2, r2, #3
 80135b4:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 80135b8:	d102      	bne.n	80135c0 <GUI__CompactPixelIndices+0x126>
 80135ba:	f100 0208 	add.w	r2, r0, #8
 80135be:	e018      	b.n	80135f2 <GUI__CompactPixelIndices+0x158>
 80135c0:	6882      	ldr	r2, [r0, #8]
 80135c2:	2903      	cmp	r1, #3
 80135c4:	f002 0203 	and.w	r2, r2, #3
 80135c8:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 80135cc:	d102      	bne.n	80135d4 <GUI__CompactPixelIndices+0x13a>
 80135ce:	f100 020c 	add.w	r2, r0, #12
 80135d2:	e00e      	b.n	80135f2 <GUI__CompactPixelIndices+0x158>
 80135d4:	f100 0210 	add.w	r2, r0, #16
 80135d8:	68c0      	ldr	r0, [r0, #12]
 80135da:	f000 0003 	and.w	r0, r0, #3
 80135de:	4303      	orrs	r3, r0
 80135e0:	3904      	subs	r1, #4
 80135e2:	f804 3b01 	strb.w	r3, [r4], #1
 80135e6:	2900      	cmp	r1, #0
 80135e8:	f43f af65 	beq.w	80134b6 <GUI__CompactPixelIndices+0x1c>
 80135ec:	4610      	mov	r0, r2
 80135ee:	e7d7      	b.n	80135a0 <GUI__CompactPixelIndices+0x106>
 80135f0:	1d02      	adds	r2, r0, #4
 80135f2:	2100      	movs	r1, #0
 80135f4:	e7f5      	b.n	80135e2 <GUI__CompactPixelIndices+0x148>
 80135f6:	2300      	movs	r3, #0
 80135f8:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 80135fc:	54c2      	strb	r2, [r0, r3]
 80135fe:	3301      	adds	r3, #1
 8013600:	428b      	cmp	r3, r1
 8013602:	d1f9      	bne.n	80135f8 <GUI__CompactPixelIndices+0x15e>
 8013604:	e757      	b.n	80134b6 <GUI__CompactPixelIndices+0x1c>

08013606 <GUI__ConvertColor2Index>:
 8013606:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801360a:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801360e:	681e      	ldr	r6, [r3, #0]
 8013610:	f1b8 0f00 	cmp.w	r8, #0
 8013614:	bf08      	it	eq
 8013616:	4680      	moveq	r8, r0
 8013618:	2a08      	cmp	r2, #8
 801361a:	4604      	mov	r4, r0
 801361c:	460d      	mov	r5, r1
 801361e:	dd05      	ble.n	801362c <GUI__ConvertColor2Index+0x26>
 8013620:	2a10      	cmp	r2, #16
 8013622:	f340 80b6 	ble.w	8013792 <GUI__ConvertColor2Index+0x18c>
 8013626:	2000      	movs	r0, #0
 8013628:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801362c:	3a01      	subs	r2, #1
 801362e:	2a07      	cmp	r2, #7
 8013630:	f200 80a4 	bhi.w	801377c <GUI__ConvertColor2Index+0x176>
 8013634:	e8df f002 	tbb	[pc, r2]
 8013638:	87a26111 	.word	0x87a26111
 801363c:	92a2a2a2 	.word	0x92a2a2a2
 8013640:	69e0      	ldr	r0, [r4, #28]
 8013642:	47b0      	blx	r6
 8013644:	4338      	orrs	r0, r7
 8013646:	f104 0920 	add.w	r9, r4, #32
 801364a:	b2c7      	uxtb	r7, r0
 801364c:	3d08      	subs	r5, #8
 801364e:	f808 7b01 	strb.w	r7, [r8], #1
 8013652:	2d00      	cmp	r5, #0
 8013654:	f000 8092 	beq.w	801377c <GUI__ConvertColor2Index+0x176>
 8013658:	464c      	mov	r4, r9
 801365a:	6820      	ldr	r0, [r4, #0]
 801365c:	47b0      	blx	r6
 801365e:	2d01      	cmp	r5, #1
 8013660:	ea4f 10c0 	mov.w	r0, r0, lsl #7
 8013664:	b2c7      	uxtb	r7, r0
 8013666:	f000 808c 	beq.w	8013782 <GUI__ConvertColor2Index+0x17c>
 801366a:	6860      	ldr	r0, [r4, #4]
 801366c:	47b0      	blx	r6
 801366e:	2d02      	cmp	r5, #2
 8013670:	ea47 1080 	orr.w	r0, r7, r0, lsl #6
 8013674:	b2c7      	uxtb	r7, r0
 8013676:	d102      	bne.n	801367e <GUI__ConvertColor2Index+0x78>
 8013678:	f104 0908 	add.w	r9, r4, #8
 801367c:	e083      	b.n	8013786 <GUI__ConvertColor2Index+0x180>
 801367e:	68a0      	ldr	r0, [r4, #8]
 8013680:	47b0      	blx	r6
 8013682:	2d03      	cmp	r5, #3
 8013684:	ea47 1040 	orr.w	r0, r7, r0, lsl #5
 8013688:	b2c7      	uxtb	r7, r0
 801368a:	d102      	bne.n	8013692 <GUI__ConvertColor2Index+0x8c>
 801368c:	f104 090c 	add.w	r9, r4, #12
 8013690:	e079      	b.n	8013786 <GUI__ConvertColor2Index+0x180>
 8013692:	68e0      	ldr	r0, [r4, #12]
 8013694:	47b0      	blx	r6
 8013696:	2d04      	cmp	r5, #4
 8013698:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 801369c:	b2c7      	uxtb	r7, r0
 801369e:	d102      	bne.n	80136a6 <GUI__ConvertColor2Index+0xa0>
 80136a0:	f104 0910 	add.w	r9, r4, #16
 80136a4:	e06f      	b.n	8013786 <GUI__ConvertColor2Index+0x180>
 80136a6:	6920      	ldr	r0, [r4, #16]
 80136a8:	47b0      	blx	r6
 80136aa:	2d05      	cmp	r5, #5
 80136ac:	ea47 00c0 	orr.w	r0, r7, r0, lsl #3
 80136b0:	b2c7      	uxtb	r7, r0
 80136b2:	d102      	bne.n	80136ba <GUI__ConvertColor2Index+0xb4>
 80136b4:	f104 0914 	add.w	r9, r4, #20
 80136b8:	e065      	b.n	8013786 <GUI__ConvertColor2Index+0x180>
 80136ba:	6960      	ldr	r0, [r4, #20]
 80136bc:	47b0      	blx	r6
 80136be:	2d06      	cmp	r5, #6
 80136c0:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 80136c4:	b2c7      	uxtb	r7, r0
 80136c6:	d102      	bne.n	80136ce <GUI__ConvertColor2Index+0xc8>
 80136c8:	f104 0918 	add.w	r9, r4, #24
 80136cc:	e05b      	b.n	8013786 <GUI__ConvertColor2Index+0x180>
 80136ce:	69a0      	ldr	r0, [r4, #24]
 80136d0:	47b0      	blx	r6
 80136d2:	2d07      	cmp	r5, #7
 80136d4:	ea47 0040 	orr.w	r0, r7, r0, lsl #1
 80136d8:	b2c7      	uxtb	r7, r0
 80136da:	d1b1      	bne.n	8013640 <GUI__ConvertColor2Index+0x3a>
 80136dc:	f104 091c 	add.w	r9, r4, #28
 80136e0:	e051      	b.n	8013786 <GUI__ConvertColor2Index+0x180>
 80136e2:	68e0      	ldr	r0, [r4, #12]
 80136e4:	47b0      	blx	r6
 80136e6:	4338      	orrs	r0, r7
 80136e8:	f104 0910 	add.w	r9, r4, #16
 80136ec:	b2c7      	uxtb	r7, r0
 80136ee:	3d04      	subs	r5, #4
 80136f0:	f808 7b01 	strb.w	r7, [r8], #1
 80136f4:	2d00      	cmp	r5, #0
 80136f6:	d041      	beq.n	801377c <GUI__ConvertColor2Index+0x176>
 80136f8:	464c      	mov	r4, r9
 80136fa:	6820      	ldr	r0, [r4, #0]
 80136fc:	47b0      	blx	r6
 80136fe:	2d01      	cmp	r5, #1
 8013700:	ea4f 1080 	mov.w	r0, r0, lsl #6
 8013704:	b2c7      	uxtb	r7, r0
 8013706:	d040      	beq.n	801378a <GUI__ConvertColor2Index+0x184>
 8013708:	6860      	ldr	r0, [r4, #4]
 801370a:	47b0      	blx	r6
 801370c:	2d02      	cmp	r5, #2
 801370e:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 8013712:	b2c7      	uxtb	r7, r0
 8013714:	d102      	bne.n	801371c <GUI__ConvertColor2Index+0x116>
 8013716:	f104 0908 	add.w	r9, r4, #8
 801371a:	e038      	b.n	801378e <GUI__ConvertColor2Index+0x188>
 801371c:	68a0      	ldr	r0, [r4, #8]
 801371e:	47b0      	blx	r6
 8013720:	2d03      	cmp	r5, #3
 8013722:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 8013726:	b2c7      	uxtb	r7, r0
 8013728:	d1db      	bne.n	80136e2 <GUI__ConvertColor2Index+0xdc>
 801372a:	f104 090c 	add.w	r9, r4, #12
 801372e:	e02e      	b.n	801378e <GUI__ConvertColor2Index+0x188>
 8013730:	6860      	ldr	r0, [r4, #4]
 8013732:	47b0      	blx	r6
 8013734:	4338      	orrs	r0, r7
 8013736:	f104 0908 	add.w	r9, r4, #8
 801373a:	b2c7      	uxtb	r7, r0
 801373c:	3d02      	subs	r5, #2
 801373e:	f808 7b01 	strb.w	r7, [r8], #1
 8013742:	b1dd      	cbz	r5, 801377c <GUI__ConvertColor2Index+0x176>
 8013744:	464c      	mov	r4, r9
 8013746:	6820      	ldr	r0, [r4, #0]
 8013748:	47b0      	blx	r6
 801374a:	2d01      	cmp	r5, #1
 801374c:	ea4f 1000 	mov.w	r0, r0, lsl #4
 8013750:	b2c7      	uxtb	r7, r0
 8013752:	d1ed      	bne.n	8013730 <GUI__ConvertColor2Index+0x12a>
 8013754:	f104 0904 	add.w	r9, r4, #4
 8013758:	2500      	movs	r5, #0
 801375a:	e7f0      	b.n	801373e <GUI__ConvertColor2Index+0x138>
 801375c:	691f      	ldr	r7, [r3, #16]
 801375e:	b12f      	cbz	r7, 801376c <GUI__ConvertColor2Index+0x166>
 8013760:	4620      	mov	r0, r4
 8013762:	4641      	mov	r1, r8
 8013764:	462a      	mov	r2, r5
 8013766:	2301      	movs	r3, #1
 8013768:	47b8      	blx	r7
 801376a:	e007      	b.n	801377c <GUI__ConvertColor2Index+0x176>
 801376c:	f854 0027 	ldr.w	r0, [r4, r7, lsl #2]
 8013770:	47b0      	blx	r6
 8013772:	f808 0007 	strb.w	r0, [r8, r7]
 8013776:	3701      	adds	r7, #1
 8013778:	42bd      	cmp	r5, r7
 801377a:	d1f7      	bne.n	801376c <GUI__ConvertColor2Index+0x166>
 801377c:	2001      	movs	r0, #1
 801377e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013782:	f104 0904 	add.w	r9, r4, #4
 8013786:	2500      	movs	r5, #0
 8013788:	e761      	b.n	801364e <GUI__ConvertColor2Index+0x48>
 801378a:	f104 0904 	add.w	r9, r4, #4
 801378e:	2500      	movs	r5, #0
 8013790:	e7ae      	b.n	80136f0 <GUI__ConvertColor2Index+0xea>
 8013792:	691f      	ldr	r7, [r3, #16]
 8013794:	b11f      	cbz	r7, 801379e <GUI__ConvertColor2Index+0x198>
 8013796:	4641      	mov	r1, r8
 8013798:	462a      	mov	r2, r5
 801379a:	2302      	movs	r3, #2
 801379c:	e7e4      	b.n	8013768 <GUI__ConvertColor2Index+0x162>
 801379e:	f854 0b04 	ldr.w	r0, [r4], #4
 80137a2:	47b0      	blx	r6
 80137a4:	3d01      	subs	r5, #1
 80137a6:	f828 0b02 	strh.w	r0, [r8], #2
 80137aa:	d1f8      	bne.n	801379e <GUI__ConvertColor2Index+0x198>
 80137ac:	e7e6      	b.n	801377c <GUI__ConvertColor2Index+0x176>

080137ae <GUI__CompactPixelIndicesEx>:
 80137ae:	b513      	push	{r0, r1, r4, lr}
 80137b0:	2400      	movs	r4, #0
 80137b2:	9400      	str	r4, [sp, #0]
 80137b4:	f7ff ff27 	bl	8013606 <GUI__ConvertColor2Index>
 80137b8:	b002      	add	sp, #8
 80137ba:	bd10      	pop	{r4, pc}

080137bc <_GetCharCode>:
 80137bc:	7800      	ldrb	r0, [r0, #0]
 80137be:	4770      	bx	lr

080137c0 <_GetCharSize>:
 80137c0:	2001      	movs	r0, #1
 80137c2:	4770      	bx	lr

080137c4 <_CalcSizeOfChar>:
 80137c4:	2001      	movs	r0, #1
 80137c6:	4770      	bx	lr

080137c8 <_Encode>:
 80137c8:	7001      	strb	r1, [r0, #0]
 80137ca:	2001      	movs	r0, #1
 80137cc:	4770      	bx	lr
	...

080137d0 <GUI_UC__GetCharCodeInc>:
 80137d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80137d2:	4e08      	ldr	r6, [pc, #32]	; (80137f4 <GUI_UC__GetCharCodeInc+0x24>)
 80137d4:	6804      	ldr	r4, [r0, #0]
 80137d6:	6833      	ldr	r3, [r6, #0]
 80137d8:	4605      	mov	r5, r0
 80137da:	681b      	ldr	r3, [r3, #0]
 80137dc:	4620      	mov	r0, r4
 80137de:	4798      	blx	r3
 80137e0:	6833      	ldr	r3, [r6, #0]
 80137e2:	4607      	mov	r7, r0
 80137e4:	685b      	ldr	r3, [r3, #4]
 80137e6:	4620      	mov	r0, r4
 80137e8:	4798      	blx	r3
 80137ea:	4420      	add	r0, r4
 80137ec:	6028      	str	r0, [r5, #0]
 80137ee:	4638      	mov	r0, r7
 80137f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80137f2:	bf00      	nop
 80137f4:	2001ba2c 	.word	0x2001ba2c

080137f8 <GUI_UC__NumChars2NumBytes>:
 80137f8:	b570      	push	{r4, r5, r6, lr}
 80137fa:	4604      	mov	r4, r0
 80137fc:	460e      	mov	r6, r1
 80137fe:	2500      	movs	r5, #0
 8013800:	b146      	cbz	r6, 8013814 <GUI_UC__NumChars2NumBytes+0x1c>
 8013802:	4b05      	ldr	r3, [pc, #20]	; (8013818 <GUI_UC__NumChars2NumBytes+0x20>)
 8013804:	681b      	ldr	r3, [r3, #0]
 8013806:	4620      	mov	r0, r4
 8013808:	685b      	ldr	r3, [r3, #4]
 801380a:	4798      	blx	r3
 801380c:	3e01      	subs	r6, #1
 801380e:	4404      	add	r4, r0
 8013810:	4405      	add	r5, r0
 8013812:	e7f5      	b.n	8013800 <GUI_UC__NumChars2NumBytes+0x8>
 8013814:	4628      	mov	r0, r5
 8013816:	bd70      	pop	{r4, r5, r6, pc}
 8013818:	2001ba2c 	.word	0x2001ba2c

0801381c <GUI_TOUCH_GetLayer>:
 801381c:	4b01      	ldr	r3, [pc, #4]	; (8013824 <GUI_TOUCH_GetLayer+0x8>)
 801381e:	7a58      	ldrb	r0, [r3, #9]
 8013820:	4770      	bx	lr
 8013822:	bf00      	nop
 8013824:	20019f64 	.word	0x20019f64

08013828 <GUI_SetOrg>:
 8013828:	460a      	mov	r2, r1
 801382a:	4908      	ldr	r1, [pc, #32]	; (801384c <GUI_SetOrg+0x24>)
 801382c:	b510      	push	{r4, lr}
 801382e:	8008      	strh	r0, [r1, #0]
 8013830:	4907      	ldr	r1, [pc, #28]	; (8013850 <GUI_SetOrg+0x28>)
 8013832:	800a      	strh	r2, [r1, #0]
 8013834:	4907      	ldr	r1, [pc, #28]	; (8013854 <GUI_SetOrg+0x2c>)
 8013836:	6809      	ldr	r1, [r1, #0]
 8013838:	4603      	mov	r3, r0
 801383a:	7c48      	ldrb	r0, [r1, #17]
 801383c:	4906      	ldr	r1, [pc, #24]	; (8013858 <GUI_SetOrg+0x30>)
 801383e:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 8013842:	68c1      	ldr	r1, [r0, #12]
 8013844:	6a0c      	ldr	r4, [r1, #32]
 8013846:	4619      	mov	r1, r3
 8013848:	47a0      	blx	r4
 801384a:	bd10      	pop	{r4, pc}
 801384c:	2001ba1c 	.word	0x2001ba1c
 8013850:	2001ba10 	.word	0x2001ba10
 8013854:	20000274 	.word	0x20000274
 8013858:	2001ba34 	.word	0x2001ba34

0801385c <GUI_ALLOC_Realloc>:
 801385c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801385e:	4604      	mov	r4, r0
 8013860:	4608      	mov	r0, r1
 8013862:	460e      	mov	r6, r1
 8013864:	f7fc f856 	bl	800f914 <GUI_ALLOC_AllocNoInit>
 8013868:	4605      	mov	r5, r0
 801386a:	b1f8      	cbz	r0, 80138ac <GUI_ALLOC_Realloc+0x50>
 801386c:	b1f4      	cbz	r4, 80138ac <GUI_ALLOC_Realloc+0x50>
 801386e:	4620      	mov	r0, r4
 8013870:	f7fb fe2a 	bl	800f4c8 <GUI_ALLOC_GetSize>
 8013874:	42b0      	cmp	r0, r6
 8013876:	bfb4      	ite	lt
 8013878:	4607      	movlt	r7, r0
 801387a:	4637      	movge	r7, r6
 801387c:	4628      	mov	r0, r5
 801387e:	f7fb fdf5 	bl	800f46c <GUI_ALLOC_LockH>
 8013882:	9000      	str	r0, [sp, #0]
 8013884:	4620      	mov	r0, r4
 8013886:	f7fb fdf1 	bl	800f46c <GUI_ALLOC_LockH>
 801388a:	ae02      	add	r6, sp, #8
 801388c:	4601      	mov	r1, r0
 801388e:	463a      	mov	r2, r7
 8013890:	9001      	str	r0, [sp, #4]
 8013892:	f856 0d08 	ldr.w	r0, [r6, #-8]!
 8013896:	f001 fcf2 	bl	801527e <memcpy>
 801389a:	4668      	mov	r0, sp
 801389c:	f7fb fdf4 	bl	800f488 <GUI_ALLOC_UnlockH>
 80138a0:	a801      	add	r0, sp, #4
 80138a2:	f7fb fdf1 	bl	800f488 <GUI_ALLOC_UnlockH>
 80138a6:	4620      	mov	r0, r4
 80138a8:	f7fb fe1a 	bl	800f4e0 <GUI_ALLOC_Free>
 80138ac:	4628      	mov	r0, r5
 80138ae:	b003      	add	sp, #12
 80138b0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080138b2 <GUI_GetBkColor>:
 80138b2:	b508      	push	{r3, lr}
 80138b4:	f000 fff8 	bl	80148a8 <LCD_GetBkColorIndex>
 80138b8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80138bc:	f7f8 bf1c 	b.w	800c6f8 <LCD_Index2Color>

080138c0 <GUI_GetColor>:
 80138c0:	b508      	push	{r3, lr}
 80138c2:	f000 fff9 	bl	80148b8 <LCD_GetColorIndex>
 80138c6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80138ca:	f7f8 bf15 	b.w	800c6f8 <LCD_Index2Color>

080138ce <GUI_GetClientRect>:
 80138ce:	b108      	cbz	r0, 80138d4 <GUI_GetClientRect+0x6>
 80138d0:	f7f4 bf86 	b.w	80087e0 <WM_GetClientRect>
 80138d4:	4770      	bx	lr
	...

080138d8 <_Add>:
 80138d8:	4a0d      	ldr	r2, [pc, #52]	; (8013910 <_Add+0x38>)
 80138da:	6813      	ldr	r3, [r2, #0]
 80138dc:	2b0b      	cmp	r3, #11
 80138de:	b5f0      	push	{r4, r5, r6, r7, lr}
 80138e0:	4615      	mov	r5, r2
 80138e2:	dc14      	bgt.n	801390e <_Add+0x36>
 80138e4:	4c0b      	ldr	r4, [pc, #44]	; (8013914 <_Add+0x3c>)
 80138e6:	461a      	mov	r2, r3
 80138e8:	eb04 0143 	add.w	r1, r4, r3, lsl #1
 80138ec:	4626      	mov	r6, r4
 80138ee:	b152      	cbz	r2, 8013906 <_Add+0x2e>
 80138f0:	f831 4d02 	ldrh.w	r4, [r1, #-2]!
 80138f4:	fa0f fc84 	sxth.w	ip, r4
 80138f8:	4584      	cmp	ip, r0
 80138fa:	f102 37ff 	add.w	r7, r2, #4294967295
 80138fe:	db02      	blt.n	8013906 <_Add+0x2e>
 8013900:	804c      	strh	r4, [r1, #2]
 8013902:	463a      	mov	r2, r7
 8013904:	e7f3      	b.n	80138ee <_Add+0x16>
 8013906:	3301      	adds	r3, #1
 8013908:	f826 0012 	strh.w	r0, [r6, r2, lsl #1]
 801390c:	602b      	str	r3, [r5, #0]
 801390e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013910:	20019f70 	.word	0x20019f70
 8013914:	20019f74 	.word	0x20019f74

08013918 <GL_FillPolygon>:
 8013918:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801391c:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 8013ad8 <GL_FillPolygon+0x1c0>
 8013920:	9101      	str	r1, [sp, #4]
 8013922:	4692      	mov	sl, r2
 8013924:	4606      	mov	r6, r0
 8013926:	f643 74ff 	movw	r4, #16383	; 0x3fff
 801392a:	2200      	movs	r2, #0
 801392c:	9901      	ldr	r1, [sp, #4]
 801392e:	428a      	cmp	r2, r1
 8013930:	da0b      	bge.n	801394a <GL_FillPolygon+0x32>
 8013932:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8013936:	3201      	adds	r2, #1
 8013938:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801393c:	428c      	cmp	r4, r1
 801393e:	bfa8      	it	ge
 8013940:	460c      	movge	r4, r1
 8013942:	4589      	cmp	r9, r1
 8013944:	bfb8      	it	lt
 8013946:	4689      	movlt	r9, r1
 8013948:	e7f0      	b.n	801392c <GL_FillPolygon+0x14>
 801394a:	4960      	ldr	r1, [pc, #384]	; (8013acc <GL_FillPolygon+0x1b4>)
 801394c:	680a      	ldr	r2, [r1, #0]
 801394e:	6952      	ldr	r2, [r2, #20]
 8013950:	468b      	mov	fp, r1
 8013952:	b15a      	cbz	r2, 801396c <GL_FillPolygon+0x54>
 8013954:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
 8013958:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 801395c:	1ac9      	subs	r1, r1, r3
 801395e:	1ad2      	subs	r2, r2, r3
 8013960:	4589      	cmp	r9, r1
 8013962:	bfa8      	it	ge
 8013964:	4689      	movge	r9, r1
 8013966:	4294      	cmp	r4, r2
 8013968:	bfb8      	it	lt
 801396a:	4614      	movlt	r4, r2
 801396c:	eb04 0803 	add.w	r8, r4, r3
 8013970:	454c      	cmp	r4, r9
 8013972:	f300 80a7 	bgt.w	8013ac4 <GL_FillPolygon+0x1ac>
 8013976:	4b56      	ldr	r3, [pc, #344]	; (8013ad0 <GL_FillPolygon+0x1b8>)
 8013978:	2700      	movs	r7, #0
 801397a:	601f      	str	r7, [r3, #0]
 801397c:	4635      	mov	r5, r6
 801397e:	9901      	ldr	r1, [sp, #4]
 8013980:	428f      	cmp	r7, r1
 8013982:	da55      	bge.n	8013a30 <GL_FillPolygon+0x118>
 8013984:	9b01      	ldr	r3, [sp, #4]
 8013986:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801398a:	1e59      	subs	r1, r3, #1
 801398c:	428f      	cmp	r7, r1
 801398e:	bfb4      	ite	lt
 8013990:	f107 0c01 	addlt.w	ip, r7, #1
 8013994:	f04f 0c00 	movge.w	ip, #0
 8013998:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 801399c:	eb06 030c 	add.w	r3, r6, ip
 80139a0:	42a2      	cmp	r2, r4
 80139a2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80139a6:	d136      	bne.n	8013a16 <GL_FillPolygon+0xfe>
 80139a8:	42a3      	cmp	r3, r4
 80139aa:	d002      	beq.n	80139b2 <GL_FillPolygon+0x9a>
 80139ac:	463a      	mov	r2, r7
 80139ae:	2000      	movs	r0, #0
 80139b0:	e01b      	b.n	80139ea <GL_FillPolygon+0xd2>
 80139b2:	f9b5 e000 	ldrsh.w	lr, [r5]
 80139b6:	f936 200c 	ldrsh.w	r2, [r6, ip]
 80139ba:	f8db 3000 	ldr.w	r3, [fp]
 80139be:	44d6      	add	lr, sl
 80139c0:	4452      	add	r2, sl
 80139c2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80139c4:	4596      	cmp	lr, r2
 80139c6:	681b      	ldr	r3, [r3, #0]
 80139c8:	da02      	bge.n	80139d0 <GL_FillPolygon+0xb8>
 80139ca:	4670      	mov	r0, lr
 80139cc:	4641      	mov	r1, r8
 80139ce:	e020      	b.n	8013a12 <GL_FillPolygon+0xfa>
 80139d0:	4610      	mov	r0, r2
 80139d2:	4641      	mov	r1, r8
 80139d4:	4672      	mov	r2, lr
 80139d6:	e01c      	b.n	8013a12 <GL_FillPolygon+0xfa>
 80139d8:	b152      	cbz	r2, 80139f0 <GL_FillPolygon+0xd8>
 80139da:	3a01      	subs	r2, #1
 80139dc:	eb06 0c82 	add.w	ip, r6, r2, lsl #2
 80139e0:	f9bc c002 	ldrsh.w	ip, [ip, #2]
 80139e4:	45a4      	cmp	ip, r4
 80139e6:	d105      	bne.n	80139f4 <GL_FillPolygon+0xdc>
 80139e8:	3001      	adds	r0, #1
 80139ea:	4288      	cmp	r0, r1
 80139ec:	dbf4      	blt.n	80139d8 <GL_FillPolygon+0xc0>
 80139ee:	e01c      	b.n	8013a2a <GL_FillPolygon+0x112>
 80139f0:	460a      	mov	r2, r1
 80139f2:	e7f3      	b.n	80139dc <GL_FillPolygon+0xc4>
 80139f4:	ebc4 0c0c 	rsb	ip, r4, ip
 80139f8:	1b1b      	subs	r3, r3, r4
 80139fa:	ea9c 0f03 	teq	ip, r3
 80139fe:	f9b5 0000 	ldrsh.w	r0, [r5]
 8013a02:	d44d      	bmi.n	8013aa0 <GL_FillPolygon+0x188>
 8013a04:	f8db 3000 	ldr.w	r3, [fp]
 8013a08:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8013a0a:	4450      	add	r0, sl
 8013a0c:	681b      	ldr	r3, [r3, #0]
 8013a0e:	4641      	mov	r1, r8
 8013a10:	4602      	mov	r2, r0
 8013a12:	4798      	blx	r3
 8013a14:	e009      	b.n	8013a2a <GL_FillPolygon+0x112>
 8013a16:	42a3      	cmp	r3, r4
 8013a18:	d007      	beq.n	8013a2a <GL_FillPolygon+0x112>
 8013a1a:	db44      	blt.n	8013aa6 <GL_FillPolygon+0x18e>
 8013a1c:	42a2      	cmp	r2, r4
 8013a1e:	dd27      	ble.n	8013a70 <GL_FillPolygon+0x158>
 8013a20:	42a3      	cmp	r3, r4
 8013a22:	dd42      	ble.n	8013aaa <GL_FillPolygon+0x192>
 8013a24:	e001      	b.n	8013a2a <GL_FillPolygon+0x112>
 8013a26:	42a3      	cmp	r3, r4
 8013a28:	dd49      	ble.n	8013abe <GL_FillPolygon+0x1a6>
 8013a2a:	3701      	adds	r7, #1
 8013a2c:	3504      	adds	r5, #4
 8013a2e:	e7a6      	b.n	801397e <GL_FillPolygon+0x66>
 8013a30:	2500      	movs	r5, #0
 8013a32:	4628      	mov	r0, r5
 8013a34:	462f      	mov	r7, r5
 8013a36:	4b26      	ldr	r3, [pc, #152]	; (8013ad0 <GL_FillPolygon+0x1b8>)
 8013a38:	681b      	ldr	r3, [r3, #0]
 8013a3a:	429f      	cmp	r7, r3
 8013a3c:	da14      	bge.n	8013a68 <GL_FillPolygon+0x150>
 8013a3e:	4b25      	ldr	r3, [pc, #148]	; (8013ad4 <GL_FillPolygon+0x1bc>)
 8013a40:	f933 3017 	ldrsh.w	r3, [r3, r7, lsl #1]
 8013a44:	b15d      	cbz	r5, 8013a5e <GL_FillPolygon+0x146>
 8013a46:	f8db 2000 	ldr.w	r2, [fp]
 8013a4a:	6e52      	ldr	r2, [r2, #100]	; 0x64
 8013a4c:	4450      	add	r0, sl
 8013a4e:	f8d2 c000 	ldr.w	ip, [r2]
 8013a52:	9300      	str	r3, [sp, #0]
 8013a54:	eb0a 0203 	add.w	r2, sl, r3
 8013a58:	4641      	mov	r1, r8
 8013a5a:	47e0      	blx	ip
 8013a5c:	9b00      	ldr	r3, [sp, #0]
 8013a5e:	f085 0501 	eor.w	r5, r5, #1
 8013a62:	3701      	adds	r7, #1
 8013a64:	4618      	mov	r0, r3
 8013a66:	e7e6      	b.n	8013a36 <GL_FillPolygon+0x11e>
 8013a68:	3401      	adds	r4, #1
 8013a6a:	f108 0801 	add.w	r8, r8, #1
 8013a6e:	e77f      	b.n	8013970 <GL_FillPolygon+0x58>
 8013a70:	429a      	cmp	r2, r3
 8013a72:	dcd8      	bgt.n	8013a26 <GL_FillPolygon+0x10e>
 8013a74:	f9b5 1000 	ldrsh.w	r1, [r5]
 8013a78:	f936 000c 	ldrsh.w	r0, [r6, ip]
 8013a7c:	ebc2 0e04 	rsb	lr, r2, r4
 8013a80:	1a40      	subs	r0, r0, r1
 8013a82:	fb0e f000 	mul.w	r0, lr, r0
 8013a86:	2800      	cmp	r0, #0
 8013a88:	ebc2 0303 	rsb	r3, r2, r3
 8013a8c:	bfdb      	ittet	le
 8013a8e:	105a      	asrle	r2, r3, #1
 8013a90:	f1c2 0201 	rsble	r2, r2, #1
 8013a94:	eb00 0063 	addgt.w	r0, r0, r3, asr #1
 8013a98:	1880      	addle	r0, r0, r2
 8013a9a:	fb90 f0f3 	sdiv	r0, r0, r3
 8013a9e:	4408      	add	r0, r1
 8013aa0:	f7ff ff1a 	bl	80138d8 <_Add>
 8013aa4:	e7c1      	b.n	8013a2a <GL_FillPolygon+0x112>
 8013aa6:	42a2      	cmp	r2, r4
 8013aa8:	dbbf      	blt.n	8013a2a <GL_FillPolygon+0x112>
 8013aaa:	429a      	cmp	r2, r3
 8013aac:	ddbd      	ble.n	8013a2a <GL_FillPolygon+0x112>
 8013aae:	4696      	mov	lr, r2
 8013ab0:	f936 100c 	ldrsh.w	r1, [r6, ip]
 8013ab4:	f9b5 0000 	ldrsh.w	r0, [r5]
 8013ab8:	461a      	mov	r2, r3
 8013aba:	4673      	mov	r3, lr
 8013abc:	e7de      	b.n	8013a7c <GL_FillPolygon+0x164>
 8013abe:	42a2      	cmp	r2, r4
 8013ac0:	daf5      	bge.n	8013aae <GL_FillPolygon+0x196>
 8013ac2:	e7b2      	b.n	8013a2a <GL_FillPolygon+0x112>
 8013ac4:	b003      	add	sp, #12
 8013ac6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013aca:	bf00      	nop
 8013acc:	20000274 	.word	0x20000274
 8013ad0:	20019f70 	.word	0x20019f70
 8013ad4:	20019f74 	.word	0x20019f74
 8013ad8:	ffffc001 	.word	0xffffc001

08013adc <GL_DrawPoint>:
 8013adc:	b508      	push	{r3, lr}
 8013ade:	4b08      	ldr	r3, [pc, #32]	; (8013b00 <GL_DrawPoint+0x24>)
 8013ae0:	681b      	ldr	r3, [r3, #0]
 8013ae2:	7e1a      	ldrb	r2, [r3, #24]
 8013ae4:	2a01      	cmp	r2, #1
 8013ae6:	d103      	bne.n	8013af0 <GL_DrawPoint+0x14>
 8013ae8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8013aea:	685b      	ldr	r3, [r3, #4]
 8013aec:	4798      	blx	r3
 8013aee:	bd08      	pop	{r3, pc}
 8013af0:	2302      	movs	r3, #2
 8013af2:	3a01      	subs	r2, #1
 8013af4:	fb92 f2f3 	sdiv	r2, r2, r3
 8013af8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8013afc:	f000 ba56 	b.w	8013fac <GL_FillCircle>
 8013b00:	20000274 	.word	0x20000274

08013b04 <_DrawGradient>:
 8013b04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b08:	b091      	sub	sp, #68	; 0x44
 8013b0a:	4605      	mov	r5, r0
 8013b0c:	4689      	mov	r9, r1
 8013b0e:	981c      	ldr	r0, [sp, #112]	; 0x70
 8013b10:	991d      	ldr	r1, [sp, #116]	; 0x74
 8013b12:	f8dd 806c 	ldr.w	r8, [sp, #108]	; 0x6c
 8013b16:	9002      	str	r0, [sp, #8]
 8013b18:	4614      	mov	r4, r2
 8013b1a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8013b1c:	9200      	str	r2, [sp, #0]
 8013b1e:	461e      	mov	r6, r3
 8013b20:	9101      	str	r1, [sp, #4]
 8013b22:	f7ff fecd 	bl	80138c0 <GUI_GetColor>
 8013b26:	9a00      	ldr	r2, [sp, #0]
 8013b28:	900b      	str	r0, [sp, #44]	; 0x2c
 8013b2a:	4542      	cmp	r2, r8
 8013b2c:	d109      	bne.n	8013b42 <_DrawGradient+0x3e>
 8013b2e:	4610      	mov	r0, r2
 8013b30:	f7f8 fe32 	bl	800c798 <LCD_SetColor>
 8013b34:	9a01      	ldr	r2, [sp, #4]
 8013b36:	b112      	cbz	r2, 8013b3e <_DrawGradient+0x3a>
 8013b38:	4628      	mov	r0, r5
 8013b3a:	4649      	mov	r1, r9
 8013b3c:	e0b5      	b.n	8013caa <_DrawGradient+0x1a6>
 8013b3e:	4648      	mov	r0, r9
 8013b40:	e0b9      	b.n	8013cb6 <_DrawGradient+0x1b2>
 8013b42:	fa5f fc82 	uxtb.w	ip, r2
 8013b46:	f8cd c018 	str.w	ip, [sp, #24]
 8013b4a:	f3c2 2c07 	ubfx	ip, r2, #8, #8
 8013b4e:	f8cd c01c 	str.w	ip, [sp, #28]
 8013b52:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8013b56:	f8cd c020 	str.w	ip, [sp, #32]
 8013b5a:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8013b5e:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
 8013b62:	f8dd c018 	ldr.w	ip, [sp, #24]
 8013b66:	fa5f f388 	uxtb.w	r3, r8
 8013b6a:	ebcc 0303 	rsb	r3, ip, r3
 8013b6e:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8013b72:	930d      	str	r3, [sp, #52]	; 0x34
 8013b74:	f3c8 2307 	ubfx	r3, r8, #8, #8
 8013b78:	ebcc 0303 	rsb	r3, ip, r3
 8013b7c:	f8dd c020 	ldr.w	ip, [sp, #32]
 8013b80:	930c      	str	r3, [sp, #48]	; 0x30
 8013b82:	f3c8 4307 	ubfx	r3, r8, #16, #8
 8013b86:	ebcc 0303 	rsb	r3, ip, r3
 8013b8a:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 8013b8e:	930e      	str	r3, [sp, #56]	; 0x38
 8013b90:	ebcc 6818 	rsb	r8, ip, r8, lsr #24
 8013b94:	ebb6 0709 	subs.w	r7, r6, r9
 8013b98:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 8013b9c:	f04f 0800 	mov.w	r8, #0
 8013ba0:	bf08      	it	eq
 8013ba2:	2701      	moveq	r7, #1
 8013ba4:	f109 33ff 	add.w	r3, r9, #4294967295
 8013ba8:	f8cd 8010 	str.w	r8, [sp, #16]
 8013bac:	f8cd 800c 	str.w	r8, [sp, #12]
 8013bb0:	f8cd 8014 	str.w	r8, [sp, #20]
 8013bb4:	f04f 0a01 	mov.w	sl, #1
 8013bb8:	f103 0b01 	add.w	fp, r3, #1
 8013bbc:	45b3      	cmp	fp, r6
 8013bbe:	dc68      	bgt.n	8013c92 <_DrawGradient+0x18e>
 8013bc0:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 8013bc4:	fb98 f1f7 	sdiv	r1, r8, r7
 8013bc8:	4461      	add	r1, ip
 8013bca:	f8dd c010 	ldr.w	ip, [sp, #16]
 8013bce:	fb9c f0f7 	sdiv	r0, ip, r7
 8013bd2:	f8dd c020 	ldr.w	ip, [sp, #32]
 8013bd6:	4460      	add	r0, ip
 8013bd8:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8013bdc:	fb9c fef7 	sdiv	lr, ip, r7
 8013be0:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8013be4:	b2c0      	uxtb	r0, r0
 8013be6:	44e6      	add	lr, ip
 8013be8:	f8dd c014 	ldr.w	ip, [sp, #20]
 8013bec:	0400      	lsls	r0, r0, #16
 8013bee:	ea40 6001 	orr.w	r0, r0, r1, lsl #24
 8013bf2:	fb9c f1f7 	sdiv	r1, ip, r7
 8013bf6:	f8dd c018 	ldr.w	ip, [sp, #24]
 8013bfa:	4461      	add	r1, ip
 8013bfc:	fa5f fe8e 	uxtb.w	lr, lr
 8013c00:	b2c9      	uxtb	r1, r1
 8013c02:	ea41 210e 	orr.w	r1, r1, lr, lsl #8
 8013c06:	4301      	orrs	r1, r0
 8013c08:	45cb      	cmp	fp, r9
 8013c0a:	910a      	str	r1, [sp, #40]	; 0x28
 8013c0c:	dd26      	ble.n	8013c5c <_DrawGradient+0x158>
 8013c0e:	4291      	cmp	r1, r2
 8013c10:	d102      	bne.n	8013c18 <_DrawGradient+0x114>
 8013c12:	f10a 0a01 	add.w	sl, sl, #1
 8013c16:	e021      	b.n	8013c5c <_DrawGradient+0x158>
 8013c18:	4610      	mov	r0, r2
 8013c1a:	9300      	str	r3, [sp, #0]
 8013c1c:	f7f8 fdbc 	bl	800c798 <LCD_SetColor>
 8013c20:	f1ba 0f01 	cmp.w	sl, #1
 8013c24:	9b00      	ldr	r3, [sp, #0]
 8013c26:	d00f      	beq.n	8013c48 <_DrawGradient+0x144>
 8013c28:	9801      	ldr	r0, [sp, #4]
 8013c2a:	ebca 010b 	rsb	r1, sl, fp
 8013c2e:	b110      	cbz	r0, 8013c36 <_DrawGradient+0x132>
 8013c30:	4628      	mov	r0, r5
 8013c32:	4622      	mov	r2, r4
 8013c34:	e003      	b.n	8013c3e <_DrawGradient+0x13a>
 8013c36:	4608      	mov	r0, r1
 8013c38:	461a      	mov	r2, r3
 8013c3a:	4629      	mov	r1, r5
 8013c3c:	4623      	mov	r3, r4
 8013c3e:	f7f8 fadd 	bl	800c1fc <LCD_FillRect>
 8013c42:	f04f 0a01 	mov.w	sl, #1
 8013c46:	e009      	b.n	8013c5c <_DrawGradient+0x158>
 8013c48:	9901      	ldr	r1, [sp, #4]
 8013c4a:	b111      	cbz	r1, 8013c52 <_DrawGradient+0x14e>
 8013c4c:	4628      	mov	r0, r5
 8013c4e:	4619      	mov	r1, r3
 8013c50:	e001      	b.n	8013c56 <_DrawGradient+0x152>
 8013c52:	4618      	mov	r0, r3
 8013c54:	4629      	mov	r1, r5
 8013c56:	4622      	mov	r2, r4
 8013c58:	9b02      	ldr	r3, [sp, #8]
 8013c5a:	4798      	blx	r3
 8013c5c:	f8dd c014 	ldr.w	ip, [sp, #20]
 8013c60:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 8013c64:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013c66:	44f4      	add	ip, lr
 8013c68:	f8cd c014 	str.w	ip, [sp, #20]
 8013c6c:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 8013c70:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8013c74:	44f4      	add	ip, lr
 8013c76:	f8cd c00c 	str.w	ip, [sp, #12]
 8013c7a:	f8dd e038 	ldr.w	lr, [sp, #56]	; 0x38
 8013c7e:	f8dd c010 	ldr.w	ip, [sp, #16]
 8013c82:	44f4      	add	ip, lr
 8013c84:	f8cd c010 	str.w	ip, [sp, #16]
 8013c88:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 8013c8c:	465b      	mov	r3, fp
 8013c8e:	44e0      	add	r8, ip
 8013c90:	e792      	b.n	8013bb8 <_DrawGradient+0xb4>
 8013c92:	4610      	mov	r0, r2
 8013c94:	f7f8 fd80 	bl	800c798 <LCD_SetColor>
 8013c98:	f1ba 0f01 	cmp.w	sl, #1
 8013c9c:	d00f      	beq.n	8013cbe <_DrawGradient+0x1ba>
 8013c9e:	9801      	ldr	r0, [sp, #4]
 8013ca0:	ebca 0106 	rsb	r1, sl, r6
 8013ca4:	b130      	cbz	r0, 8013cb4 <_DrawGradient+0x1b0>
 8013ca6:	4628      	mov	r0, r5
 8013ca8:	3101      	adds	r1, #1
 8013caa:	4622      	mov	r2, r4
 8013cac:	4633      	mov	r3, r6
 8013cae:	f7f8 faa5 	bl	800c1fc <LCD_FillRect>
 8013cb2:	e00e      	b.n	8013cd2 <_DrawGradient+0x1ce>
 8013cb4:	1c48      	adds	r0, r1, #1
 8013cb6:	4629      	mov	r1, r5
 8013cb8:	4632      	mov	r2, r6
 8013cba:	4623      	mov	r3, r4
 8013cbc:	e7f7      	b.n	8013cae <_DrawGradient+0x1aa>
 8013cbe:	9901      	ldr	r1, [sp, #4]
 8013cc0:	b111      	cbz	r1, 8013cc8 <_DrawGradient+0x1c4>
 8013cc2:	4628      	mov	r0, r5
 8013cc4:	4631      	mov	r1, r6
 8013cc6:	e001      	b.n	8013ccc <_DrawGradient+0x1c8>
 8013cc8:	4630      	mov	r0, r6
 8013cca:	4629      	mov	r1, r5
 8013ccc:	4622      	mov	r2, r4
 8013cce:	9b02      	ldr	r3, [sp, #8]
 8013cd0:	4798      	blx	r3
 8013cd2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013cd4:	b011      	add	sp, #68	; 0x44
 8013cd6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013cda:	f7f8 bd5d 	b.w	800c798 <LCD_SetColor>
	...

08013ce0 <GUI_DrawGradientV>:
 8013ce0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013ce4:	4c15      	ldr	r4, [pc, #84]	; (8013d3c <GUI_DrawGradientV+0x5c>)
 8013ce6:	6824      	ldr	r4, [r4, #0]
 8013ce8:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8013cea:	6d24      	ldr	r4, [r4, #80]	; 0x50
 8013cec:	b087      	sub	sp, #28
 8013cee:	eb00 0905 	add.w	r9, r0, r5
 8013cf2:	eb01 0804 	add.w	r8, r1, r4
 8013cf6:	4415      	add	r5, r2
 8013cf8:	441c      	add	r4, r3
 8013cfa:	a804      	add	r0, sp, #16
 8013cfc:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8013cfe:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8013d00:	f8ad 9010 	strh.w	r9, [sp, #16]
 8013d04:	f8ad 5014 	strh.w	r5, [sp, #20]
 8013d08:	f8ad 8012 	strh.w	r8, [sp, #18]
 8013d0c:	f8ad 4016 	strh.w	r4, [sp, #22]
 8013d10:	f7f5 fc9a 	bl	8009648 <WM__InitIVRSearch>
 8013d14:	b170      	cbz	r0, 8013d34 <GUI_DrawGradientV+0x54>
 8013d16:	4b0a      	ldr	r3, [pc, #40]	; (8013d40 <GUI_DrawGradientV+0x60>)
 8013d18:	9302      	str	r3, [sp, #8]
 8013d1a:	2301      	movs	r3, #1
 8013d1c:	9303      	str	r3, [sp, #12]
 8013d1e:	4648      	mov	r0, r9
 8013d20:	4641      	mov	r1, r8
 8013d22:	462a      	mov	r2, r5
 8013d24:	4623      	mov	r3, r4
 8013d26:	9700      	str	r7, [sp, #0]
 8013d28:	9601      	str	r6, [sp, #4]
 8013d2a:	f7ff feeb 	bl	8013b04 <_DrawGradient>
 8013d2e:	f7f5 fbc9 	bl	80094c4 <WM__GetNextIVR>
 8013d32:	e7ef      	b.n	8013d14 <GUI_DrawGradientV+0x34>
 8013d34:	b007      	add	sp, #28
 8013d36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013d3a:	bf00      	nop
 8013d3c:	20000274 	.word	0x20000274
 8013d40:	0800c165 	.word	0x0800c165

08013d44 <GUI_DrawGradientH>:
 8013d44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013d48:	4c15      	ldr	r4, [pc, #84]	; (8013da0 <GUI_DrawGradientH+0x5c>)
 8013d4a:	6825      	ldr	r5, [r4, #0]
 8013d4c:	6cec      	ldr	r4, [r5, #76]	; 0x4c
 8013d4e:	6d2d      	ldr	r5, [r5, #80]	; 0x50
 8013d50:	b087      	sub	sp, #28
 8013d52:	eb00 0804 	add.w	r8, r0, r4
 8013d56:	eb01 0905 	add.w	r9, r1, r5
 8013d5a:	4414      	add	r4, r2
 8013d5c:	441d      	add	r5, r3
 8013d5e:	a804      	add	r0, sp, #16
 8013d60:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8013d62:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8013d64:	f8ad 8010 	strh.w	r8, [sp, #16]
 8013d68:	f8ad 4014 	strh.w	r4, [sp, #20]
 8013d6c:	f8ad 9012 	strh.w	r9, [sp, #18]
 8013d70:	f8ad 5016 	strh.w	r5, [sp, #22]
 8013d74:	f7f5 fc68 	bl	8009648 <WM__InitIVRSearch>
 8013d78:	b170      	cbz	r0, 8013d98 <GUI_DrawGradientH+0x54>
 8013d7a:	4b0a      	ldr	r3, [pc, #40]	; (8013da4 <GUI_DrawGradientH+0x60>)
 8013d7c:	9302      	str	r3, [sp, #8]
 8013d7e:	2300      	movs	r3, #0
 8013d80:	9303      	str	r3, [sp, #12]
 8013d82:	4648      	mov	r0, r9
 8013d84:	4641      	mov	r1, r8
 8013d86:	462a      	mov	r2, r5
 8013d88:	4623      	mov	r3, r4
 8013d8a:	9700      	str	r7, [sp, #0]
 8013d8c:	9601      	str	r6, [sp, #4]
 8013d8e:	f7ff feb9 	bl	8013b04 <_DrawGradient>
 8013d92:	f7f5 fb97 	bl	80094c4 <WM__GetNextIVR>
 8013d96:	e7ef      	b.n	8013d78 <GUI_DrawGradientH+0x34>
 8013d98:	b007      	add	sp, #28
 8013d9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013d9e:	bf00      	nop
 8013da0:	20000274 	.word	0x20000274
 8013da4:	0800c1b1 	.word	0x0800c1b1

08013da8 <GUI__DispStringInRect>:
 8013da8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013dac:	b087      	sub	sp, #28
 8013dae:	460c      	mov	r4, r1
 8013db0:	9001      	str	r0, [sp, #4]
 8013db2:	4691      	mov	r9, r2
 8013db4:	461d      	mov	r5, r3
 8013db6:	f7fb fa3d 	bl	800f234 <GUI_GetFontDistY>
 8013dba:	9f01      	ldr	r7, [sp, #4]
 8013dbc:	4680      	mov	r8, r0
 8013dbe:	b124      	cbz	r4, 8013dca <GUI__DispStringInRect+0x22>
 8013dc0:	6820      	ldr	r0, [r4, #0]
 8013dc2:	6861      	ldr	r1, [r4, #4]
 8013dc4:	ab04      	add	r3, sp, #16
 8013dc6:	c303      	stmia	r3!, {r0, r1}
 8013dc8:	e002      	b.n	8013dd0 <GUI__DispStringInRect+0x28>
 8013dca:	a804      	add	r0, sp, #16
 8013dcc:	f7ff fd7f 	bl	80138ce <GUI_GetClientRect>
 8013dd0:	f019 0a0c 	ands.w	sl, r9, #12
 8013dd4:	d002      	beq.n	8013ddc <GUI__DispStringInRect+0x34>
 8013dd6:	462c      	mov	r4, r5
 8013dd8:	2600      	movs	r6, #0
 8013dda:	e016      	b.n	8013e0a <GUI__DispStringInRect+0x62>
 8013ddc:	f9bd 4012 	ldrsh.w	r4, [sp, #18]
 8013de0:	e032      	b.n	8013e48 <GUI__DispStringInRect+0xa0>
 8013de2:	4621      	mov	r1, r4
 8013de4:	9801      	ldr	r0, [sp, #4]
 8013de6:	f7fb f95b 	bl	800f0a0 <GUI__GetLineNumChars>
 8013dea:	f8dd b004 	ldr.w	fp, [sp, #4]
 8013dee:	4601      	mov	r1, r0
 8013df0:	1a24      	subs	r4, r4, r0
 8013df2:	4658      	mov	r0, fp
 8013df4:	f7ff fd00 	bl	80137f8 <GUI_UC__NumChars2NumBytes>
 8013df8:	eb0b 0300 	add.w	r3, fp, r0
 8013dfc:	a806      	add	r0, sp, #24
 8013dfe:	3601      	adds	r6, #1
 8013e00:	f840 3d14 	str.w	r3, [r0, #-20]!
 8013e04:	f000 fd73 	bl	80148ee <GUI__HandleEOLine>
 8013e08:	b908      	cbnz	r0, 8013e0e <GUI__DispStringInRect+0x66>
 8013e0a:	2c00      	cmp	r4, #0
 8013e0c:	d1e9      	bne.n	8013de2 <GUI__DispStringInRect+0x3a>
 8013e0e:	f1ba 0f08 	cmp.w	sl, #8
 8013e12:	d005      	beq.n	8013e20 <GUI__DispStringInRect+0x78>
 8013e14:	f1ba 0f0c 	cmp.w	sl, #12
 8013e18:	d008      	beq.n	8013e2c <GUI__DispStringInRect+0x84>
 8013e1a:	f1ba 0f04 	cmp.w	sl, #4
 8013e1e:	d112      	bne.n	8013e46 <GUI__DispStringInRect+0x9e>
 8013e20:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 8013e24:	fb08 4416 	mls	r4, r8, r6, r4
 8013e28:	3401      	adds	r4, #1
 8013e2a:	e00d      	b.n	8013e48 <GUI__DispStringInRect+0xa0>
 8013e2c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013e30:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 8013e34:	1ae4      	subs	r4, r4, r3
 8013e36:	3401      	adds	r4, #1
 8013e38:	fb08 4416 	mls	r4, r8, r6, r4
 8013e3c:	2202      	movs	r2, #2
 8013e3e:	fb94 f4f2 	sdiv	r4, r4, r2
 8013e42:	441c      	add	r4, r3
 8013e44:	e000      	b.n	8013e48 <GUI__DispStringInRect+0xa0>
 8013e46:	2400      	movs	r4, #0
 8013e48:	9701      	str	r7, [sp, #4]
 8013e4a:	2600      	movs	r6, #0
 8013e4c:	2d00      	cmp	r5, #0
 8013e4e:	d04b      	beq.n	8013ee8 <GUI__DispStringInRect+0x140>
 8013e50:	4629      	mov	r1, r5
 8013e52:	9801      	ldr	r0, [sp, #4]
 8013e54:	f7fb f924 	bl	800f0a0 <GUI__GetLineNumChars>
 8013e58:	4607      	mov	r7, r0
 8013e5a:	1a2d      	subs	r5, r5, r0
 8013e5c:	4639      	mov	r1, r7
 8013e5e:	9801      	ldr	r0, [sp, #4]
 8013e60:	f7fb f94c 	bl	800f0fc <GUI__GetLineDistX>
 8013e64:	f009 0303 	and.w	r3, r9, #3
 8013e68:	2b01      	cmp	r3, #1
 8013e6a:	d00f      	beq.n	8013e8c <GUI__DispStringInRect+0xe4>
 8013e6c:	2b02      	cmp	r3, #2
 8013e6e:	d003      	beq.n	8013e78 <GUI__DispStringInRect+0xd0>
 8013e70:	b983      	cbnz	r3, 8013e94 <GUI__DispStringInRect+0xec>
 8013e72:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
 8013e76:	e00d      	b.n	8013e94 <GUI__DispStringInRect+0xec>
 8013e78:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013e7c:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 8013e80:	1ab6      	subs	r6, r6, r2
 8013e82:	1a36      	subs	r6, r6, r0
 8013e84:	fb96 f6f3 	sdiv	r6, r6, r3
 8013e88:	4416      	add	r6, r2
 8013e8a:	e003      	b.n	8013e94 <GUI__DispStringInRect+0xec>
 8013e8c:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 8013e90:	1a36      	subs	r6, r6, r0
 8013e92:	3601      	adds	r6, #1
 8013e94:	4b16      	ldr	r3, [pc, #88]	; (8013ef0 <GUI__DispStringInRect+0x148>)
 8013e96:	6819      	ldr	r1, [r3, #0]
 8013e98:	3801      	subs	r0, #1
 8013e9a:	b2a3      	uxth	r3, r4
 8013e9c:	b2b2      	uxth	r2, r6
 8013e9e:	848b      	strh	r3, [r1, #36]	; 0x24
 8013ea0:	4430      	add	r0, r6
 8013ea2:	f8ad 300a 	strh.w	r3, [sp, #10]
 8013ea6:	f108 33ff 	add.w	r3, r8, #4294967295
 8013eaa:	4423      	add	r3, r4
 8013eac:	844a      	strh	r2, [r1, #34]	; 0x22
 8013eae:	f8ad 2008 	strh.w	r2, [sp, #8]
 8013eb2:	4639      	mov	r1, r7
 8013eb4:	aa02      	add	r2, sp, #8
 8013eb6:	f8ad 000c 	strh.w	r0, [sp, #12]
 8013eba:	9801      	ldr	r0, [sp, #4]
 8013ebc:	f8ad 300e 	strh.w	r3, [sp, #14]
 8013ec0:	f7fb f94c 	bl	800f15c <GUI__DispLine>
 8013ec4:	f8dd a004 	ldr.w	sl, [sp, #4]
 8013ec8:	4639      	mov	r1, r7
 8013eca:	4650      	mov	r0, sl
 8013ecc:	f7ff fc94 	bl	80137f8 <GUI_UC__NumChars2NumBytes>
 8013ed0:	af06      	add	r7, sp, #24
 8013ed2:	4450      	add	r0, sl
 8013ed4:	f847 0d14 	str.w	r0, [r7, #-20]!
 8013ed8:	f7fb f9ac 	bl	800f234 <GUI_GetFontDistY>
 8013edc:	4404      	add	r4, r0
 8013ede:	4638      	mov	r0, r7
 8013ee0:	f000 fd05 	bl	80148ee <GUI__HandleEOLine>
 8013ee4:	2800      	cmp	r0, #0
 8013ee6:	d0b1      	beq.n	8013e4c <GUI__DispStringInRect+0xa4>
 8013ee8:	b007      	add	sp, #28
 8013eea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013eee:	bf00      	nop
 8013ef0:	20000274 	.word	0x20000274

08013ef4 <GUI_DispStringInRectMax>:
 8013ef4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8013ef8:	460c      	mov	r4, r1
 8013efa:	4690      	mov	r8, r2
 8013efc:	461f      	mov	r7, r3
 8013efe:	4606      	mov	r6, r0
 8013f00:	b1c0      	cbz	r0, 8013f34 <GUI_DispStringInRectMax+0x40>
 8013f02:	b169      	cbz	r1, 8013f20 <GUI_DispStringInRectMax+0x2c>
 8013f04:	4608      	mov	r0, r1
 8013f06:	f7f4 f859 	bl	8007fbc <WM_SetUserClipRect>
 8013f0a:	4605      	mov	r5, r0
 8013f0c:	b148      	cbz	r0, 8013f22 <GUI_DispStringInRectMax+0x2e>
 8013f0e:	4668      	mov	r0, sp
 8013f10:	4621      	mov	r1, r4
 8013f12:	462a      	mov	r2, r5
 8013f14:	f7f8 fd66 	bl	800c9e4 <GUI__IntersectRects>
 8013f18:	4668      	mov	r0, sp
 8013f1a:	f7f4 f84f 	bl	8007fbc <WM_SetUserClipRect>
 8013f1e:	e000      	b.n	8013f22 <GUI_DispStringInRectMax+0x2e>
 8013f20:	460d      	mov	r5, r1
 8013f22:	4630      	mov	r0, r6
 8013f24:	4621      	mov	r1, r4
 8013f26:	4642      	mov	r2, r8
 8013f28:	463b      	mov	r3, r7
 8013f2a:	f7ff ff3d 	bl	8013da8 <GUI__DispStringInRect>
 8013f2e:	4628      	mov	r0, r5
 8013f30:	f7f4 f844 	bl	8007fbc <WM_SetUserClipRect>
 8013f34:	b002      	add	sp, #8
 8013f36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013f3a <GUI_DispStringInRect>:
 8013f3a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8013f3e:	f7ff bfd9 	b.w	8013ef4 <GUI_DispStringInRectMax>
	...

08013f44 <GUI_CURSOR_SetPositionEx>:
 8013f44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013f46:	4606      	mov	r6, r0
 8013f48:	4610      	mov	r0, r2
 8013f4a:	460d      	mov	r5, r1
 8013f4c:	4614      	mov	r4, r2
 8013f4e:	f7f9 fe49 	bl	800dbe4 <GUI_GetCursorLayer>
 8013f52:	4f15      	ldr	r7, [pc, #84]	; (8013fa8 <GUI_CURSOR_SetPositionEx+0x64>)
 8013f54:	2314      	movs	r3, #20
 8013f56:	b148      	cbz	r0, 8013f6c <GUI_CURSOR_SetPositionEx+0x28>
 8013f58:	435c      	muls	r4, r3
 8013f5a:	593b      	ldr	r3, [r7, r4]
 8013f5c:	6859      	ldr	r1, [r3, #4]
 8013f5e:	689a      	ldr	r2, [r3, #8]
 8013f60:	1a71      	subs	r1, r6, r1
 8013f62:	1aaa      	subs	r2, r5, r2
 8013f64:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8013f68:	f7f9 be66 	b.w	800dc38 <GUI_SetLayerPosEx>
 8013f6c:	fb03 7304 	mla	r3, r3, r4, r7
 8013f70:	f103 0208 	add.w	r2, r3, #8
 8013f74:	689b      	ldr	r3, [r3, #8]
 8013f76:	42b3      	cmp	r3, r6
 8013f78:	d102      	bne.n	8013f80 <GUI_CURSOR_SetPositionEx+0x3c>
 8013f7a:	6853      	ldr	r3, [r2, #4]
 8013f7c:	42ab      	cmp	r3, r5
 8013f7e:	d011      	beq.n	8013fa4 <GUI_CURSOR_SetPositionEx+0x60>
 8013f80:	2314      	movs	r3, #20
 8013f82:	4363      	muls	r3, r4
 8013f84:	18fa      	adds	r2, r7, r3
 8013f86:	6910      	ldr	r0, [r2, #16]
 8013f88:	b138      	cbz	r0, 8013f9a <GUI_CURSOR_SetPositionEx+0x56>
 8013f8a:	4a07      	ldr	r2, [pc, #28]	; (8013fa8 <GUI_CURSOR_SetPositionEx+0x64>)
 8013f8c:	58d3      	ldr	r3, [r2, r3]
 8013f8e:	6859      	ldr	r1, [r3, #4]
 8013f90:	689a      	ldr	r2, [r3, #8]
 8013f92:	1a71      	subs	r1, r6, r1
 8013f94:	1aaa      	subs	r2, r5, r2
 8013f96:	f000 fe0b 	bl	8014bb0 <GUI_SPRITE_SetPosition>
 8013f9a:	2314      	movs	r3, #20
 8013f9c:	fb03 7404 	mla	r4, r3, r4, r7
 8013fa0:	60a6      	str	r6, [r4, #8]
 8013fa2:	60e5      	str	r5, [r4, #12]
 8013fa4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013fa6:	bf00      	nop
 8013fa8:	20019f8c 	.word	0x20019f8c

08013fac <GL_FillCircle>:
 8013fac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013fb0:	f240 29c3 	movw	r9, #707	; 0x2c3
 8013fb4:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 801406c <GL_FillCircle+0xc0>
 8013fb8:	fb09 f902 	mul.w	r9, r9, r2
 8013fbc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8013fc0:	fb99 f9f3 	sdiv	r9, r9, r3
 8013fc4:	f8d8 3000 	ldr.w	r3, [r8]
 8013fc8:	f04f 0b02 	mov.w	fp, #2
 8013fcc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8013fce:	4606      	mov	r6, r0
 8013fd0:	fb92 fbfb 	sdiv	fp, r2, fp
 8013fd4:	1a80      	subs	r0, r0, r2
 8013fd6:	4614      	mov	r4, r2
 8013fd8:	fb02 bb02 	mla	fp, r2, r2, fp
 8013fdc:	681b      	ldr	r3, [r3, #0]
 8013fde:	18b2      	adds	r2, r6, r2
 8013fe0:	460f      	mov	r7, r1
 8013fe2:	4798      	blx	r3
 8013fe4:	f109 0901 	add.w	r9, r9, #1
 8013fe8:	2501      	movs	r5, #1
 8013fea:	454d      	cmp	r5, r9
 8013fec:	dc3a      	bgt.n	8014064 <GL_FillCircle+0xb8>
 8013fee:	fb04 f304 	mul.w	r3, r4, r4
 8013ff2:	fb05 3305 	mla	r3, r5, r5, r3
 8013ff6:	455b      	cmp	r3, fp
 8013ff8:	dd1b      	ble.n	8014032 <GL_FillCircle+0x86>
 8013ffa:	454c      	cmp	r4, r9
 8013ffc:	dd18      	ble.n	8014030 <GL_FillCircle+0x84>
 8013ffe:	f8d8 2000 	ldr.w	r2, [r8]
 8014002:	1c73      	adds	r3, r6, #1
 8014004:	6e52      	ldr	r2, [r2, #100]	; 0x64
 8014006:	f106 3aff 	add.w	sl, r6, #4294967295
 801400a:	1b5b      	subs	r3, r3, r5
 801400c:	44aa      	add	sl, r5
 801400e:	f8d2 c000 	ldr.w	ip, [r2]
 8014012:	9301      	str	r3, [sp, #4]
 8014014:	4618      	mov	r0, r3
 8014016:	1939      	adds	r1, r7, r4
 8014018:	4652      	mov	r2, sl
 801401a:	47e0      	blx	ip
 801401c:	f8d8 2000 	ldr.w	r2, [r8]
 8014020:	9b01      	ldr	r3, [sp, #4]
 8014022:	6e52      	ldr	r2, [r2, #100]	; 0x64
 8014024:	4618      	mov	r0, r3
 8014026:	f8d2 c000 	ldr.w	ip, [r2]
 801402a:	1b39      	subs	r1, r7, r4
 801402c:	4652      	mov	r2, sl
 801402e:	47e0      	blx	ip
 8014030:	3c01      	subs	r4, #1
 8014032:	f8d8 2000 	ldr.w	r2, [r8]
 8014036:	6e52      	ldr	r2, [r2, #100]	; 0x64
 8014038:	1b33      	subs	r3, r6, r4
 801403a:	eb06 0a04 	add.w	sl, r6, r4
 801403e:	f8d2 c000 	ldr.w	ip, [r2]
 8014042:	9301      	str	r3, [sp, #4]
 8014044:	4618      	mov	r0, r3
 8014046:	19e9      	adds	r1, r5, r7
 8014048:	4652      	mov	r2, sl
 801404a:	47e0      	blx	ip
 801404c:	f8d8 2000 	ldr.w	r2, [r8]
 8014050:	9b01      	ldr	r3, [sp, #4]
 8014052:	6e52      	ldr	r2, [r2, #100]	; 0x64
 8014054:	1b79      	subs	r1, r7, r5
 8014056:	f8d2 c000 	ldr.w	ip, [r2]
 801405a:	4618      	mov	r0, r3
 801405c:	4652      	mov	r2, sl
 801405e:	47e0      	blx	ip
 8014060:	3501      	adds	r5, #1
 8014062:	e7c2      	b.n	8013fea <GL_FillCircle+0x3e>
 8014064:	b003      	add	sp, #12
 8014066:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801406a:	bf00      	nop
 801406c:	20000274 	.word	0x20000274

08014070 <GUI_ALLOC_AllocInit>:
 8014070:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014072:	4605      	mov	r5, r0
 8014074:	460c      	mov	r4, r1
 8014076:	b909      	cbnz	r1, 801407c <GUI_ALLOC_AllocInit+0xc>
 8014078:	2000      	movs	r0, #0
 801407a:	e014      	b.n	80140a6 <GUI_ALLOC_AllocInit+0x36>
 801407c:	4608      	mov	r0, r1
 801407e:	f7fb fc49 	bl	800f914 <GUI_ALLOC_AllocNoInit>
 8014082:	4606      	mov	r6, r0
 8014084:	2800      	cmp	r0, #0
 8014086:	d0f7      	beq.n	8014078 <GUI_ALLOC_AllocInit+0x8>
 8014088:	f7fb f9f0 	bl	800f46c <GUI_ALLOC_LockH>
 801408c:	4629      	mov	r1, r5
 801408e:	9001      	str	r0, [sp, #4]
 8014090:	4622      	mov	r2, r4
 8014092:	b115      	cbz	r5, 801409a <GUI_ALLOC_AllocInit+0x2a>
 8014094:	f001 f8f3 	bl	801527e <memcpy>
 8014098:	e001      	b.n	801409e <GUI_ALLOC_AllocInit+0x2e>
 801409a:	f7f8 fbb3 	bl	800c804 <GUI__memset>
 801409e:	a801      	add	r0, sp, #4
 80140a0:	f7fb f9f2 	bl	800f488 <GUI_ALLOC_UnlockH>
 80140a4:	4630      	mov	r0, r6
 80140a6:	b002      	add	sp, #8
 80140a8:	bd70      	pop	{r4, r5, r6, pc}

080140aa <_GetIndexMask_0>:
 80140aa:	b508      	push	{r3, lr}
 80140ac:	f7f7 ff64 	bl	800bf78 <LCD_GetNumColors>
 80140b0:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 80140b4:	d010      	beq.n	80140d8 <_GetIndexMask_0+0x2e>
 80140b6:	287f      	cmp	r0, #127	; 0x7f
 80140b8:	d810      	bhi.n	80140dc <_GetIndexMask_0+0x32>
 80140ba:	283f      	cmp	r0, #63	; 0x3f
 80140bc:	d810      	bhi.n	80140e0 <_GetIndexMask_0+0x36>
 80140be:	281f      	cmp	r0, #31
 80140c0:	d810      	bhi.n	80140e4 <_GetIndexMask_0+0x3a>
 80140c2:	280f      	cmp	r0, #15
 80140c4:	d810      	bhi.n	80140e8 <_GetIndexMask_0+0x3e>
 80140c6:	2807      	cmp	r0, #7
 80140c8:	d810      	bhi.n	80140ec <_GetIndexMask_0+0x42>
 80140ca:	2803      	cmp	r0, #3
 80140cc:	d810      	bhi.n	80140f0 <_GetIndexMask_0+0x46>
 80140ce:	2801      	cmp	r0, #1
 80140d0:	bf94      	ite	ls
 80140d2:	2000      	movls	r0, #0
 80140d4:	2001      	movhi	r0, #1
 80140d6:	e00c      	b.n	80140f2 <_GetIndexMask_0+0x48>
 80140d8:	2008      	movs	r0, #8
 80140da:	e00a      	b.n	80140f2 <_GetIndexMask_0+0x48>
 80140dc:	2007      	movs	r0, #7
 80140de:	e008      	b.n	80140f2 <_GetIndexMask_0+0x48>
 80140e0:	2006      	movs	r0, #6
 80140e2:	e006      	b.n	80140f2 <_GetIndexMask_0+0x48>
 80140e4:	2005      	movs	r0, #5
 80140e6:	e004      	b.n	80140f2 <_GetIndexMask_0+0x48>
 80140e8:	2004      	movs	r0, #4
 80140ea:	e002      	b.n	80140f2 <_GetIndexMask_0+0x48>
 80140ec:	2003      	movs	r0, #3
 80140ee:	e000      	b.n	80140f2 <_GetIndexMask_0+0x48>
 80140f0:	2002      	movs	r0, #2
 80140f2:	2301      	movs	r3, #1
 80140f4:	fa03 f000 	lsl.w	r0, r3, r0
 80140f8:	3801      	subs	r0, #1
 80140fa:	bd08      	pop	{r3, pc}

080140fc <_Index2Color_0>:
 80140fc:	b538      	push	{r3, r4, r5, lr}
 80140fe:	4604      	mov	r4, r0
 8014100:	f7f7 ff3a 	bl	800bf78 <LCD_GetNumColors>
 8014104:	4605      	mov	r5, r0
 8014106:	f7f7 ff55 	bl	800bfb4 <LCD_GetPalette>
 801410a:	42ac      	cmp	r4, r5
 801410c:	d203      	bcs.n	8014116 <_Index2Color_0+0x1a>
 801410e:	b118      	cbz	r0, 8014118 <_Index2Color_0+0x1c>
 8014110:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 8014114:	bd38      	pop	{r3, r4, r5, pc}
 8014116:	2000      	movs	r0, #0
 8014118:	bd38      	pop	{r3, r4, r5, pc}

0801411a <_Color2Index_0>:
 801411a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801411e:	4681      	mov	r9, r0
 8014120:	f7f7 ff2a 	bl	800bf78 <LCD_GetNumColors>
 8014124:	4680      	mov	r8, r0
 8014126:	f7f7 ff45 	bl	800bfb4 <LCD_GetPalette>
 801412a:	4606      	mov	r6, r0
 801412c:	b1d8      	cbz	r0, 8014166 <_Color2Index_0+0x4c>
 801412e:	2300      	movs	r3, #0
 8014130:	f856 2023 	ldr.w	r2, [r6, r3, lsl #2]
 8014134:	4591      	cmp	r9, r2
 8014136:	d01a      	beq.n	801416e <_Color2Index_0+0x54>
 8014138:	3301      	adds	r3, #1
 801413a:	4543      	cmp	r3, r8
 801413c:	dbf8      	blt.n	8014130 <_Color2Index_0+0x16>
 801413e:	2500      	movs	r5, #0
 8014140:	f06f 477f 	mvn.w	r7, #4278190080	; 0xff000000
 8014144:	462c      	mov	r4, r5
 8014146:	f856 1024 	ldr.w	r1, [r6, r4, lsl #2]
 801414a:	4648      	mov	r0, r9
 801414c:	f001 f826 	bl	801519c <GUI_CalcColorDist>
 8014150:	42b8      	cmp	r0, r7
 8014152:	bf38      	it	cc
 8014154:	4625      	movcc	r5, r4
 8014156:	f104 0401 	add.w	r4, r4, #1
 801415a:	bf28      	it	cs
 801415c:	4638      	movcs	r0, r7
 801415e:	4544      	cmp	r4, r8
 8014160:	da02      	bge.n	8014168 <_Color2Index_0+0x4e>
 8014162:	4607      	mov	r7, r0
 8014164:	e7ef      	b.n	8014146 <_Color2Index_0+0x2c>
 8014166:	4605      	mov	r5, r0
 8014168:	4628      	mov	r0, r5
 801416a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801416e:	4618      	mov	r0, r3
 8014170:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08014174 <_GetArrowPara>:
 8014174:	b510      	push	{r4, lr}
 8014176:	b121      	cbz	r1, 8014182 <_GetArrowPara+0xe>
 8014178:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801417c:	f9b0 1000 	ldrsh.w	r1, [r0]
 8014180:	e003      	b.n	801418a <_GetArrowPara+0x16>
 8014182:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8014186:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801418a:	1a61      	subs	r1, r4, r1
 801418c:	3101      	adds	r1, #1
 801418e:	1f0c      	subs	r4, r1, #4
 8014190:	2003      	movs	r0, #3
 8014192:	fb94 f0f0 	sdiv	r0, r4, r0
 8014196:	6010      	str	r0, [r2, #0]
 8014198:	1a08      	subs	r0, r1, r0
 801419a:	eba1 0160 	sub.w	r1, r1, r0, asr #1
 801419e:	3901      	subs	r1, #1
 80141a0:	6019      	str	r1, [r3, #0]
 80141a2:	bd10      	pop	{r4, pc}

080141a4 <_DrawGraspH>:
 80141a4:	b570      	push	{r4, r5, r6, lr}
 80141a6:	f9b0 3000 	ldrsh.w	r3, [r0]
 80141aa:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 80141ae:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 80141b2:	441e      	add	r6, r3
 80141b4:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80141b8:	6a88      	ldr	r0, [r1, #40]	; 0x28
 80141ba:	1b5c      	subs	r4, r3, r5
 80141bc:	3403      	adds	r4, #3
 80141be:	10a4      	asrs	r4, r4, #2
 80141c0:	4425      	add	r5, r4
 80141c2:	1076      	asrs	r6, r6, #1
 80141c4:	1b1c      	subs	r4, r3, r4
 80141c6:	f7f9 fcf9 	bl	800dbbc <GUI_SetColor>
 80141ca:	4630      	mov	r0, r6
 80141cc:	4629      	mov	r1, r5
 80141ce:	4622      	mov	r2, r4
 80141d0:	f7f9 fecc 	bl	800df6c <GUI_DrawVLine>
 80141d4:	1cb0      	adds	r0, r6, #2
 80141d6:	4629      	mov	r1, r5
 80141d8:	4622      	mov	r2, r4
 80141da:	f7f9 fec7 	bl	800df6c <GUI_DrawVLine>
 80141de:	1d30      	adds	r0, r6, #4
 80141e0:	4629      	mov	r1, r5
 80141e2:	4622      	mov	r2, r4
 80141e4:	f7f9 fec2 	bl	800df6c <GUI_DrawVLine>
 80141e8:	1eb0      	subs	r0, r6, #2
 80141ea:	4629      	mov	r1, r5
 80141ec:	4622      	mov	r2, r4
 80141ee:	f7f9 febd 	bl	800df6c <GUI_DrawVLine>
 80141f2:	1f30      	subs	r0, r6, #4
 80141f4:	4629      	mov	r1, r5
 80141f6:	4622      	mov	r2, r4
 80141f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80141fc:	f7f9 beb6 	b.w	800df6c <GUI_DrawVLine>

08014200 <_DrawGraspV>:
 8014200:	b570      	push	{r4, r5, r6, lr}
 8014202:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8014206:	f9b0 6006 	ldrsh.w	r6, [r0, #6]
 801420a:	f9b0 5000 	ldrsh.w	r5, [r0]
 801420e:	441e      	add	r6, r3
 8014210:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014214:	6a88      	ldr	r0, [r1, #40]	; 0x28
 8014216:	1b5c      	subs	r4, r3, r5
 8014218:	3403      	adds	r4, #3
 801421a:	10a4      	asrs	r4, r4, #2
 801421c:	4425      	add	r5, r4
 801421e:	1076      	asrs	r6, r6, #1
 8014220:	1b1c      	subs	r4, r3, r4
 8014222:	f7f9 fccb 	bl	800dbbc <GUI_SetColor>
 8014226:	4630      	mov	r0, r6
 8014228:	4629      	mov	r1, r5
 801422a:	4622      	mov	r2, r4
 801422c:	f7fa f916 	bl	800e45c <GUI_DrawHLine>
 8014230:	1cb0      	adds	r0, r6, #2
 8014232:	4629      	mov	r1, r5
 8014234:	4622      	mov	r2, r4
 8014236:	f7fa f911 	bl	800e45c <GUI_DrawHLine>
 801423a:	1d30      	adds	r0, r6, #4
 801423c:	4629      	mov	r1, r5
 801423e:	4622      	mov	r2, r4
 8014240:	f7fa f90c 	bl	800e45c <GUI_DrawHLine>
 8014244:	1eb0      	subs	r0, r6, #2
 8014246:	4629      	mov	r1, r5
 8014248:	4622      	mov	r2, r4
 801424a:	f7fa f907 	bl	800e45c <GUI_DrawHLine>
 801424e:	1f30      	subs	r0, r6, #4
 8014250:	4629      	mov	r1, r5
 8014252:	4622      	mov	r2, r4
 8014254:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014258:	f7fa b900 	b.w	800e45c <GUI_DrawHLine>

0801425c <_DrawFrame>:
 801425c:	b538      	push	{r3, r4, r5, lr}
 801425e:	4604      	mov	r4, r0
 8014260:	6808      	ldr	r0, [r1, #0]
 8014262:	460d      	mov	r5, r1
 8014264:	f7f9 fcaa 	bl	800dbbc <GUI_SetColor>
 8014268:	f9b4 1000 	ldrsh.w	r1, [r4]
 801426c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8014270:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8014274:	3101      	adds	r1, #1
 8014276:	3a01      	subs	r2, #1
 8014278:	f7fa f8f0 	bl	800e45c <GUI_DrawHLine>
 801427c:	f9b4 1000 	ldrsh.w	r1, [r4]
 8014280:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8014284:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8014288:	3101      	adds	r1, #1
 801428a:	3a01      	subs	r2, #1
 801428c:	f7fa f8e6 	bl	800e45c <GUI_DrawHLine>
 8014290:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8014294:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8014298:	f9b4 0000 	ldrsh.w	r0, [r4]
 801429c:	3101      	adds	r1, #1
 801429e:	3a01      	subs	r2, #1
 80142a0:	f7f9 fe64 	bl	800df6c <GUI_DrawVLine>
 80142a4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80142a8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80142ac:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80142b0:	3101      	adds	r1, #1
 80142b2:	3a01      	subs	r2, #1
 80142b4:	f7f9 fe5a 	bl	800df6c <GUI_DrawVLine>
 80142b8:	6868      	ldr	r0, [r5, #4]
 80142ba:	f7f9 fc7f 	bl	800dbbc <GUI_SetColor>
 80142be:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 80142c2:	f9b4 1000 	ldrsh.w	r1, [r4]
 80142c6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80142ca:	3001      	adds	r0, #1
 80142cc:	3101      	adds	r1, #1
 80142ce:	3a01      	subs	r2, #1
 80142d0:	f7fa f8c4 	bl	800e45c <GUI_DrawHLine>
 80142d4:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 80142d8:	f9b4 1000 	ldrsh.w	r1, [r4]
 80142dc:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80142e0:	3801      	subs	r0, #1
 80142e2:	3101      	adds	r1, #1
 80142e4:	3a01      	subs	r2, #1
 80142e6:	f7fa f8b9 	bl	800e45c <GUI_DrawHLine>
 80142ea:	f9b4 0000 	ldrsh.w	r0, [r4]
 80142ee:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80142f2:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80142f6:	3001      	adds	r0, #1
 80142f8:	3102      	adds	r1, #2
 80142fa:	3a02      	subs	r2, #2
 80142fc:	f7f9 fe36 	bl	800df6c <GUI_DrawVLine>
 8014300:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8014304:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8014308:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801430c:	3102      	adds	r1, #2
 801430e:	3a02      	subs	r2, #2
 8014310:	3801      	subs	r0, #1
 8014312:	f7f9 fe2b 	bl	800df6c <GUI_DrawVLine>
 8014316:	68a8      	ldr	r0, [r5, #8]
 8014318:	f7f9 fc50 	bl	800dbbc <GUI_SetColor>
 801431c:	f9b4 0000 	ldrsh.w	r0, [r4]
 8014320:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8014324:	f000 ff18 	bl	8015158 <GUI_DrawPixel>
 8014328:	f9b4 0000 	ldrsh.w	r0, [r4]
 801432c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8014330:	f000 ff12 	bl	8015158 <GUI_DrawPixel>
 8014334:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8014338:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801433c:	f000 ff0c 	bl	8015158 <GUI_DrawPixel>
 8014340:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8014344:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8014348:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801434c:	f000 bf04 	b.w	8015158 <GUI_DrawPixel>

08014350 <_DrawBackgroundH>:
 8014350:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014352:	4604      	mov	r4, r0
 8014354:	460d      	mov	r5, r1
 8014356:	f7ff ff81 	bl	801425c <_DrawFrame>
 801435a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801435e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8014362:	f9b4 0000 	ldrsh.w	r0, [r4]
 8014366:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801436a:	68ee      	ldr	r6, [r5, #12]
 801436c:	9600      	str	r6, [sp, #0]
 801436e:	440b      	add	r3, r1
 8014370:	692e      	ldr	r6, [r5, #16]
 8014372:	9601      	str	r6, [sp, #4]
 8014374:	3002      	adds	r0, #2
 8014376:	3102      	adds	r1, #2
 8014378:	3a02      	subs	r2, #2
 801437a:	105b      	asrs	r3, r3, #1
 801437c:	f7ff fcb0 	bl	8013ce0 <GUI_DrawGradientV>
 8014380:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8014384:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8014388:	f9b4 0000 	ldrsh.w	r0, [r4]
 801438c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8014390:	696c      	ldr	r4, [r5, #20]
 8014392:	9400      	str	r4, [sp, #0]
 8014394:	4419      	add	r1, r3
 8014396:	69ac      	ldr	r4, [r5, #24]
 8014398:	9401      	str	r4, [sp, #4]
 801439a:	1049      	asrs	r1, r1, #1
 801439c:	3002      	adds	r0, #2
 801439e:	3101      	adds	r1, #1
 80143a0:	3a02      	subs	r2, #2
 80143a2:	3b02      	subs	r3, #2
 80143a4:	f7ff fc9c 	bl	8013ce0 <GUI_DrawGradientV>
 80143a8:	b002      	add	sp, #8
 80143aa:	bd70      	pop	{r4, r5, r6, pc}

080143ac <_DrawBackgroundV>:
 80143ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80143ae:	4604      	mov	r4, r0
 80143b0:	460d      	mov	r5, r1
 80143b2:	f7ff ff53 	bl	801425c <_DrawFrame>
 80143b6:	f9b4 0000 	ldrsh.w	r0, [r4]
 80143ba:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80143be:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80143c2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80143c6:	68ee      	ldr	r6, [r5, #12]
 80143c8:	9600      	str	r6, [sp, #0]
 80143ca:	4402      	add	r2, r0
 80143cc:	692e      	ldr	r6, [r5, #16]
 80143ce:	9601      	str	r6, [sp, #4]
 80143d0:	3002      	adds	r0, #2
 80143d2:	3102      	adds	r1, #2
 80143d4:	1052      	asrs	r2, r2, #1
 80143d6:	3b02      	subs	r3, #2
 80143d8:	f7ff fcb4 	bl	8013d44 <GUI_DrawGradientH>
 80143dc:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80143e0:	f9b4 0000 	ldrsh.w	r0, [r4]
 80143e4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80143e8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80143ec:	696c      	ldr	r4, [r5, #20]
 80143ee:	9400      	str	r4, [sp, #0]
 80143f0:	4410      	add	r0, r2
 80143f2:	69ac      	ldr	r4, [r5, #24]
 80143f4:	9401      	str	r4, [sp, #4]
 80143f6:	1040      	asrs	r0, r0, #1
 80143f8:	3001      	adds	r0, #1
 80143fa:	3102      	adds	r1, #2
 80143fc:	3a02      	subs	r2, #2
 80143fe:	3b02      	subs	r3, #2
 8014400:	f7ff fca0 	bl	8013d44 <GUI_DrawGradientH>
 8014404:	b002      	add	sp, #8
 8014406:	bd70      	pop	{r4, r5, r6, pc}

08014408 <SCROLLBAR_DrawSkinFlex>:
 8014408:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801440c:	4604      	mov	r4, r0
 801440e:	b08b      	sub	sp, #44	; 0x2c
 8014410:	6800      	ldr	r0, [r0, #0]
 8014412:	f7fb f82b 	bl	800f46c <GUI_ALLOC_LockH>
 8014416:	4607      	mov	r7, r0
 8014418:	a80a      	add	r0, sp, #40	; 0x28
 801441a:	ae06      	add	r6, sp, #24
 801441c:	f840 7d1c 	str.w	r7, [r0, #-28]!
 8014420:	f7fb f832 	bl	800f488 <GUI_ALLOC_UnlockH>
 8014424:	6923      	ldr	r3, [r4, #16]
 8014426:	f8ad 3018 	strh.w	r3, [sp, #24]
 801442a:	6963      	ldr	r3, [r4, #20]
 801442c:	f8ad 301a 	strh.w	r3, [sp, #26]
 8014430:	69a3      	ldr	r3, [r4, #24]
 8014432:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014436:	69e3      	ldr	r3, [r4, #28]
 8014438:	f8ad 301e 	strh.w	r3, [sp, #30]
 801443c:	6a25      	ldr	r5, [r4, #32]
 801443e:	e896 0003 	ldmia.w	r6, {r0, r1}
 8014442:	682b      	ldr	r3, [r5, #0]
 8014444:	f10d 0820 	add.w	r8, sp, #32
 8014448:	e888 0003 	stmia.w	r8, {r0, r1}
 801444c:	b153      	cbz	r3, 8014464 <SCROLLBAR_DrawSkinFlex+0x5c>
 801444e:	4638      	mov	r0, r7
 8014450:	4631      	mov	r1, r6
 8014452:	4632      	mov	r2, r6
 8014454:	f7f2 f871 	bl	800653a <WIDGET__RotateRect90>
 8014458:	f8df 913c 	ldr.w	r9, [pc, #316]	; 8014598 <SCROLLBAR_DrawSkinFlex+0x190>
 801445c:	f8df c13c 	ldr.w	ip, [pc, #316]	; 801459c <SCROLLBAR_DrawSkinFlex+0x194>
 8014460:	4b49      	ldr	r3, [pc, #292]	; (8014588 <SCROLLBAR_DrawSkinFlex+0x180>)
 8014462:	e004      	b.n	801446e <SCROLLBAR_DrawSkinFlex+0x66>
 8014464:	f8df 9138 	ldr.w	r9, [pc, #312]	; 80145a0 <SCROLLBAR_DrawSkinFlex+0x198>
 8014468:	f8df c138 	ldr.w	ip, [pc, #312]	; 80145a4 <SCROLLBAR_DrawSkinFlex+0x19c>
 801446c:	4b47      	ldr	r3, [pc, #284]	; (801458c <SCROLLBAR_DrawSkinFlex+0x184>)
 801446e:	6862      	ldr	r2, [r4, #4]
 8014470:	3a08      	subs	r2, #8
 8014472:	2a11      	cmp	r2, #17
 8014474:	f200 8083 	bhi.w	801457e <SCROLLBAR_DrawSkinFlex+0x176>
 8014478:	e8df f002 	tbb	[pc, r2]
 801447c:	81815f13 	.word	0x81815f13
 8014480:	81818134 	.word	0x81818134
 8014484:	43813434 	.word	0x43813434
 8014488:	81818181 	.word	0x81818181
 801448c:	0981      	.short	0x0981
 801448e:	682b      	ldr	r3, [r5, #0]
 8014490:	b113      	cbz	r3, 8014498 <SCROLLBAR_DrawSkinFlex+0x90>
 8014492:	69a0      	ldr	r0, [r4, #24]
 8014494:	6923      	ldr	r3, [r4, #16]
 8014496:	e001      	b.n	801449c <SCROLLBAR_DrawSkinFlex+0x94>
 8014498:	69e0      	ldr	r0, [r4, #28]
 801449a:	6963      	ldr	r3, [r4, #20]
 801449c:	1ac0      	subs	r0, r0, r3
 801449e:	3001      	adds	r0, #1
 80144a0:	e06e      	b.n	8014580 <SCROLLBAR_DrawSkinFlex+0x178>
 80144a2:	686a      	ldr	r2, [r5, #4]
 80144a4:	493a      	ldr	r1, [pc, #232]	; (8014590 <SCROLLBAR_DrawSkinFlex+0x188>)
 80144a6:	4c3b      	ldr	r4, [pc, #236]	; (8014594 <SCROLLBAR_DrawSkinFlex+0x18c>)
 80144a8:	2a02      	cmp	r2, #2
 80144aa:	bf08      	it	eq
 80144ac:	460c      	moveq	r4, r1
 80144ae:	4630      	mov	r0, r6
 80144b0:	4621      	mov	r1, r4
 80144b2:	4798      	blx	r3
 80144b4:	6829      	ldr	r1, [r5, #0]
 80144b6:	aa04      	add	r2, sp, #16
 80144b8:	ab05      	add	r3, sp, #20
 80144ba:	4640      	mov	r0, r8
 80144bc:	f7ff fe5a 	bl	8014174 <_GetArrowPara>
 80144c0:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80144c2:	f7f9 fb7b 	bl	800dbbc <GUI_SetColor>
 80144c6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80144ca:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 80144ce:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80144d2:	1ad2      	subs	r2, r2, r3
 80144d4:	f04f 33ff 	mov.w	r3, #4294967295
 80144d8:	9300      	str	r3, [sp, #0]
 80144da:	9b05      	ldr	r3, [sp, #20]
 80144dc:	3201      	adds	r2, #1
 80144de:	4638      	mov	r0, r7
 80144e0:	4419      	add	r1, r3
 80144e2:	e048      	b.n	8014576 <SCROLLBAR_DrawSkinFlex+0x16e>
 80144e4:	4c2b      	ldr	r4, [pc, #172]	; (8014594 <SCROLLBAR_DrawSkinFlex+0x18c>)
 80144e6:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 80144ea:	69e5      	ldr	r5, [r4, #28]
 80144ec:	9500      	str	r5, [sp, #0]
 80144ee:	6a24      	ldr	r4, [r4, #32]
 80144f0:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 80144f4:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 80144f8:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80144fc:	9401      	str	r4, [sp, #4]
 80144fe:	47e0      	blx	ip
 8014500:	e03d      	b.n	801457e <SCROLLBAR_DrawSkinFlex+0x176>
 8014502:	686a      	ldr	r2, [r5, #4]
 8014504:	4922      	ldr	r1, [pc, #136]	; (8014590 <SCROLLBAR_DrawSkinFlex+0x188>)
 8014506:	4c23      	ldr	r4, [pc, #140]	; (8014594 <SCROLLBAR_DrawSkinFlex+0x18c>)
 8014508:	2a03      	cmp	r2, #3
 801450a:	bf08      	it	eq
 801450c:	460c      	moveq	r4, r1
 801450e:	4630      	mov	r0, r6
 8014510:	4621      	mov	r1, r4
 8014512:	4798      	blx	r3
 8014514:	682b      	ldr	r3, [r5, #0]
 8014516:	b123      	cbz	r3, 8014522 <SCROLLBAR_DrawSkinFlex+0x11a>
 8014518:	f9bd 201e 	ldrsh.w	r2, [sp, #30]
 801451c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8014520:	e003      	b.n	801452a <SCROLLBAR_DrawSkinFlex+0x122>
 8014522:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8014526:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801452a:	1ad3      	subs	r3, r2, r3
 801452c:	3301      	adds	r3, #1
 801452e:	2b0e      	cmp	r3, #14
 8014530:	dd25      	ble.n	801457e <SCROLLBAR_DrawSkinFlex+0x176>
 8014532:	4630      	mov	r0, r6
 8014534:	4621      	mov	r1, r4
 8014536:	47c8      	blx	r9
 8014538:	e021      	b.n	801457e <SCROLLBAR_DrawSkinFlex+0x176>
 801453a:	686a      	ldr	r2, [r5, #4]
 801453c:	4914      	ldr	r1, [pc, #80]	; (8014590 <SCROLLBAR_DrawSkinFlex+0x188>)
 801453e:	4c15      	ldr	r4, [pc, #84]	; (8014594 <SCROLLBAR_DrawSkinFlex+0x18c>)
 8014540:	2a01      	cmp	r2, #1
 8014542:	bf08      	it	eq
 8014544:	460c      	moveq	r4, r1
 8014546:	4630      	mov	r0, r6
 8014548:	4621      	mov	r1, r4
 801454a:	4798      	blx	r3
 801454c:	6829      	ldr	r1, [r5, #0]
 801454e:	aa04      	add	r2, sp, #16
 8014550:	ab05      	add	r3, sp, #20
 8014552:	4640      	mov	r0, r8
 8014554:	f7ff fe0e 	bl	8014174 <_GetArrowPara>
 8014558:	6a60      	ldr	r0, [r4, #36]	; 0x24
 801455a:	f7f9 fb2f 	bl	800dbbc <GUI_SetColor>
 801455e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8014562:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 8014566:	f9bd 1024 	ldrsh.w	r1, [sp, #36]	; 0x24
 801456a:	1ad2      	subs	r2, r2, r3
 801456c:	2301      	movs	r3, #1
 801456e:	9300      	str	r3, [sp, #0]
 8014570:	9b05      	ldr	r3, [sp, #20]
 8014572:	4638      	mov	r0, r7
 8014574:	1ac9      	subs	r1, r1, r3
 8014576:	1052      	asrs	r2, r2, #1
 8014578:	9b04      	ldr	r3, [sp, #16]
 801457a:	f7f2 f922 	bl	80067c2 <WIDGET__DrawTriangle>
 801457e:	2000      	movs	r0, #0
 8014580:	b00b      	add	sp, #44	; 0x2c
 8014582:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014586:	bf00      	nop
 8014588:	080143ad 	.word	0x080143ad
 801458c:	08014351 	.word	0x08014351
 8014590:	2000039c 	.word	0x2000039c
 8014594:	200003c8 	.word	0x200003c8
 8014598:	08014201 	.word	0x08014201
 801459c:	08013d45 	.word	0x08013d45
 80145a0:	080141a5 	.word	0x080141a5
 80145a4:	08013ce1 	.word	0x08013ce1

080145a8 <_Create>:
 80145a8:	b530      	push	{r4, r5, lr}
 80145aa:	b08d      	sub	sp, #52	; 0x34
 80145ac:	4605      	mov	r5, r0
 80145ae:	f7fa ff5d 	bl	800f46c <GUI_ALLOC_LockH>
 80145b2:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 80145b4:	6c04      	ldr	r4, [r0, #64]	; 0x40
 80145b6:	9000      	str	r0, [sp, #0]
 80145b8:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 80145bc:	9301      	str	r3, [sp, #4]
 80145be:	4b07      	ldr	r3, [pc, #28]	; (80145dc <_Create+0x34>)
 80145c0:	6483      	str	r3, [r0, #72]	; 0x48
 80145c2:	4668      	mov	r0, sp
 80145c4:	f7fa ff60 	bl	800f488 <GUI_ALLOC_UnlockH>
 80145c8:	2300      	movs	r3, #0
 80145ca:	9304      	str	r3, [sp, #16]
 80145cc:	ab01      	add	r3, sp, #4
 80145ce:	9503      	str	r5, [sp, #12]
 80145d0:	930b      	str	r3, [sp, #44]	; 0x2c
 80145d2:	a803      	add	r0, sp, #12
 80145d4:	47a0      	blx	r4
 80145d6:	b00d      	add	sp, #52	; 0x34
 80145d8:	bd30      	pop	{r4, r5, pc}
 80145da:	bf00      	nop
 80145dc:	080145e1 	.word	0x080145e1

080145e0 <_CalcPositions>:
 80145e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80145e4:	b090      	sub	sp, #64	; 0x40
 80145e6:	4605      	mov	r5, r0
 80145e8:	460c      	mov	r4, r1
 80145ea:	f7fa ff3f 	bl	800f46c <GUI_ALLOC_LockH>
 80145ee:	4603      	mov	r3, r0
 80145f0:	9000      	str	r0, [sp, #0]
 80145f2:	c803      	ldmia	r0, {r0, r1}
 80145f4:	ae03      	add	r6, sp, #12
 80145f6:	e886 0003 	stmia.w	r6, {r0, r1}
 80145fa:	8e58      	ldrh	r0, [r3, #50]	; 0x32
 80145fc:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8014600:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 8014604:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8014608:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 801460c:	920e      	str	r2, [sp, #56]	; 0x38
 801460e:	f000 0008 	and.w	r0, r0, #8
 8014612:	2800      	cmp	r0, #0
 8014614:	bf0c      	ite	eq
 8014616:	4608      	moveq	r0, r1
 8014618:	4610      	movne	r0, r2
 801461a:	61a0      	str	r0, [r4, #24]
 801461c:	bf0c      	ite	eq
 801461e:	2000      	moveq	r0, #0
 8014620:	2001      	movne	r0, #1
 8014622:	aa01      	add	r2, sp, #4
 8014624:	9001      	str	r0, [sp, #4]
 8014626:	2019      	movs	r0, #25
 8014628:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801462a:	9008      	str	r0, [sp, #32]
 801462c:	9507      	str	r5, [sp, #28]
 801462e:	920f      	str	r2, [sp, #60]	; 0x3c
 8014630:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8014634:	970c      	str	r7, [sp, #48]	; 0x30
 8014636:	910d      	str	r1, [sp, #52]	; 0x34
 8014638:	a807      	add	r0, sp, #28
 801463a:	4798      	blx	r3
 801463c:	9b00      	ldr	r3, [sp, #0]
 801463e:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 8014642:	2aff      	cmp	r2, #255	; 0xff
 8014644:	4605      	mov	r5, r0
 8014646:	d111      	bne.n	801466c <_CalcPositions+0x8c>
 8014648:	6998      	ldr	r0, [r3, #24]
 801464a:	f7f3 ffc4 	bl	80085d6 <WM_GetScrollbarV>
 801464e:	b168      	cbz	r0, 801466c <_CalcPositions+0x8c>
 8014650:	a905      	add	r1, sp, #20
 8014652:	f7fc ff1b 	bl	801148c <WM_GetWindowRectEx>
 8014656:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801465a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801465e:	429a      	cmp	r2, r3
 8014660:	d104      	bne.n	801466c <_CalcPositions+0x8c>
 8014662:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8014666:	3b01      	subs	r3, #1
 8014668:	f8ad 3010 	strh.w	r3, [sp, #16]
 801466c:	9b00      	ldr	r3, [sp, #0]
 801466e:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 8014672:	2afe      	cmp	r2, #254	; 0xfe
 8014674:	d111      	bne.n	801469a <_CalcPositions+0xba>
 8014676:	6998      	ldr	r0, [r3, #24]
 8014678:	f7f3 ffa8 	bl	80085cc <WM_GetScrollbarH>
 801467c:	b168      	cbz	r0, 801469a <_CalcPositions+0xba>
 801467e:	a905      	add	r1, sp, #20
 8014680:	f7fc ff04 	bl	801148c <WM_GetWindowRectEx>
 8014684:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8014688:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801468c:	429a      	cmp	r2, r3
 801468e:	d104      	bne.n	801469a <_CalcPositions+0xba>
 8014690:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8014694:	3b01      	subs	r3, #1
 8014696:	f8ad 3012 	strh.w	r3, [sp, #18]
 801469a:	427a      	negs	r2, r7
 801469c:	4630      	mov	r0, r6
 801469e:	f1c8 0100 	rsb	r1, r8, #0
 80146a2:	f7f9 fbc3 	bl	800de2c <GUI_MoveRect>
 80146a6:	9800      	ldr	r0, [sp, #0]
 80146a8:	4631      	mov	r1, r6
 80146aa:	f7fb fe14 	bl	80102d6 <SCROLLBAR__Rect2VRect>
 80146ae:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80146b2:	f9bd a010 	ldrsh.w	sl, [sp, #16]
 80146b6:	9b00      	ldr	r3, [sp, #0]
 80146b8:	ebc2 0a0a 	rsb	sl, r2, sl
 80146bc:	f8d3 904c 	ldr.w	r9, [r3, #76]	; 0x4c
 80146c0:	6d58      	ldr	r0, [r3, #84]	; 0x54
 80146c2:	f10a 0601 	add.w	r6, sl, #1
 80146c6:	eba6 0645 	sub.w	r6, r6, r5, lsl #1
 80146ca:	4649      	mov	r1, r9
 80146cc:	4370      	muls	r0, r6
 80146ce:	f7fe fed7 	bl	8013480 <GUI__DivideRound32>
 80146d2:	4b17      	ldr	r3, [pc, #92]	; (8014730 <_CalcPositions+0x150>)
 80146d4:	f8c4 a014 	str.w	sl, [r4, #20]
 80146d8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80146dc:	1c5a      	adds	r2, r3, #1
 80146de:	4282      	cmp	r2, r0
 80146e0:	bfa8      	it	ge
 80146e2:	1c98      	addge	r0, r3, #2
 80146e4:	42b0      	cmp	r0, r6
 80146e6:	bfb4      	ite	lt
 80146e8:	4607      	movlt	r7, r0
 80146ea:	4637      	movge	r7, r6
 80146ec:	ebc7 0806 	rsb	r8, r7, r6
 80146f0:	442e      	add	r6, r5
 80146f2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80146f6:	6126      	str	r6, [r4, #16]
 80146f8:	ae10      	add	r6, sp, #64	; 0x40
 80146fa:	6023      	str	r3, [r4, #0]
 80146fc:	1e6b      	subs	r3, r5, #1
 80146fe:	6063      	str	r3, [r4, #4]
 8014700:	f856 3d40 	ldr.w	r3, [r6, #-64]!
 8014704:	6d18      	ldr	r0, [r3, #80]	; 0x50
 8014706:	6d59      	ldr	r1, [r3, #84]	; 0x54
 8014708:	fb00 f008 	mul.w	r0, r0, r8
 801470c:	ebc1 0109 	rsb	r1, r1, r9
 8014710:	f7fe feb6 	bl	8013480 <GUI__DivideRound32>
 8014714:	4428      	add	r0, r5
 8014716:	19c5      	adds	r5, r0, r7
 8014718:	3d01      	subs	r5, #1
 801471a:	60a0      	str	r0, [r4, #8]
 801471c:	60e5      	str	r5, [r4, #12]
 801471e:	f8c4 801c 	str.w	r8, [r4, #28]
 8014722:	6227      	str	r7, [r4, #32]
 8014724:	4668      	mov	r0, sp
 8014726:	f7fa feaf 	bl	800f488 <GUI_ALLOC_UnlockH>
 801472a:	b010      	add	sp, #64	; 0x40
 801472c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014730:	200002fa 	.word	0x200002fa

08014734 <_Paint>:
 8014734:	b570      	push	{r4, r5, r6, lr}
 8014736:	b098      	sub	sp, #96	; 0x60
 8014738:	4606      	mov	r6, r0
 801473a:	f7fa fe97 	bl	800f46c <GUI_ALLOC_LockH>
 801473e:	6d83      	ldr	r3, [r0, #88]	; 0x58
 8014740:	9305      	str	r3, [sp, #20]
 8014742:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8014744:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8014746:	9001      	str	r0, [sp, #4]
 8014748:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 801474c:	a906      	add	r1, sp, #24
 801474e:	4605      	mov	r5, r0
 8014750:	4630      	mov	r0, r6
 8014752:	9304      	str	r3, [sp, #16]
 8014754:	f7ff ff44 	bl	80145e0 <_CalcPositions>
 8014758:	a801      	add	r0, sp, #4
 801475a:	f7fa fe95 	bl	800f488 <GUI_ALLOC_UnlockH>
 801475e:	a902      	add	r1, sp, #8
 8014760:	4628      	mov	r0, r5
 8014762:	f7f1 fefc 	bl	800655e <WIDGET__GetClientRect>
 8014766:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801476a:	9314      	str	r3, [sp, #80]	; 0x50
 801476c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8014770:	9316      	str	r3, [sp, #88]	; 0x58
 8014772:	ab04      	add	r3, sp, #16
 8014774:	9317      	str	r3, [sp, #92]	; 0x5c
 8014776:	2308      	movs	r3, #8
 8014778:	9310      	str	r3, [sp, #64]	; 0x40
 801477a:	9b06      	ldr	r3, [sp, #24]
 801477c:	9313      	str	r3, [sp, #76]	; 0x4c
 801477e:	9b07      	ldr	r3, [sp, #28]
 8014780:	9315      	str	r3, [sp, #84]	; 0x54
 8014782:	960f      	str	r6, [sp, #60]	; 0x3c
 8014784:	a80f      	add	r0, sp, #60	; 0x3c
 8014786:	47a0      	blx	r4
 8014788:	2310      	movs	r3, #16
 801478a:	9310      	str	r3, [sp, #64]	; 0x40
 801478c:	9b07      	ldr	r3, [sp, #28]
 801478e:	3301      	adds	r3, #1
 8014790:	9313      	str	r3, [sp, #76]	; 0x4c
 8014792:	9b08      	ldr	r3, [sp, #32]
 8014794:	3b01      	subs	r3, #1
 8014796:	9315      	str	r3, [sp, #84]	; 0x54
 8014798:	a80f      	add	r0, sp, #60	; 0x3c
 801479a:	47a0      	blx	r4
 801479c:	2311      	movs	r3, #17
 801479e:	9310      	str	r3, [sp, #64]	; 0x40
 80147a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80147a2:	3301      	adds	r3, #1
 80147a4:	9313      	str	r3, [sp, #76]	; 0x4c
 80147a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80147a8:	3b01      	subs	r3, #1
 80147aa:	9315      	str	r3, [sp, #84]	; 0x54
 80147ac:	a80f      	add	r0, sp, #60	; 0x3c
 80147ae:	47a0      	blx	r4
 80147b0:	2313      	movs	r3, #19
 80147b2:	9310      	str	r3, [sp, #64]	; 0x40
 80147b4:	9b08      	ldr	r3, [sp, #32]
 80147b6:	9313      	str	r3, [sp, #76]	; 0x4c
 80147b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80147ba:	9315      	str	r3, [sp, #84]	; 0x54
 80147bc:	a80f      	add	r0, sp, #60	; 0x3c
 80147be:	47a0      	blx	r4
 80147c0:	2309      	movs	r3, #9
 80147c2:	9310      	str	r3, [sp, #64]	; 0x40
 80147c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80147c6:	9313      	str	r3, [sp, #76]	; 0x4c
 80147c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80147ca:	9315      	str	r3, [sp, #84]	; 0x54
 80147cc:	a80f      	add	r0, sp, #60	; 0x3c
 80147ce:	47a0      	blx	r4
 80147d0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80147d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80147d4:	429a      	cmp	r2, r3
 80147d6:	d006      	beq.n	80147e6 <_Paint+0xb2>
 80147d8:	210c      	movs	r1, #12
 80147da:	3201      	adds	r2, #1
 80147dc:	9110      	str	r1, [sp, #64]	; 0x40
 80147de:	9213      	str	r2, [sp, #76]	; 0x4c
 80147e0:	9315      	str	r3, [sp, #84]	; 0x54
 80147e2:	a80f      	add	r0, sp, #60	; 0x3c
 80147e4:	47a0      	blx	r4
 80147e6:	b018      	add	sp, #96	; 0x60
 80147e8:	bd70      	pop	{r4, r5, r6, pc}

080147ea <GUI_DRAW__Draw>:
 80147ea:	e92d 43e3 	stmdb	sp!, {r0, r1, r5, r6, r7, r8, r9, lr}
 80147ee:	4688      	mov	r8, r1
 80147f0:	4617      	mov	r7, r2
 80147f2:	461e      	mov	r6, r3
 80147f4:	4681      	mov	r9, r0
 80147f6:	b170      	cbz	r0, 8014816 <GUI_DRAW__Draw+0x2c>
 80147f8:	f7fa fe38 	bl	800f46c <GUI_ALLOC_LockH>
 80147fc:	4605      	mov	r5, r0
 80147fe:	a802      	add	r0, sp, #8
 8014800:	682b      	ldr	r3, [r5, #0]
 8014802:	f840 5d04 	str.w	r5, [r0, #-4]!
 8014806:	681d      	ldr	r5, [r3, #0]
 8014808:	f7fa fe3e 	bl	800f488 <GUI_ALLOC_UnlockH>
 801480c:	4648      	mov	r0, r9
 801480e:	4641      	mov	r1, r8
 8014810:	463a      	mov	r2, r7
 8014812:	4633      	mov	r3, r6
 8014814:	47a8      	blx	r5
 8014816:	b002      	add	sp, #8
 8014818:	e8bd 83e0 	ldmia.w	sp!, {r5, r6, r7, r8, r9, pc}

0801481c <WM__SendMessageIfEnabled>:
 801481c:	b538      	push	{r3, r4, r5, lr}
 801481e:	4604      	mov	r4, r0
 8014820:	460d      	mov	r5, r1
 8014822:	f7fc fa65 	bl	8010cf0 <WM__IsEnabled>
 8014826:	b128      	cbz	r0, 8014834 <WM__SendMessageIfEnabled+0x18>
 8014828:	4620      	mov	r0, r4
 801482a:	4629      	mov	r1, r5
 801482c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8014830:	f7fc ba40 	b.w	8010cb4 <WM__SendMessage>
 8014834:	bd38      	pop	{r3, r4, r5, pc}

08014836 <WM__IsChild>:
 8014836:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014838:	460d      	mov	r5, r1
 801483a:	4604      	mov	r4, r0
 801483c:	b160      	cbz	r0, 8014858 <WM__IsChild+0x22>
 801483e:	f7fa fe15 	bl	800f46c <GUI_ALLOC_LockH>
 8014842:	9001      	str	r0, [sp, #4]
 8014844:	b120      	cbz	r0, 8014850 <WM__IsChild+0x1a>
 8014846:	6984      	ldr	r4, [r0, #24]
 8014848:	1b63      	subs	r3, r4, r5
 801484a:	425c      	negs	r4, r3
 801484c:	415c      	adcs	r4, r3
 801484e:	e000      	b.n	8014852 <WM__IsChild+0x1c>
 8014850:	4604      	mov	r4, r0
 8014852:	a801      	add	r0, sp, #4
 8014854:	f7fa fe18 	bl	800f488 <GUI_ALLOC_UnlockH>
 8014858:	4620      	mov	r0, r4
 801485a:	b003      	add	sp, #12
 801485c:	bd30      	pop	{r4, r5, pc}

0801485e <WM__ForEachDesc>:
 801485e:	b570      	push	{r4, r5, r6, lr}
 8014860:	460d      	mov	r5, r1
 8014862:	4616      	mov	r6, r2
 8014864:	f7fa fdf8 	bl	800f458 <GUI_ALLOC_h2p>
 8014868:	69c4      	ldr	r4, [r0, #28]
 801486a:	b164      	cbz	r4, 8014886 <WM__ForEachDesc+0x28>
 801486c:	4620      	mov	r0, r4
 801486e:	4631      	mov	r1, r6
 8014870:	47a8      	blx	r5
 8014872:	4620      	mov	r0, r4
 8014874:	4629      	mov	r1, r5
 8014876:	4632      	mov	r2, r6
 8014878:	f7ff fff1 	bl	801485e <WM__ForEachDesc>
 801487c:	4620      	mov	r0, r4
 801487e:	f7fa fdeb 	bl	800f458 <GUI_ALLOC_h2p>
 8014882:	6a04      	ldr	r4, [r0, #32]
 8014884:	e7f1      	b.n	801486a <WM__ForEachDesc+0xc>
 8014886:	bd70      	pop	{r4, r5, r6, pc}

08014888 <LCD_GetNumLayers>:
 8014888:	b510      	push	{r4, lr}
 801488a:	2000      	movs	r0, #0
 801488c:	f7fa f894 	bl	800e9b8 <GUI_DEVICE__GetpDriver>
 8014890:	1c04      	adds	r4, r0, #0
 8014892:	f04f 0001 	mov.w	r0, #1
 8014896:	bf18      	it	ne
 8014898:	2401      	movne	r4, #1
 801489a:	f7fa f88d 	bl	800e9b8 <GUI_DEVICE__GetpDriver>
 801489e:	b100      	cbz	r0, 80148a2 <LCD_GetNumLayers+0x1a>
 80148a0:	3401      	adds	r4, #1
 80148a2:	4620      	mov	r0, r4
 80148a4:	bd10      	pop	{r4, pc}
	...

080148a8 <LCD_GetBkColorIndex>:
 80148a8:	4b02      	ldr	r3, [pc, #8]	; (80148b4 <LCD_GetBkColorIndex+0xc>)
 80148aa:	681b      	ldr	r3, [r3, #0]
 80148ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80148ae:	6818      	ldr	r0, [r3, #0]
 80148b0:	4770      	bx	lr
 80148b2:	bf00      	nop
 80148b4:	20000274 	.word	0x20000274

080148b8 <LCD_GetColorIndex>:
 80148b8:	4b02      	ldr	r3, [pc, #8]	; (80148c4 <LCD_GetColorIndex+0xc>)
 80148ba:	681b      	ldr	r3, [r3, #0]
 80148bc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80148be:	6818      	ldr	r0, [r3, #0]
 80148c0:	4770      	bx	lr
 80148c2:	bf00      	nop
 80148c4:	20000274 	.word	0x20000274

080148c8 <GUI__sqrt32>:
 80148c8:	b510      	push	{r4, lr}
 80148ca:	2110      	movs	r1, #16
 80148cc:	2300      	movs	r3, #0
 80148ce:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80148d2:	189c      	adds	r4, r3, r2
 80148d4:	4284      	cmp	r4, r0
 80148d6:	bf9c      	itt	ls
 80148d8:	18a3      	addls	r3, r4, r2
 80148da:	ebc4 0000 	rsbls	r0, r4, r0
 80148de:	3901      	subs	r1, #1
 80148e0:	ea4f 0353 	mov.w	r3, r3, lsr #1
 80148e4:	ea4f 0292 	mov.w	r2, r2, lsr #2
 80148e8:	d1f3      	bne.n	80148d2 <GUI__sqrt32+0xa>
 80148ea:	4618      	mov	r0, r3
 80148ec:	bd10      	pop	{r4, pc}

080148ee <GUI__HandleEOLine>:
 80148ee:	6803      	ldr	r3, [r0, #0]
 80148f0:	781a      	ldrb	r2, [r3, #0]
 80148f2:	b122      	cbz	r2, 80148fe <GUI__HandleEOLine+0x10>
 80148f4:	2a0a      	cmp	r2, #10
 80148f6:	d104      	bne.n	8014902 <GUI__HandleEOLine+0x14>
 80148f8:	3301      	adds	r3, #1
 80148fa:	6003      	str	r3, [r0, #0]
 80148fc:	e001      	b.n	8014902 <GUI__HandleEOLine+0x14>
 80148fe:	2001      	movs	r0, #1
 8014900:	4770      	bx	lr
 8014902:	2000      	movs	r0, #0
 8014904:	4770      	bx	lr

08014906 <_CreateBuffer>:
 8014906:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014908:	6943      	ldr	r3, [r0, #20]
 801490a:	4605      	mov	r5, r0
 801490c:	8818      	ldrh	r0, [r3, #0]
 801490e:	300d      	adds	r0, #13
 8014910:	0080      	lsls	r0, r0, #2
 8014912:	460e      	mov	r6, r1
 8014914:	f7fa fffe 	bl	800f914 <GUI_ALLOC_AllocNoInit>
 8014918:	4607      	mov	r7, r0
 801491a:	b908      	cbnz	r0, 8014920 <_CreateBuffer+0x1a>
 801491c:	2000      	movs	r0, #0
 801491e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014920:	f7fa fda4 	bl	800f46c <GUI_ALLOC_LockH>
 8014924:	682b      	ldr	r3, [r5, #0]
 8014926:	4604      	mov	r4, r0
 8014928:	6998      	ldr	r0, [r3, #24]
 801492a:	f7fa f845 	bl	800e9b8 <GUI_DEVICE__GetpDriver>
 801492e:	2800      	cmp	r0, #0
 8014930:	d0f4      	beq.n	801491c <_CreateBuffer+0x16>
 8014932:	68c3      	ldr	r3, [r0, #12]
 8014934:	2108      	movs	r1, #8
 8014936:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014938:	4798      	blx	r3
 801493a:	2802      	cmp	r0, #2
 801493c:	dd0b      	ble.n	8014956 <_CreateBuffer+0x50>
 801493e:	2804      	cmp	r0, #4
 8014940:	dd06      	ble.n	8014950 <_CreateBuffer+0x4a>
 8014942:	2808      	cmp	r0, #8
 8014944:	dd06      	ble.n	8014954 <_CreateBuffer+0x4e>
 8014946:	2811      	cmp	r0, #17
 8014948:	bfb4      	ite	lt
 801494a:	2010      	movlt	r0, #16
 801494c:	2020      	movge	r0, #32
 801494e:	e002      	b.n	8014956 <_CreateBuffer+0x50>
 8014950:	2004      	movs	r0, #4
 8014952:	e000      	b.n	8014956 <_CreateBuffer+0x50>
 8014954:	2008      	movs	r0, #8
 8014956:	2808      	cmp	r0, #8
 8014958:	61a0      	str	r0, [r4, #24]
 801495a:	dd04      	ble.n	8014966 <_CreateBuffer+0x60>
 801495c:	2810      	cmp	r0, #16
 801495e:	bfcc      	ite	gt
 8014960:	2304      	movgt	r3, #4
 8014962:	2302      	movle	r3, #2
 8014964:	e000      	b.n	8014968 <_CreateBuffer+0x62>
 8014966:	2301      	movs	r3, #1
 8014968:	696a      	ldr	r2, [r5, #20]
 801496a:	6123      	str	r3, [r4, #16]
 801496c:	8812      	ldrh	r2, [r2, #0]
 801496e:	61e2      	str	r2, [r4, #28]
 8014970:	4353      	muls	r3, r2
 8014972:	6163      	str	r3, [r4, #20]
 8014974:	f7fa ff24 	bl	800f7c0 <GUI_ALLOC_GetMaxSize>
 8014978:	6963      	ldr	r3, [r4, #20]
 801497a:	f884 6030 	strb.w	r6, [r4, #48]	; 0x30
 801497e:	4283      	cmp	r3, r0
 8014980:	f04f 0200 	mov.w	r2, #0
 8014984:	bfc8      	it	gt
 8014986:	6160      	strgt	r0, [r4, #20]
 8014988:	2e01      	cmp	r6, #1
 801498a:	60e2      	str	r2, [r4, #12]
 801498c:	bf18      	it	ne
 801498e:	69e2      	ldrne	r2, [r4, #28]
 8014990:	60a7      	str	r7, [r4, #8]
 8014992:	bf18      	it	ne
 8014994:	f102 4280 	addne.w	r2, r2, #1073741824	; 0x40000000
 8014998:	f104 0334 	add.w	r3, r4, #52	; 0x34
 801499c:	bf18      	it	ne
 801499e:	f102 32ff 	addne.w	r2, r2, #4294967295
 80149a2:	6023      	str	r3, [r4, #0]
 80149a4:	bf18      	it	ne
 80149a6:	eb03 0382 	addne.w	r3, r3, r2, lsl #2
 80149aa:	6063      	str	r3, [r4, #4]
 80149ac:	4620      	mov	r0, r4
 80149ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080149b0 <_GetBkIndex.isra.0>:
 80149b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80149b4:	f9b3 8004 	ldrsh.w	r8, [r3, #4]
 80149b8:	4540      	cmp	r0, r8
 80149ba:	4606      	mov	r6, r0
 80149bc:	460d      	mov	r5, r1
 80149be:	4691      	mov	r9, r2
 80149c0:	461c      	mov	r4, r3
 80149c2:	da04      	bge.n	80149ce <_GetBkIndex.isra.0+0x1e>
 80149c4:	f8d9 0000 	ldr.w	r0, [r9]
 80149c8:	bb28      	cbnz	r0, 8014a16 <_GetBkIndex.isra.0+0x66>
 80149ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80149ce:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80149d2:	4298      	cmp	r0, r3
 80149d4:	dcf6      	bgt.n	80149c4 <_GetBkIndex.isra.0+0x14>
 80149d6:	f9b4 7006 	ldrsh.w	r7, [r4, #6]
 80149da:	42b9      	cmp	r1, r7
 80149dc:	dbf2      	blt.n	80149c4 <_GetBkIndex.isra.0+0x14>
 80149de:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80149e2:	4299      	cmp	r1, r3
 80149e4:	dcee      	bgt.n	80149c4 <_GetBkIndex.isra.0+0x14>
 80149e6:	ebc8 0800 	rsb	r8, r8, r0
 80149ea:	1bcf      	subs	r7, r1, r7
 80149ec:	6960      	ldr	r0, [r4, #20]
 80149ee:	4641      	mov	r1, r8
 80149f0:	463a      	mov	r2, r7
 80149f2:	f000 fba3 	bl	801513c <GUI_GetBitmapPixelIndex>
 80149f6:	2800      	cmp	r0, #0
 80149f8:	d0e4      	beq.n	80149c4 <_GetBkIndex.isra.0+0x14>
 80149fa:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80149fe:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8014a02:	1a8a      	subs	r2, r1, r2
 8014a04:	fb02 7707 	mla	r7, r2, r7, r7
 8014a08:	f104 0320 	add.w	r3, r4, #32
 8014a0c:	44b8      	add	r8, r7
 8014a0e:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 8014a12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014a16:	68c3      	ldr	r3, [r0, #12]
 8014a18:	4631      	mov	r1, r6
 8014a1a:	695b      	ldr	r3, [r3, #20]
 8014a1c:	462a      	mov	r2, r5
 8014a1e:	4798      	blx	r3
 8014a20:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08014a24 <_GetBkIndexAlpha.isra.2>:
 8014a24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014a28:	f9b3 6004 	ldrsh.w	r6, [r3, #4]
 8014a2c:	42b0      	cmp	r0, r6
 8014a2e:	4680      	mov	r8, r0
 8014a30:	460f      	mov	r7, r1
 8014a32:	4691      	mov	r9, r2
 8014a34:	461d      	mov	r5, r3
 8014a36:	db14      	blt.n	8014a62 <_GetBkIndexAlpha.isra.2+0x3e>
 8014a38:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8014a3c:	4298      	cmp	r0, r3
 8014a3e:	dc10      	bgt.n	8014a62 <_GetBkIndexAlpha.isra.2+0x3e>
 8014a40:	f9b5 4006 	ldrsh.w	r4, [r5, #6]
 8014a44:	42a1      	cmp	r1, r4
 8014a46:	db0c      	blt.n	8014a62 <_GetBkIndexAlpha.isra.2+0x3e>
 8014a48:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8014a4c:	4299      	cmp	r1, r3
 8014a4e:	dc08      	bgt.n	8014a62 <_GetBkIndexAlpha.isra.2+0x3e>
 8014a50:	1b86      	subs	r6, r0, r6
 8014a52:	6968      	ldr	r0, [r5, #20]
 8014a54:	1b0c      	subs	r4, r1, r4
 8014a56:	b130      	cbz	r0, 8014a66 <_GetBkIndexAlpha.isra.2+0x42>
 8014a58:	4631      	mov	r1, r6
 8014a5a:	4622      	mov	r2, r4
 8014a5c:	f000 fb6e 	bl	801513c <GUI_GetBitmapPixelIndex>
 8014a60:	e003      	b.n	8014a6a <_GetBkIndexAlpha.isra.2+0x46>
 8014a62:	2400      	movs	r4, #0
 8014a64:	4626      	mov	r6, r4
 8014a66:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8014a6a:	0e00      	lsrs	r0, r0, #24
 8014a6c:	28ff      	cmp	r0, #255	; 0xff
 8014a6e:	d109      	bne.n	8014a84 <_GetBkIndexAlpha.isra.2+0x60>
 8014a70:	f8d9 0000 	ldr.w	r0, [r9]
 8014a74:	b190      	cbz	r0, 8014a9c <_GetBkIndexAlpha.isra.2+0x78>
 8014a76:	68c3      	ldr	r3, [r0, #12]
 8014a78:	4641      	mov	r1, r8
 8014a7a:	695b      	ldr	r3, [r3, #20]
 8014a7c:	463a      	mov	r2, r7
 8014a7e:	4798      	blx	r3
 8014a80:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014a84:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 8014a88:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8014a8c:	1a8a      	subs	r2, r1, r2
 8014a8e:	fb02 4404 	mla	r4, r2, r4, r4
 8014a92:	f105 0320 	add.w	r3, r5, #32
 8014a96:	4426      	add	r6, r4
 8014a98:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8014a9c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08014aa0 <_GetDeviceRect>:
 8014aa0:	b538      	push	{r3, r4, r5, lr}
 8014aa2:	4a0c      	ldr	r2, [pc, #48]	; (8014ad4 <_GetDeviceRect+0x34>)
 8014aa4:	6983      	ldr	r3, [r0, #24]
 8014aa6:	56d2      	ldrsb	r2, [r2, r3]
 8014aa8:	2a01      	cmp	r2, #1
 8014aaa:	4605      	mov	r5, r0
 8014aac:	460c      	mov	r4, r1
 8014aae:	dd0d      	ble.n	8014acc <_GetDeviceRect+0x2c>
 8014ab0:	2200      	movs	r2, #0
 8014ab2:	804a      	strh	r2, [r1, #2]
 8014ab4:	800a      	strh	r2, [r1, #0]
 8014ab6:	4618      	mov	r0, r3
 8014ab8:	f7f7 fa3c 	bl	800bf34 <LCD_GetXSizeEx>
 8014abc:	3801      	subs	r0, #1
 8014abe:	80a0      	strh	r0, [r4, #4]
 8014ac0:	69a8      	ldr	r0, [r5, #24]
 8014ac2:	f7f7 fa3a 	bl	800bf3a <LCD_GetYSizeEx>
 8014ac6:	3801      	subs	r0, #1
 8014ac8:	80e0      	strh	r0, [r4, #6]
 8014aca:	bd38      	pop	{r3, r4, r5, pc}
 8014acc:	68c3      	ldr	r3, [r0, #12]
 8014ace:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014ad0:	4798      	blx	r3
 8014ad2:	bd38      	pop	{r3, r4, r5, pc}
 8014ad4:	2001ba04 	.word	0x2001ba04

08014ad8 <_FlushBuffer.isra.5>:
 8014ad8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014ada:	460c      	mov	r4, r1
 8014adc:	68c9      	ldr	r1, [r1, #12]
 8014ade:	b087      	sub	sp, #28
 8014ae0:	2900      	cmp	r1, #0
 8014ae2:	d030      	beq.n	8014b46 <_FlushBuffer.isra.5+0x6e>
 8014ae4:	f994 3030 	ldrsb.w	r3, [r4, #48]	; 0x30
 8014ae8:	6822      	ldr	r2, [r4, #0]
 8014aea:	2b01      	cmp	r3, #1
 8014aec:	d103      	bne.n	8014af6 <_FlushBuffer.isra.5+0x1e>
 8014aee:	4615      	mov	r5, r2
 8014af0:	6062      	str	r2, [r4, #4]
 8014af2:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 8014af4:	e009      	b.n	8014b0a <_FlushBuffer.isra.5+0x32>
 8014af6:	69e3      	ldr	r3, [r4, #28]
 8014af8:	6865      	ldr	r5, [r4, #4]
 8014afa:	6a27      	ldr	r7, [r4, #32]
 8014afc:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8014b00:	3b01      	subs	r3, #1
 8014b02:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8014b06:	3504      	adds	r5, #4
 8014b08:	6063      	str	r3, [r4, #4]
 8014b0a:	6806      	ldr	r6, [r0, #0]
 8014b0c:	b1b6      	cbz	r6, 8014b3c <_FlushBuffer.isra.5+0x64>
 8014b0e:	69a2      	ldr	r2, [r4, #24]
 8014b10:	4628      	mov	r0, r5
 8014b12:	f7fe fcc2 	bl	801349a <GUI__CompactPixelIndices>
 8014b16:	2301      	movs	r3, #1
 8014b18:	68f2      	ldr	r2, [r6, #12]
 8014b1a:	9300      	str	r3, [sp, #0]
 8014b1c:	69a3      	ldr	r3, [r4, #24]
 8014b1e:	9301      	str	r3, [sp, #4]
 8014b20:	9503      	str	r5, [sp, #12]
 8014b22:	6963      	ldr	r3, [r4, #20]
 8014b24:	9302      	str	r3, [sp, #8]
 8014b26:	2500      	movs	r5, #0
 8014b28:	9504      	str	r5, [sp, #16]
 8014b2a:	9505      	str	r5, [sp, #20]
 8014b2c:	f8d2 c004 	ldr.w	ip, [r2, #4]
 8014b30:	68e3      	ldr	r3, [r4, #12]
 8014b32:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014b34:	4630      	mov	r0, r6
 8014b36:	4639      	mov	r1, r7
 8014b38:	47e0      	blx	ip
 8014b3a:	e000      	b.n	8014b3e <_FlushBuffer.isra.5+0x66>
 8014b3c:	2501      	movs	r5, #1
 8014b3e:	2300      	movs	r3, #0
 8014b40:	60e3      	str	r3, [r4, #12]
 8014b42:	b2e8      	uxtb	r0, r5
 8014b44:	e000      	b.n	8014b48 <_FlushBuffer.isra.5+0x70>
 8014b46:	4608      	mov	r0, r1
 8014b48:	b007      	add	sp, #28
 8014b4a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014b4c <_SetBkIndexBuffered>:
 8014b4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014b4e:	9c06      	ldr	r4, [sp, #24]
 8014b50:	460d      	mov	r5, r1
 8014b52:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8014b54:	428d      	cmp	r5, r1
 8014b56:	4606      	mov	r6, r0
 8014b58:	4617      	mov	r7, r2
 8014b5a:	d105      	bne.n	8014b68 <_SetBkIndexBuffered+0x1c>
 8014b5c:	f994 2030 	ldrsb.w	r2, [r4, #48]	; 0x30
 8014b60:	6a21      	ldr	r1, [r4, #32]
 8014b62:	4411      	add	r1, r2
 8014b64:	4288      	cmp	r0, r1
 8014b66:	d003      	beq.n	8014b70 <_SetBkIndexBuffered+0x24>
 8014b68:	4618      	mov	r0, r3
 8014b6a:	4621      	mov	r1, r4
 8014b6c:	f7ff ffb4 	bl	8014ad8 <_FlushBuffer.isra.5>
 8014b70:	6863      	ldr	r3, [r4, #4]
 8014b72:	601f      	str	r7, [r3, #0]
 8014b74:	f994 2030 	ldrsb.w	r2, [r4, #48]	; 0x30
 8014b78:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8014b7c:	6063      	str	r3, [r4, #4]
 8014b7e:	68e3      	ldr	r3, [r4, #12]
 8014b80:	b90b      	cbnz	r3, 8014b86 <_SetBkIndexBuffered+0x3a>
 8014b82:	62a6      	str	r6, [r4, #40]	; 0x28
 8014b84:	62e5      	str	r5, [r4, #44]	; 0x2c
 8014b86:	3301      	adds	r3, #1
 8014b88:	60e3      	str	r3, [r4, #12]
 8014b8a:	6226      	str	r6, [r4, #32]
 8014b8c:	6265      	str	r5, [r4, #36]	; 0x24
 8014b8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014b90 <_ReleaseBuffer.isra.6>:
 8014b90:	b513      	push	{r0, r1, r4, lr}
 8014b92:	9101      	str	r1, [sp, #4]
 8014b94:	f7ff ffa0 	bl	8014ad8 <_FlushBuffer.isra.5>
 8014b98:	a802      	add	r0, sp, #8
 8014b9a:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 8014b9e:	6894      	ldr	r4, [r2, #8]
 8014ba0:	f7fa fc72 	bl	800f488 <GUI_ALLOC_UnlockH>
 8014ba4:	4620      	mov	r0, r4
 8014ba6:	f7fa fc9b 	bl	800f4e0 <GUI_ALLOC_Free>
 8014baa:	b002      	add	sp, #8
 8014bac:	bd10      	pop	{r4, pc}
	...

08014bb0 <GUI_SPRITE_SetPosition>:
 8014bb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014bb4:	b0a7      	sub	sp, #156	; 0x9c
 8014bb6:	9116      	str	r1, [sp, #88]	; 0x58
 8014bb8:	9217      	str	r2, [sp, #92]	; 0x5c
 8014bba:	2800      	cmp	r0, #0
 8014bbc:	f000 8275 	beq.w	80150aa <GUI_SPRITE_SetPosition+0x4fa>
 8014bc0:	f7fa fc54 	bl	800f46c <GUI_ALLOC_LockH>
 8014bc4:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8014bc6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014bca:	6801      	ldr	r1, [r0, #0]
 8014bcc:	9023      	str	r0, [sp, #140]	; 0x8c
 8014bce:	429a      	cmp	r2, r3
 8014bd0:	9106      	str	r1, [sp, #24]
 8014bd2:	d106      	bne.n	8014be2 <GUI_SPRITE_SetPosition+0x32>
 8014bd4:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8014bd8:	f8dd e05c 	ldr.w	lr, [sp, #92]	; 0x5c
 8014bdc:	459e      	cmp	lr, r3
 8014bde:	f000 8239 	beq.w	8015054 <GUI_SPRITE_SetPosition+0x4a4>
 8014be2:	2000      	movs	r0, #0
 8014be4:	f7f5 ffd4 	bl	800ab90 <GUI_MEMDEV_Select>
 8014be8:	4ba0      	ldr	r3, [pc, #640]	; (8014e6c <GUI_SPRITE_SetPosition+0x2bc>)
 8014bea:	9906      	ldr	r1, [sp, #24]
 8014bec:	681b      	ldr	r3, [r3, #0]
 8014bee:	6989      	ldr	r1, [r1, #24]
 8014bf0:	7c5a      	ldrb	r2, [r3, #17]
 8014bf2:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 8014bf4:	9108      	str	r1, [sp, #32]
 8014bf6:	4291      	cmp	r1, r2
 8014bf8:	bf18      	it	ne
 8014bfa:	7459      	strbne	r1, [r3, #17]
 8014bfc:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8014c00:	9310      	str	r3, [sp, #64]	; 0x40
 8014c02:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8014c06:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8014c0a:	f9b5 6006 	ldrsh.w	r6, [r5, #6]
 8014c0e:	921a      	str	r2, [sp, #104]	; 0x68
 8014c10:	ebce 0303 	rsb	r3, lr, r3
 8014c14:	1c59      	adds	r1, r3, #1
 8014c16:	9307      	str	r3, [sp, #28]
 8014c18:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8014c1c:	901f      	str	r0, [sp, #124]	; 0x7c
 8014c1e:	1b9b      	subs	r3, r3, r6
 8014c20:	1c5a      	adds	r2, r3, #1
 8014c22:	930e      	str	r3, [sp, #56]	; 0x38
 8014c24:	8a2b      	ldrh	r3, [r5, #16]
 8014c26:	910d      	str	r1, [sp, #52]	; 0x34
 8014c28:	079b      	lsls	r3, r3, #30
 8014c2a:	921e      	str	r2, [sp, #120]	; 0x78
 8014c2c:	f140 81f7 	bpl.w	801501e <GUI_SPRITE_SetPosition+0x46e>
 8014c30:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014c32:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8014c34:	696b      	ldr	r3, [r5, #20]
 8014c36:	9311      	str	r3, [sp, #68]	; 0x44
 8014c38:	ebce 0a01 	rsb	sl, lr, r1
 8014c3c:	f1ba 0f00 	cmp.w	sl, #0
 8014c40:	ebc6 0902 	rsb	r9, r6, r2
 8014c44:	dc0c      	bgt.n	8014c60 <GUI_SPRITE_SetPosition+0xb0>
 8014c46:	9b07      	ldr	r3, [sp, #28]
 8014c48:	930a      	str	r3, [sp, #40]	; 0x28
 8014c4a:	469e      	mov	lr, r3
 8014c4c:	f04f 32ff 	mov.w	r2, #4294967295
 8014c50:	44d6      	add	lr, sl
 8014c52:	2100      	movs	r1, #0
 8014c54:	f8cd e01c 	str.w	lr, [sp, #28]
 8014c58:	911c      	str	r1, [sp, #112]	; 0x70
 8014c5a:	9214      	str	r2, [sp, #80]	; 0x50
 8014c5c:	9204      	str	r2, [sp, #16]
 8014c5e:	e009      	b.n	8014c74 <GUI_SPRITE_SetPosition+0xc4>
 8014c60:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014c62:	f8cd a070 	str.w	sl, [sp, #112]	; 0x70
 8014c66:	f04f 0e01 	mov.w	lr, #1
 8014c6a:	2100      	movs	r1, #0
 8014c6c:	9314      	str	r3, [sp, #80]	; 0x50
 8014c6e:	f8cd e010 	str.w	lr, [sp, #16]
 8014c72:	910a      	str	r1, [sp, #40]	; 0x28
 8014c74:	f1b9 0f00 	cmp.w	r9, #0
 8014c78:	dc0c      	bgt.n	8014c94 <GUI_SPRITE_SetPosition+0xe4>
 8014c7a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8014c7c:	4622      	mov	r2, r4
 8014c7e:	f04f 3eff 	mov.w	lr, #4294967295
 8014c82:	444a      	add	r2, r9
 8014c84:	2300      	movs	r3, #0
 8014c86:	920e      	str	r2, [sp, #56]	; 0x38
 8014c88:	931b      	str	r3, [sp, #108]	; 0x6c
 8014c8a:	f8cd e054 	str.w	lr, [sp, #84]	; 0x54
 8014c8e:	f8cd e024 	str.w	lr, [sp, #36]	; 0x24
 8014c92:	e006      	b.n	8014ca2 <GUI_SPRITE_SetPosition+0xf2>
 8014c94:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8014c96:	f8cd 906c 	str.w	r9, [sp, #108]	; 0x6c
 8014c9a:	2301      	movs	r3, #1
 8014c9c:	9215      	str	r2, [sp, #84]	; 0x54
 8014c9e:	9309      	str	r3, [sp, #36]	; 0x24
 8014ca0:	2400      	movs	r4, #0
 8014ca2:	9806      	ldr	r0, [sp, #24]
 8014ca4:	a924      	add	r1, sp, #144	; 0x90
 8014ca6:	f7ff fefb 	bl	8014aa0 <_GetDeviceRect>
 8014caa:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8014cac:	9904      	ldr	r1, [sp, #16]
 8014cae:	f7ff fe2a 	bl	8014906 <_CreateBuffer>
 8014cb2:	9012      	str	r0, [sp, #72]	; 0x48
 8014cb4:	2800      	cmp	r0, #0
 8014cb6:	f000 81b2 	beq.w	801501e <GUI_SPRITE_SetPosition+0x46e>
 8014cba:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8014cbc:	9904      	ldr	r1, [sp, #16]
 8014cbe:	f7ff fe22 	bl	8014906 <_CreateBuffer>
 8014cc2:	9013      	str	r0, [sp, #76]	; 0x4c
 8014cc4:	2800      	cmp	r0, #0
 8014cc6:	f000 81a5 	beq.w	8015014 <GUI_SPRITE_SetPosition+0x464>
 8014cca:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8014ccc:	68d8      	ldr	r0, [r3, #12]
 8014cce:	4426      	add	r6, r4
 8014cd0:	b990      	cbnz	r0, 8014cf8 <GUI_SPRITE_SetPosition+0x148>
 8014cd2:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 8014cd6:	9909      	ldr	r1, [sp, #36]	; 0x24
 8014cd8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014cda:	9019      	str	r0, [sp, #100]	; 0x64
 8014cdc:	ea4f 038e 	mov.w	r3, lr, lsl #2
 8014ce0:	434b      	muls	r3, r1
 8014ce2:	9321      	str	r3, [sp, #132]	; 0x84
 8014ce4:	fb0e 2304 	mla	r3, lr, r4, r2
 8014ce8:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8014cec:	930c      	str	r3, [sp, #48]	; 0x30
 8014cee:	9b04      	ldr	r3, [sp, #16]
 8014cf0:	009b      	lsls	r3, r3, #2
 8014cf2:	444e      	add	r6, r9
 8014cf4:	9320      	str	r3, [sp, #128]	; 0x80
 8014cf6:	e0db      	b.n	8014eb0 <GUI_SPRITE_SetPosition+0x300>
 8014cf8:	f7fa fbb8 	bl	800f46c <GUI_ALLOC_LockH>
 8014cfc:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 8014d00:	9909      	ldr	r1, [sp, #36]	; 0x24
 8014d02:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014d04:	9022      	str	r0, [sp, #136]	; 0x88
 8014d06:	ea4f 038e 	mov.w	r3, lr, lsl #2
 8014d0a:	434b      	muls	r3, r1
 8014d0c:	9319      	str	r3, [sp, #100]	; 0x64
 8014d0e:	fb0e 2304 	mla	r3, lr, r4, r2
 8014d12:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8014d16:	930b      	str	r3, [sp, #44]	; 0x2c
 8014d18:	9b04      	ldr	r3, [sp, #16]
 8014d1a:	009b      	lsls	r3, r3, #2
 8014d1c:	444e      	add	r6, r9
 8014d1e:	931d      	str	r3, [sp, #116]	; 0x74
 8014d20:	9915      	ldr	r1, [sp, #84]	; 0x54
 8014d22:	428c      	cmp	r4, r1
 8014d24:	f000 809e 	beq.w	8014e64 <GUI_SPRITE_SetPosition+0x2b4>
 8014d28:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 8014d2c:	4574      	cmp	r4, lr
 8014d2e:	db05      	blt.n	8014d3c <GUI_SPRITE_SetPosition+0x18c>
 8014d30:	990e      	ldr	r1, [sp, #56]	; 0x38
 8014d32:	428c      	cmp	r4, r1
 8014d34:	bfcc      	ite	gt
 8014d36:	2300      	movgt	r3, #0
 8014d38:	2301      	movle	r3, #1
 8014d3a:	e000      	b.n	8014d3e <GUI_SPRITE_SetPosition+0x18e>
 8014d3c:	2300      	movs	r3, #0
 8014d3e:	b2db      	uxtb	r3, r3
 8014d40:	9318      	str	r3, [sp, #96]	; 0x60
 8014d42:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8014d44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014d46:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8014d48:	9105      	str	r1, [sp, #20]
 8014d4a:	ebc9 0206 	rsb	r2, r9, r6
 8014d4e:	441f      	add	r7, r3
 8014d50:	920c      	str	r2, [sp, #48]	; 0x30
 8014d52:	4457      	add	r7, sl
 8014d54:	461d      	mov	r5, r3
 8014d56:	9914      	ldr	r1, [sp, #80]	; 0x50
 8014d58:	428d      	cmp	r5, r1
 8014d5a:	d07a      	beq.n	8014e52 <GUI_SPRITE_SetPosition+0x2a2>
 8014d5c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014d5e:	4629      	mov	r1, r5
 8014d60:	4622      	mov	r2, r4
 8014d62:	f000 f9eb 	bl	801513c <GUI_GetBitmapPixelIndex>
 8014d66:	900f      	str	r0, [sp, #60]	; 0x3c
 8014d68:	2800      	cmp	r0, #0
 8014d6a:	d069      	beq.n	8014e40 <GUI_SPRITE_SetPosition+0x290>
 8014d6c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014d6e:	4295      	cmp	r5, r2
 8014d70:	ebca 0c07 	rsb	ip, sl, r7
 8014d74:	db07      	blt.n	8014d86 <GUI_SPRITE_SetPosition+0x1d6>
 8014d76:	9b07      	ldr	r3, [sp, #28]
 8014d78:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8014d7c:	429d      	cmp	r5, r3
 8014d7e:	bfc8      	it	gt
 8014d80:	f04f 0b00 	movgt.w	fp, #0
 8014d84:	e001      	b.n	8014d8a <GUI_SPRITE_SetPosition+0x1da>
 8014d86:	f04f 0b00 	mov.w	fp, #0
 8014d8a:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8014d8e:	429f      	cmp	r7, r3
 8014d90:	fa5f fb8b 	uxtb.w	fp, fp
 8014d94:	db17      	blt.n	8014dc6 <GUI_SPRITE_SetPosition+0x216>
 8014d96:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8014d9a:	429e      	cmp	r6, r3
 8014d9c:	db13      	blt.n	8014dc6 <GUI_SPRITE_SetPosition+0x216>
 8014d9e:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8014da2:	429f      	cmp	r7, r3
 8014da4:	dc0f      	bgt.n	8014dc6 <GUI_SPRITE_SetPosition+0x216>
 8014da6:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8014daa:	429e      	cmp	r6, r3
 8014dac:	dc0b      	bgt.n	8014dc6 <GUI_SPRITE_SetPosition+0x216>
 8014dae:	4638      	mov	r0, r7
 8014db0:	4631      	mov	r1, r6
 8014db2:	9a06      	ldr	r2, [sp, #24]
 8014db4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8014db6:	f8cd c00c 	str.w	ip, [sp, #12]
 8014dba:	f7ff fdf9 	bl	80149b0 <_GetBkIndex.isra.0>
 8014dbe:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8014dc2:	4680      	mov	r8, r0
 8014dc4:	e001      	b.n	8014dca <GUI_SPRITE_SetPosition+0x21a>
 8014dc6:	f04f 0800 	mov.w	r8, #0
 8014dca:	f1bb 0f00 	cmp.w	fp, #0
 8014dce:	d00d      	beq.n	8014dec <GUI_SPRITE_SetPosition+0x23c>
 8014dd0:	ebb5 010a 	subs.w	r1, r5, sl
 8014dd4:	d415      	bmi.n	8014e02 <GUI_SPRITE_SetPosition+0x252>
 8014dd6:	ebb4 0209 	subs.w	r2, r4, r9
 8014dda:	d412      	bmi.n	8014e02 <GUI_SPRITE_SetPosition+0x252>
 8014ddc:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014dde:	f8cd c00c 	str.w	ip, [sp, #12]
 8014de2:	f000 f9ab 	bl	801513c <GUI_GetBitmapPixelIndex>
 8014de6:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8014dea:	b950      	cbnz	r0, 8014e02 <GUI_SPRITE_SetPosition+0x252>
 8014dec:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8014df0:	459c      	cmp	ip, r3
 8014df2:	db06      	blt.n	8014e02 <GUI_SPRITE_SetPosition+0x252>
 8014df4:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8014df8:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 8014dfc:	459e      	cmp	lr, r3
 8014dfe:	f280 812d 	bge.w	801505c <GUI_SPRITE_SetPosition+0x4ac>
 8014e02:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8014e06:	429f      	cmp	r7, r3
 8014e08:	db17      	blt.n	8014e3a <GUI_SPRITE_SetPosition+0x28a>
 8014e0a:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8014e0e:	429e      	cmp	r6, r3
 8014e10:	db13      	blt.n	8014e3a <GUI_SPRITE_SetPosition+0x28a>
 8014e12:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8014e16:	429f      	cmp	r7, r3
 8014e18:	dc0f      	bgt.n	8014e3a <GUI_SPRITE_SetPosition+0x28a>
 8014e1a:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8014e1e:	429e      	cmp	r6, r3
 8014e20:	dc0b      	bgt.n	8014e3a <GUI_SPRITE_SetPosition+0x28a>
 8014e22:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014e24:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8014e26:	f8dd e03c 	ldr.w	lr, [sp, #60]	; 0x3c
 8014e2a:	9100      	str	r1, [sp, #0]
 8014e2c:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
 8014e30:	9b06      	ldr	r3, [sp, #24]
 8014e32:	4638      	mov	r0, r7
 8014e34:	4631      	mov	r1, r6
 8014e36:	f7ff fe89 	bl	8014b4c <_SetBkIndexBuffered>
 8014e3a:	9905      	ldr	r1, [sp, #20]
 8014e3c:	f8c1 8020 	str.w	r8, [r1, #32]
 8014e40:	9b05      	ldr	r3, [sp, #20]
 8014e42:	f8dd e074 	ldr.w	lr, [sp, #116]	; 0x74
 8014e46:	9a04      	ldr	r2, [sp, #16]
 8014e48:	4473      	add	r3, lr
 8014e4a:	4415      	add	r5, r2
 8014e4c:	9305      	str	r3, [sp, #20]
 8014e4e:	4417      	add	r7, r2
 8014e50:	e781      	b.n	8014d56 <GUI_SPRITE_SetPosition+0x1a6>
 8014e52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014e54:	f8dd e064 	ldr.w	lr, [sp, #100]	; 0x64
 8014e58:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014e5a:	4473      	add	r3, lr
 8014e5c:	4414      	add	r4, r2
 8014e5e:	930b      	str	r3, [sp, #44]	; 0x2c
 8014e60:	4416      	add	r6, r2
 8014e62:	e75d      	b.n	8014d20 <GUI_SPRITE_SetPosition+0x170>
 8014e64:	a822      	add	r0, sp, #136	; 0x88
 8014e66:	f7fa fb0f 	bl	800f488 <GUI_ALLOC_UnlockH>
 8014e6a:	e0ce      	b.n	801500a <GUI_SPRITE_SetPosition+0x45a>
 8014e6c:	20000274 	.word	0x20000274
 8014e70:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8014e72:	4294      	cmp	r4, r2
 8014e74:	db20      	blt.n	8014eb8 <GUI_SPRITE_SetPosition+0x308>
 8014e76:	f8dd e038 	ldr.w	lr, [sp, #56]	; 0x38
 8014e7a:	4574      	cmp	r4, lr
 8014e7c:	bfcc      	ite	gt
 8014e7e:	2300      	movgt	r3, #0
 8014e80:	2301      	movle	r3, #1
 8014e82:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014e84:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8014e86:	b2db      	uxtb	r3, r3
 8014e88:	931d      	str	r3, [sp, #116]	; 0x74
 8014e8a:	ebc9 0106 	rsb	r1, r9, r6
 8014e8e:	4417      	add	r7, r2
 8014e90:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014e92:	910f      	str	r1, [sp, #60]	; 0x3c
 8014e94:	4457      	add	r7, sl
 8014e96:	9305      	str	r3, [sp, #20]
 8014e98:	4615      	mov	r5, r2
 8014e9a:	9914      	ldr	r1, [sp, #80]	; 0x50
 8014e9c:	428d      	cmp	r5, r1
 8014e9e:	d10d      	bne.n	8014ebc <GUI_SPRITE_SetPosition+0x30c>
 8014ea0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014ea2:	f8dd e084 	ldr.w	lr, [sp, #132]	; 0x84
 8014ea6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014ea8:	4473      	add	r3, lr
 8014eaa:	4414      	add	r4, r2
 8014eac:	930c      	str	r3, [sp, #48]	; 0x30
 8014eae:	4416      	add	r6, r2
 8014eb0:	9915      	ldr	r1, [sp, #84]	; 0x54
 8014eb2:	428c      	cmp	r4, r1
 8014eb4:	d1dc      	bne.n	8014e70 <GUI_SPRITE_SetPosition+0x2c0>
 8014eb6:	e0a8      	b.n	801500a <GUI_SPRITE_SetPosition+0x45a>
 8014eb8:	2300      	movs	r3, #0
 8014eba:	e7e2      	b.n	8014e82 <GUI_SPRITE_SetPosition+0x2d2>
 8014ebc:	4629      	mov	r1, r5
 8014ebe:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014ec0:	4622      	mov	r2, r4
 8014ec2:	f000 f93b 	bl	801513c <GUI_GetBitmapPixelIndex>
 8014ec6:	0e01      	lsrs	r1, r0, #24
 8014ec8:	29ff      	cmp	r1, #255	; 0xff
 8014eca:	9018      	str	r0, [sp, #96]	; 0x60
 8014ecc:	910b      	str	r1, [sp, #44]	; 0x2c
 8014ece:	f000 8093 	beq.w	8014ff8 <GUI_SPRITE_SetPosition+0x448>
 8014ed2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014ed4:	4295      	cmp	r5, r2
 8014ed6:	ebca 0c07 	rsb	ip, sl, r7
 8014eda:	db07      	blt.n	8014eec <GUI_SPRITE_SetPosition+0x33c>
 8014edc:	9b07      	ldr	r3, [sp, #28]
 8014ede:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
 8014ee2:	429d      	cmp	r5, r3
 8014ee4:	bfc8      	it	gt
 8014ee6:	f04f 0b00 	movgt.w	fp, #0
 8014eea:	e001      	b.n	8014ef0 <GUI_SPRITE_SetPosition+0x340>
 8014eec:	f04f 0b00 	mov.w	fp, #0
 8014ef0:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8014ef4:	429f      	cmp	r7, r3
 8014ef6:	fa5f fb8b 	uxtb.w	fp, fp
 8014efa:	db22      	blt.n	8014f42 <GUI_SPRITE_SetPosition+0x392>
 8014efc:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8014f00:	429e      	cmp	r6, r3
 8014f02:	db1e      	blt.n	8014f42 <GUI_SPRITE_SetPosition+0x392>
 8014f04:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8014f08:	429f      	cmp	r7, r3
 8014f0a:	dc1a      	bgt.n	8014f42 <GUI_SPRITE_SetPosition+0x392>
 8014f0c:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8014f10:	429e      	cmp	r6, r3
 8014f12:	dc16      	bgt.n	8014f42 <GUI_SPRITE_SetPosition+0x392>
 8014f14:	4631      	mov	r1, r6
 8014f16:	9a06      	ldr	r2, [sp, #24]
 8014f18:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8014f1a:	f8cd c00c 	str.w	ip, [sp, #12]
 8014f1e:	4638      	mov	r0, r7
 8014f20:	f7ff fd80 	bl	8014a24 <_GetBkIndexAlpha.isra.2>
 8014f24:	f8dd e020 	ldr.w	lr, [sp, #32]
 8014f28:	4b61      	ldr	r3, [pc, #388]	; (80150b0 <GUI_SPRITE_SetPosition+0x500>)
 8014f2a:	f853 302e 	ldr.w	r3, [r3, lr, lsl #2]
 8014f2e:	691b      	ldr	r3, [r3, #16]
 8014f30:	4680      	mov	r8, r0
 8014f32:	685b      	ldr	r3, [r3, #4]
 8014f34:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8014f38:	4798      	blx	r3
 8014f3a:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8014f3e:	9019      	str	r0, [sp, #100]	; 0x64
 8014f40:	e001      	b.n	8014f46 <GUI_SPRITE_SetPosition+0x396>
 8014f42:	f04f 0800 	mov.w	r8, #0
 8014f46:	f1bb 0f00 	cmp.w	fp, #0
 8014f4a:	d00f      	beq.n	8014f6c <GUI_SPRITE_SetPosition+0x3bc>
 8014f4c:	ebb5 010a 	subs.w	r1, r5, sl
 8014f50:	d416      	bmi.n	8014f80 <GUI_SPRITE_SetPosition+0x3d0>
 8014f52:	ebb4 0209 	subs.w	r2, r4, r9
 8014f56:	d413      	bmi.n	8014f80 <GUI_SPRITE_SetPosition+0x3d0>
 8014f58:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014f5a:	f8cd c00c 	str.w	ip, [sp, #12]
 8014f5e:	f000 f8ed 	bl	801513c <GUI_GetBitmapPixelIndex>
 8014f62:	0e00      	lsrs	r0, r0, #24
 8014f64:	28ff      	cmp	r0, #255	; 0xff
 8014f66:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8014f6a:	d109      	bne.n	8014f80 <GUI_SPRITE_SetPosition+0x3d0>
 8014f6c:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8014f70:	459c      	cmp	ip, r3
 8014f72:	db05      	blt.n	8014f80 <GUI_SPRITE_SetPosition+0x3d0>
 8014f74:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8014f78:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8014f7a:	4299      	cmp	r1, r3
 8014f7c:	f280 8082 	bge.w	8015084 <GUI_SPRITE_SetPosition+0x4d4>
 8014f80:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8014f84:	429f      	cmp	r7, r3
 8014f86:	db34      	blt.n	8014ff2 <GUI_SPRITE_SetPosition+0x442>
 8014f88:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8014f8c:	429e      	cmp	r6, r3
 8014f8e:	db30      	blt.n	8014ff2 <GUI_SPRITE_SetPosition+0x442>
 8014f90:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8014f94:	429f      	cmp	r7, r3
 8014f96:	dc2c      	bgt.n	8014ff2 <GUI_SPRITE_SetPosition+0x442>
 8014f98:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8014f9c:	429e      	cmp	r6, r3
 8014f9e:	dc28      	bgt.n	8014ff2 <GUI_SPRITE_SetPosition+0x442>
 8014fa0:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8014fa4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8014fa6:	f8df b108 	ldr.w	fp, [pc, #264]	; 80150b0 <GUI_SPRITE_SetPosition+0x500>
 8014faa:	f02e 407f 	bic.w	r0, lr, #4278190080	; 0xff000000
 8014fae:	b191      	cbz	r1, 8014fd6 <GUI_SPRITE_SetPosition+0x426>
 8014fb0:	9a08      	ldr	r2, [sp, #32]
 8014fb2:	f85b 3022 	ldr.w	r3, [fp, r2, lsl #2]
 8014fb6:	691b      	ldr	r3, [r3, #16]
 8014fb8:	685b      	ldr	r3, [r3, #4]
 8014fba:	4798      	blx	r3
 8014fbc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014fbe:	9919      	ldr	r1, [sp, #100]	; 0x64
 8014fc0:	43da      	mvns	r2, r3
 8014fc2:	b2d2      	uxtb	r2, r2
 8014fc4:	f7f7 fd5e 	bl	800ca84 <GUI__MixColors>
 8014fc8:	f8dd e020 	ldr.w	lr, [sp, #32]
 8014fcc:	f85b 302e 	ldr.w	r3, [fp, lr, lsl #2]
 8014fd0:	691b      	ldr	r3, [r3, #16]
 8014fd2:	681b      	ldr	r3, [r3, #0]
 8014fd4:	e004      	b.n	8014fe0 <GUI_SPRITE_SetPosition+0x430>
 8014fd6:	9908      	ldr	r1, [sp, #32]
 8014fd8:	f85b 3021 	ldr.w	r3, [fp, r1, lsl #2]
 8014fdc:	691b      	ldr	r3, [r3, #16]
 8014fde:	685b      	ldr	r3, [r3, #4]
 8014fe0:	4798      	blx	r3
 8014fe2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014fe4:	9300      	str	r3, [sp, #0]
 8014fe6:	4602      	mov	r2, r0
 8014fe8:	4631      	mov	r1, r6
 8014fea:	4638      	mov	r0, r7
 8014fec:	9b06      	ldr	r3, [sp, #24]
 8014fee:	f7ff fdad 	bl	8014b4c <_SetBkIndexBuffered>
 8014ff2:	9905      	ldr	r1, [sp, #20]
 8014ff4:	f8c1 8020 	str.w	r8, [r1, #32]
 8014ff8:	9b05      	ldr	r3, [sp, #20]
 8014ffa:	f8dd e080 	ldr.w	lr, [sp, #128]	; 0x80
 8014ffe:	9a04      	ldr	r2, [sp, #16]
 8015000:	4473      	add	r3, lr
 8015002:	4415      	add	r5, r2
 8015004:	9305      	str	r3, [sp, #20]
 8015006:	4417      	add	r7, r2
 8015008:	e747      	b.n	8014e9a <GUI_SPRITE_SetPosition+0x2ea>
 801500a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801500c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801500e:	6818      	ldr	r0, [r3, #0]
 8015010:	f7ff fdbe 	bl	8014b90 <_ReleaseBuffer.isra.6>
 8015014:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015016:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015018:	6818      	ldr	r0, [r3, #0]
 801501a:	f7ff fdb9 	bl	8014b90 <_ReleaseBuffer.isra.6>
 801501e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015020:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8015022:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015024:	f8dd e05c 	ldr.w	lr, [sp, #92]	; 0x5c
 8015028:	809a      	strh	r2, [r3, #4]
 801502a:	440a      	add	r2, r1
 801502c:	3a01      	subs	r2, #1
 801502e:	f8a3 e006 	strh.w	lr, [r3, #6]
 8015032:	811a      	strh	r2, [r3, #8]
 8015034:	f10e 32ff 	add.w	r2, lr, #4294967295
 8015038:	f8dd e078 	ldr.w	lr, [sp, #120]	; 0x78
 801503c:	9908      	ldr	r1, [sp, #32]
 801503e:	4472      	add	r2, lr
 8015040:	815a      	strh	r2, [r3, #10]
 8015042:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8015044:	4291      	cmp	r1, r2
 8015046:	d002      	beq.n	801504e <GUI_SPRITE_SetPosition+0x49e>
 8015048:	4b1a      	ldr	r3, [pc, #104]	; (80150b4 <GUI_SPRITE_SetPosition+0x504>)
 801504a:	681b      	ldr	r3, [r3, #0]
 801504c:	745a      	strb	r2, [r3, #17]
 801504e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8015050:	f7f5 fd9e 	bl	800ab90 <GUI_MEMDEV_Select>
 8015054:	a823      	add	r0, sp, #140	; 0x8c
 8015056:	f7fa fa17 	bl	800f488 <GUI_ALLOC_UnlockH>
 801505a:	e026      	b.n	80150aa <GUI_SPRITE_SetPosition+0x4fa>
 801505c:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8015060:	459c      	cmp	ip, r3
 8015062:	f73f aece 	bgt.w	8014e02 <GUI_SPRITE_SetPosition+0x252>
 8015066:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 801506a:	459e      	cmp	lr, r3
 801506c:	f73f aec9 	bgt.w	8014e02 <GUI_SPRITE_SetPosition+0x252>
 8015070:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8015072:	9b05      	ldr	r3, [sp, #20]
 8015074:	9100      	str	r1, [sp, #0]
 8015076:	6a1a      	ldr	r2, [r3, #32]
 8015078:	9b06      	ldr	r3, [sp, #24]
 801507a:	4660      	mov	r0, ip
 801507c:	4671      	mov	r1, lr
 801507e:	f7ff fd65 	bl	8014b4c <_SetBkIndexBuffered>
 8015082:	e6be      	b.n	8014e02 <GUI_SPRITE_SetPosition+0x252>
 8015084:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8015088:	459c      	cmp	ip, r3
 801508a:	f73f af79 	bgt.w	8014f80 <GUI_SPRITE_SetPosition+0x3d0>
 801508e:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8015092:	4299      	cmp	r1, r3
 8015094:	f73f af74 	bgt.w	8014f80 <GUI_SPRITE_SetPosition+0x3d0>
 8015098:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801509a:	9b05      	ldr	r3, [sp, #20]
 801509c:	9200      	str	r2, [sp, #0]
 801509e:	6a1a      	ldr	r2, [r3, #32]
 80150a0:	9b06      	ldr	r3, [sp, #24]
 80150a2:	4660      	mov	r0, ip
 80150a4:	f7ff fd52 	bl	8014b4c <_SetBkIndexBuffered>
 80150a8:	e76a      	b.n	8014f80 <GUI_SPRITE_SetPosition+0x3d0>
 80150aa:	b027      	add	sp, #156	; 0x9c
 80150ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80150b0:	2001ba34 	.word	0x2001ba34
 80150b4:	20000274 	.word	0x20000274

080150b8 <GUI_GetBitmapPixelIndexEx>:
 80150b8:	b510      	push	{r4, lr}
 80150ba:	2804      	cmp	r0, #4
 80150bc:	9c02      	ldr	r4, [sp, #8]
 80150be:	d025      	beq.n	801510c <GUI_GetBitmapPixelIndexEx+0x54>
 80150c0:	dc0f      	bgt.n	80150e2 <GUI_GetBitmapPixelIndexEx+0x2a>
 80150c2:	2801      	cmp	r0, #1
 80150c4:	d017      	beq.n	80150f6 <GUI_GetBitmapPixelIndexEx+0x3e>
 80150c6:	2802      	cmp	r0, #2
 80150c8:	d136      	bne.n	8015138 <GUI_GetBitmapPixelIndexEx+0x80>
 80150ca:	0898      	lsrs	r0, r3, #2
 80150cc:	fb04 2101 	mla	r1, r4, r1, r2
 80150d0:	ea6f 0343 	mvn.w	r3, r3, lsl #1
 80150d4:	5c08      	ldrb	r0, [r1, r0]
 80150d6:	f003 0306 	and.w	r3, r3, #6
 80150da:	40d8      	lsrs	r0, r3
 80150dc:	f000 0003 	and.w	r0, r0, #3
 80150e0:	bd10      	pop	{r4, pc}
 80150e2:	2810      	cmp	r0, #16
 80150e4:	d01c      	beq.n	8015120 <GUI_GetBitmapPixelIndexEx+0x68>
 80150e6:	2820      	cmp	r0, #32
 80150e8:	d020      	beq.n	801512c <GUI_GetBitmapPixelIndexEx+0x74>
 80150ea:	2808      	cmp	r0, #8
 80150ec:	d124      	bne.n	8015138 <GUI_GetBitmapPixelIndexEx+0x80>
 80150ee:	fb04 2101 	mla	r1, r4, r1, r2
 80150f2:	5cc8      	ldrb	r0, [r1, r3]
 80150f4:	bd10      	pop	{r4, pc}
 80150f6:	08d8      	lsrs	r0, r3, #3
 80150f8:	fb04 2101 	mla	r1, r4, r1, r2
 80150fc:	43db      	mvns	r3, r3
 80150fe:	5c08      	ldrb	r0, [r1, r0]
 8015100:	f003 0307 	and.w	r3, r3, #7
 8015104:	40d8      	lsrs	r0, r3
 8015106:	f000 0001 	and.w	r0, r0, #1
 801510a:	bd10      	pop	{r4, pc}
 801510c:	0858      	lsrs	r0, r3, #1
 801510e:	fb04 2101 	mla	r1, r4, r1, r2
 8015112:	07db      	lsls	r3, r3, #31
 8015114:	5c08      	ldrb	r0, [r1, r0]
 8015116:	bf4c      	ite	mi
 8015118:	f000 000f 	andmi.w	r0, r0, #15
 801511c:	0900      	lsrpl	r0, r0, #4
 801511e:	bd10      	pop	{r4, pc}
 8015120:	1049      	asrs	r1, r1, #1
 8015122:	fb04 3301 	mla	r3, r4, r1, r3
 8015126:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
 801512a:	bd10      	pop	{r4, pc}
 801512c:	1089      	asrs	r1, r1, #2
 801512e:	fb04 3301 	mla	r3, r4, r1, r3
 8015132:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8015136:	bd10      	pop	{r4, pc}
 8015138:	2000      	movs	r0, #0
 801513a:	bd10      	pop	{r4, pc}

0801513c <GUI_GetBitmapPixelIndex>:
 801513c:	b513      	push	{r0, r1, r4, lr}
 801513e:	460b      	mov	r3, r1
 8015140:	4604      	mov	r4, r0
 8015142:	b130      	cbz	r0, 8015152 <GUI_GetBitmapPixelIndex+0x16>
 8015144:	88c0      	ldrh	r0, [r0, #6]
 8015146:	88a1      	ldrh	r1, [r4, #4]
 8015148:	9200      	str	r2, [sp, #0]
 801514a:	68a2      	ldr	r2, [r4, #8]
 801514c:	f7ff ffb4 	bl	80150b8 <GUI_GetBitmapPixelIndexEx>
 8015150:	e7ff      	b.n	8015152 <GUI_GetBitmapPixelIndex+0x16>
 8015152:	b002      	add	sp, #8
 8015154:	bd10      	pop	{r4, pc}
	...

08015158 <GUI_DrawPixel>:
 8015158:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801515a:	4e0f      	ldr	r6, [pc, #60]	; (8015198 <GUI_DrawPixel+0x40>)
 801515c:	6833      	ldr	r3, [r6, #0]
 801515e:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8015160:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 8015162:	4405      	add	r5, r0
 8015164:	b2ab      	uxth	r3, r5
 8015166:	440c      	add	r4, r1
 8015168:	f8ad 3004 	strh.w	r3, [sp, #4]
 801516c:	f8ad 3000 	strh.w	r3, [sp]
 8015170:	4668      	mov	r0, sp
 8015172:	b2a3      	uxth	r3, r4
 8015174:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015178:	f8ad 3002 	strh.w	r3, [sp, #2]
 801517c:	f7f4 fa64 	bl	8009648 <WM__InitIVRSearch>
 8015180:	b140      	cbz	r0, 8015194 <GUI_DrawPixel+0x3c>
 8015182:	6833      	ldr	r3, [r6, #0]
 8015184:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8015186:	4628      	mov	r0, r5
 8015188:	685b      	ldr	r3, [r3, #4]
 801518a:	4621      	mov	r1, r4
 801518c:	4798      	blx	r3
 801518e:	f7f4 f999 	bl	80094c4 <WM__GetNextIVR>
 8015192:	e7f5      	b.n	8015180 <GUI_DrawPixel+0x28>
 8015194:	b002      	add	sp, #8
 8015196:	bd70      	pop	{r4, r5, r6, pc}
 8015198:	20000274 	.word	0x20000274

0801519c <GUI_CalcColorDist>:
 801519c:	b2cb      	uxtb	r3, r1
 801519e:	b2c2      	uxtb	r2, r0
 80151a0:	1ad2      	subs	r2, r2, r3
 80151a2:	b292      	uxth	r2, r2
 80151a4:	b293      	uxth	r3, r2
 80151a6:	b530      	push	{r4, r5, lr}
 80151a8:	041c      	lsls	r4, r3, #16
 80151aa:	bf48      	it	mi
 80151ac:	4253      	negmi	r3, r2
 80151ae:	f3c1 2507 	ubfx	r5, r1, #8, #8
 80151b2:	f3c0 2207 	ubfx	r2, r0, #8, #8
 80151b6:	ebc5 0202 	rsb	r2, r5, r2
 80151ba:	bf48      	it	mi
 80151bc:	b29b      	uxthmi	r3, r3
 80151be:	b292      	uxth	r2, r2
 80151c0:	0c09      	lsrs	r1, r1, #16
 80151c2:	fb13 f403 	smulbb	r4, r3, r3
 80151c6:	ebc1 4110 	rsb	r1, r1, r0, lsr #16
 80151ca:	b293      	uxth	r3, r2
 80151cc:	041d      	lsls	r5, r3, #16
 80151ce:	b289      	uxth	r1, r1
 80151d0:	b288      	uxth	r0, r1
 80151d2:	bf44      	itt	mi
 80151d4:	4253      	negmi	r3, r2
 80151d6:	b29b      	uxthmi	r3, r3
 80151d8:	0402      	lsls	r2, r0, #16
 80151da:	bf48      	it	mi
 80151dc:	4248      	negmi	r0, r1
 80151de:	fb13 4303 	smlabb	r3, r3, r3, r4
 80151e2:	bf48      	it	mi
 80151e4:	b280      	uxthmi	r0, r0
 80151e6:	fb00 3000 	mla	r0, r0, r0, r3
 80151ea:	bd30      	pop	{r4, r5, pc}

080151ec <__errno>:
 80151ec:	4b01      	ldr	r3, [pc, #4]	; (80151f4 <__errno+0x8>)
 80151ee:	6818      	ldr	r0, [r3, #0]
 80151f0:	4770      	bx	lr
 80151f2:	bf00      	nop
 80151f4:	20000400 	.word	0x20000400

080151f8 <__libc_init_array>:
 80151f8:	b570      	push	{r4, r5, r6, lr}
 80151fa:	4e0d      	ldr	r6, [pc, #52]	; (8015230 <__libc_init_array+0x38>)
 80151fc:	4c0d      	ldr	r4, [pc, #52]	; (8015234 <__libc_init_array+0x3c>)
 80151fe:	1ba4      	subs	r4, r4, r6
 8015200:	10a4      	asrs	r4, r4, #2
 8015202:	2500      	movs	r5, #0
 8015204:	42a5      	cmp	r5, r4
 8015206:	d109      	bne.n	801521c <__libc_init_array+0x24>
 8015208:	4e0b      	ldr	r6, [pc, #44]	; (8015238 <__libc_init_array+0x40>)
 801520a:	4c0c      	ldr	r4, [pc, #48]	; (801523c <__libc_init_array+0x44>)
 801520c:	f000 fd54 	bl	8015cb8 <_init>
 8015210:	1ba4      	subs	r4, r4, r6
 8015212:	10a4      	asrs	r4, r4, #2
 8015214:	2500      	movs	r5, #0
 8015216:	42a5      	cmp	r5, r4
 8015218:	d105      	bne.n	8015226 <__libc_init_array+0x2e>
 801521a:	bd70      	pop	{r4, r5, r6, pc}
 801521c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8015220:	4798      	blx	r3
 8015222:	3501      	adds	r5, #1
 8015224:	e7ee      	b.n	8015204 <__libc_init_array+0xc>
 8015226:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801522a:	4798      	blx	r3
 801522c:	3501      	adds	r5, #1
 801522e:	e7f2      	b.n	8015216 <__libc_init_array+0x1e>
 8015230:	08017eb0 	.word	0x08017eb0
 8015234:	08017eb0 	.word	0x08017eb0
 8015238:	08017eb0 	.word	0x08017eb0
 801523c:	08017eb4 	.word	0x08017eb4

08015240 <malloc>:
 8015240:	4b02      	ldr	r3, [pc, #8]	; (801524c <malloc+0xc>)
 8015242:	4601      	mov	r1, r0
 8015244:	6818      	ldr	r0, [r3, #0]
 8015246:	f000 b895 	b.w	8015374 <_malloc_r>
 801524a:	bf00      	nop
 801524c:	20000400 	.word	0x20000400

08015250 <free>:
 8015250:	4b02      	ldr	r3, [pc, #8]	; (801525c <free+0xc>)
 8015252:	4601      	mov	r1, r0
 8015254:	6818      	ldr	r0, [r3, #0]
 8015256:	f000 b83f 	b.w	80152d8 <_free_r>
 801525a:	bf00      	nop
 801525c:	20000400 	.word	0x20000400

08015260 <memcmp>:
 8015260:	b530      	push	{r4, r5, lr}
 8015262:	2400      	movs	r4, #0
 8015264:	42a2      	cmp	r2, r4
 8015266:	d101      	bne.n	801526c <memcmp+0xc>
 8015268:	2000      	movs	r0, #0
 801526a:	e007      	b.n	801527c <memcmp+0x1c>
 801526c:	5d03      	ldrb	r3, [r0, r4]
 801526e:	3401      	adds	r4, #1
 8015270:	190d      	adds	r5, r1, r4
 8015272:	f815 5c01 	ldrb.w	r5, [r5, #-1]
 8015276:	42ab      	cmp	r3, r5
 8015278:	d0f4      	beq.n	8015264 <memcmp+0x4>
 801527a:	1b58      	subs	r0, r3, r5
 801527c:	bd30      	pop	{r4, r5, pc}

0801527e <memcpy>:
 801527e:	b510      	push	{r4, lr}
 8015280:	1e43      	subs	r3, r0, #1
 8015282:	440a      	add	r2, r1
 8015284:	4291      	cmp	r1, r2
 8015286:	d100      	bne.n	801528a <memcpy+0xc>
 8015288:	bd10      	pop	{r4, pc}
 801528a:	f811 4b01 	ldrb.w	r4, [r1], #1
 801528e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8015292:	e7f7      	b.n	8015284 <memcpy+0x6>

08015294 <memmove>:
 8015294:	4288      	cmp	r0, r1
 8015296:	b510      	push	{r4, lr}
 8015298:	eb01 0302 	add.w	r3, r1, r2
 801529c:	d807      	bhi.n	80152ae <memmove+0x1a>
 801529e:	1e42      	subs	r2, r0, #1
 80152a0:	4299      	cmp	r1, r3
 80152a2:	d00a      	beq.n	80152ba <memmove+0x26>
 80152a4:	f811 4b01 	ldrb.w	r4, [r1], #1
 80152a8:	f802 4f01 	strb.w	r4, [r2, #1]!
 80152ac:	e7f8      	b.n	80152a0 <memmove+0xc>
 80152ae:	4283      	cmp	r3, r0
 80152b0:	d9f5      	bls.n	801529e <memmove+0xa>
 80152b2:	1881      	adds	r1, r0, r2
 80152b4:	1ad2      	subs	r2, r2, r3
 80152b6:	42d3      	cmn	r3, r2
 80152b8:	d100      	bne.n	80152bc <memmove+0x28>
 80152ba:	bd10      	pop	{r4, pc}
 80152bc:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80152c0:	f801 4d01 	strb.w	r4, [r1, #-1]!
 80152c4:	e7f7      	b.n	80152b6 <memmove+0x22>

080152c6 <memset>:
 80152c6:	4402      	add	r2, r0
 80152c8:	4603      	mov	r3, r0
 80152ca:	4293      	cmp	r3, r2
 80152cc:	d100      	bne.n	80152d0 <memset+0xa>
 80152ce:	4770      	bx	lr
 80152d0:	f803 1b01 	strb.w	r1, [r3], #1
 80152d4:	e7f9      	b.n	80152ca <memset+0x4>
	...

080152d8 <_free_r>:
 80152d8:	b538      	push	{r3, r4, r5, lr}
 80152da:	4605      	mov	r5, r0
 80152dc:	2900      	cmp	r1, #0
 80152de:	d045      	beq.n	801536c <_free_r+0x94>
 80152e0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80152e4:	1f0c      	subs	r4, r1, #4
 80152e6:	2b00      	cmp	r3, #0
 80152e8:	bfb8      	it	lt
 80152ea:	18e4      	addlt	r4, r4, r3
 80152ec:	f000 f8d4 	bl	8015498 <__malloc_lock>
 80152f0:	4a1f      	ldr	r2, [pc, #124]	; (8015370 <_free_r+0x98>)
 80152f2:	6813      	ldr	r3, [r2, #0]
 80152f4:	4610      	mov	r0, r2
 80152f6:	b933      	cbnz	r3, 8015306 <_free_r+0x2e>
 80152f8:	6063      	str	r3, [r4, #4]
 80152fa:	6014      	str	r4, [r2, #0]
 80152fc:	4628      	mov	r0, r5
 80152fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8015302:	f000 b8ca 	b.w	801549a <__malloc_unlock>
 8015306:	42a3      	cmp	r3, r4
 8015308:	d90c      	bls.n	8015324 <_free_r+0x4c>
 801530a:	6821      	ldr	r1, [r4, #0]
 801530c:	1862      	adds	r2, r4, r1
 801530e:	4293      	cmp	r3, r2
 8015310:	bf04      	itt	eq
 8015312:	681a      	ldreq	r2, [r3, #0]
 8015314:	685b      	ldreq	r3, [r3, #4]
 8015316:	6063      	str	r3, [r4, #4]
 8015318:	bf04      	itt	eq
 801531a:	1852      	addeq	r2, r2, r1
 801531c:	6022      	streq	r2, [r4, #0]
 801531e:	6004      	str	r4, [r0, #0]
 8015320:	e7ec      	b.n	80152fc <_free_r+0x24>
 8015322:	4613      	mov	r3, r2
 8015324:	685a      	ldr	r2, [r3, #4]
 8015326:	b10a      	cbz	r2, 801532c <_free_r+0x54>
 8015328:	42a2      	cmp	r2, r4
 801532a:	d9fa      	bls.n	8015322 <_free_r+0x4a>
 801532c:	6819      	ldr	r1, [r3, #0]
 801532e:	1858      	adds	r0, r3, r1
 8015330:	42a0      	cmp	r0, r4
 8015332:	d10b      	bne.n	801534c <_free_r+0x74>
 8015334:	6820      	ldr	r0, [r4, #0]
 8015336:	4401      	add	r1, r0
 8015338:	1858      	adds	r0, r3, r1
 801533a:	4282      	cmp	r2, r0
 801533c:	6019      	str	r1, [r3, #0]
 801533e:	d1dd      	bne.n	80152fc <_free_r+0x24>
 8015340:	6810      	ldr	r0, [r2, #0]
 8015342:	6852      	ldr	r2, [r2, #4]
 8015344:	605a      	str	r2, [r3, #4]
 8015346:	4401      	add	r1, r0
 8015348:	6019      	str	r1, [r3, #0]
 801534a:	e7d7      	b.n	80152fc <_free_r+0x24>
 801534c:	d902      	bls.n	8015354 <_free_r+0x7c>
 801534e:	230c      	movs	r3, #12
 8015350:	602b      	str	r3, [r5, #0]
 8015352:	e7d3      	b.n	80152fc <_free_r+0x24>
 8015354:	6820      	ldr	r0, [r4, #0]
 8015356:	1821      	adds	r1, r4, r0
 8015358:	428a      	cmp	r2, r1
 801535a:	bf04      	itt	eq
 801535c:	6811      	ldreq	r1, [r2, #0]
 801535e:	6852      	ldreq	r2, [r2, #4]
 8015360:	6062      	str	r2, [r4, #4]
 8015362:	bf04      	itt	eq
 8015364:	1809      	addeq	r1, r1, r0
 8015366:	6021      	streq	r1, [r4, #0]
 8015368:	605c      	str	r4, [r3, #4]
 801536a:	e7c7      	b.n	80152fc <_free_r+0x24>
 801536c:	bd38      	pop	{r3, r4, r5, pc}
 801536e:	bf00      	nop
 8015370:	20019fb4 	.word	0x20019fb4

08015374 <_malloc_r>:
 8015374:	b570      	push	{r4, r5, r6, lr}
 8015376:	1ccd      	adds	r5, r1, #3
 8015378:	f025 0503 	bic.w	r5, r5, #3
 801537c:	3508      	adds	r5, #8
 801537e:	2d0c      	cmp	r5, #12
 8015380:	bf38      	it	cc
 8015382:	250c      	movcc	r5, #12
 8015384:	2d00      	cmp	r5, #0
 8015386:	4606      	mov	r6, r0
 8015388:	db01      	blt.n	801538e <_malloc_r+0x1a>
 801538a:	42a9      	cmp	r1, r5
 801538c:	d903      	bls.n	8015396 <_malloc_r+0x22>
 801538e:	230c      	movs	r3, #12
 8015390:	6033      	str	r3, [r6, #0]
 8015392:	2000      	movs	r0, #0
 8015394:	bd70      	pop	{r4, r5, r6, pc}
 8015396:	f000 f87f 	bl	8015498 <__malloc_lock>
 801539a:	4a21      	ldr	r2, [pc, #132]	; (8015420 <_malloc_r+0xac>)
 801539c:	6814      	ldr	r4, [r2, #0]
 801539e:	4621      	mov	r1, r4
 80153a0:	b991      	cbnz	r1, 80153c8 <_malloc_r+0x54>
 80153a2:	4c20      	ldr	r4, [pc, #128]	; (8015424 <_malloc_r+0xb0>)
 80153a4:	6823      	ldr	r3, [r4, #0]
 80153a6:	b91b      	cbnz	r3, 80153b0 <_malloc_r+0x3c>
 80153a8:	4630      	mov	r0, r6
 80153aa:	f000 f83d 	bl	8015428 <_sbrk_r>
 80153ae:	6020      	str	r0, [r4, #0]
 80153b0:	4629      	mov	r1, r5
 80153b2:	4630      	mov	r0, r6
 80153b4:	f000 f838 	bl	8015428 <_sbrk_r>
 80153b8:	1c43      	adds	r3, r0, #1
 80153ba:	d124      	bne.n	8015406 <_malloc_r+0x92>
 80153bc:	230c      	movs	r3, #12
 80153be:	6033      	str	r3, [r6, #0]
 80153c0:	4630      	mov	r0, r6
 80153c2:	f000 f86a 	bl	801549a <__malloc_unlock>
 80153c6:	e7e4      	b.n	8015392 <_malloc_r+0x1e>
 80153c8:	680b      	ldr	r3, [r1, #0]
 80153ca:	1b5b      	subs	r3, r3, r5
 80153cc:	d418      	bmi.n	8015400 <_malloc_r+0x8c>
 80153ce:	2b0b      	cmp	r3, #11
 80153d0:	d90f      	bls.n	80153f2 <_malloc_r+0x7e>
 80153d2:	600b      	str	r3, [r1, #0]
 80153d4:	50cd      	str	r5, [r1, r3]
 80153d6:	18cc      	adds	r4, r1, r3
 80153d8:	4630      	mov	r0, r6
 80153da:	f000 f85e 	bl	801549a <__malloc_unlock>
 80153de:	f104 000b 	add.w	r0, r4, #11
 80153e2:	1d23      	adds	r3, r4, #4
 80153e4:	f020 0007 	bic.w	r0, r0, #7
 80153e8:	1ac3      	subs	r3, r0, r3
 80153ea:	d0d3      	beq.n	8015394 <_malloc_r+0x20>
 80153ec:	425a      	negs	r2, r3
 80153ee:	50e2      	str	r2, [r4, r3]
 80153f0:	e7d0      	b.n	8015394 <_malloc_r+0x20>
 80153f2:	428c      	cmp	r4, r1
 80153f4:	684b      	ldr	r3, [r1, #4]
 80153f6:	bf16      	itet	ne
 80153f8:	6063      	strne	r3, [r4, #4]
 80153fa:	6013      	streq	r3, [r2, #0]
 80153fc:	460c      	movne	r4, r1
 80153fe:	e7eb      	b.n	80153d8 <_malloc_r+0x64>
 8015400:	460c      	mov	r4, r1
 8015402:	6849      	ldr	r1, [r1, #4]
 8015404:	e7cc      	b.n	80153a0 <_malloc_r+0x2c>
 8015406:	1cc4      	adds	r4, r0, #3
 8015408:	f024 0403 	bic.w	r4, r4, #3
 801540c:	42a0      	cmp	r0, r4
 801540e:	d005      	beq.n	801541c <_malloc_r+0xa8>
 8015410:	1a21      	subs	r1, r4, r0
 8015412:	4630      	mov	r0, r6
 8015414:	f000 f808 	bl	8015428 <_sbrk_r>
 8015418:	3001      	adds	r0, #1
 801541a:	d0cf      	beq.n	80153bc <_malloc_r+0x48>
 801541c:	6025      	str	r5, [r4, #0]
 801541e:	e7db      	b.n	80153d8 <_malloc_r+0x64>
 8015420:	20019fb4 	.word	0x20019fb4
 8015424:	20019fb8 	.word	0x20019fb8

08015428 <_sbrk_r>:
 8015428:	b538      	push	{r3, r4, r5, lr}
 801542a:	4c06      	ldr	r4, [pc, #24]	; (8015444 <_sbrk_r+0x1c>)
 801542c:	2300      	movs	r3, #0
 801542e:	4605      	mov	r5, r0
 8015430:	4608      	mov	r0, r1
 8015432:	6023      	str	r3, [r4, #0]
 8015434:	f7f0 fc64 	bl	8005d00 <_sbrk>
 8015438:	1c43      	adds	r3, r0, #1
 801543a:	d102      	bne.n	8015442 <_sbrk_r+0x1a>
 801543c:	6823      	ldr	r3, [r4, #0]
 801543e:	b103      	cbz	r3, 8015442 <_sbrk_r+0x1a>
 8015440:	602b      	str	r3, [r5, #0]
 8015442:	bd38      	pop	{r3, r4, r5, pc}
 8015444:	2001bb38 	.word	0x2001bb38

08015448 <siprintf>:
 8015448:	b40e      	push	{r1, r2, r3}
 801544a:	b500      	push	{lr}
 801544c:	b09c      	sub	sp, #112	; 0x70
 801544e:	ab1d      	add	r3, sp, #116	; 0x74
 8015450:	9002      	str	r0, [sp, #8]
 8015452:	9006      	str	r0, [sp, #24]
 8015454:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8015458:	4809      	ldr	r0, [pc, #36]	; (8015480 <siprintf+0x38>)
 801545a:	9107      	str	r1, [sp, #28]
 801545c:	9104      	str	r1, [sp, #16]
 801545e:	4909      	ldr	r1, [pc, #36]	; (8015484 <siprintf+0x3c>)
 8015460:	f853 2b04 	ldr.w	r2, [r3], #4
 8015464:	9105      	str	r1, [sp, #20]
 8015466:	6800      	ldr	r0, [r0, #0]
 8015468:	9301      	str	r3, [sp, #4]
 801546a:	a902      	add	r1, sp, #8
 801546c:	f000 f870 	bl	8015550 <_svfiprintf_r>
 8015470:	9b02      	ldr	r3, [sp, #8]
 8015472:	2200      	movs	r2, #0
 8015474:	701a      	strb	r2, [r3, #0]
 8015476:	b01c      	add	sp, #112	; 0x70
 8015478:	f85d eb04 	ldr.w	lr, [sp], #4
 801547c:	b003      	add	sp, #12
 801547e:	4770      	bx	lr
 8015480:	20000400 	.word	0x20000400
 8015484:	ffff0208 	.word	0xffff0208

08015488 <strcpy>:
 8015488:	4603      	mov	r3, r0
 801548a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801548e:	f803 2b01 	strb.w	r2, [r3], #1
 8015492:	2a00      	cmp	r2, #0
 8015494:	d1f9      	bne.n	801548a <strcpy+0x2>
 8015496:	4770      	bx	lr

08015498 <__malloc_lock>:
 8015498:	4770      	bx	lr

0801549a <__malloc_unlock>:
 801549a:	4770      	bx	lr

0801549c <__ssputs_r>:
 801549c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80154a0:	688e      	ldr	r6, [r1, #8]
 80154a2:	429e      	cmp	r6, r3
 80154a4:	4682      	mov	sl, r0
 80154a6:	460c      	mov	r4, r1
 80154a8:	4690      	mov	r8, r2
 80154aa:	4699      	mov	r9, r3
 80154ac:	d837      	bhi.n	801551e <__ssputs_r+0x82>
 80154ae:	898a      	ldrh	r2, [r1, #12]
 80154b0:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80154b4:	d031      	beq.n	801551a <__ssputs_r+0x7e>
 80154b6:	6825      	ldr	r5, [r4, #0]
 80154b8:	6909      	ldr	r1, [r1, #16]
 80154ba:	1a6f      	subs	r7, r5, r1
 80154bc:	6965      	ldr	r5, [r4, #20]
 80154be:	2302      	movs	r3, #2
 80154c0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80154c4:	fb95 f5f3 	sdiv	r5, r5, r3
 80154c8:	f109 0301 	add.w	r3, r9, #1
 80154cc:	443b      	add	r3, r7
 80154ce:	429d      	cmp	r5, r3
 80154d0:	bf38      	it	cc
 80154d2:	461d      	movcc	r5, r3
 80154d4:	0553      	lsls	r3, r2, #21
 80154d6:	d530      	bpl.n	801553a <__ssputs_r+0x9e>
 80154d8:	4629      	mov	r1, r5
 80154da:	f7ff ff4b 	bl	8015374 <_malloc_r>
 80154de:	4606      	mov	r6, r0
 80154e0:	b950      	cbnz	r0, 80154f8 <__ssputs_r+0x5c>
 80154e2:	230c      	movs	r3, #12
 80154e4:	f8ca 3000 	str.w	r3, [sl]
 80154e8:	89a3      	ldrh	r3, [r4, #12]
 80154ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80154ee:	81a3      	strh	r3, [r4, #12]
 80154f0:	f04f 30ff 	mov.w	r0, #4294967295
 80154f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80154f8:	463a      	mov	r2, r7
 80154fa:	6921      	ldr	r1, [r4, #16]
 80154fc:	f7ff febf 	bl	801527e <memcpy>
 8015500:	89a3      	ldrh	r3, [r4, #12]
 8015502:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8015506:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801550a:	81a3      	strh	r3, [r4, #12]
 801550c:	6126      	str	r6, [r4, #16]
 801550e:	6165      	str	r5, [r4, #20]
 8015510:	443e      	add	r6, r7
 8015512:	1bed      	subs	r5, r5, r7
 8015514:	6026      	str	r6, [r4, #0]
 8015516:	60a5      	str	r5, [r4, #8]
 8015518:	464e      	mov	r6, r9
 801551a:	454e      	cmp	r6, r9
 801551c:	d900      	bls.n	8015520 <__ssputs_r+0x84>
 801551e:	464e      	mov	r6, r9
 8015520:	4632      	mov	r2, r6
 8015522:	4641      	mov	r1, r8
 8015524:	6820      	ldr	r0, [r4, #0]
 8015526:	f7ff feb5 	bl	8015294 <memmove>
 801552a:	68a3      	ldr	r3, [r4, #8]
 801552c:	1b9b      	subs	r3, r3, r6
 801552e:	60a3      	str	r3, [r4, #8]
 8015530:	6823      	ldr	r3, [r4, #0]
 8015532:	441e      	add	r6, r3
 8015534:	6026      	str	r6, [r4, #0]
 8015536:	2000      	movs	r0, #0
 8015538:	e7dc      	b.n	80154f4 <__ssputs_r+0x58>
 801553a:	462a      	mov	r2, r5
 801553c:	f000 fa88 	bl	8015a50 <_realloc_r>
 8015540:	4606      	mov	r6, r0
 8015542:	2800      	cmp	r0, #0
 8015544:	d1e2      	bne.n	801550c <__ssputs_r+0x70>
 8015546:	6921      	ldr	r1, [r4, #16]
 8015548:	4650      	mov	r0, sl
 801554a:	f7ff fec5 	bl	80152d8 <_free_r>
 801554e:	e7c8      	b.n	80154e2 <__ssputs_r+0x46>

08015550 <_svfiprintf_r>:
 8015550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015554:	461d      	mov	r5, r3
 8015556:	898b      	ldrh	r3, [r1, #12]
 8015558:	061f      	lsls	r7, r3, #24
 801555a:	b09d      	sub	sp, #116	; 0x74
 801555c:	4680      	mov	r8, r0
 801555e:	460c      	mov	r4, r1
 8015560:	4616      	mov	r6, r2
 8015562:	d50f      	bpl.n	8015584 <_svfiprintf_r+0x34>
 8015564:	690b      	ldr	r3, [r1, #16]
 8015566:	b96b      	cbnz	r3, 8015584 <_svfiprintf_r+0x34>
 8015568:	2140      	movs	r1, #64	; 0x40
 801556a:	f7ff ff03 	bl	8015374 <_malloc_r>
 801556e:	6020      	str	r0, [r4, #0]
 8015570:	6120      	str	r0, [r4, #16]
 8015572:	b928      	cbnz	r0, 8015580 <_svfiprintf_r+0x30>
 8015574:	230c      	movs	r3, #12
 8015576:	f8c8 3000 	str.w	r3, [r8]
 801557a:	f04f 30ff 	mov.w	r0, #4294967295
 801557e:	e0c8      	b.n	8015712 <_svfiprintf_r+0x1c2>
 8015580:	2340      	movs	r3, #64	; 0x40
 8015582:	6163      	str	r3, [r4, #20]
 8015584:	2300      	movs	r3, #0
 8015586:	9309      	str	r3, [sp, #36]	; 0x24
 8015588:	2320      	movs	r3, #32
 801558a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801558e:	2330      	movs	r3, #48	; 0x30
 8015590:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8015594:	9503      	str	r5, [sp, #12]
 8015596:	f04f 0b01 	mov.w	fp, #1
 801559a:	4637      	mov	r7, r6
 801559c:	463d      	mov	r5, r7
 801559e:	f815 3b01 	ldrb.w	r3, [r5], #1
 80155a2:	b10b      	cbz	r3, 80155a8 <_svfiprintf_r+0x58>
 80155a4:	2b25      	cmp	r3, #37	; 0x25
 80155a6:	d13e      	bne.n	8015626 <_svfiprintf_r+0xd6>
 80155a8:	ebb7 0a06 	subs.w	sl, r7, r6
 80155ac:	d00b      	beq.n	80155c6 <_svfiprintf_r+0x76>
 80155ae:	4653      	mov	r3, sl
 80155b0:	4632      	mov	r2, r6
 80155b2:	4621      	mov	r1, r4
 80155b4:	4640      	mov	r0, r8
 80155b6:	f7ff ff71 	bl	801549c <__ssputs_r>
 80155ba:	3001      	adds	r0, #1
 80155bc:	f000 80a4 	beq.w	8015708 <_svfiprintf_r+0x1b8>
 80155c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80155c2:	4453      	add	r3, sl
 80155c4:	9309      	str	r3, [sp, #36]	; 0x24
 80155c6:	783b      	ldrb	r3, [r7, #0]
 80155c8:	2b00      	cmp	r3, #0
 80155ca:	f000 809d 	beq.w	8015708 <_svfiprintf_r+0x1b8>
 80155ce:	2300      	movs	r3, #0
 80155d0:	f04f 32ff 	mov.w	r2, #4294967295
 80155d4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80155d8:	9304      	str	r3, [sp, #16]
 80155da:	9307      	str	r3, [sp, #28]
 80155dc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80155e0:	931a      	str	r3, [sp, #104]	; 0x68
 80155e2:	462f      	mov	r7, r5
 80155e4:	2205      	movs	r2, #5
 80155e6:	f817 1b01 	ldrb.w	r1, [r7], #1
 80155ea:	4850      	ldr	r0, [pc, #320]	; (801572c <_svfiprintf_r+0x1dc>)
 80155ec:	f7ea fe18 	bl	8000220 <memchr>
 80155f0:	9b04      	ldr	r3, [sp, #16]
 80155f2:	b9d0      	cbnz	r0, 801562a <_svfiprintf_r+0xda>
 80155f4:	06d9      	lsls	r1, r3, #27
 80155f6:	bf44      	itt	mi
 80155f8:	2220      	movmi	r2, #32
 80155fa:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80155fe:	071a      	lsls	r2, r3, #28
 8015600:	bf44      	itt	mi
 8015602:	222b      	movmi	r2, #43	; 0x2b
 8015604:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8015608:	782a      	ldrb	r2, [r5, #0]
 801560a:	2a2a      	cmp	r2, #42	; 0x2a
 801560c:	d015      	beq.n	801563a <_svfiprintf_r+0xea>
 801560e:	9a07      	ldr	r2, [sp, #28]
 8015610:	462f      	mov	r7, r5
 8015612:	2000      	movs	r0, #0
 8015614:	250a      	movs	r5, #10
 8015616:	4639      	mov	r1, r7
 8015618:	f811 3b01 	ldrb.w	r3, [r1], #1
 801561c:	3b30      	subs	r3, #48	; 0x30
 801561e:	2b09      	cmp	r3, #9
 8015620:	d94d      	bls.n	80156be <_svfiprintf_r+0x16e>
 8015622:	b1b8      	cbz	r0, 8015654 <_svfiprintf_r+0x104>
 8015624:	e00f      	b.n	8015646 <_svfiprintf_r+0xf6>
 8015626:	462f      	mov	r7, r5
 8015628:	e7b8      	b.n	801559c <_svfiprintf_r+0x4c>
 801562a:	4a40      	ldr	r2, [pc, #256]	; (801572c <_svfiprintf_r+0x1dc>)
 801562c:	1a80      	subs	r0, r0, r2
 801562e:	fa0b f000 	lsl.w	r0, fp, r0
 8015632:	4318      	orrs	r0, r3
 8015634:	9004      	str	r0, [sp, #16]
 8015636:	463d      	mov	r5, r7
 8015638:	e7d3      	b.n	80155e2 <_svfiprintf_r+0x92>
 801563a:	9a03      	ldr	r2, [sp, #12]
 801563c:	1d11      	adds	r1, r2, #4
 801563e:	6812      	ldr	r2, [r2, #0]
 8015640:	9103      	str	r1, [sp, #12]
 8015642:	2a00      	cmp	r2, #0
 8015644:	db01      	blt.n	801564a <_svfiprintf_r+0xfa>
 8015646:	9207      	str	r2, [sp, #28]
 8015648:	e004      	b.n	8015654 <_svfiprintf_r+0x104>
 801564a:	4252      	negs	r2, r2
 801564c:	f043 0302 	orr.w	r3, r3, #2
 8015650:	9207      	str	r2, [sp, #28]
 8015652:	9304      	str	r3, [sp, #16]
 8015654:	783b      	ldrb	r3, [r7, #0]
 8015656:	2b2e      	cmp	r3, #46	; 0x2e
 8015658:	d10c      	bne.n	8015674 <_svfiprintf_r+0x124>
 801565a:	787b      	ldrb	r3, [r7, #1]
 801565c:	2b2a      	cmp	r3, #42	; 0x2a
 801565e:	d133      	bne.n	80156c8 <_svfiprintf_r+0x178>
 8015660:	9b03      	ldr	r3, [sp, #12]
 8015662:	1d1a      	adds	r2, r3, #4
 8015664:	681b      	ldr	r3, [r3, #0]
 8015666:	9203      	str	r2, [sp, #12]
 8015668:	2b00      	cmp	r3, #0
 801566a:	bfb8      	it	lt
 801566c:	f04f 33ff 	movlt.w	r3, #4294967295
 8015670:	3702      	adds	r7, #2
 8015672:	9305      	str	r3, [sp, #20]
 8015674:	4d2e      	ldr	r5, [pc, #184]	; (8015730 <_svfiprintf_r+0x1e0>)
 8015676:	7839      	ldrb	r1, [r7, #0]
 8015678:	2203      	movs	r2, #3
 801567a:	4628      	mov	r0, r5
 801567c:	f7ea fdd0 	bl	8000220 <memchr>
 8015680:	b138      	cbz	r0, 8015692 <_svfiprintf_r+0x142>
 8015682:	2340      	movs	r3, #64	; 0x40
 8015684:	1b40      	subs	r0, r0, r5
 8015686:	fa03 f000 	lsl.w	r0, r3, r0
 801568a:	9b04      	ldr	r3, [sp, #16]
 801568c:	4303      	orrs	r3, r0
 801568e:	3701      	adds	r7, #1
 8015690:	9304      	str	r3, [sp, #16]
 8015692:	7839      	ldrb	r1, [r7, #0]
 8015694:	4827      	ldr	r0, [pc, #156]	; (8015734 <_svfiprintf_r+0x1e4>)
 8015696:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801569a:	2206      	movs	r2, #6
 801569c:	1c7e      	adds	r6, r7, #1
 801569e:	f7ea fdbf 	bl	8000220 <memchr>
 80156a2:	2800      	cmp	r0, #0
 80156a4:	d038      	beq.n	8015718 <_svfiprintf_r+0x1c8>
 80156a6:	4b24      	ldr	r3, [pc, #144]	; (8015738 <_svfiprintf_r+0x1e8>)
 80156a8:	bb13      	cbnz	r3, 80156f0 <_svfiprintf_r+0x1a0>
 80156aa:	9b03      	ldr	r3, [sp, #12]
 80156ac:	3307      	adds	r3, #7
 80156ae:	f023 0307 	bic.w	r3, r3, #7
 80156b2:	3308      	adds	r3, #8
 80156b4:	9303      	str	r3, [sp, #12]
 80156b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80156b8:	444b      	add	r3, r9
 80156ba:	9309      	str	r3, [sp, #36]	; 0x24
 80156bc:	e76d      	b.n	801559a <_svfiprintf_r+0x4a>
 80156be:	fb05 3202 	mla	r2, r5, r2, r3
 80156c2:	2001      	movs	r0, #1
 80156c4:	460f      	mov	r7, r1
 80156c6:	e7a6      	b.n	8015616 <_svfiprintf_r+0xc6>
 80156c8:	2300      	movs	r3, #0
 80156ca:	3701      	adds	r7, #1
 80156cc:	9305      	str	r3, [sp, #20]
 80156ce:	4619      	mov	r1, r3
 80156d0:	250a      	movs	r5, #10
 80156d2:	4638      	mov	r0, r7
 80156d4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80156d8:	3a30      	subs	r2, #48	; 0x30
 80156da:	2a09      	cmp	r2, #9
 80156dc:	d903      	bls.n	80156e6 <_svfiprintf_r+0x196>
 80156de:	2b00      	cmp	r3, #0
 80156e0:	d0c8      	beq.n	8015674 <_svfiprintf_r+0x124>
 80156e2:	9105      	str	r1, [sp, #20]
 80156e4:	e7c6      	b.n	8015674 <_svfiprintf_r+0x124>
 80156e6:	fb05 2101 	mla	r1, r5, r1, r2
 80156ea:	2301      	movs	r3, #1
 80156ec:	4607      	mov	r7, r0
 80156ee:	e7f0      	b.n	80156d2 <_svfiprintf_r+0x182>
 80156f0:	ab03      	add	r3, sp, #12
 80156f2:	9300      	str	r3, [sp, #0]
 80156f4:	4622      	mov	r2, r4
 80156f6:	4b11      	ldr	r3, [pc, #68]	; (801573c <_svfiprintf_r+0x1ec>)
 80156f8:	a904      	add	r1, sp, #16
 80156fa:	4640      	mov	r0, r8
 80156fc:	f3af 8000 	nop.w
 8015700:	f1b0 3fff 	cmp.w	r0, #4294967295
 8015704:	4681      	mov	r9, r0
 8015706:	d1d6      	bne.n	80156b6 <_svfiprintf_r+0x166>
 8015708:	89a3      	ldrh	r3, [r4, #12]
 801570a:	065b      	lsls	r3, r3, #25
 801570c:	f53f af35 	bmi.w	801557a <_svfiprintf_r+0x2a>
 8015710:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015712:	b01d      	add	sp, #116	; 0x74
 8015714:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015718:	ab03      	add	r3, sp, #12
 801571a:	9300      	str	r3, [sp, #0]
 801571c:	4622      	mov	r2, r4
 801571e:	4b07      	ldr	r3, [pc, #28]	; (801573c <_svfiprintf_r+0x1ec>)
 8015720:	a904      	add	r1, sp, #16
 8015722:	4640      	mov	r0, r8
 8015724:	f000 f882 	bl	801582c <_printf_i>
 8015728:	e7ea      	b.n	8015700 <_svfiprintf_r+0x1b0>
 801572a:	bf00      	nop
 801572c:	08017e74 	.word	0x08017e74
 8015730:	08017e7a 	.word	0x08017e7a
 8015734:	08017e7e 	.word	0x08017e7e
 8015738:	00000000 	.word	0x00000000
 801573c:	0801549d 	.word	0x0801549d

08015740 <_printf_common>:
 8015740:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015744:	4691      	mov	r9, r2
 8015746:	461f      	mov	r7, r3
 8015748:	688a      	ldr	r2, [r1, #8]
 801574a:	690b      	ldr	r3, [r1, #16]
 801574c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8015750:	4293      	cmp	r3, r2
 8015752:	bfb8      	it	lt
 8015754:	4613      	movlt	r3, r2
 8015756:	f8c9 3000 	str.w	r3, [r9]
 801575a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801575e:	4606      	mov	r6, r0
 8015760:	460c      	mov	r4, r1
 8015762:	b112      	cbz	r2, 801576a <_printf_common+0x2a>
 8015764:	3301      	adds	r3, #1
 8015766:	f8c9 3000 	str.w	r3, [r9]
 801576a:	6823      	ldr	r3, [r4, #0]
 801576c:	0699      	lsls	r1, r3, #26
 801576e:	bf42      	ittt	mi
 8015770:	f8d9 3000 	ldrmi.w	r3, [r9]
 8015774:	3302      	addmi	r3, #2
 8015776:	f8c9 3000 	strmi.w	r3, [r9]
 801577a:	6825      	ldr	r5, [r4, #0]
 801577c:	f015 0506 	ands.w	r5, r5, #6
 8015780:	d107      	bne.n	8015792 <_printf_common+0x52>
 8015782:	f104 0a19 	add.w	sl, r4, #25
 8015786:	68e3      	ldr	r3, [r4, #12]
 8015788:	f8d9 2000 	ldr.w	r2, [r9]
 801578c:	1a9b      	subs	r3, r3, r2
 801578e:	42ab      	cmp	r3, r5
 8015790:	dc28      	bgt.n	80157e4 <_printf_common+0xa4>
 8015792:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8015796:	6822      	ldr	r2, [r4, #0]
 8015798:	3300      	adds	r3, #0
 801579a:	bf18      	it	ne
 801579c:	2301      	movne	r3, #1
 801579e:	0692      	lsls	r2, r2, #26
 80157a0:	d42d      	bmi.n	80157fe <_printf_common+0xbe>
 80157a2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80157a6:	4639      	mov	r1, r7
 80157a8:	4630      	mov	r0, r6
 80157aa:	47c0      	blx	r8
 80157ac:	3001      	adds	r0, #1
 80157ae:	d020      	beq.n	80157f2 <_printf_common+0xb2>
 80157b0:	6823      	ldr	r3, [r4, #0]
 80157b2:	68e5      	ldr	r5, [r4, #12]
 80157b4:	f8d9 2000 	ldr.w	r2, [r9]
 80157b8:	f003 0306 	and.w	r3, r3, #6
 80157bc:	2b04      	cmp	r3, #4
 80157be:	bf08      	it	eq
 80157c0:	1aad      	subeq	r5, r5, r2
 80157c2:	68a3      	ldr	r3, [r4, #8]
 80157c4:	6922      	ldr	r2, [r4, #16]
 80157c6:	bf0c      	ite	eq
 80157c8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80157cc:	2500      	movne	r5, #0
 80157ce:	4293      	cmp	r3, r2
 80157d0:	bfc4      	itt	gt
 80157d2:	1a9b      	subgt	r3, r3, r2
 80157d4:	18ed      	addgt	r5, r5, r3
 80157d6:	f04f 0900 	mov.w	r9, #0
 80157da:	341a      	adds	r4, #26
 80157dc:	454d      	cmp	r5, r9
 80157de:	d11a      	bne.n	8015816 <_printf_common+0xd6>
 80157e0:	2000      	movs	r0, #0
 80157e2:	e008      	b.n	80157f6 <_printf_common+0xb6>
 80157e4:	2301      	movs	r3, #1
 80157e6:	4652      	mov	r2, sl
 80157e8:	4639      	mov	r1, r7
 80157ea:	4630      	mov	r0, r6
 80157ec:	47c0      	blx	r8
 80157ee:	3001      	adds	r0, #1
 80157f0:	d103      	bne.n	80157fa <_printf_common+0xba>
 80157f2:	f04f 30ff 	mov.w	r0, #4294967295
 80157f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80157fa:	3501      	adds	r5, #1
 80157fc:	e7c3      	b.n	8015786 <_printf_common+0x46>
 80157fe:	18e1      	adds	r1, r4, r3
 8015800:	1c5a      	adds	r2, r3, #1
 8015802:	2030      	movs	r0, #48	; 0x30
 8015804:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8015808:	4422      	add	r2, r4
 801580a:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801580e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8015812:	3302      	adds	r3, #2
 8015814:	e7c5      	b.n	80157a2 <_printf_common+0x62>
 8015816:	2301      	movs	r3, #1
 8015818:	4622      	mov	r2, r4
 801581a:	4639      	mov	r1, r7
 801581c:	4630      	mov	r0, r6
 801581e:	47c0      	blx	r8
 8015820:	3001      	adds	r0, #1
 8015822:	d0e6      	beq.n	80157f2 <_printf_common+0xb2>
 8015824:	f109 0901 	add.w	r9, r9, #1
 8015828:	e7d8      	b.n	80157dc <_printf_common+0x9c>
	...

0801582c <_printf_i>:
 801582c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015830:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8015834:	460c      	mov	r4, r1
 8015836:	7e09      	ldrb	r1, [r1, #24]
 8015838:	b085      	sub	sp, #20
 801583a:	296e      	cmp	r1, #110	; 0x6e
 801583c:	4617      	mov	r7, r2
 801583e:	4606      	mov	r6, r0
 8015840:	4698      	mov	r8, r3
 8015842:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015844:	f000 80b3 	beq.w	80159ae <_printf_i+0x182>
 8015848:	d822      	bhi.n	8015890 <_printf_i+0x64>
 801584a:	2963      	cmp	r1, #99	; 0x63
 801584c:	d036      	beq.n	80158bc <_printf_i+0x90>
 801584e:	d80a      	bhi.n	8015866 <_printf_i+0x3a>
 8015850:	2900      	cmp	r1, #0
 8015852:	f000 80b9 	beq.w	80159c8 <_printf_i+0x19c>
 8015856:	2958      	cmp	r1, #88	; 0x58
 8015858:	f000 8083 	beq.w	8015962 <_printf_i+0x136>
 801585c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8015860:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8015864:	e032      	b.n	80158cc <_printf_i+0xa0>
 8015866:	2964      	cmp	r1, #100	; 0x64
 8015868:	d001      	beq.n	801586e <_printf_i+0x42>
 801586a:	2969      	cmp	r1, #105	; 0x69
 801586c:	d1f6      	bne.n	801585c <_printf_i+0x30>
 801586e:	6820      	ldr	r0, [r4, #0]
 8015870:	6813      	ldr	r3, [r2, #0]
 8015872:	0605      	lsls	r5, r0, #24
 8015874:	f103 0104 	add.w	r1, r3, #4
 8015878:	d52a      	bpl.n	80158d0 <_printf_i+0xa4>
 801587a:	681b      	ldr	r3, [r3, #0]
 801587c:	6011      	str	r1, [r2, #0]
 801587e:	2b00      	cmp	r3, #0
 8015880:	da03      	bge.n	801588a <_printf_i+0x5e>
 8015882:	222d      	movs	r2, #45	; 0x2d
 8015884:	425b      	negs	r3, r3
 8015886:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 801588a:	486f      	ldr	r0, [pc, #444]	; (8015a48 <_printf_i+0x21c>)
 801588c:	220a      	movs	r2, #10
 801588e:	e039      	b.n	8015904 <_printf_i+0xd8>
 8015890:	2973      	cmp	r1, #115	; 0x73
 8015892:	f000 809d 	beq.w	80159d0 <_printf_i+0x1a4>
 8015896:	d808      	bhi.n	80158aa <_printf_i+0x7e>
 8015898:	296f      	cmp	r1, #111	; 0x6f
 801589a:	d020      	beq.n	80158de <_printf_i+0xb2>
 801589c:	2970      	cmp	r1, #112	; 0x70
 801589e:	d1dd      	bne.n	801585c <_printf_i+0x30>
 80158a0:	6823      	ldr	r3, [r4, #0]
 80158a2:	f043 0320 	orr.w	r3, r3, #32
 80158a6:	6023      	str	r3, [r4, #0]
 80158a8:	e003      	b.n	80158b2 <_printf_i+0x86>
 80158aa:	2975      	cmp	r1, #117	; 0x75
 80158ac:	d017      	beq.n	80158de <_printf_i+0xb2>
 80158ae:	2978      	cmp	r1, #120	; 0x78
 80158b0:	d1d4      	bne.n	801585c <_printf_i+0x30>
 80158b2:	2378      	movs	r3, #120	; 0x78
 80158b4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80158b8:	4864      	ldr	r0, [pc, #400]	; (8015a4c <_printf_i+0x220>)
 80158ba:	e055      	b.n	8015968 <_printf_i+0x13c>
 80158bc:	6813      	ldr	r3, [r2, #0]
 80158be:	1d19      	adds	r1, r3, #4
 80158c0:	681b      	ldr	r3, [r3, #0]
 80158c2:	6011      	str	r1, [r2, #0]
 80158c4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80158c8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80158cc:	2301      	movs	r3, #1
 80158ce:	e08c      	b.n	80159ea <_printf_i+0x1be>
 80158d0:	681b      	ldr	r3, [r3, #0]
 80158d2:	6011      	str	r1, [r2, #0]
 80158d4:	f010 0f40 	tst.w	r0, #64	; 0x40
 80158d8:	bf18      	it	ne
 80158da:	b21b      	sxthne	r3, r3
 80158dc:	e7cf      	b.n	801587e <_printf_i+0x52>
 80158de:	6813      	ldr	r3, [r2, #0]
 80158e0:	6825      	ldr	r5, [r4, #0]
 80158e2:	1d18      	adds	r0, r3, #4
 80158e4:	6010      	str	r0, [r2, #0]
 80158e6:	0628      	lsls	r0, r5, #24
 80158e8:	d501      	bpl.n	80158ee <_printf_i+0xc2>
 80158ea:	681b      	ldr	r3, [r3, #0]
 80158ec:	e002      	b.n	80158f4 <_printf_i+0xc8>
 80158ee:	0668      	lsls	r0, r5, #25
 80158f0:	d5fb      	bpl.n	80158ea <_printf_i+0xbe>
 80158f2:	881b      	ldrh	r3, [r3, #0]
 80158f4:	4854      	ldr	r0, [pc, #336]	; (8015a48 <_printf_i+0x21c>)
 80158f6:	296f      	cmp	r1, #111	; 0x6f
 80158f8:	bf14      	ite	ne
 80158fa:	220a      	movne	r2, #10
 80158fc:	2208      	moveq	r2, #8
 80158fe:	2100      	movs	r1, #0
 8015900:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8015904:	6865      	ldr	r5, [r4, #4]
 8015906:	60a5      	str	r5, [r4, #8]
 8015908:	2d00      	cmp	r5, #0
 801590a:	f2c0 8095 	blt.w	8015a38 <_printf_i+0x20c>
 801590e:	6821      	ldr	r1, [r4, #0]
 8015910:	f021 0104 	bic.w	r1, r1, #4
 8015914:	6021      	str	r1, [r4, #0]
 8015916:	2b00      	cmp	r3, #0
 8015918:	d13d      	bne.n	8015996 <_printf_i+0x16a>
 801591a:	2d00      	cmp	r5, #0
 801591c:	f040 808e 	bne.w	8015a3c <_printf_i+0x210>
 8015920:	4665      	mov	r5, ip
 8015922:	2a08      	cmp	r2, #8
 8015924:	d10b      	bne.n	801593e <_printf_i+0x112>
 8015926:	6823      	ldr	r3, [r4, #0]
 8015928:	07db      	lsls	r3, r3, #31
 801592a:	d508      	bpl.n	801593e <_printf_i+0x112>
 801592c:	6923      	ldr	r3, [r4, #16]
 801592e:	6862      	ldr	r2, [r4, #4]
 8015930:	429a      	cmp	r2, r3
 8015932:	bfde      	ittt	le
 8015934:	2330      	movle	r3, #48	; 0x30
 8015936:	f805 3c01 	strble.w	r3, [r5, #-1]
 801593a:	f105 35ff 	addle.w	r5, r5, #4294967295
 801593e:	ebac 0305 	sub.w	r3, ip, r5
 8015942:	6123      	str	r3, [r4, #16]
 8015944:	f8cd 8000 	str.w	r8, [sp]
 8015948:	463b      	mov	r3, r7
 801594a:	aa03      	add	r2, sp, #12
 801594c:	4621      	mov	r1, r4
 801594e:	4630      	mov	r0, r6
 8015950:	f7ff fef6 	bl	8015740 <_printf_common>
 8015954:	3001      	adds	r0, #1
 8015956:	d14d      	bne.n	80159f4 <_printf_i+0x1c8>
 8015958:	f04f 30ff 	mov.w	r0, #4294967295
 801595c:	b005      	add	sp, #20
 801595e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015962:	4839      	ldr	r0, [pc, #228]	; (8015a48 <_printf_i+0x21c>)
 8015964:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8015968:	6813      	ldr	r3, [r2, #0]
 801596a:	6821      	ldr	r1, [r4, #0]
 801596c:	1d1d      	adds	r5, r3, #4
 801596e:	681b      	ldr	r3, [r3, #0]
 8015970:	6015      	str	r5, [r2, #0]
 8015972:	060a      	lsls	r2, r1, #24
 8015974:	d50b      	bpl.n	801598e <_printf_i+0x162>
 8015976:	07ca      	lsls	r2, r1, #31
 8015978:	bf44      	itt	mi
 801597a:	f041 0120 	orrmi.w	r1, r1, #32
 801597e:	6021      	strmi	r1, [r4, #0]
 8015980:	b91b      	cbnz	r3, 801598a <_printf_i+0x15e>
 8015982:	6822      	ldr	r2, [r4, #0]
 8015984:	f022 0220 	bic.w	r2, r2, #32
 8015988:	6022      	str	r2, [r4, #0]
 801598a:	2210      	movs	r2, #16
 801598c:	e7b7      	b.n	80158fe <_printf_i+0xd2>
 801598e:	064d      	lsls	r5, r1, #25
 8015990:	bf48      	it	mi
 8015992:	b29b      	uxthmi	r3, r3
 8015994:	e7ef      	b.n	8015976 <_printf_i+0x14a>
 8015996:	4665      	mov	r5, ip
 8015998:	fbb3 f1f2 	udiv	r1, r3, r2
 801599c:	fb02 3311 	mls	r3, r2, r1, r3
 80159a0:	5cc3      	ldrb	r3, [r0, r3]
 80159a2:	f805 3d01 	strb.w	r3, [r5, #-1]!
 80159a6:	460b      	mov	r3, r1
 80159a8:	2900      	cmp	r1, #0
 80159aa:	d1f5      	bne.n	8015998 <_printf_i+0x16c>
 80159ac:	e7b9      	b.n	8015922 <_printf_i+0xf6>
 80159ae:	6813      	ldr	r3, [r2, #0]
 80159b0:	6825      	ldr	r5, [r4, #0]
 80159b2:	6961      	ldr	r1, [r4, #20]
 80159b4:	1d18      	adds	r0, r3, #4
 80159b6:	6010      	str	r0, [r2, #0]
 80159b8:	0628      	lsls	r0, r5, #24
 80159ba:	681b      	ldr	r3, [r3, #0]
 80159bc:	d501      	bpl.n	80159c2 <_printf_i+0x196>
 80159be:	6019      	str	r1, [r3, #0]
 80159c0:	e002      	b.n	80159c8 <_printf_i+0x19c>
 80159c2:	066a      	lsls	r2, r5, #25
 80159c4:	d5fb      	bpl.n	80159be <_printf_i+0x192>
 80159c6:	8019      	strh	r1, [r3, #0]
 80159c8:	2300      	movs	r3, #0
 80159ca:	6123      	str	r3, [r4, #16]
 80159cc:	4665      	mov	r5, ip
 80159ce:	e7b9      	b.n	8015944 <_printf_i+0x118>
 80159d0:	6813      	ldr	r3, [r2, #0]
 80159d2:	1d19      	adds	r1, r3, #4
 80159d4:	6011      	str	r1, [r2, #0]
 80159d6:	681d      	ldr	r5, [r3, #0]
 80159d8:	6862      	ldr	r2, [r4, #4]
 80159da:	2100      	movs	r1, #0
 80159dc:	4628      	mov	r0, r5
 80159de:	f7ea fc1f 	bl	8000220 <memchr>
 80159e2:	b108      	cbz	r0, 80159e8 <_printf_i+0x1bc>
 80159e4:	1b40      	subs	r0, r0, r5
 80159e6:	6060      	str	r0, [r4, #4]
 80159e8:	6863      	ldr	r3, [r4, #4]
 80159ea:	6123      	str	r3, [r4, #16]
 80159ec:	2300      	movs	r3, #0
 80159ee:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80159f2:	e7a7      	b.n	8015944 <_printf_i+0x118>
 80159f4:	6923      	ldr	r3, [r4, #16]
 80159f6:	462a      	mov	r2, r5
 80159f8:	4639      	mov	r1, r7
 80159fa:	4630      	mov	r0, r6
 80159fc:	47c0      	blx	r8
 80159fe:	3001      	adds	r0, #1
 8015a00:	d0aa      	beq.n	8015958 <_printf_i+0x12c>
 8015a02:	6823      	ldr	r3, [r4, #0]
 8015a04:	079b      	lsls	r3, r3, #30
 8015a06:	d413      	bmi.n	8015a30 <_printf_i+0x204>
 8015a08:	68e0      	ldr	r0, [r4, #12]
 8015a0a:	9b03      	ldr	r3, [sp, #12]
 8015a0c:	4298      	cmp	r0, r3
 8015a0e:	bfb8      	it	lt
 8015a10:	4618      	movlt	r0, r3
 8015a12:	e7a3      	b.n	801595c <_printf_i+0x130>
 8015a14:	2301      	movs	r3, #1
 8015a16:	464a      	mov	r2, r9
 8015a18:	4639      	mov	r1, r7
 8015a1a:	4630      	mov	r0, r6
 8015a1c:	47c0      	blx	r8
 8015a1e:	3001      	adds	r0, #1
 8015a20:	d09a      	beq.n	8015958 <_printf_i+0x12c>
 8015a22:	3501      	adds	r5, #1
 8015a24:	68e3      	ldr	r3, [r4, #12]
 8015a26:	9a03      	ldr	r2, [sp, #12]
 8015a28:	1a9b      	subs	r3, r3, r2
 8015a2a:	42ab      	cmp	r3, r5
 8015a2c:	dcf2      	bgt.n	8015a14 <_printf_i+0x1e8>
 8015a2e:	e7eb      	b.n	8015a08 <_printf_i+0x1dc>
 8015a30:	2500      	movs	r5, #0
 8015a32:	f104 0919 	add.w	r9, r4, #25
 8015a36:	e7f5      	b.n	8015a24 <_printf_i+0x1f8>
 8015a38:	2b00      	cmp	r3, #0
 8015a3a:	d1ac      	bne.n	8015996 <_printf_i+0x16a>
 8015a3c:	7803      	ldrb	r3, [r0, #0]
 8015a3e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8015a42:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8015a46:	e76c      	b.n	8015922 <_printf_i+0xf6>
 8015a48:	08017e85 	.word	0x08017e85
 8015a4c:	08017e96 	.word	0x08017e96

08015a50 <_realloc_r>:
 8015a50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015a52:	4607      	mov	r7, r0
 8015a54:	4614      	mov	r4, r2
 8015a56:	460e      	mov	r6, r1
 8015a58:	b921      	cbnz	r1, 8015a64 <_realloc_r+0x14>
 8015a5a:	4611      	mov	r1, r2
 8015a5c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8015a60:	f7ff bc88 	b.w	8015374 <_malloc_r>
 8015a64:	b922      	cbnz	r2, 8015a70 <_realloc_r+0x20>
 8015a66:	f7ff fc37 	bl	80152d8 <_free_r>
 8015a6a:	4625      	mov	r5, r4
 8015a6c:	4628      	mov	r0, r5
 8015a6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015a70:	f000 f814 	bl	8015a9c <_malloc_usable_size_r>
 8015a74:	42a0      	cmp	r0, r4
 8015a76:	d20f      	bcs.n	8015a98 <_realloc_r+0x48>
 8015a78:	4621      	mov	r1, r4
 8015a7a:	4638      	mov	r0, r7
 8015a7c:	f7ff fc7a 	bl	8015374 <_malloc_r>
 8015a80:	4605      	mov	r5, r0
 8015a82:	2800      	cmp	r0, #0
 8015a84:	d0f2      	beq.n	8015a6c <_realloc_r+0x1c>
 8015a86:	4631      	mov	r1, r6
 8015a88:	4622      	mov	r2, r4
 8015a8a:	f7ff fbf8 	bl	801527e <memcpy>
 8015a8e:	4631      	mov	r1, r6
 8015a90:	4638      	mov	r0, r7
 8015a92:	f7ff fc21 	bl	80152d8 <_free_r>
 8015a96:	e7e9      	b.n	8015a6c <_realloc_r+0x1c>
 8015a98:	4635      	mov	r5, r6
 8015a9a:	e7e7      	b.n	8015a6c <_realloc_r+0x1c>

08015a9c <_malloc_usable_size_r>:
 8015a9c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8015aa0:	1f18      	subs	r0, r3, #4
 8015aa2:	2b00      	cmp	r3, #0
 8015aa4:	bfbc      	itt	lt
 8015aa6:	580b      	ldrlt	r3, [r1, r0]
 8015aa8:	18c0      	addlt	r0, r0, r3
 8015aaa:	4770      	bx	lr
 8015aac:	0000      	movs	r0, r0
	...

08015ab0 <ceil>:
 8015ab0:	ec51 0b10 	vmov	r0, r1, d0
 8015ab4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015ab8:	f3c1 570a 	ubfx	r7, r1, #20, #11
 8015abc:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 8015ac0:	2e13      	cmp	r6, #19
 8015ac2:	460c      	mov	r4, r1
 8015ac4:	ee10 5a10 	vmov	r5, s0
 8015ac8:	4680      	mov	r8, r0
 8015aca:	dc30      	bgt.n	8015b2e <ceil+0x7e>
 8015acc:	2e00      	cmp	r6, #0
 8015ace:	da12      	bge.n	8015af6 <ceil+0x46>
 8015ad0:	a333      	add	r3, pc, #204	; (adr r3, 8015ba0 <ceil+0xf0>)
 8015ad2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015ad6:	f7ea fbf9 	bl	80002cc <__adddf3>
 8015ada:	2200      	movs	r2, #0
 8015adc:	2300      	movs	r3, #0
 8015ade:	f7eb f83b 	bl	8000b58 <__aeabi_dcmpgt>
 8015ae2:	b128      	cbz	r0, 8015af0 <ceil+0x40>
 8015ae4:	2c00      	cmp	r4, #0
 8015ae6:	db55      	blt.n	8015b94 <ceil+0xe4>
 8015ae8:	432c      	orrs	r4, r5
 8015aea:	d057      	beq.n	8015b9c <ceil+0xec>
 8015aec:	4c2e      	ldr	r4, [pc, #184]	; (8015ba8 <ceil+0xf8>)
 8015aee:	2500      	movs	r5, #0
 8015af0:	4621      	mov	r1, r4
 8015af2:	4628      	mov	r0, r5
 8015af4:	e025      	b.n	8015b42 <ceil+0x92>
 8015af6:	4f2d      	ldr	r7, [pc, #180]	; (8015bac <ceil+0xfc>)
 8015af8:	4137      	asrs	r7, r6
 8015afa:	ea01 0307 	and.w	r3, r1, r7
 8015afe:	4303      	orrs	r3, r0
 8015b00:	d01f      	beq.n	8015b42 <ceil+0x92>
 8015b02:	a327      	add	r3, pc, #156	; (adr r3, 8015ba0 <ceil+0xf0>)
 8015b04:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015b08:	f7ea fbe0 	bl	80002cc <__adddf3>
 8015b0c:	2200      	movs	r2, #0
 8015b0e:	2300      	movs	r3, #0
 8015b10:	f7eb f822 	bl	8000b58 <__aeabi_dcmpgt>
 8015b14:	2800      	cmp	r0, #0
 8015b16:	d0eb      	beq.n	8015af0 <ceil+0x40>
 8015b18:	2c00      	cmp	r4, #0
 8015b1a:	bfc2      	ittt	gt
 8015b1c:	f44f 1380 	movgt.w	r3, #1048576	; 0x100000
 8015b20:	fa43 f606 	asrgt.w	r6, r3, r6
 8015b24:	19a4      	addgt	r4, r4, r6
 8015b26:	ea24 0407 	bic.w	r4, r4, r7
 8015b2a:	2500      	movs	r5, #0
 8015b2c:	e7e0      	b.n	8015af0 <ceil+0x40>
 8015b2e:	2e33      	cmp	r6, #51	; 0x33
 8015b30:	dd0b      	ble.n	8015b4a <ceil+0x9a>
 8015b32:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8015b36:	d104      	bne.n	8015b42 <ceil+0x92>
 8015b38:	ee10 2a10 	vmov	r2, s0
 8015b3c:	460b      	mov	r3, r1
 8015b3e:	f7ea fbc5 	bl	80002cc <__adddf3>
 8015b42:	ec41 0b10 	vmov	d0, r0, r1
 8015b46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015b4a:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 8015b4e:	f04f 33ff 	mov.w	r3, #4294967295
 8015b52:	fa23 f707 	lsr.w	r7, r3, r7
 8015b56:	4207      	tst	r7, r0
 8015b58:	d0f3      	beq.n	8015b42 <ceil+0x92>
 8015b5a:	a311      	add	r3, pc, #68	; (adr r3, 8015ba0 <ceil+0xf0>)
 8015b5c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015b60:	f7ea fbb4 	bl	80002cc <__adddf3>
 8015b64:	2200      	movs	r2, #0
 8015b66:	2300      	movs	r3, #0
 8015b68:	f7ea fff6 	bl	8000b58 <__aeabi_dcmpgt>
 8015b6c:	2800      	cmp	r0, #0
 8015b6e:	d0bf      	beq.n	8015af0 <ceil+0x40>
 8015b70:	2c00      	cmp	r4, #0
 8015b72:	dd02      	ble.n	8015b7a <ceil+0xca>
 8015b74:	2e14      	cmp	r6, #20
 8015b76:	d103      	bne.n	8015b80 <ceil+0xd0>
 8015b78:	3401      	adds	r4, #1
 8015b7a:	ea25 0507 	bic.w	r5, r5, r7
 8015b7e:	e7b7      	b.n	8015af0 <ceil+0x40>
 8015b80:	2301      	movs	r3, #1
 8015b82:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 8015b86:	fa03 f606 	lsl.w	r6, r3, r6
 8015b8a:	4435      	add	r5, r6
 8015b8c:	4545      	cmp	r5, r8
 8015b8e:	bf38      	it	cc
 8015b90:	18e4      	addcc	r4, r4, r3
 8015b92:	e7f2      	b.n	8015b7a <ceil+0xca>
 8015b94:	2500      	movs	r5, #0
 8015b96:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 8015b9a:	e7a9      	b.n	8015af0 <ceil+0x40>
 8015b9c:	4625      	mov	r5, r4
 8015b9e:	e7a7      	b.n	8015af0 <ceil+0x40>
 8015ba0:	8800759c 	.word	0x8800759c
 8015ba4:	7e37e43c 	.word	0x7e37e43c
 8015ba8:	3ff00000 	.word	0x3ff00000
 8015bac:	000fffff 	.word	0x000fffff

08015bb0 <floor>:
 8015bb0:	ec51 0b10 	vmov	r0, r1, d0
 8015bb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015bb8:	f3c1 570a 	ubfx	r7, r1, #20, #11
 8015bbc:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 8015bc0:	2e13      	cmp	r6, #19
 8015bc2:	460c      	mov	r4, r1
 8015bc4:	ee10 5a10 	vmov	r5, s0
 8015bc8:	4680      	mov	r8, r0
 8015bca:	dc34      	bgt.n	8015c36 <floor+0x86>
 8015bcc:	2e00      	cmp	r6, #0
 8015bce:	da16      	bge.n	8015bfe <floor+0x4e>
 8015bd0:	a335      	add	r3, pc, #212	; (adr r3, 8015ca8 <floor+0xf8>)
 8015bd2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015bd6:	f7ea fb79 	bl	80002cc <__adddf3>
 8015bda:	2200      	movs	r2, #0
 8015bdc:	2300      	movs	r3, #0
 8015bde:	f7ea ffbb 	bl	8000b58 <__aeabi_dcmpgt>
 8015be2:	b148      	cbz	r0, 8015bf8 <floor+0x48>
 8015be4:	2c00      	cmp	r4, #0
 8015be6:	da59      	bge.n	8015c9c <floor+0xec>
 8015be8:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 8015bec:	4a30      	ldr	r2, [pc, #192]	; (8015cb0 <floor+0x100>)
 8015bee:	432b      	orrs	r3, r5
 8015bf0:	2500      	movs	r5, #0
 8015bf2:	42ab      	cmp	r3, r5
 8015bf4:	bf18      	it	ne
 8015bf6:	4614      	movne	r4, r2
 8015bf8:	4621      	mov	r1, r4
 8015bfa:	4628      	mov	r0, r5
 8015bfc:	e025      	b.n	8015c4a <floor+0x9a>
 8015bfe:	4f2d      	ldr	r7, [pc, #180]	; (8015cb4 <floor+0x104>)
 8015c00:	4137      	asrs	r7, r6
 8015c02:	ea01 0307 	and.w	r3, r1, r7
 8015c06:	4303      	orrs	r3, r0
 8015c08:	d01f      	beq.n	8015c4a <floor+0x9a>
 8015c0a:	a327      	add	r3, pc, #156	; (adr r3, 8015ca8 <floor+0xf8>)
 8015c0c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015c10:	f7ea fb5c 	bl	80002cc <__adddf3>
 8015c14:	2200      	movs	r2, #0
 8015c16:	2300      	movs	r3, #0
 8015c18:	f7ea ff9e 	bl	8000b58 <__aeabi_dcmpgt>
 8015c1c:	2800      	cmp	r0, #0
 8015c1e:	d0eb      	beq.n	8015bf8 <floor+0x48>
 8015c20:	2c00      	cmp	r4, #0
 8015c22:	bfbe      	ittt	lt
 8015c24:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8015c28:	fa43 f606 	asrlt.w	r6, r3, r6
 8015c2c:	19a4      	addlt	r4, r4, r6
 8015c2e:	ea24 0407 	bic.w	r4, r4, r7
 8015c32:	2500      	movs	r5, #0
 8015c34:	e7e0      	b.n	8015bf8 <floor+0x48>
 8015c36:	2e33      	cmp	r6, #51	; 0x33
 8015c38:	dd0b      	ble.n	8015c52 <floor+0xa2>
 8015c3a:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8015c3e:	d104      	bne.n	8015c4a <floor+0x9a>
 8015c40:	ee10 2a10 	vmov	r2, s0
 8015c44:	460b      	mov	r3, r1
 8015c46:	f7ea fb41 	bl	80002cc <__adddf3>
 8015c4a:	ec41 0b10 	vmov	d0, r0, r1
 8015c4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015c52:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 8015c56:	f04f 33ff 	mov.w	r3, #4294967295
 8015c5a:	fa23 f707 	lsr.w	r7, r3, r7
 8015c5e:	4207      	tst	r7, r0
 8015c60:	d0f3      	beq.n	8015c4a <floor+0x9a>
 8015c62:	a311      	add	r3, pc, #68	; (adr r3, 8015ca8 <floor+0xf8>)
 8015c64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015c68:	f7ea fb30 	bl	80002cc <__adddf3>
 8015c6c:	2200      	movs	r2, #0
 8015c6e:	2300      	movs	r3, #0
 8015c70:	f7ea ff72 	bl	8000b58 <__aeabi_dcmpgt>
 8015c74:	2800      	cmp	r0, #0
 8015c76:	d0bf      	beq.n	8015bf8 <floor+0x48>
 8015c78:	2c00      	cmp	r4, #0
 8015c7a:	da02      	bge.n	8015c82 <floor+0xd2>
 8015c7c:	2e14      	cmp	r6, #20
 8015c7e:	d103      	bne.n	8015c88 <floor+0xd8>
 8015c80:	3401      	adds	r4, #1
 8015c82:	ea25 0507 	bic.w	r5, r5, r7
 8015c86:	e7b7      	b.n	8015bf8 <floor+0x48>
 8015c88:	2301      	movs	r3, #1
 8015c8a:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 8015c8e:	fa03 f606 	lsl.w	r6, r3, r6
 8015c92:	4435      	add	r5, r6
 8015c94:	4545      	cmp	r5, r8
 8015c96:	bf38      	it	cc
 8015c98:	18e4      	addcc	r4, r4, r3
 8015c9a:	e7f2      	b.n	8015c82 <floor+0xd2>
 8015c9c:	2500      	movs	r5, #0
 8015c9e:	462c      	mov	r4, r5
 8015ca0:	e7aa      	b.n	8015bf8 <floor+0x48>
 8015ca2:	bf00      	nop
 8015ca4:	f3af 8000 	nop.w
 8015ca8:	8800759c 	.word	0x8800759c
 8015cac:	7e37e43c 	.word	0x7e37e43c
 8015cb0:	bff00000 	.word	0xbff00000
 8015cb4:	000fffff 	.word	0x000fffff

08015cb8 <_init>:
 8015cb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015cba:	bf00      	nop
 8015cbc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8015cbe:	bc08      	pop	{r3}
 8015cc0:	469e      	mov	lr, r3
 8015cc2:	4770      	bx	lr

08015cc4 <_fini>:
 8015cc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015cc6:	bf00      	nop
 8015cc8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8015cca:	bc08      	pop	{r3}
 8015ccc:	469e      	mov	lr, r3
 8015cce:	4770      	bx	lr
